{
  "version": 3,
  "sources": ["../../../node_modules/fast-deep-equal/index.js", "../../../node_modules/isobject/index.js", "../../../node_modules/get-value/index.js", "../../../node_modules/@shopify/react-form/build/esm/hooks/field/field.mjs", "../../../node_modules/@shopify/react-form/build/esm/utilities.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/field/reducer.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/form.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/dirty.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/visitFields.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/reset.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/submit.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/list/dynamiclistdirty.mjs", "../../../node_modules/@shopify/react-form/build/esm/hooks/list/dynamiclistreset.mjs", "../../../app/const/Function.ts"],
  "sourcesContent": ["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n", "/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n", "import { useMemo, useCallback, useEffect } from 'react';\nimport isEqual from 'fast-deep-equal';\nimport { isChangeEvent, normalizeValidation } from '../../utilities.mjs';\nimport { useFieldReducer, resetAction, newDefaultAction, updateErrorAction, updateAction } from './reducer.mjs';\n\n/**\n * A custom hook for handling the state and validations of an input field.\n *\n * In it's simplest form `useField` can be called with a single parameter for the default value of the field.\n *\n * ```typescript\n * const field = useField('default value');\n * ```\n *\n * You can also pass a more complex configuration object specifying a validation function.\n *\n *\n * ```typescript\n *const field = useField({\n *  value: someRemoteData.title,\n *  validates: (title) => {\n *    if (title.length > 3) {\n *      return 'Title must be longer than three characters';\n *    }\n *  }\n *});\n * ```\n *\n * You may also pass multiple validators.\n *\n *```typescript\n * const field = useField({\n *   value: someRemoteData.title,\n *   validates: [\n *      (title) => {\n *         if (title.length > 3) {\n *           return 'Title must be longer than three characters';\n *         }\n *      },\n *      (title) => {\n *         if (!title.includes('radical')) {\n *           return 'only radical items allowed!';\n *         }\n *       }\n *    ],\n * });\n * ```\n *\n * Generally, you will want to use the object returned from useField to handle state for exactly one form input.\n *\n * ```typescript\n * const field = useField('default value');\n * return (\n *   <div>\n *     <label htmlFor=\"test-field\">\n *       Test field{' '}\n *       <input\n *         id=\"test-field\"\n *         name=\"test-field\"\n *         value={field.value}\n *         onChange={field.onChange}\n *         onBlur={field.onBlur}\n *       />\n *     </label>\n *     {field.error && <p>{field.error}</p>}\n *   </div>\n * );\n * ```\n *\n * If using `@shopify/polaris` or other custom components that support `onChange`, `onBlur`, `value`, and `error` props then\n * you can accomplish the above more tersely by using the ES6 `spread` (...) operator.\n *\n * ```typescript\n * const title = useField('default title');\n * return (<TextField label=\"Title\" {...title} />);\n * ```\n *\n * @param config - The default value of the input, or a configuration object specifying both the value and validation config.\n * @param validationDependencies - An array of values for determining when to regenerate the field's validation callbacks. Any value that is referenced by a validator other than those passed into it should be included.\n * @returns A `Field` object representing the state of your input. It also includes functions to manipulate that state. Generally, you will want to pass these callbacks down to the component or components representing your input.\n *\n * @remarks\n * **Reinitialization:** If the `value` property of the field configuration changes between calls to `useField`,\n * the field will be reset to use it as it's new default value.\n *\n * **Imperative methods:** The returned `Field` object contains a number of methods used to imperatively alter its state.\n * These should only be used as escape hatches where the existing hooks and components do not make your life easy,\n * or to build new abstractions in the same vein as `useForm`, `useSubmit` and friends.\n */\nfunction useField(input, dependencies = []) {\n  const {\n    value,\n    validates,\n    dirtyStateComparator\n  } = normalizeFieldConfig(input);\n  const validators = normalizeValidation(validates);\n  const [state, dispatch] = useFieldReducer(value, dirtyStateComparator);\n  const resetActionObject = useMemo(() => resetAction(), []);\n  const reset = useCallback(() => dispatch(resetActionObject), [dispatch, resetActionObject]);\n  const newDefaultValue = useCallback(value => dispatch(newDefaultAction(value)), [dispatch]);\n  const runValidation = useCallback((value = state.value) => {\n    const errors = validators.map(check => check(value, {})).filter(value => value != null);\n\n    if (errors && errors.length > 0) {\n      const [firstError] = errors;\n      dispatch(updateErrorAction(errors));\n      return firstError;\n    }\n\n    dispatch(updateErrorAction(undefined));\n    return undefined;\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [state.value, ...dependencies]);\n  const onChange = useCallback(value => {\n    const normalizedValue = isChangeEvent(value) ? value.target.value : value;\n    dispatch(updateAction(normalizedValue));\n\n    if (state.error) {\n      runValidation(normalizedValue);\n    }\n  }, [runValidation, state.error, dispatch]);\n  const setError = useCallback(value => dispatch(updateErrorAction(value)), [dispatch]);\n  const onBlur = useCallback(() => {\n    if (state.touched === false && state.error == null) {\n      return;\n    }\n\n    runValidation();\n  }, [runValidation, state.touched, state.error]); // We want to reset the field whenever a new `value` is passed in\n\n  useEffect(() => {\n    if (!isEqual(value, state.defaultValue)) {\n      newDefaultValue(value);\n    } // We actually do not want this to rerun when our `defaultValue` is updated. It can\n    // only happen independently of this callback when `newDefaultValue` is called by a user,\n    // and we don't want to undue their hard work by resetting to `value`.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [value, newDefaultValue]);\n  const field = useMemo(() => {\n    return { ...state,\n      onBlur,\n      onChange,\n      newDefaultValue,\n      runValidation,\n      setError,\n      reset\n    };\n  }, [state, onBlur, onChange, newDefaultValue, runValidation, setError, reset]);\n  return field;\n}\n\n/**\n * Converts a standard `Field<Value>` into a `ChoiceField` that is compatible\n * with `<Checkbox />` and `<RadioButton />` components in `@shopify/polaris`.\n *\n * For fields that are used by both a choice components and other components, it\n * can be beneficial to retain the original `Field<Value>` shape and convert\n * the field on the fly for the choice component.\n *\n * For multi-value base fields (not simple boolean fields), you can provide a\n * checkedValue predicate to project the base field's value into the boolean\n * checked state so that it can function with multiple <RadioButton /> choice\n * components.\n *\n * ```typescript\n * const enabled = useField(false);\n * return (<Checkbox label=\"Enabled\" {...asChoiceField(enabled)} />);\n *\n * const field = useField<'A' | 'B'>('A');\n * const radioA = (<RadioButton label=\"A\" {...asChoiceField(field, 'A')} />)\n * const radioB = (<RadioButton label=\"B\" {...asChoiceField(field, 'B')} />)\n * ```\n */\nfunction asChoiceField({\n  value,\n  ...fieldData\n}, checkedValue = true) {\n  return { ...fieldData,\n    checked: value === checkedValue,\n\n    onChange(checked) {\n      if (typeof checkedValue === 'boolean') {\n        fieldData.onChange(checked);\n      } else if (checked) {\n        fieldData.onChange(checkedValue);\n      }\n    }\n\n  };\n}\n/**\n * Converts a standard `Field<Value>` into a form that is compatible\n * with the `<ChoiceList />` component in `@shopify/polaris`.\n *\n * For fields that are used by both choice components and other components, it\n * can be beneficial to retain the original `Field<Value>` shape and convert\n * the field on the fly for the choice component.\n *\n * It only works with Radio buttons (single selection), not checkboxes.\n *\n * ```typescript\n * enum Color { Red = \"red\", Green = \"green\" }\n *\n * const choices = [\n *   { label: \"Red\", value: Color.Red },\n *   { label: \"Green\", value: Color.Green },\n * ]\n *\n * const color = useField(Color.Red);\n * return (<ChoiceList {...asChoiceList(color)} title=\"Color\" choices={choices} />);\n * ```\n */\n\nfunction asChoiceList({\n  value,\n  onChange,\n  ...fieldData\n}) {\n  return { ...fieldData,\n    selected: value === undefined || value === null ? [] : [value],\n    onChange: selected => {\n      onChange(selected[0]);\n    },\n    allowMultiple: false\n  };\n}\n/**\n * A simplification to `useField` that returns a `ChoiceField` by automatically\n * converting a boolean field using `asChoiceField` for direct use in choice\n * components.\n *\n * ```typescript\n * const enabled = useChoiceField(false);\n * return (<Checkbox label=\"Enabled\" {...enabled} />);\n * ```\n */\n\nfunction useChoiceField(input, dependencies = []) {\n  return asChoiceField(useField(input, dependencies));\n}\n\nfunction normalizeFieldConfig(input) {\n  if (isFieldConfig(input)) {\n    return input;\n  }\n\n  return {\n    value: input,\n    validates: () => undefined\n  };\n}\n\nfunction isFieldConfig(input) {\n  return input != null && typeof input === 'object' && Reflect.has(input, 'value') && Reflect.has(input, 'validates');\n}\n\nexport { asChoiceField, asChoiceList, useChoiceField, useField };\n", "import get from 'get-value';\n\nfunction isField(input) {\n  return Boolean(input) && Object.prototype.hasOwnProperty.call(input, 'value') && Object.prototype.hasOwnProperty.call(input, 'onChange') && Object.prototype.hasOwnProperty.call(input, 'onBlur') && Object.prototype.hasOwnProperty.call(input, 'defaultValue');\n}\nfunction mapObject(input, mapper) {\n  return Object.keys(input).reduce((accumulator, key) => {\n    const value = input[key];\n    accumulator[key] = mapper(value, key);\n    return accumulator;\n  }, {});\n} // Eg: set({a: 1}, ['b', 'c'], 2) // => {a: 1, b: {c: 2}}\n\nfunction setObject(obj, path, value) {\n  const [key, ...restPath] = path;\n\n  if (key == null || obj === null || typeof obj !== 'object') {\n    return obj;\n  }\n\n  if (!restPath.length) {\n    obj[key] = value;\n    return obj;\n  } // creates prop if it doesn't exist\n\n\n  if (typeof obj[key] === 'undefined') {\n    // look ahead to the next key. If it is a number, this prop is an array\n    obj[key] = typeof restPath[0] === 'number' ? [] : {};\n  }\n\n  obj[key] = setObject(obj[key], restPath, value);\n  return obj;\n}\n\nfunction normalizeValidation(input) {\n  return Array.isArray(input) ? input : [input];\n}\nfunction isChangeEvent(value) {\n  return typeof value === 'object' && value !== null && Reflect.has(value, 'target') && Reflect.has(value.target, 'value');\n}\nfunction propagateErrors(fieldBag, errors) {\n  errors.forEach(error => {\n    if (error.field == null) {\n      return;\n    }\n\n    const got = get(fieldBag, error.field);\n\n    if (got && isField(got)) {\n      if (got.error !== error.message) {\n        got.setError(error.message);\n      }\n    }\n  });\n} // Reduce function similar to Array.reduce() for a tree-like FieldBag\n\nfunction reduceFields(fieldBag, reduceFn, initialValue, reduceEmptyFn = value => value) {\n  return function reduceField(accumulator, item, path) {\n    if (isField(item)) {\n      return reduceFn(accumulator, item, path, fieldBag);\n    }\n\n    if (Array.isArray(item) && item.length) {\n      return item.reduce((_accumulator, value, index) => reduceField(_accumulator, value, path.concat(index)), accumulator);\n    }\n\n    if (typeof item === 'object' && item !== null) {\n      const entries = Object.entries(item);\n\n      if (entries.length) {\n        return entries.reduce((_accumulator, [key, value]) => reduceField(_accumulator, value, path.concat(key)), accumulator);\n      }\n    } // item is empty array, empty object, or primitive\n\n\n    return reduceEmptyFn(accumulator, item, path, fieldBag);\n  }(initialValue, fieldBag, []);\n}\nfunction fieldsToArray(fieldBag) {\n  return reduceFields(fieldBag, (fields, field) => fields.concat(field), []);\n}\nfunction validateAll(fieldBag) {\n  return reduceFields(fieldBag, (errors, field) => {\n    const message = field.runValidation();\n    return message ? errors.concat({\n      message\n    }) : errors;\n  }, []);\n}\nfunction getValues(fieldBag) {\n  return reduceFields(fieldBag, (formValue, field, path) => setObject(formValue, path, field.value), {}, (formValue, value, path) => setObject(formValue, path, value));\n}\nfunction getDirtyValues(fieldBag) {\n  const reduceFn = (acc, [fieldName, field]) => {\n    if (Array.isArray(field)) {\n      const dirtyArray = field.map(dirtyField => Object.entries(dirtyField).reduce(reduceFn, {})).filter(dirtyField => Object.keys(dirtyField).length);\n      return { ...acc,\n        ...(dirtyArray.length ? {\n          [fieldName]: dirtyArray\n        } : {})\n      };\n    }\n\n    if (!isField(field)) {\n      const dirtyField = Object.entries(field).reduce(reduceFn, {});\n      return { ...acc,\n        ...(Object.keys(dirtyField).length ? {\n          [fieldName]: dirtyField\n        } : {})\n      };\n    }\n\n    return { ...acc,\n      ...(field.dirty ? {\n        [fieldName]: field.value\n      } : {})\n    };\n  };\n\n  return Object.entries(fieldBag).reduce(reduceFn, {});\n}\nfunction shallowArrayComparison(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  const len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction defaultDirtyComparator(defaultValue, newValue) {\n  return Array.isArray(defaultValue) ? !shallowArrayComparison(defaultValue, newValue) : defaultValue !== newValue;\n}\nfunction makeCleanFields(fieldBag) {\n  reduceFields(fieldBag, (_, field) => field.newDefaultValue(field.value));\n}\nfunction makeCleanDynamicLists(dynamicLists) {\n  if (dynamicLists) {\n    Object.values(dynamicLists).forEach(dynamicList => {\n      dynamicList.newDefaultValue(dynamicList.value);\n    });\n  }\n}\n\nexport { defaultDirtyComparator, fieldsToArray, getDirtyValues, getValues, isChangeEvent, isField, makeCleanDynamicLists, makeCleanFields, mapObject, normalizeValidation, propagateErrors, reduceFields, shallowArrayComparison, validateAll };\n", "import { useReducer } from 'react';\nimport { shallowArrayComparison, defaultDirtyComparator } from '../../utilities.mjs';\n\nfunction updateAction(value) {\n  return {\n    type: 'update',\n    payload: value\n  };\n}\nfunction resetAction() {\n  return {\n    type: 'reset'\n  };\n}\nfunction newDefaultAction(value) {\n  return {\n    type: 'newDefaultValue',\n    payload: value\n  };\n}\nfunction updateErrorAction(error) {\n  return {\n    type: 'updateError',\n    payload: error\n  };\n}\nconst shallowFieldReducer = makeFieldReducer({\n  dirtyStateComparator: defaultDirtyComparator\n});\nfunction reduceField(prevState, action) {\n  return shallowFieldReducer(prevState, action);\n}\nfunction makeFieldReducer({\n  dirtyStateComparator = defaultDirtyComparator\n}) {\n  return (state, action) => {\n    switch (action.type) {\n      case 'update':\n        {\n          const newValue = action.payload;\n          const {\n            defaultValue\n          } = state;\n          const dirty = dirtyStateComparator(defaultValue, newValue);\n          return { ...state,\n            dirty,\n            value: newValue,\n            touched: true\n          };\n        }\n\n      case 'updateError':\n        {\n          const payload = Array.isArray(action.payload) ? action.payload : [action.payload];\n          const [firstError] = payload;\n          const allErrors = firstError ? payload : [];\n\n          if (shallowArrayComparison(allErrors, state.allErrors)) {\n            return { ...state,\n              error: firstError\n            };\n          } else {\n            return { ...state,\n              error: firstError,\n              allErrors\n            };\n          }\n        }\n\n      case 'reset':\n        {\n          const {\n            defaultValue\n          } = state;\n          return { ...state,\n            error: undefined,\n            value: defaultValue,\n            dirty: false,\n            touched: false,\n            allErrors: []\n          };\n        }\n\n      case 'newDefaultValue':\n        {\n          const newDefaultValue = action.payload;\n          return { ...state,\n            error: undefined,\n            value: newDefaultValue,\n            defaultValue: newDefaultValue,\n            touched: false,\n            dirty: false\n          };\n        }\n    }\n  };\n}\nfunction useFieldReducer(value, dirtyStateComparator) {\n  return useReducer(makeFieldReducer({\n    dirtyStateComparator\n  }), initialFieldState(value));\n}\nfunction initialFieldState(value) {\n  return {\n    value,\n    defaultValue: value,\n    error: undefined,\n    touched: false,\n    dirty: false,\n    allErrors: []\n  };\n}\n\nexport { initialFieldState, makeFieldReducer, newDefaultAction, reduceField, resetAction, updateAction, updateErrorAction, useFieldReducer };\n", "import { useMemo, useCallback } from 'react';\nimport { useLazyRef } from '@shopify/react-hooks';\nimport { validateAll, makeCleanFields, makeCleanDynamicLists } from '../utilities.mjs';\nimport { useDirty } from './dirty.mjs';\nimport { useReset } from './reset.mjs';\nimport { useSubmit } from './submit.mjs';\nimport { useDynamicListDirty } from './list/dynamiclistdirty.mjs';\nimport { useDynamicListReset } from './list/dynamiclistreset.mjs';\n\n/**\n * A custom hook for managing the state of an entire form. `useForm` wraps up many of the other hooks in this package in one API, and when combined with `useField`, `useList` or `useDynamicList`, allows you to easily build complex forms with smart defaults for common cases.\n *\n * ### Examples\n *\n *```typescript\n * import React from 'react';\n * import {useField, useForm} from '@shopify/react-form';\n *\n *  function MyComponent() {\n *   const { fields, submit, submitting, dirty, reset, submitErrors } = useForm({\n *     fields: {\n *       title: useField('some default title'),\n *     },\n *     onSubmit: (fieldValues) => {\n *       return {status: \"fail\", errors: [{message: 'bad form data'}]}\n *     }\n *   });\n *\n *   return (\n *     <form onSubmit={submit}>\n *       {submitting && <p className=\"loading\">loading...</p>}\n *       {submitErrors.length>0 && <p className=\"error\">submitErrors.join(', ')</p>}\n *       <div>\n *         <label for=\"title\">Title</label>\n *         <input\n *           id=\"title\"\n *           name=\"title\"\n *           value={title.value}\n *           onChange={title.onChange}\n *           onBlur={title.onBlur}\n *         />\n *         {title.error && <p className=\"error\">{title.error}</p>}\n *       </div>\n *       <button disabled={!dirty} onClick={reset}>Reset</button>\n *       <button type=\"submit\" disabled={!dirty}>Submit</button>\n *     </form>\n *  );\n *```\n *\n * @param fields - A dictionary of `Field` objects, dictionaries of `Field` objects, and lists of dictionaries of `Field` objects. Generally, you'll want these to be generated by the other hooks in this package, either `useField` or `useList`. This will be returned back out as the `fields` property of the return value.\n *\n * @param onSubmit - An async function to handle submission of the form. If this function returns an object of `{status: 'fail', error: FormError[]}` then the submission is considered a failure. Otherwise, it should return an object with `{status: 'success'}` and the submission will be considered a success. `useForm` will also call all client-side validation methods for the fields passed to it. The `onSubmit` handler will not be called if client validations fails.\n * @param dynamicLists - optional dictionaries of `DynamicList`.\n * @param makeCleanAfterSubmit\n * @returns An object representing the current state of the form, with imperative methods to reset, submit, validate, and clean. Generally, the returned properties correspond 1:1 with the specific hook/utility for their functionality.\n *\n * @remarks\n * **Building your own:** Internally, `useForm` is a convenience wrapper over `useDirty`, `useReset`, and `useSubmit`. If you only need some of its functionality, consider building a custom hook combining a subset of them.\n * **Subforms:** You can have multiple `useForm`s wrapping different subsets of a group of fields. Using this you can submit subsections of the form independently and have all the error and dirty tracking logic \"just work\" together.\n */\n\nfunction useForm({\n  fields,\n  dynamicLists,\n  onSubmit,\n  makeCleanAfterSubmit = false\n}) {\n  const fieldsWithLists = useMemo(() => {\n    if (dynamicLists) {\n      const fieldsWithList = { ...fields\n      };\n      Object.entries(dynamicLists).forEach(([key, value]) => {\n        fieldsWithList[key] = value.fields;\n      });\n      return fieldsWithList;\n    }\n\n    return fields;\n  }, [dynamicLists, fields]);\n  const dirty = useDirty(fieldsWithLists);\n  const basicReset = useReset(fieldsWithLists);\n  const dynamicListDirty = useDynamicListDirty(dynamicLists);\n  const dynamicListReset = useDynamicListReset(dynamicLists);\n  const {\n    submit,\n    submitting,\n    errors,\n    setErrors\n  } = useSubmit(onSubmit, fieldsWithLists, makeCleanAfterSubmit, dynamicLists);\n  const reset = useCallback(() => {\n    setErrors([]);\n    basicReset();\n    dynamicListReset();\n  }, [basicReset, dynamicListReset, setErrors]);\n  const fieldsRef = useLazyRef(() => fieldsWithLists);\n  fieldsRef.current = fieldsWithLists;\n  const dynamicListsRef = useLazyRef(() => dynamicLists);\n  const validate = useCallback(() => {\n    return validateAll(fieldsRef.current);\n  }, [fieldsRef]);\n  const makeClean = useCallback(() => {\n    makeCleanFields(fieldsRef.current);\n    makeCleanDynamicLists(dynamicListsRef.current);\n  }, [dynamicListsRef, fieldsRef]);\n  const form = {\n    fields,\n    dirty: dirty || dynamicListDirty,\n    submitting,\n    submit,\n    reset,\n    validate,\n    makeClean,\n    submitErrors: errors\n  };\n\n  if (dynamicLists) {\n    return { ...form,\n      dynamicLists\n    };\n  }\n\n  return form;\n}\n\nexport { useForm };\n", "import { reduceFields } from '../utilities.mjs';\n\nfunction useDirty(fieldBag) {\n  return reduceFields(fieldBag, (dirty, field) => dirty || field.dirty, false);\n}\n\nexport { useDirty };\n", "import { useRef, useCallback } from 'react';\nimport { reduceFields } from '../utilities.mjs';\n\nfunction useVisitFields(fieldBag, visitor) {\n  const fieldBagRef = useRef(fieldBag);\n  fieldBagRef.current = fieldBag;\n  return useCallback(() => {\n    reduceFields(fieldBagRef.current, (_, field) => visitor(field));\n  }, [visitor]);\n}\n\nexport { useVisitFields as default };\n", "import useVisitFields from './visitFields.mjs';\n\nfunction useReset(fieldBag) {\n  return useVisitFields(fieldBag, resetField);\n}\n\nfunction resetField(field) {\n  field.reset();\n}\n\nexport { useReset };\n", "import { useState, useCallback } from 'react';\nimport { useMountedRef, useLazyRef } from '@shopify/react-hooks';\nimport { propagateErrors, validateAll, getValues, makeCleanFields, makeCleanDynamicLists } from '../utilities.mjs';\n\nfunction useSubmit(onSubmit = noopSubmission, fieldBag, makeCleanAfterSubmit = false, dynamicListBag) {\n  const mounted = useMountedRef();\n  const [submitting, setSubmitting] = useState(false);\n  const [submitErrors, setSubmitErrors] = useState([]);\n  const fieldBagRef = useLazyRef(() => fieldBag);\n  fieldBagRef.current = fieldBag;\n  const dynamicListBagRef = useLazyRef(() => dynamicListBag);\n  const setErrors = useCallback(errors => {\n    setSubmitErrors(errors);\n    propagateErrors(fieldBagRef.current, errors);\n  }, [fieldBagRef]);\n  const submit = useCallback(async event => {\n    const fields = fieldBagRef.current;\n    const dynamicLists = dynamicListBagRef.current;\n\n    if (event && event.preventDefault && !event.defaultPrevented) {\n      event.preventDefault();\n    }\n\n    const clientErrors = validateAll(fields);\n\n    if (clientErrors.length > 0) {\n      setErrors(clientErrors);\n      return;\n    }\n\n    setSubmitting(true);\n    const result = await onSubmit(getValues(fields));\n\n    if (mounted.current === false) {\n      return;\n    }\n\n    setSubmitting(false);\n\n    if (result.status === 'fail') {\n      setErrors(result.errors);\n    } else {\n      setSubmitErrors([]);\n\n      if (makeCleanAfterSubmit) {\n        makeCleanFields(fields);\n        makeCleanDynamicLists(dynamicLists);\n      }\n    }\n  }, [fieldBagRef, dynamicListBagRef, onSubmit, mounted, setErrors, makeCleanAfterSubmit]);\n  return {\n    submit,\n    submitting,\n    errors: submitErrors,\n    setErrors\n  };\n}\n/**\n * A convenience function for `onSubmit` callbacks returning values to `useSubmit` or `useForm`.\n * @return Returns a `SubmitResult` representing your successful form submission.\n */\n\nfunction submitSuccess() {\n  return {\n    status: 'success'\n  };\n}\n/**\n * A convenience function for `onSubmit` callbacks returning values to `useSubmit` or `useForm`\n * @param errors - An array of errors with the user's input. These can either include both a `field` and a `message`, in which case they will be passed down to a matching field, or just a `message`.\n * @return Returns a `SubmitResult` representing your failed form submission.\n */\n\nfunction submitFail(errors = []) {\n  return {\n    status: 'fail',\n    errors\n  };\n}\n\nfunction noopSubmission(_) {\n  return Promise.resolve(submitSuccess());\n}\n\nexport { submitFail, submitSuccess, useSubmit };\n", "function useDynamicListDirty(lists) {\n  return lists ? Object.entries(lists).some(([key]) => lists[key].dirty) : false;\n}\n\nexport { useDynamicListDirty };\n", "import { useCallback } from 'react';\nimport { useLazyRef } from '@shopify/react-hooks';\n\nfunction useDynamicListReset(lists) {\n  const listBagRef = useLazyRef(() => lists);\n  listBagRef.current = lists;\n  return useCallback(() => {\n    return resetFields(listBagRef.current);\n  }, [listBagRef]);\n}\n\nfunction resetFields(lists) {\n  if (lists) {\n    Object.entries(lists).forEach(([key]) => lists[key].reset());\n  }\n}\n\nexport { useDynamicListReset };\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/const/Function.ts\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/const/Function.ts\");\n  import.meta.hot.lastModified = \"1712928126070.8713\";\n}\n// REMIX HMR END\n\nexport const Function = () => {\n  const validateNumber = value => {\n    if (isNaN(parseFloat(value)) || parseFloat(value) <= 0) {\n      return 1;\n    }\n    return 2;\n  };\n  const validatePercentage = value => {\n    if (isNaN(parseFloat(value)) || parseFloat(value) < 0 || parseFloat(value) >= 100) {\n      return 1;\n    }\n    return 2; // kh\u00F4ng c\u00F3 l\u1ED7i, tr\u1EA3 v\u1EC1 undefined\n  };\n  return {\n    validateNumber,\n    validatePercentage\n  };\n};\n_c = Function;\nvar _c;\n$RefreshReg$(_c, \"Function\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "get", "value", "isEqual", "import_react", "import_react", "import_react", "import_react"]
}
