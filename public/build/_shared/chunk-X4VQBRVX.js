import {
  require_react_dom
} from "/build/_shared/chunk-GIAAE3CH.js";
import {
  require_react
} from "/build/_shared/chunk-BOXFZXVX.js";
import {
  __commonJS,
  __esm,
  __export,
  __toESM
} from "/build/_shared/chunk-PNG5AS42.js";

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/breakpoints.mjs
var breakpointsAliases, breakpoints;
var init_breakpoints = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/breakpoints.mjs"() {
    breakpointsAliases = ["xs", "sm", "md", "lg", "xl"];
    breakpoints = {
      "breakpoints-xs": {
        value: "0px",
        description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
      },
      "breakpoints-sm": {
        value: "490px",
        description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
      },
      "breakpoints-md": {
        value: "768px",
        description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
      },
      "breakpoints-lg": {
        value: "1040px",
        description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
      },
      "breakpoints-xl": {
        value: "1440px",
        description: "Commonly used for sizing containers (e.g. max-width). See below for media query usage."
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/_virtual/_rollupPluginBabelHelpers.mjs
function _iterableToArrayLimit(arr, i) {
  var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
  if (null != _i) {
    var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
    try {
      if (_x = (_i = _i.call(arr)).next, 0 === i) {
        if (Object(_i) !== _i)
          return;
        _n = false;
      } else
        for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
          ;
    } catch (err) {
      _d = true, _e = err;
    } finally {
      try {
        if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r))
          return;
      } finally {
        if (_d)
          throw _e;
      }
    }
    return _arr;
  }
}
function _taggedTemplateLiteralLoose(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  strings.raw = raw;
  return strings;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++)
    arr2[i] = arr[i];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
var init_rollupPluginBabelHelpers = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/_virtual/_rollupPluginBabelHelpers.mjs"() {
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/utils.mjs
function getUnit(value) {
  if (value === void 0) {
    value = "";
  }
  var unit = value.match(new RegExp(DIGIT_REGEX.source + "(" + UNIT_REGEX.source + ")"));
  return unit && unit[1];
}
function toPx(value) {
  if (value === void 0) {
    value = "";
  }
  var unit = getUnit(value);
  if (!unit)
    return value;
  if (unit === UNIT_PX) {
    return value;
  }
  if (unit === UNIT_EM || unit === UNIT_REM) {
    return "" + parseFloat(value) * BASE_FONT_SIZE + UNIT_PX;
  }
}
function toEm(value, fontSize) {
  if (value === void 0) {
    value = "";
  }
  if (fontSize === void 0) {
    fontSize = BASE_FONT_SIZE;
  }
  var unit = getUnit(value);
  if (!unit)
    return value;
  if (unit === UNIT_EM) {
    return value;
  }
  if (unit === UNIT_PX) {
    return "" + parseFloat(value) / fontSize + UNIT_EM;
  }
  if (unit === UNIT_REM) {
    return "" + parseFloat(value) * BASE_FONT_SIZE / fontSize + UNIT_EM;
  }
}
function toRem(value) {
  if (value === void 0) {
    value = "";
  }
  var unit = getUnit(value);
  if (!unit)
    return value;
  if (unit === UNIT_REM) {
    return value;
  }
  if (unit === UNIT_EM) {
    return "" + parseFloat(value) + UNIT_REM;
  }
  if (unit === UNIT_PX) {
    return "" + parseFloat(value) / BASE_FONT_SIZE + UNIT_REM;
  }
}
function rem(value) {
  return value.replace(new RegExp(DIGIT_REGEX.source + "(" + UNIT_PX + ")", "g"), function(px) {
    var _toRem;
    return (_toRem = toRem(px)) != null ? _toRem : px;
  });
}
function tokenGroupToRems(metaTokenGroup) {
  return Object.fromEntries(
    Object.entries(metaTokenGroup).map(function(_ref) {
      var _ref2 = _slicedToArray(_ref, 2), tokenName = _ref2[0], tokenProperties = _ref2[1];
      return [tokenName, Object.assign(Object.assign({}, tokenProperties), {}, {
        value: rem(tokenProperties.value)
      })];
    })
    // We loose the `metaTokenGroup` inference after transforming the object with
    // `Object.fromEntries()` and `Object.entries()`. Thus, we cast the result
    // back to `T` since we are simply converting the `value` from px to rem.
  );
}
function createVarName(tokenName) {
  return "--p-" + tokenName;
}
function createVar(tokenName) {
  return "var(" + createVarName(tokenName) + ")";
}
function getTokenNames(theme) {
  return Object.values(theme).flatMap(function(tokenGroup) {
    return Object.keys(tokenGroup);
  });
}
function getMediaConditions(breakpoints2) {
  var breakpointEntries = Object.entries(breakpoints2);
  var lastBreakpointIndex = breakpointEntries.length - 1;
  return Object.fromEntries(breakpointEntries.map(function(entry, index) {
    var _ref3 = entry, _ref4 = _slicedToArray(_ref3, 2), breakpointsTokenName = _ref4[0], breakpoint = _ref4[1];
    var upMediaCondition = getUpMediaCondition(breakpoint);
    var downMediaCondition = getDownMediaCondition(breakpoint);
    var onlyMediaCondition = index === lastBreakpointIndex ? upMediaCondition : upMediaCondition + " and " + getDownMediaCondition(breakpointEntries[index + 1][1]);
    return [breakpointsTokenName, {
      // Media condition for the current breakpoint and up
      up: upMediaCondition,
      // Media condition for current breakpoint and down
      down: downMediaCondition,
      // Media condition for only the current breakpoint
      only: onlyMediaCondition
    }];
  }));
}
function getUpMediaCondition(breakpoint) {
  return "(min-width: " + toEm(breakpoint) + ")";
}
function getDownMediaCondition(breakpoint) {
  var _toPx2;
  var offsetBreakpoint = parseFloat((_toPx2 = toPx(breakpoint)) != null ? _toPx2 : "") - 0.04;
  return "(max-width: " + toEm(offsetBreakpoint + "px") + ")";
}
function createMetaThemeBase(metaTheme) {
  return Object.fromEntries(Object.entries(metaTheme).map(function(_ref5) {
    var _ref6 = _slicedToArray(_ref5, 2), tokenGroupName = _ref6[0], tokenGroup = _ref6[1];
    return [tokenGroupName, tokenGroupNamesToRems.includes(tokenGroupName) ? tokenGroupToRems(tokenGroup) : tokenGroup];
  }));
}
var _templateObject, BASE_FONT_SIZE, UNIT_PX, UNIT_EM, UNIT_REM, DIGIT_REGEX, UNIT_REGEX, tokenGroupNamesToRems;
var init_utils = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/utils.mjs"() {
    init_rollupPluginBabelHelpers();
    BASE_FONT_SIZE = 16;
    UNIT_PX = "px";
    UNIT_EM = "em";
    UNIT_REM = "rem";
    DIGIT_REGEX = new RegExp(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose(["-?d+(?:.d+|d*)"], ["-?\\d+(?:\\.\\d+|\\d*)"]))));
    UNIT_REGEX = new RegExp(UNIT_PX + "|" + UNIT_EM + "|" + UNIT_REM);
    tokenGroupNamesToRems = ["border", "breakpoints", "font", "height", "shadow", "space", "text", "width"];
  }
});

// node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement2(value);
    }
    var canUseSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement2(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge2(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge2;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge2;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return Object.propertyIsEnumerable.call(target, symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }
      getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        }
      });
      return destination;
    }
    function deepmerge2(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge2.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge2(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge2;
    module.exports = deepmerge_1;
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/size.mjs
var size;
var init_size = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/size.mjs"() {
    size = {
      "0": "0px",
      "0165": "0.66px",
      "025": "1px",
      "050": "2px",
      "100": "4px",
      "150": "6px",
      "200": "8px",
      "275": "11px",
      "300": "12px",
      "325": "13px",
      "350": "14px",
      "400": "16px",
      "450": "18px",
      "500": "20px",
      "550": "22px",
      "600": "24px",
      "700": "28px",
      "750": "30px",
      "800": "32px",
      "900": "36px",
      "1000": "40px",
      "1200": "48px",
      "1600": "64px",
      "2000": "80px",
      "2400": "96px",
      "2800": "112px",
      "3200": "128px"
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/border.mjs
var border;
var init_border = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/border.mjs"() {
    init_size();
    border = {
      "border-radius-0": {
        value: size[0]
      },
      "border-radius-050": {
        value: size["050"]
      },
      "border-radius-100": {
        value: size[100]
      },
      "border-radius-150": {
        value: size[150]
      },
      "border-radius-200": {
        value: size[200]
      },
      "border-radius-300": {
        value: size[300]
      },
      "border-radius-400": {
        value: size[400]
      },
      "border-radius-500": {
        value: size[500]
      },
      "border-radius-750": {
        value: size[750]
      },
      "border-radius-full": {
        value: "9999px"
      },
      "border-width-0": {
        value: size["0"]
      },
      "border-width-0165": {
        value: size["0165"]
      },
      "border-width-025": {
        value: size["025"]
      },
      "border-width-050": {
        value: size["050"]
      },
      "border-width-100": {
        value: size[100]
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/colors.mjs
var gray, azure, blue, green, lime, magenta, orange, purple, red, rose, teal, yellow, blackAlpha, whiteAlpha;
var init_colors = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/colors.mjs"() {
    gray = {
      1: "rgba(255, 255, 255, 1)",
      2: "rgba(253, 253, 253, 1)",
      3: "rgba(250, 250, 250, 1)",
      4: "rgba(247, 247, 247, 1)",
      5: "rgba(243, 243, 243, 1)",
      6: "rgba(241, 241, 241, 1)",
      7: "rgba(235, 235, 235, 1)",
      8: "rgba(227, 227, 227, 1)",
      9: "rgba(212, 212, 212, 1)",
      10: "rgba(204, 204, 204, 1)",
      11: "rgba(181, 181, 181, 1)",
      12: "rgba(138, 138, 138, 1)",
      13: "rgba(97, 97, 97, 1)",
      14: "rgba(74, 74, 74, 1)",
      15: "rgba(48, 48, 48, 1)",
      16: "rgba(26, 26, 26, 1)"
    };
    azure = {
      "1": "rgba(251, 253, 255, 1)",
      "2": "rgba(242, 249, 255, 1)",
      "3": "rgba(234, 244, 255, 1)",
      "4": "rgba(224, 240, 255, 1)",
      "5": "rgba(213, 235, 255, 1)",
      "6": "rgba(202, 230, 255, 1)",
      "7": "rgba(192, 225, 255, 1)",
      "8": "rgba(168, 216, 255, 1)",
      "9": "rgba(145, 208, 255, 1)",
      "10": "rgba(81, 192, 255, 1)",
      "11": "rgba(0, 148, 213, 1)",
      "12": "rgba(0, 124, 180, 1)",
      "13": "rgba(0, 103, 155, 1)",
      "14": "rgba(0, 82, 124, 1)",
      "15": "rgba(0, 58, 90, 1)",
      "16": "rgba(0, 33, 51, 1)"
    };
    blue = {
      "1": "rgba(252, 253, 255, 1)",
      "2": "rgba(246, 248, 255, 1)",
      "3": "rgba(240, 242, 255, 1)",
      "4": "rgba(234, 237, 255, 1)",
      "5": "rgba(226, 231, 255, 1)",
      "6": "rgba(219, 225, 255, 1)",
      "7": "rgba(213, 220, 255, 1)",
      "8": "rgba(197, 208, 255, 1)",
      "9": "rgba(186, 199, 255, 1)",
      "10": "rgba(151, 173, 255, 1)",
      "11": "rgba(65, 136, 255, 1)",
      "12": "rgba(0, 113, 233, 1)",
      "13": "rgba(0, 91, 211, 1)",
      "14": "rgba(0, 66, 153, 1)",
      "15": "rgba(0, 46, 106, 1)",
      "16": "rgba(0, 22, 51, 1)"
    };
    green = {
      "1": "rgba(248, 255, 251, 1)",
      "2": "rgba(227, 255, 237, 1)",
      "3": "rgba(205, 254, 225, 1)",
      "4": "rgba(180, 254, 210, 1)",
      "5": "rgba(146, 254, 194, 1)",
      "6": "rgba(99, 253, 176, 1)",
      "7": "rgba(56, 250, 163, 1)",
      "8": "rgba(53, 238, 155, 1)",
      "9": "rgba(50, 225, 147, 1)",
      "10": "rgba(46, 211, 137, 1)",
      "11": "rgba(50, 160, 110, 1)",
      "12": "rgba(41, 132, 90, 1)",
      "13": "rgba(19, 111, 69, 1)",
      "14": "rgba(12, 81, 50, 1)",
      "15": "rgba(8, 61, 37, 1)",
      "16": "rgba(9, 42, 27, 1)"
    };
    lime = {
      "1": "rgba(250, 255, 250, 1)",
      "2": "rgba(228, 255, 229, 1)",
      "3": "rgba(208, 255, 209, 1)",
      "4": "rgba(187, 254, 190, 1)",
      "5": "rgba(157, 254, 160, 1)",
      "6": "rgba(119, 254, 122, 1)",
      "7": "rgba(56, 254, 62, 1)",
      "8": "rgba(40, 242, 47, 1)",
      "9": "rgba(37, 232, 43, 1)",
      "10": "rgba(32, 207, 39, 1)",
      "11": "rgba(24, 168, 29, 1)",
      "12": "rgba(17, 135, 21, 1)",
      "13": "rgba(12, 113, 15, 1)",
      "14": "rgba(11, 85, 13, 1)",
      "15": "rgba(3, 61, 5, 1)",
      "16": "rgba(3, 33, 4, 1)"
    };
    magenta = {
      "1": "rgba(255, 253, 255, 1)",
      "2": "rgba(255, 245, 255, 1)",
      "3": "rgba(253, 239, 253, 1)",
      "4": "rgba(254, 231, 254, 1)",
      "5": "rgba(252, 223, 252, 1)",
      "6": "rgba(251, 215, 251, 1)",
      "7": "rgba(251, 207, 251, 1)",
      "8": "rgba(249, 190, 249, 1)",
      "9": "rgba(248, 177, 248, 1)",
      "10": "rgba(246, 141, 246, 1)",
      "11": "rgba(225, 86, 225, 1)",
      "12": "rgba(197, 48, 197, 1)",
      "13": "rgba(159, 38, 159, 1)",
      "14": "rgba(121, 26, 121, 1)",
      "15": "rgba(86, 16, 86, 1)",
      "16": "rgba(52, 6, 52, 1)"
    };
    orange = {
      "1": "rgba(255, 253, 250, 1)",
      "2": "rgba(255, 247, 238, 1)",
      "3": "rgba(255, 241, 227, 1)",
      "4": "rgba(255, 235, 213, 1)",
      "5": "rgba(255, 228, 198, 1)",
      "6": "rgba(255, 221, 182, 1)",
      "7": "rgba(255, 214, 164, 1)",
      "8": "rgba(255, 200, 121, 1)",
      "9": "rgba(255, 184, 0, 1)",
      "10": "rgba(229, 165, 0, 1)",
      "11": "rgba(178, 132, 0, 1)",
      "12": "rgba(149, 111, 0, 1)",
      "13": "rgba(124, 88, 0, 1)",
      "14": "rgba(94, 66, 0, 1)",
      "15": "rgba(65, 45, 0, 1)",
      "16": "rgba(37, 26, 0, 1)"
    };
    purple = {
      "1": "rgba(253, 253, 255, 1)",
      "2": "rgba(248, 247, 255, 1)",
      "3": "rgba(243, 241, 255, 1)",
      "4": "rgba(239, 236, 255, 1)",
      "5": "rgba(233, 229, 255, 1)",
      "6": "rgba(228, 222, 255, 1)",
      "7": "rgba(223, 217, 255, 1)",
      "8": "rgba(212, 204, 255, 1)",
      "9": "rgba(199, 188, 255, 1)",
      "10": "rgba(170, 149, 255, 1)",
      "11": "rgba(148, 116, 255, 1)",
      "12": "rgba(128, 81, 255, 1)",
      "13": "rgba(113, 38, 255, 1)",
      "14": "rgba(87, 0, 209, 1)",
      "15": "rgba(59, 0, 147, 1)",
      "16": "rgba(28, 0, 79, 1)"
    };
    red = {
      "1": "rgba(255, 251, 251, 1)",
      "2": "rgba(255, 246, 246, 1)",
      "3": "rgba(255, 237, 236, 1)",
      "4": "rgba(254, 233, 232, 1)",
      "5": "rgba(254, 226, 225, 1)",
      "6": "rgba(254, 218, 217, 1)",
      "7": "rgba(254, 211, 209, 1)",
      "8": "rgba(254, 195, 193, 1)",
      "9": "rgba(253, 176, 172, 1)",
      "10": "rgba(253, 129, 122, 1)",
      "11": "rgba(239, 77, 47, 1)",
      "12": "rgba(229, 28, 0, 1)",
      "13": "rgba(181, 38, 11, 1)",
      "14": "rgba(142, 31, 11, 1)",
      "15": "rgba(95, 21, 7, 1)",
      "16": "rgba(47, 10, 4, 1)"
    };
    rose = {
      "1": "rgba(255, 253, 253, 1)",
      "2": "rgba(255, 246, 248, 1)",
      "3": "rgba(255, 239, 243, 1)",
      "4": "rgba(255, 232, 238, 1)",
      "5": "rgba(255, 225, 232, 1)",
      "6": "rgba(255, 217, 227, 1)",
      "7": "rgba(254, 209, 221, 1)",
      "8": "rgba(254, 193, 210, 1)",
      "9": "rgba(254, 181, 202, 1)",
      "10": "rgba(254, 142, 177, 1)",
      "11": "rgba(253, 75, 146, 1)",
      "12": "rgba(227, 12, 118, 1)",
      "13": "rgba(185, 7, 95, 1)",
      "14": "rgba(141, 4, 72, 1)",
      "15": "rgba(100, 2, 49, 1)",
      "16": "rgba(62, 1, 28, 1)"
    };
    teal = {
      "1": "rgba(248, 255, 254, 1)",
      "2": "rgba(232, 252, 250, 1)",
      "3": "rgba(215, 250, 247, 1)",
      "4": "rgba(195, 247, 242, 1)",
      "5": "rgba(170, 246, 239, 1)",
      "6": "rgba(137, 245, 236, 1)",
      "7": "rgba(112, 240, 229, 1)",
      "8": "rgba(90, 230, 219, 1)",
      "9": "rgba(44, 224, 212, 1)",
      "10": "rgba(30, 199, 188, 1)",
      "11": "rgba(0, 161, 152, 1)",
      "12": "rgba(18, 131, 124, 1)",
      "13": "rgba(12, 106, 100, 1)",
      "14": "rgba(12, 83, 79, 1)",
      "15": "rgba(3, 60, 57, 1)",
      "16": "rgba(6, 44, 41, 1)"
    };
    yellow = {
      "1": "rgba(255, 253, 246, 1)",
      "2": "rgba(255, 248, 219, 1)",
      "3": "rgba(255, 244, 191, 1)",
      "4": "rgba(255, 239, 157, 1)",
      "5": "rgba(255, 235, 120, 1)",
      "6": "rgba(255, 230, 0, 1)",
      "7": "rgba(247, 223, 0, 1)",
      "8": "rgba(234, 211, 0, 1)",
      "9": "rgba(225, 203, 0, 1)",
      "10": "rgba(197, 178, 0, 1)",
      "11": "rgba(153, 138, 0, 1)",
      "12": "rgba(130, 117, 0, 1)",
      "13": "rgba(105, 95, 0, 1)",
      "14": "rgba(79, 71, 0, 1)",
      "15": "rgba(51, 46, 0, 1)",
      "16": "rgba(31, 28, 0, 1)"
    };
    blackAlpha = {
      1: "rgba(0, 0, 0, 0)",
      2: "rgba(0, 0, 0, 0.01)",
      3: "rgba(0, 0, 0, 0.02)",
      4: "rgba(0, 0, 0, 0.03)",
      5: "rgba(0, 0, 0, 0.05)",
      6: "rgba(0, 0, 0, 0.06)",
      7: "rgba(0, 0, 0, 0.08)",
      8: "rgba(0, 0, 0, 0.11)",
      9: "rgba(0, 0, 0, 0.17)",
      10: "rgba(0, 0, 0, 0.20)",
      11: "rgba(0, 0, 0, 0.29)",
      12: "rgba(0, 0, 0, 0.46)",
      13: "rgba(0, 0, 0, 0.62)",
      14: "rgba(0, 0, 0, 0.71)",
      15: "rgba(0, 0, 0, 0.81)",
      16: "rgba(0, 0, 0, 0.90)"
    };
    whiteAlpha = {
      1: "rgba(255, 255, 255, 0)",
      2: "rgba(255, 255, 255, 0.01)",
      3: "rgba(255, 255, 255, 0.02)",
      4: "rgba(255, 255, 255, 0.03)",
      5: "rgba(255, 255, 255, 0.05)",
      6: "rgba(255, 255, 255, 0.06)",
      7: "rgba(255, 255, 255, 0.08)",
      8: "rgba(255, 255, 255, 0.11)",
      9: "rgba(255, 255, 255, 0.17)",
      10: "rgba(255, 255, 255, 0.20)",
      11: "rgba(255, 255, 255, 0.28)",
      12: "rgba(255, 255, 255, 0.46)",
      13: "rgba(255, 255, 255, 0.62)",
      14: "rgba(255, 255, 255, 0.71)",
      15: "rgba(255, 255, 255, 0.81)",
      16: "rgba(255, 255, 255, 0.90)"
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/color.mjs
var color;
var init_color = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/color.mjs"() {
    init_colors();
    color = {
      "color-scheme": {
        value: "light"
      },
      "color-bg": {
        value: gray[6],
        description: "The default background color of the admin."
      },
      "color-bg-inverse": {
        value: gray[16],
        description: "Use for high contrast page or component backgrounds."
      },
      "color-bg-surface": {
        value: gray[1],
        description: "The background color for elements with the highest level of prominence, like a card."
      },
      "color-bg-surface-hover": {
        value: gray[4],
        description: "The hover state color for elements with the highest level of prominence."
      },
      "color-bg-surface-active": {
        value: gray[5],
        description: "The active state (on press) color for elements with the highest level of prominence."
      },
      "color-bg-surface-selected": {
        value: gray[6],
        description: "The selected state color for elements with the highest level of prominence."
      },
      "color-bg-surface-disabled": {
        value: blackAlpha[5],
        description: "The disabled state color for elements."
      },
      "color-bg-surface-secondary": {
        value: gray[4],
        description: "The background color for elements with a secondary level of prominence."
      },
      "color-bg-surface-secondary-hover": {
        value: gray[6],
        description: "The hover state color for elements with a secondary level of prominence."
      },
      "color-bg-surface-secondary-active": {
        value: gray[7],
        description: "The active state (on press) color for elements with a secondary level of prominence."
      },
      "color-bg-surface-secondary-selected": {
        value: gray[7],
        description: "The selected state color for elements with a secondary level of prominence."
      },
      "color-bg-surface-tertiary": {
        value: gray[5],
        description: "The background color for elements with a third level of prominence."
      },
      "color-bg-surface-tertiary-hover": {
        value: gray[7],
        description: "The hover state color for elements with a third level of prominence."
      },
      "color-bg-surface-tertiary-active": {
        value: gray[8],
        description: "The active state (on press) color for elements with a third level of prominence."
      },
      "color-bg-surface-brand": {
        value: gray[8],
        description: "Use to apply the key color to elements."
      },
      "color-bg-surface-brand-hover": {
        value: gray[7],
        description: "The hover state color for key elements."
      },
      "color-bg-surface-brand-active": {
        value: gray[6],
        description: "The active state (on press) color for key elements."
      },
      "color-bg-surface-brand-selected": {
        value: gray[6],
        description: "The selected state color for key elements."
      },
      "color-bg-surface-info": {
        value: azure[3],
        description: "Use for backgrounds communicating important information, like banners."
      },
      "color-bg-surface-info-hover": {
        value: azure[4],
        description: "The hover state color for communicating important information."
      },
      "color-bg-surface-info-active": {
        value: azure[6],
        description: "The active state (on press) color for communicating important information."
      },
      "color-bg-surface-success": {
        value: green[3],
        description: "Use for backgrounds communicating success, like banners."
      },
      "color-bg-surface-success-hover": {
        value: green[4],
        description: "The hover state color for communicating success."
      },
      "color-bg-surface-success-active": {
        value: green[5],
        description: "The active state (on press) color for communicating success."
      },
      "color-bg-surface-caution": {
        value: yellow[2],
        description: "Use for backgrounds communicating caution, like banners."
      },
      "color-bg-surface-caution-hover": {
        value: yellow[3],
        description: "The hover state for communicating caution."
      },
      "color-bg-surface-caution-active": {
        value: yellow[4],
        description: "The active state (on press) color for communicating caution."
      },
      "color-bg-surface-warning": {
        value: orange[3],
        description: "Use for backgrounds communicating warning, like banners."
      },
      "color-bg-surface-warning-hover": {
        value: orange[4],
        description: "The hover state color for communicating warning."
      },
      "color-bg-surface-warning-active": {
        value: orange[5],
        description: "The active state (on press) color for communicating warning."
      },
      "color-bg-surface-critical": {
        value: red[4],
        description: "Use for backgrounds communicating critical information, like banners or input errors."
      },
      "color-bg-surface-critical-hover": {
        value: red[5],
        description: "The hover state color for communicating critical information."
      },
      "color-bg-surface-critical-active": {
        value: red[6],
        description: "The active state (on press) color for communicating critical information."
      },
      "color-bg-surface-emphasis": {
        value: blue[3],
        description: "Use for backgrounds indicating areas of focus in editors, such as the theme editor."
      },
      "color-bg-surface-emphasis-hover": {
        value: blue[4],
        description: "The hover state color for elements indicating areas of focus in editors."
      },
      "color-bg-surface-emphasis-active": {
        value: blue[5],
        description: "The active state (on press) color for elements indicating areas of focus in editors."
      },
      "color-bg-surface-magic": {
        value: purple[2],
        description: "Use for backgrounds of elements suggested by magic AI."
      },
      "color-bg-surface-magic-hover": {
        value: purple[3],
        description: "The hover state color for elements suggested by magic AI."
      },
      "color-bg-surface-magic-active": {
        value: purple[5],
        description: "The active state (on press) color for elements suggested by magic AI."
      },
      "color-bg-surface-inverse": {
        value: gray[15],
        description: "Use for elements on bg-inverse."
      },
      "color-bg-surface-transparent": {
        value: blackAlpha[1],
        description: "Use for elements that need a fully transparent background."
      },
      "color-bg-fill": {
        value: gray[1],
        description: "The background color of contained elements with a smaller surface area, like a button."
      },
      "color-bg-fill-hover": {
        value: gray[3],
        description: "The hover state color of contained elements with a smaller surface area, like a button."
      },
      "color-bg-fill-active": {
        value: gray[4],
        description: "The active state (on press) color of contained elements with a smaller surface area, like a button."
      },
      "color-bg-fill-selected": {
        value: gray[10],
        description: "The selected state color of contained elements with a smaller surface area, like a button or checkbox."
      },
      "color-bg-fill-disabled": {
        value: blackAlpha[5],
        description: "The disabled state color of contained elements with a smaller surface area, like a button."
      },
      "color-bg-fill-secondary": {
        value: gray[6],
        description: "The background color of elements with a smaller surface area and a secondary level of prominence."
      },
      "color-bg-fill-secondary-hover": {
        value: gray[7],
        description: "The hover state color of elements with a smaller surface area and a secondary level of prominence."
      },
      "color-bg-fill-secondary-active": {
        value: gray[8],
        description: "The active state (on press) color of elements with a smaller surface area and a secondary level of prominence."
      },
      "color-bg-fill-tertiary": {
        value: gray[8],
        description: "The background color of elements with a smaller surface area and a third level of prominence."
      },
      "color-bg-fill-tertiary-hover": {
        value: gray[9],
        description: "The hover state color of elements with a smaller surface area and a third level of prominence."
      },
      "color-bg-fill-tertiary-active": {
        value: gray[10],
        description: "The active state (on press) color of elements with a smaller surface area and a third level of prominence."
      },
      "color-bg-fill-brand": {
        value: gray[15],
        description: "The background color of main actions, like primary buttons."
      },
      "color-bg-fill-brand-hover": {
        value: gray[16],
        description: "The hover state color of main actions, like primary buttons."
      },
      "color-bg-fill-brand-active": {
        value: gray[16],
        description: "The active state (on press) color of main actions, like primary buttons."
      },
      "color-bg-fill-brand-selected": {
        value: gray[15],
        description: "The selected state color of main actions, like primary buttons."
      },
      "color-bg-fill-brand-disabled": {
        value: blackAlpha[9],
        description: "The disabled state color of main actions, like primary buttons."
      },
      "color-bg-fill-info": {
        value: azure[9],
        description: "Use for backgrounds communicating important information on elements with a smaller surface area, like a badge or button."
      },
      "color-bg-fill-info-hover": {
        value: azure[10],
        description: "The hover state color for communicating important information on elements with a smaller surface area."
      },
      "color-bg-fill-info-active": {
        value: azure[11],
        description: "The active state (on press) color for communicating important information on elements with a smaller surface area."
      },
      "color-bg-fill-info-secondary": {
        value: azure[5],
        description: "Use for backgrounds communicating important information on elements with a smaller surface area, with a secondary level of prominence."
      },
      "color-bg-fill-success": {
        value: green[12],
        description: "Use for backgrounds communicating success on elements with a smaller surface area, like a badge or a banner."
      },
      "color-bg-fill-success-hover": {
        value: green[13],
        description: "The hover state color for communicating success on elements with a smaller surface area."
      },
      "color-bg-fill-success-active": {
        value: green[14],
        description: "The active state (on press) color for communicating success on elements with a smaller surface area."
      },
      "color-bg-fill-success-secondary": {
        value: green[4],
        description: "Use for backgrounds communicating success on elements with a smaller surface area, with a secondary level of prominence."
      },
      "color-bg-fill-warning": {
        value: orange[9],
        description: "Use for backgrounds communicating warning on elements with a smaller surface area, like a badge or a banner."
      },
      "color-bg-fill-warning-hover": {
        value: orange[10],
        description: "The hover state color for communicating warning on elements with a smaller surface area."
      },
      "color-bg-fill-warning-active": {
        value: orange[11],
        description: "The active state (on press) color for communicating warning on elements with a smaller surface area."
      },
      "color-bg-fill-warning-secondary": {
        value: orange[7],
        description: "Use for backgrounds communicating warning on elements with a smaller surface area, with a secondary level of prominence."
      },
      "color-bg-fill-caution": {
        value: yellow[6],
        description: "Use for backgrounds communicating caution on elements with a smaller surface area, like a badge or a banner."
      },
      "color-bg-fill-caution-hover": {
        value: yellow[8],
        description: "The hover state color for communicating caution on elements with a smaller surface area."
      },
      "color-bg-fill-caution-active": {
        value: yellow[9],
        description: "The active state (on press) color for communicating caution on elements with a smaller surface area."
      },
      "color-bg-fill-caution-secondary": {
        value: yellow[5],
        description: "Use for backgrounds communicating caution on elements with a smaller surface area, with a secondary level of prominence."
      },
      "color-bg-fill-critical": {
        value: red[12],
        description: "Use for backgrounds communicating critical information on elements with a smaller surface area, like a badge or a banner."
      },
      "color-bg-fill-critical-hover": {
        value: red[13],
        description: "The hover state color for communicating critical information on elements with a smaller surface area."
      },
      "color-bg-fill-critical-active": {
        value: red[14],
        description: "The active state (on press) color for communicating critical information on elements with a smaller surface area."
      },
      "color-bg-fill-critical-selected": {
        value: red[14],
        description: "The selected state color for communicating critical information on elements with a smaller surface area."
      },
      "color-bg-fill-critical-secondary": {
        value: red[7],
        description: "Use for backgrounds communicating critical information on elements with a smaller surface area, with a secondary level of prominence."
      },
      "color-bg-fill-emphasis": {
        value: blue[13],
        description: "Use for backgrounds indicating areas of focus in editors on elements with a smaller surface area, like a button or a badge."
      },
      "color-bg-fill-emphasis-hover": {
        value: blue[14],
        description: "The hover state color for indicating areas of focus in editors on elements with a smaller surface area."
      },
      "color-bg-fill-emphasis-active": {
        value: blue[15],
        description: "The active state (on press) color for indicating areas of focus in editors on elements with a smaller surface area."
      },
      "color-bg-fill-magic": {
        value: purple[12],
        description: "The background color of elements suggested by magic AI, like a badge or a banner."
      },
      "color-bg-fill-magic-secondary": {
        value: purple[5],
        description: "The background color of elements suggested by magic AI, with a secondary level of prominence."
      },
      "color-bg-fill-magic-secondary-hover": {
        value: purple[6],
        description: "The hover state color of elements suggested by magic AI, with a secondary level of prominence."
      },
      "color-bg-fill-magic-secondary-active": {
        value: purple[7],
        description: "The active state (on press) color of elements suggested by magic AI, with a secondary level of prominence."
      },
      "color-bg-fill-inverse": {
        value: gray[15],
        description: "The background color of elements with a smaller surface area on an inverse background."
      },
      "color-bg-fill-inverse-hover": {
        value: gray[14],
        description: "The hover state color of elements with a smaller surface area on an inverse background."
      },
      "color-bg-fill-inverse-active": {
        value: gray[13],
        description: "The active state (on press) color of elements with a smaller surface area on an inverse background."
      },
      "color-bg-fill-transparent": {
        value: blackAlpha[3],
        description: "The background color of elements that need to sit on different background colors, like tabs."
      },
      "color-bg-fill-transparent-hover": {
        value: blackAlpha[5],
        description: "The hover state color of elements that need to sit on different background colors, like tabs."
      },
      "color-bg-fill-transparent-active": {
        value: blackAlpha[7],
        description: "The active state (on press) color of elements that need to sit on different background colors, like tabs."
      },
      "color-bg-fill-transparent-selected": {
        value: blackAlpha[7],
        description: "The selected state color of elements that need to sit on different background colors, like tabs."
      },
      "color-bg-fill-transparent-secondary": {
        value: blackAlpha[6],
        description: "The background color of elements that need to sit on different background colors, with a secondary level of prominence."
      },
      "color-bg-fill-transparent-secondary-hover": {
        value: blackAlpha[7],
        description: "The hover state color of elements that need to sit on different background colors, with a secondary level of prominence."
      },
      "color-bg-fill-transparent-secondary-active": {
        value: blackAlpha[8],
        description: "The active state (on press) color of elements that need to sit on different background colors, with a secondary level of prominence."
      },
      "color-text": {
        value: gray[15],
        description: "The default text color."
      },
      "color-text-secondary": {
        value: gray[13],
        description: "Use for text with a secondary level of prominence."
      },
      "color-text-disabled": {
        value: gray[11],
        description: "Use for text in a disabled state."
      },
      "color-text-link": {
        value: blue[13],
        description: "Use for text links."
      },
      "color-text-link-hover": {
        value: blue[14],
        description: "The hover state color for text links."
      },
      "color-text-link-active": {
        value: blue[15],
        description: "The active state (on press) color for text links."
      },
      "color-text-brand": {
        value: gray[14],
        description: "Use for text that needs to pull attention."
      },
      "color-text-brand-hover": {
        value: gray[15],
        description: "The hover state color for text that needs to pull attention."
      },
      "color-text-brand-on-bg-fill": {
        value: gray[1],
        description: "Use for text on bg-fill-brand, like primary buttons."
      },
      "color-text-brand-on-bg-fill-hover": {
        value: gray[8],
        description: "The hover state color for text on bg-fill-brand-hover."
      },
      "color-text-brand-on-bg-fill-active": {
        value: gray[10],
        description: "The active state (on press) color for text on bg-fill-brand."
      },
      "color-text-brand-on-bg-fill-disabled": {
        value: gray[1],
        description: "The disabled state color for text on bg-fill-brand-disabled."
      },
      "color-text-info": {
        value: azure[15],
        description: "Use for text communicating important information."
      },
      "color-text-info-hover": {
        value: azure[15],
        description: "The hover state color for text communicating important information."
      },
      "color-text-info-active": {
        value: azure[16],
        description: "The active state (on press) color for text communicating important information."
      },
      "color-text-info-secondary": {
        value: azure[12],
        description: "Use for text communicating important information with a secondary level of prominence."
      },
      "color-text-info-on-bg-fill": {
        value: azure[16],
        description: "Use for text and icons on bg-fill-info."
      },
      "color-text-success": {
        value: green[14],
        description: "Use for text communicating success."
      },
      "color-text-success-hover": {
        value: green[15],
        description: "The hover state color for text communicating success."
      },
      "color-text-success-active": {
        value: green[16],
        description: "The active state (on press) color for text communicating success."
      },
      "color-text-success-secondary": {
        value: green[12],
        description: "Use for text communicating success with a secondary level of prominence."
      },
      "color-text-success-on-bg-fill": {
        value: green[1],
        description: "Use for text and icons on bg-fill-success."
      },
      "color-text-caution": {
        value: yellow[14],
        description: "Use for text communicating caution."
      },
      "color-text-caution-hover": {
        value: yellow[15],
        description: "The hover state color for text communicating caution."
      },
      "color-text-caution-active": {
        value: yellow[16],
        description: "The active state (on press) color for text communicating caution."
      },
      "color-text-caution-secondary": {
        value: yellow[12],
        description: "Use for text communicating caution with a secondary level of prominence."
      },
      "color-text-caution-on-bg-fill": {
        value: yellow[15],
        description: "Use for text and icons on bg-fill-caution."
      },
      "color-text-warning": {
        value: orange[14],
        description: "Use for text communicating warning."
      },
      "color-text-warning-hover": {
        value: orange[15],
        description: "The hover state color for text communicating warning."
      },
      "color-text-warning-active": {
        value: orange[16],
        description: "The active state (on press) color for text communicating warning."
      },
      "color-text-warning-secondary": {
        value: orange[12],
        description: "Use for text communicating warning with a secondary level of prominence."
      },
      "color-text-warning-on-bg-fill": {
        value: orange[16],
        description: "Use for text and icons on bg-fill-warning."
      },
      "color-text-critical": {
        value: red[14],
        description: "Use for text communicating critical information."
      },
      "color-text-critical-hover": {
        value: red[15],
        description: "The hover state color for text communicating critical information."
      },
      "color-text-critical-active": {
        value: red[16],
        description: "The active state (on press) color for text communicating critical information."
      },
      "color-text-critical-secondary": {
        value: red[12],
        description: "Use for text communicating critical information with a secondary level of prominence."
      },
      "color-text-critical-on-bg-fill": {
        value: red[1],
        description: "Use for text and icons on bg-fill-critical."
      },
      "color-text-emphasis": {
        value: blue[13],
        description: "Use for text indicating areas of focus in editors, like the theme editor."
      },
      "color-text-emphasis-hover": {
        value: blue[14],
        description: "The hover state color for text indicating areas of focus."
      },
      "color-text-emphasis-active": {
        value: blue[15],
        description: "The active state (on press) color for text indicating areas of focus."
      },
      "color-text-emphasis-on-bg-fill": {
        value: blue[1],
        description: "Use for text and icons on bg-fill-emphasis."
      },
      "color-text-emphasis-on-bg-fill-hover": {
        value: blue[5],
        description: "Use for text and icons on bg-fill-emphasis-hover."
      },
      "color-text-emphasis-on-bg-fill-active": {
        value: blue[7],
        description: "Use for text and icons on bg-fill-emphasis-active."
      },
      "color-text-magic": {
        value: purple[14],
        description: "Use for text suggested by magic AI."
      },
      "color-text-magic-secondary": {
        value: purple[13],
        description: "Use for text suggested by magic AI with a secondary level of prominence."
      },
      "color-text-magic-on-bg-fill": {
        value: purple[1],
        description: "Use for text and icons on bg-fill-magic."
      },
      "color-text-inverse": {
        value: gray[8],
        description: "Use for text on an inverse background."
      },
      "color-text-inverse-secondary": {
        value: gray[11],
        description: "Use for secondary text on an inverse background."
      },
      "color-text-link-inverse": {
        value: blue[8],
        description: "Use for text links on an inverse background."
      },
      "color-border": {
        value: gray[8],
        description: "The default color for borders on any element."
      },
      "color-border-hover": {
        value: gray[10],
        description: "The hover color for borders on any element."
      },
      "color-border-disabled": {
        value: gray[7],
        description: "The disabled color for borders on any element."
      },
      "color-border-secondary": {
        value: gray[7],
        description: "The color for hr elements or any visual dividers."
      },
      "color-border-tertiary": {
        value: gray[10],
        description: "The border color on any element. Pair with bg-surface-tertiary or bg-fill-tertiary."
      },
      "color-border-focus": {
        value: blue[13],
        description: "The focus ring for any interactive element in a focused state."
      },
      "color-border-brand": {
        value: gray[8],
        description: "Use for borders paired with brand colors."
      },
      "color-border-info": {
        value: azure[8],
        description: "Use for borders communicating information."
      },
      "color-border-success": {
        value: green[5],
        description: "Use for borders communicating success."
      },
      "color-border-caution": {
        value: yellow[5],
        description: "Use for borders communicating caution."
      },
      "color-border-warning": {
        value: orange[8],
        description: "Use for borders communicating warning."
      },
      "color-border-critical": {
        value: red[8],
        description: "Use for borders communicating critical information."
      },
      "color-border-critical-secondary": {
        value: red[14],
        description: "Use for borders communicating critical information, such as borders on invalid text fields."
      },
      "color-border-emphasis": {
        value: blue[13],
        description: "Use for borders indicating areas of focus."
      },
      "color-border-emphasis-hover": {
        value: blue[14],
        description: "The hover state color for borders indicating areas of focus."
      },
      "color-border-emphasis-active": {
        value: blue[15],
        description: "The active state (on press) color for borders indicating areas of focus."
      },
      "color-border-magic": {
        value: purple[6],
        description: "Use for borders suggested by magic AI."
      },
      "color-border-magic-secondary": {
        value: purple[11],
        description: "Use for borders suggested by magic AI, such as borders on text fields."
      },
      "color-border-magic-secondary-hover": {
        value: purple[12],
        description: "Use for borders suggested by magic AI, such as borders on text fields."
      },
      "color-border-inverse": {
        value: gray[13],
        description: "Use for borders on an inverse background, such as borders on the global search."
      },
      "color-border-inverse-hover": {
        value: gray[10],
        description: "The hover state color for borders on an inverse background."
      },
      "color-border-inverse-active": {
        value: gray[8],
        description: "The active state (on press) color for borders on an inverse background."
      },
      "color-tooltip-tail-down-border-experimental": {
        value: gray[9],
        description: "The border color for tooltip tails pointing down."
      },
      "color-tooltip-tail-up-border-experimental": {
        value: gray[8],
        description: "The border color for tooltip tails pointing up."
      },
      "color-border-gradient-experimental": {
        value: "linear-gradient(to bottom, " + gray[7] + ", " + gray[10] + " 78%, " + gray[11] + ")"
      },
      "color-border-gradient-hover-experimental": {
        value: "linear-gradient(to bottom, " + gray[7] + ", " + gray[10] + " 78%, " + gray[11] + ")"
      },
      "color-border-gradient-selected-experimental": {
        value: "linear-gradient(to bottom, " + gray[7] + ", " + gray[10] + " 78%, " + gray[11] + ")"
      },
      "color-border-gradient-active-experimental": {
        value: "linear-gradient(to bottom, " + gray[7] + ", " + gray[10] + " 78%, " + gray[11] + ")"
      },
      "color-icon": {
        value: gray[14],
        description: "The default color for icons."
      },
      "color-icon-hover": {
        value: gray[15],
        description: "The hover state color for icons."
      },
      "color-icon-active": {
        value: gray[16],
        description: "The active state (on press) color for icons."
      },
      "color-icon-disabled": {
        value: gray[10],
        description: "The disabled state color for icons."
      },
      "color-icon-secondary": {
        value: gray[12],
        description: "Use for secondary icons."
      },
      "color-icon-secondary-hover": {
        value: gray[13],
        description: "The hover state color for secondary icons."
      },
      "color-icon-secondary-active": {
        value: gray[14],
        description: "The active state (on press) color for secondary icons."
      },
      "color-icon-brand": {
        value: gray[16],
        description: "Use for icons that need to pull more focus."
      },
      "color-icon-info": {
        value: azure[11],
        description: "Use for icons communicating information."
      },
      "color-icon-success": {
        value: green[12],
        description: "Use for icons communicating success."
      },
      "color-icon-caution": {
        value: yellow[11],
        description: "Use for icons communicating caution."
      },
      "color-icon-warning": {
        value: orange[11],
        description: "Use for icons communicating warning."
      },
      "color-icon-critical": {
        value: red[11],
        description: "Use for icons communicating critical information."
      },
      "color-icon-emphasis": {
        value: blue[13],
        description: "Use for icons indicating areas of focus in editors, like the theme editor."
      },
      "color-icon-emphasis-hover": {
        value: blue[14],
        description: "The hover color for icons indicating areas of focus in editors."
      },
      "color-icon-emphasis-active": {
        value: blue[15],
        description: "The active state (on press) color for icons indicating areas of focus in editors."
      },
      "color-icon-magic": {
        value: purple[12],
        description: "Use for icons suggested by magic AI."
      },
      "color-icon-inverse": {
        value: gray[8],
        description: "Use for icons on an inverse background."
      },
      "color-avatar-bg-fill": {
        value: gray[11]
      },
      "color-avatar-five-bg-fill": {
        value: rose[11]
      },
      "color-avatar-five-text-on-bg-fill": {
        value: rose[2]
      },
      "color-avatar-four-bg-fill": {
        value: azure[10]
      },
      "color-avatar-four-text-on-bg-fill": {
        value: azure[16]
      },
      "color-avatar-one-bg-fill": {
        value: magenta[12]
      },
      "color-avatar-one-text-on-bg-fill": {
        value: magenta[3]
      },
      "color-avatar-seven-bg-fill": {
        value: purple[11]
      },
      "color-avatar-seven-text-on-bg-fill": {
        value: purple[2]
      },
      "color-avatar-six-bg-fill": {
        value: lime[9]
      },
      "color-avatar-six-text-on-bg-fill": {
        value: lime[15]
      },
      "color-avatar-text-on-bg-fill": {
        value: gray[1]
      },
      "color-avatar-three-bg-fill": {
        value: teal[9]
      },
      "color-avatar-three-text-on-bg-fill": {
        value: teal[15]
      },
      "color-avatar-two-bg-fill": {
        value: green[7]
      },
      "color-avatar-two-text-on-bg-fill": {
        value: green[14]
      },
      "color-backdrop-bg": {
        value: blackAlpha[14]
      },
      "color-button-gradient-bg-fill": {
        value: "linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)"
      },
      "color-checkbox-bg-surface-disabled": {
        value: blackAlpha[7]
      },
      "color-checkbox-icon-disabled": {
        value: gray[1]
      },
      "color-input-bg-surface": {
        value: gray[2]
      },
      "color-input-bg-surface-hover": {
        value: gray[3]
      },
      "color-input-bg-surface-active": {
        value: gray[4]
      },
      "color-input-border": {
        value: gray[12]
      },
      "color-input-border-hover": {
        value: gray[13]
      },
      "color-input-border-active": {
        value: gray[16]
      },
      "color-nav-bg": {
        value: gray[7]
      },
      "color-nav-bg-surface": {
        value: blackAlpha[3]
      },
      "color-nav-bg-surface-hover": {
        value: gray[6]
      },
      "color-nav-bg-surface-active": {
        value: gray[3]
      },
      "color-nav-bg-surface-selected": {
        value: gray[3]
      },
      "color-radio-button-bg-surface-disabled": {
        value: blackAlpha[7]
      },
      "color-radio-button-icon-disabled": {
        value: gray[1]
      },
      "color-video-thumbnail-play-button-bg-fill-hover": {
        value: blackAlpha[15]
      },
      "color-video-thumbnail-play-button-bg-fill": {
        value: blackAlpha[14]
      },
      "color-video-thumbnail-play-button-text-on-bg-fill": {
        value: gray[1]
      },
      "color-scrollbar-thumb-bg-hover": {
        value: gray[12]
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/font.mjs
var font;
var init_font = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/font.mjs"() {
    init_size();
    font = {
      "font-family-sans": {
        value: "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif"
      },
      "font-family-mono": {
        value: "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace"
      },
      "font-size-275": {
        value: size[275]
      },
      "font-size-300": {
        value: size[300]
      },
      "font-size-325": {
        value: size[325]
      },
      "font-size-350": {
        value: size[350]
      },
      "font-size-400": {
        value: size[400]
      },
      "font-size-450": {
        value: size[450]
      },
      "font-size-500": {
        value: size[500]
      },
      "font-size-550": {
        value: size[550]
      },
      "font-size-600": {
        value: size[600]
      },
      "font-size-750": {
        value: size[750]
      },
      "font-size-800": {
        value: size[800]
      },
      "font-size-900": {
        value: size[900]
      },
      "font-size-1000": {
        value: size[1e3]
      },
      "font-weight-regular": {
        value: "450"
      },
      "font-weight-medium": {
        value: "550"
      },
      "font-weight-semibold": {
        value: "650"
      },
      "font-weight-bold": {
        value: "700"
      },
      "font-letter-spacing-densest": {
        value: "-0.54px"
      },
      "font-letter-spacing-denser": {
        value: "-0.3px"
      },
      "font-letter-spacing-dense": {
        value: "-0.2px"
      },
      "font-letter-spacing-normal": {
        value: "0px"
      },
      "font-line-height-300": {
        value: size[300]
      },
      "font-line-height-400": {
        value: size[400]
      },
      "font-line-height-500": {
        value: size[500]
      },
      "font-line-height-600": {
        value: size[600]
      },
      "font-line-height-700": {
        value: size[700]
      },
      "font-line-height-800": {
        value: size[800]
      },
      "font-line-height-1000": {
        value: size[1e3]
      },
      "font-line-height-1200": {
        value: size[1200]
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/height.mjs
var height;
var init_height = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/height.mjs"() {
    init_size();
    height = {
      "height-0": {
        value: size[0]
      },
      "height-025": {
        value: size["025"]
      },
      "height-050": {
        value: size["050"]
      },
      "height-100": {
        value: size[100]
      },
      "height-150": {
        value: size[150]
      },
      "height-200": {
        value: size[200]
      },
      "height-300": {
        value: size[300]
      },
      "height-400": {
        value: size[400]
      },
      "height-500": {
        value: size[500]
      },
      "height-600": {
        value: size[600]
      },
      "height-700": {
        value: size[700]
      },
      "height-800": {
        value: size[800]
      },
      "height-900": {
        value: size[900]
      },
      "height-1000": {
        value: size[1e3]
      },
      "height-1200": {
        value: size[1200]
      },
      "height-1600": {
        value: size[1600]
      },
      "height-2000": {
        value: size[2e3]
      },
      "height-2400": {
        value: size[2400]
      },
      "height-2800": {
        value: size[2800]
      },
      "height-3200": {
        value: size[3200]
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/motion.mjs
var motion;
var init_motion = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/motion.mjs"() {
    motion = {
      "motion-duration-0": {
        value: "0ms"
      },
      "motion-duration-50": {
        value: "50ms"
      },
      "motion-duration-100": {
        value: "100ms"
      },
      "motion-duration-150": {
        value: "150ms"
      },
      "motion-duration-200": {
        value: "200ms"
      },
      "motion-duration-250": {
        value: "250ms"
      },
      "motion-duration-300": {
        value: "300ms"
      },
      "motion-duration-350": {
        value: "350ms"
      },
      "motion-duration-400": {
        value: "400ms"
      },
      "motion-duration-450": {
        value: "450ms"
      },
      "motion-duration-500": {
        value: "500ms"
      },
      "motion-duration-5000": {
        value: "5000ms"
      },
      "motion-ease": {
        value: "cubic-bezier(0.25, 0.1, 0.25, 1)",
        description: "Responds quickly and finishes with control. A great default for any user interaction."
      },
      "motion-ease-in": {
        value: "cubic-bezier(0.42, 0, 1, 1)",
        description: "Starts slowly and finishes at top speed. Use sparingly."
      },
      "motion-ease-out": {
        value: "cubic-bezier(0.19, 0.91, 0.38, 1)",
        description: "Starts at top speed and finishes slowly. Use sparingly."
      },
      "motion-ease-in-out": {
        value: "cubic-bezier(0.42, 0, 0.58, 1)",
        description: "Starts and finishes with equal speed. A good default for transitions triggered by the system."
      },
      "motion-linear": {
        value: "cubic-bezier(0, 0, 1, 1)",
        description: "Moves with constant speed. Use for continuous and mechanical animations, such as rotating spinners."
      },
      "motion-keyframes-bounce": {
        value: "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }"
      },
      "motion-keyframes-fade-in": {
        value: "{ to { opacity: 1 } }"
      },
      "motion-keyframes-pulse": {
        value: "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }"
      },
      "motion-keyframes-spin": {
        value: "{ to { transform: rotate(1turn) } }"
      },
      "motion-keyframes-appear-above": {
        value: "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }"
      },
      "motion-keyframes-appear-below": {
        value: "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/shadow.mjs
var shadow;
var init_shadow = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/shadow.mjs"() {
    shadow = {
      "shadow-0": {
        value: "none"
      },
      "shadow-100": {
        value: "0px 1px 0px 0px rgba(26, 26, 26, 0.07)"
      },
      "shadow-200": {
        value: "0px 3px 1px -1px rgba(26, 26, 26, 0.07)"
      },
      "shadow-300": {
        value: "0px 4px 6px -2px rgba(26, 26, 26, 0.20)"
      },
      "shadow-400": {
        value: "0px 8px 16px -4px rgba(26, 26, 26, 0.22)"
      },
      "shadow-500": {
        value: "0px 12px 20px -8px rgba(26, 26, 26, 0.24)"
      },
      "shadow-600": {
        value: "0px 20px 20px -8px rgba(26, 26, 26, 0.28)"
      },
      "shadow-bevel-100": {
        value: "1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset, -1px 0px 0px 0px rgba(0, 0, 0, 0.13) inset, 0px -1px 0px 0px rgba(0, 0, 0, 0.17) inset, 0px 1px 0px 0px rgba(204, 204, 204, 0.5) inset"
      },
      "shadow-inset-100": {
        value: "0px 1px 2px 0px rgba(26, 26, 26, 0.15) inset, 0px 1px 1px 0px rgba(26, 26, 26, 0.15) inset"
      },
      "shadow-inset-200": {
        value: "0px 2px 1px 0px rgba(26, 26, 26, 0.20) inset, 1px 0px 1px 0px rgba(26, 26, 26, 0.12) inset, -1px 0px 1px 0px rgba(26, 26, 26, 0.12) inset"
      },
      "shadow-button": {
        value: "0px -1px 0px 0px #b5b5b5 inset, 0px 0px 0px 1px rgba(0, 0, 0, 0.1) inset, 0px 0.5px 0px 1.5px #FFF inset"
      },
      "shadow-button-hover": {
        value: "0px 1px 0px 0px #EBEBEB inset, -1px 0px 0px 0px #EBEBEB inset, 1px 0px 0px 0px #EBEBEB inset, 0px -1px 0px 0px #CCC inset"
      },
      "shadow-button-inset": {
        value: "-1px 0px 1px 0px rgba(26, 26, 26, 0.122) inset, 1px 0px 1px 0px rgba(26, 26, 26, 0.122) inset, 0px 2px 1px 0px rgba(26, 26, 26, 0.2) inset"
      },
      "shadow-button-primary": {
        value: "0px -1px 0px 1px rgba(0, 0, 0, 0.8) inset, 0px 0px 0px 1px rgba(48, 48, 48, 1) inset, 0px 0.5px 0px 1.5px rgba(255, 255, 255, 0.25) inset;"
      },
      "shadow-button-primary-hover": {
        value: "0px 1px 0px 0px rgba(255, 255, 255, 0.24) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 0px -1px 0px 0px #000 inset, 0px -1px 0px 1px #1A1A1A"
      },
      "shadow-button-primary-inset": {
        value: "0px 3px 0px 0px rgb(0, 0, 0) inset"
      },
      "shadow-button-primary-critical": {
        value: "0px -1px 0px 1px rgba(142, 31, 11, 0.8) inset, 0px 0px 0px 1px rgba(181, 38, 11, 0.8) inset, 0px 0.5px 0px 1.5px rgba(255, 255, 255, 0.349) inset"
      },
      "shadow-button-primary-critical-hover": {
        value: "0px 1px 0px 0px rgba(255, 255, 255, 0.48) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 0px -1.5px 0px 0px rgba(0, 0, 0, 0.25) inset"
      },
      "shadow-button-primary-critical-inset": {
        value: "-1px 0px 1px 0px rgba(0, 0, 0, 0.2) inset, 1px 0px 1px 0px rgba(0, 0, 0, 0.2) inset, 0px 2px 0px 0px rgba(0, 0, 0, 0.6) inset"
      },
      "shadow-button-primary-success": {
        value: "0px -1px 0px 1px rgba(12, 81, 50, 0.8) inset, 0px 0px 0px 1px rgba(19, 111, 69, 0.8) inset, 0px 0.5px 0px 1.5px rgba(255, 255, 255, 0.251) inset"
      },
      "shadow-button-primary-success-hover": {
        value: "0px 1px 0px 0px rgba(255, 255, 255, 0.48) inset, 1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, -1px 0px 0px 0px rgba(255, 255, 255, 0.20) inset, 0px -1.5px 0px 0px rgba(0, 0, 0, 0.25) inset"
      },
      "shadow-button-primary-success-inset": {
        value: "-1px 0px 1px 0px rgba(0, 0, 0, 0.2) inset, 1px 0px 1px 0px rgba(0, 0, 0, 0.2) inset, 0px 2px 0px 0px rgba(0, 0, 0, 0.6) inset"
      },
      "shadow-border-inset": {
        value: "0px 0px 0px 1px rgba(0, 0, 0, 0.08) inset"
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/space.mjs
function createVar2(spaceTokenName) {
  return "var(" + createVarName(spaceTokenName) + ")";
}
var space;
var init_space = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/space.mjs"() {
    init_size();
    init_utils();
    space = {
      "space-0": {
        value: size[0]
      },
      "space-025": {
        value: size["025"]
      },
      "space-050": {
        value: size["050"]
      },
      "space-100": {
        value: size[100]
      },
      "space-150": {
        value: size[150]
      },
      "space-200": {
        value: size[200]
      },
      "space-300": {
        value: size[300]
      },
      "space-400": {
        value: size[400]
      },
      "space-500": {
        value: size[500]
      },
      "space-600": {
        value: size[600]
      },
      "space-800": {
        value: size[800]
      },
      "space-1000": {
        value: size[1e3]
      },
      "space-1200": {
        value: size[1200]
      },
      "space-1600": {
        value: size[1600]
      },
      "space-2000": {
        value: size[2e3]
      },
      "space-2400": {
        value: size[2400]
      },
      "space-2800": {
        value: size[2800]
      },
      "space-3200": {
        value: size[3200]
      },
      "space-button-group-gap": {
        value: createVar2("space-200")
      },
      "space-card-gap": {
        value: createVar2("space-400")
      },
      "space-card-padding": {
        value: createVar2("space-400")
      },
      "space-table-cell-padding": {
        value: createVar2("space-150")
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/text.mjs
var text;
var init_text = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/text.mjs"() {
    init_utils();
    text = {
      // heading-3xl
      "text-heading-3xl-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-3xl-font-size": {
        value: createVar("font-size-900")
      },
      "text-heading-3xl-font-weight": {
        value: createVar("font-weight-bold")
      },
      "text-heading-3xl-font-letter-spacing": {
        value: createVar("font-letter-spacing-densest")
      },
      "text-heading-3xl-font-line-height": {
        value: createVar("font-line-height-1200")
      },
      // heading-2xl
      "text-heading-2xl-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-2xl-font-size": {
        value: createVar("font-size-750")
      },
      "text-heading-2xl-font-weight": {
        value: createVar("font-weight-bold")
      },
      "text-heading-2xl-font-letter-spacing": {
        value: createVar("font-letter-spacing-denser")
      },
      "text-heading-2xl-font-line-height": {
        value: createVar("font-line-height-1000")
      },
      // heading-xl
      "text-heading-xl-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-xl-font-size": {
        value: createVar("font-size-600")
      },
      "text-heading-xl-font-weight": {
        value: createVar("font-weight-bold")
      },
      "text-heading-xl-font-letter-spacing": {
        value: createVar("font-letter-spacing-dense")
      },
      "text-heading-xl-font-line-height": {
        value: createVar("font-line-height-800")
      },
      // heading-lg
      "text-heading-lg-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-lg-font-size": {
        value: createVar("font-size-500")
      },
      "text-heading-lg-font-weight": {
        value: createVar("font-weight-semibold")
      },
      "text-heading-lg-font-letter-spacing": {
        value: createVar("font-letter-spacing-dense")
      },
      "text-heading-lg-font-line-height": {
        value: createVar("font-line-height-600")
      },
      // heading-md
      "text-heading-md-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-md-font-size": {
        value: createVar("font-size-350")
      },
      "text-heading-md-font-weight": {
        value: createVar("font-weight-semibold")
      },
      "text-heading-md-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-heading-md-font-line-height": {
        value: createVar("font-line-height-500")
      },
      // heading-sm
      "text-heading-sm-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-sm-font-size": {
        value: createVar("font-size-325")
      },
      "text-heading-sm-font-weight": {
        value: createVar("font-weight-semibold")
      },
      "text-heading-sm-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-heading-sm-font-line-height": {
        value: createVar("font-line-height-500")
      },
      // heading-xs
      "text-heading-xs-font-family": {
        value: createVar("font-family-sans")
      },
      "text-heading-xs-font-size": {
        value: createVar("font-size-300")
      },
      "text-heading-xs-font-weight": {
        value: createVar("font-weight-semibold")
      },
      "text-heading-xs-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-heading-xs-font-line-height": {
        value: createVar("font-line-height-400")
      },
      // body-lg
      "text-body-lg-font-family": {
        value: createVar("font-family-sans")
      },
      "text-body-lg-font-size": {
        value: createVar("font-size-350")
      },
      "text-body-lg-font-weight": {
        value: createVar("font-weight-regular")
      },
      "text-body-lg-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-body-lg-font-line-height": {
        value: createVar("font-line-height-500")
      },
      // body-md
      "text-body-md-font-family": {
        value: createVar("font-family-sans")
      },
      "text-body-md-font-size": {
        value: createVar("font-size-325")
      },
      "text-body-md-font-weight": {
        value: createVar("font-weight-regular")
      },
      "text-body-md-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-body-md-font-line-height": {
        value: createVar("font-line-height-500")
      },
      // body-sm
      "text-body-sm-font-family": {
        value: createVar("font-family-sans")
      },
      "text-body-sm-font-size": {
        value: createVar("font-size-300")
      },
      "text-body-sm-font-weight": {
        value: createVar("font-weight-regular")
      },
      "text-body-sm-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-body-sm-font-line-height": {
        value: createVar("font-line-height-400")
      },
      // body-xs
      "text-body-xs-font-family": {
        value: createVar("font-family-sans")
      },
      "text-body-xs-font-size": {
        value: createVar("font-size-275")
      },
      "text-body-xs-font-weight": {
        value: createVar("font-weight-regular")
      },
      "text-body-xs-font-letter-spacing": {
        value: createVar("font-letter-spacing-normal")
      },
      "text-body-xs-font-line-height": {
        value: createVar("font-line-height-300")
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/width.mjs
var width;
var init_width = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/width.mjs"() {
    init_size();
    width = {
      "width-0": {
        value: size[0]
      },
      "width-025": {
        value: size["025"]
      },
      "width-050": {
        value: size["050"]
      },
      "width-100": {
        value: size[100]
      },
      "width-150": {
        value: size[150]
      },
      "width-200": {
        value: size[200]
      },
      "width-300": {
        value: size[300]
      },
      "width-400": {
        value: size[400]
      },
      "width-500": {
        value: size[500]
      },
      "width-600": {
        value: size[600]
      },
      "width-700": {
        value: size[700]
      },
      "width-800": {
        value: size[800]
      },
      "width-900": {
        value: size[900]
      },
      "width-1000": {
        value: size[1e3]
      },
      "width-1200": {
        value: size[1200]
      },
      "width-1600": {
        value: size[1600]
      },
      "width-2000": {
        value: size[2e3]
      },
      "width-2400": {
        value: size[2400]
      },
      "width-2800": {
        value: size[2800]
      },
      "width-3200": {
        value: size[3200]
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/zIndex.mjs
var zIndex;
var init_zIndex = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/zIndex.mjs"() {
    zIndex = {
      "z-index-0": {
        value: "auto"
      },
      "z-index-1": {
        value: "100"
      },
      "z-index-2": {
        value: "400"
      },
      "z-index-3": {
        value: "510"
      },
      "z-index-4": {
        value: "512"
      },
      "z-index-5": {
        value: "513"
      },
      "z-index-6": {
        value: "514"
      },
      "z-index-7": {
        value: "515"
      },
      "z-index-8": {
        value: "516"
      },
      "z-index-9": {
        value: "517"
      },
      "z-index-10": {
        value: "518"
      },
      "z-index-11": {
        value: "519"
      },
      "z-index-12": {
        value: "520"
      }
    };
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/index.mjs
var metaThemeBase;
var init_base = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/base/index.mjs"() {
    init_utils();
    init_border();
    init_breakpoints();
    init_color();
    init_font();
    init_height();
    init_motion();
    init_shadow();
    init_space();
    init_text();
    init_width();
    init_zIndex();
    metaThemeBase = createMetaThemeBase({
      border,
      breakpoints,
      color,
      font,
      height,
      motion,
      shadow,
      space,
      text,
      width,
      zIndex
    });
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/utils.mjs
function createMetaThemePartial(metaThemePartial) {
  return Object.fromEntries(Object.entries(metaThemePartial).map(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), tokenGroupName = _ref2[0], tokenGroup = _ref2[1];
    return [tokenGroupName, tokenGroup && tokenGroupNamesToRems.includes(tokenGroupName) ? tokenGroupToRems(tokenGroup) : tokenGroup];
  }));
}
function createMetaTheme(metaThemePartial) {
  return (0, import_deepmerge.default)(metaThemeBase, metaThemePartial);
}
function createThemeClassName(themeName) {
  return "p-theme-" + themeName;
}
function createIsTokenName(theme) {
  var tokenNames = new Set(getTokenNames(theme));
  return function(tokenName) {
    return tokenNames.has(tokenName);
  };
}
var import_deepmerge;
var init_utils2 = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/utils.mjs"() {
    init_rollupPluginBabelHelpers();
    import_deepmerge = __toESM(require_cjs(), 1);
    init_utils();
    init_base();
    createIsTokenName(metaThemeBase);
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/constants.mjs
var themeNameLight, themeNameDefault, themeNames;
var init_constants = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/constants.mjs"() {
    themeNameLight = "light";
    themeNameDefault = themeNameLight;
    themeNames = [themeNameLight, "light-mobile", "light-high-contrast-experimental", "dark-experimental"];
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light.mjs
var metaThemeLightPartial, metaThemeLight;
var init_light = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light.mjs"() {
    init_utils2();
    metaThemeLightPartial = createMetaThemePartial({});
    metaThemeLight = createMetaTheme(metaThemeLightPartial);
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light-high-contrast.mjs
var metaThemeLightHighContrastPartial, metaThemeLightHighContrast;
var init_light_high_contrast = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light-high-contrast.mjs"() {
    init_colors();
    init_utils2();
    metaThemeLightHighContrastPartial = createMetaThemePartial({
      color: {
        "color-text": {
          value: gray[16]
        },
        "color-text-secondary": {
          value: gray[16]
        },
        "color-text-brand": {
          value: gray[16]
        },
        "color-icon-secondary": {
          value: gray[14]
        },
        "color-border": {
          value: gray[12]
        },
        "color-input-border": {
          value: gray[14]
        },
        "color-border-secondary": {
          value: gray[12]
        },
        "color-bg-surface-secondary": {
          value: gray[6]
        }
      },
      shadow: {
        "shadow-bevel-100": {
          value: "0px 1px 0px 0px rgba(26, 26, 26, 0.07), 0px 1px 0px 0px rgba(208, 208, 208, 0.40) inset, 1px 0px 0px 0px #CCC inset, -1px 0px 0px 0px #CCC inset, 0px -1px 0px 0px #999 inset"
        }
      }
    });
    metaThemeLightHighContrast = createMetaTheme(metaThemeLightHighContrastPartial);
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light-mobile.mjs
var buttonShadow, metaThemeLightMobilePartial, metaThemeLightMobile;
var init_light_mobile = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/light-mobile.mjs"() {
    init_utils();
    init_utils2();
    buttonShadow = "0 0 0 " + createVar("border-width-025") + " " + createVar("color-border") + " inset";
    metaThemeLightMobilePartial = createMetaThemePartial({
      color: {
        "color-button-gradient-bg-fill": {
          value: "none"
        }
      },
      shadow: {
        "shadow-100": {
          value: "none"
        },
        "shadow-bevel-100": {
          value: "none"
        },
        "shadow-button": {
          value: buttonShadow
        },
        "shadow-button-hover": {
          value: buttonShadow
        },
        "shadow-button-inset": {
          value: buttonShadow
        },
        "shadow-button-primary": {
          value: "none"
        },
        "shadow-button-primary-hover": {
          value: "none"
        },
        "shadow-button-primary-inset": {
          value: "none"
        },
        "shadow-button-primary-critical": {
          value: "none"
        },
        "shadow-button-primary-critical-hover": {
          value: "none"
        },
        "shadow-button-primary-critical-inset": {
          value: "none"
        },
        "shadow-button-primary-success": {
          value: "none"
        },
        "shadow-button-primary-success-hover": {
          value: "none"
        },
        "shadow-button-primary-success-inset": {
          value: "none"
        }
      },
      space: {
        "space-card-gap": {
          value: createVar("space-200")
        }
      },
      text: {
        // heading-2xl
        "text-heading-2xl-font-size": {
          value: createVar("font-size-800")
        },
        // heading-xl
        "text-heading-xl-font-size": {
          value: createVar("font-size-550")
        },
        "text-heading-xl-font-line-height": {
          value: createVar("font-line-height-700")
        },
        // heading-lg
        "text-heading-lg-font-size": {
          value: createVar("font-size-450")
        },
        // heading-md
        "text-heading-md-font-size": {
          value: createVar("font-size-400")
        },
        // heading-sm
        "text-heading-sm-font-size": {
          value: createVar("font-size-350")
        },
        // body-lg
        "text-body-lg-font-size": {
          value: createVar("font-size-450")
        },
        "text-body-lg-font-line-height": {
          value: createVar("font-line-height-700")
        },
        // body-md
        "text-body-md-font-size": {
          value: createVar("font-size-400")
        },
        "text-body-md-font-line-height": {
          value: createVar("font-line-height-600")
        },
        // body-sm
        "text-body-sm-font-size": {
          value: createVar("font-size-350")
        },
        "text-body-sm-font-line-height": {
          value: createVar("font-line-height-500")
        },
        // body-xs
        "text-body-xs-font-size": {
          value: createVar("font-size-300")
        },
        "text-body-xs-font-line-height": {
          value: createVar("font-line-height-400")
        }
      }
    });
    metaThemeLightMobile = createMetaTheme(metaThemeLightMobilePartial);
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/dark.mjs
var metaThemeDarkPartial, metaThemeDark;
var init_dark = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/dark.mjs"() {
    init_colors();
    init_utils2();
    metaThemeDarkPartial = createMetaThemePartial({
      color: {
        "color-scheme": {
          value: "dark"
        },
        "color-bg": {
          value: gray[16]
        },
        "color-bg-surface": {
          value: gray[15]
        },
        "color-bg-fill": {
          value: gray[15]
        },
        "color-icon": {
          value: gray[8]
        },
        "color-icon-secondary": {
          value: gray[12]
        },
        "color-text": {
          value: gray[8]
        },
        "color-text-secondary": {
          value: gray[11]
        },
        "color-bg-surface-secondary-active": {
          value: gray[13]
        },
        "color-bg-surface-secondary-hover": {
          value: gray[14]
        },
        "color-bg-fill-transparent": {
          value: whiteAlpha[8]
        },
        "color-bg-fill-brand": {
          value: gray[1]
        },
        "color-text-brand-on-bg-fill": {
          value: gray[15]
        },
        "color-bg-surface-hover": {
          value: gray[14]
        },
        "color-bg-fill-hover": {
          value: gray[14]
        },
        "color-bg-fill-transparent-hover": {
          value: whiteAlpha[9]
        },
        "color-bg-fill-brand-hover": {
          value: gray[5]
        },
        "color-bg-surface-selected": {
          value: gray[13]
        },
        "color-bg-fill-selected": {
          value: gray[13]
        },
        "color-bg-fill-transparent-selected": {
          value: whiteAlpha[11]
        },
        "color-bg-fill-brand-selected": {
          value: gray[9]
        },
        "color-bg-surface-active": {
          value: gray[13]
        },
        "color-bg-fill-active": {
          value: gray[13]
        },
        "color-bg-fill-transparent-active": {
          value: whiteAlpha[10]
        },
        "color-bg-fill-brand-active": {
          value: gray[4]
        },
        "color-bg-surface-brand-selected": {
          value: gray[14]
        },
        "color-border-secondary": {
          value: gray[13]
        },
        "color-tooltip-tail-down-border-experimental": {
          value: "rgba(60, 60, 60, 1)"
        },
        "color-tooltip-tail-up-border-experimental": {
          value: "rgba(71, 71, 71, 1)"
        },
        "color-border-gradient-experimental": {
          value: "linear-gradient(to bottom, " + whiteAlpha[9] + ", " + whiteAlpha[4] + ")"
        },
        "color-border-gradient-hover-experimental": {
          value: "linear-gradient(to bottom, " + whiteAlpha[9] + ", " + whiteAlpha[4] + ")"
        },
        "color-border-gradient-selected-experimental": {
          value: "linear-gradient(to bottom, " + blackAlpha[10] + ", " + whiteAlpha[10] + ")"
        },
        "color-border-gradient-active-experimental": {
          value: "linear-gradient(to bottom, " + whiteAlpha[10] + ", " + whiteAlpha[4] + ")"
        }
      },
      shadow: {
        "shadow-bevel-100": {
          value: "1px 0px 0px 0px rgba(204, 204, 204, 0.08) inset, -1px 0px 0px 0px rgba(204, 204, 204, 0.08) inset, 0px -1px 0px 0px rgba(204, 204, 204, 0.08) inset, 0px 1px 0px 0px rgba(204, 204, 204, 0.16) inset"
        }
      }
    });
    metaThemeDark = createMetaTheme(metaThemeDarkPartial);
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/src/themes/index.mjs
var metaThemePartials, metaThemeDefaultPartial, metaThemeDefault;
var init_themes = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/src/themes/index.mjs"() {
    init_utils2();
    init_constants();
    init_light();
    init_light_high_contrast();
    init_light_mobile();
    init_dark();
    metaThemePartials = {
      light: metaThemeLightPartial,
      "light-mobile": metaThemeLightMobilePartial,
      "light-high-contrast-experimental": metaThemeLightHighContrastPartial,
      "dark-experimental": metaThemeDarkPartial
    };
    metaThemeDefaultPartial = metaThemePartials[themeNameDefault];
    metaThemeDefault = createMetaTheme(metaThemeDefaultPartial);
  }
});

// node_modules/@shopify/polaris-tokens/dist/esm/build/index.mjs
var themes, themeDefault, isTokenName;
var init_build = __esm({
  "node_modules/@shopify/polaris-tokens/dist/esm/build/index.mjs"() {
    init_breakpoints();
    init_utils();
    init_themes();
    init_constants();
    init_constants();
    init_utils2();
    init_utils2();
    themes = {
      "light": {
        "border": {
          "border-radius-0": "0rem",
          "border-radius-050": "0.125rem",
          "border-radius-100": "0.25rem",
          "border-radius-150": "0.375rem",
          "border-radius-200": "0.5rem",
          "border-radius-300": "0.75rem",
          "border-radius-400": "1rem",
          "border-radius-500": "1.25rem",
          "border-radius-750": "1.875rem",
          "border-radius-full": "624.9375rem",
          "border-width-0": "0rem",
          "border-width-0165": "0.04125rem",
          "border-width-025": "0.0625rem",
          "border-width-050": "0.125rem",
          "border-width-100": "0.25rem"
        },
        "breakpoints": {
          "breakpoints-xs": "0rem",
          "breakpoints-sm": "30.625rem",
          "breakpoints-md": "48rem",
          "breakpoints-lg": "65rem",
          "breakpoints-xl": "90rem"
        },
        "color": {
          "color-scheme": "light",
          "color-bg": "rgba(241, 241, 241, 1)",
          "color-bg-inverse": "rgba(26, 26, 26, 1)",
          "color-bg-surface": "rgba(255, 255, 255, 1)",
          "color-bg-surface-hover": "rgba(247, 247, 247, 1)",
          "color-bg-surface-active": "rgba(243, 243, 243, 1)",
          "color-bg-surface-selected": "rgba(241, 241, 241, 1)",
          "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-surface-secondary": "rgba(247, 247, 247, 1)",
          "color-bg-surface-secondary-hover": "rgba(241, 241, 241, 1)",
          "color-bg-surface-secondary-active": "rgba(235, 235, 235, 1)",
          "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
          "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
          "color-bg-surface-brand-selected": "rgba(241, 241, 241, 1)",
          "color-bg-surface-info": "rgba(234, 244, 255, 1)",
          "color-bg-surface-info-hover": "rgba(224, 240, 255, 1)",
          "color-bg-surface-info-active": "rgba(202, 230, 255, 1)",
          "color-bg-surface-success": "rgba(205, 254, 225, 1)",
          "color-bg-surface-success-hover": "rgba(180, 254, 210, 1)",
          "color-bg-surface-success-active": "rgba(146, 254, 194, 1)",
          "color-bg-surface-caution": "rgba(255, 248, 219, 1)",
          "color-bg-surface-caution-hover": "rgba(255, 244, 191, 1)",
          "color-bg-surface-caution-active": "rgba(255, 239, 157, 1)",
          "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
          "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
          "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
          "color-bg-surface-critical": "rgba(254, 233, 232, 1)",
          "color-bg-surface-critical-hover": "rgba(254, 226, 225, 1)",
          "color-bg-surface-critical-active": "rgba(254, 218, 217, 1)",
          "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
          "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
          "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
          "color-bg-surface-magic": "rgba(248, 247, 255, 1)",
          "color-bg-surface-magic-hover": "rgba(243, 241, 255, 1)",
          "color-bg-surface-magic-active": "rgba(233, 229, 255, 1)",
          "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
          "color-bg-fill": "rgba(255, 255, 255, 1)",
          "color-bg-fill-hover": "rgba(250, 250, 250, 1)",
          "color-bg-fill-active": "rgba(247, 247, 247, 1)",
          "color-bg-fill-selected": "rgba(204, 204, 204, 1)",
          "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-secondary": "rgba(241, 241, 241, 1)",
          "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary-hover": "rgba(212, 212, 212, 1)",
          "color-bg-fill-tertiary-active": "rgba(204, 204, 204, 1)",
          "color-bg-fill-brand": "rgba(48, 48, 48, 1)",
          "color-bg-fill-brand-hover": "rgba(26, 26, 26, 1)",
          "color-bg-fill-brand-active": "rgba(26, 26, 26, 1)",
          "color-bg-fill-brand-selected": "rgba(48, 48, 48, 1)",
          "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
          "color-bg-fill-info": "rgba(145, 208, 255, 1)",
          "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
          "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
          "color-bg-fill-info-secondary": "rgba(213, 235, 255, 1)",
          "color-bg-fill-success": "rgba(41, 132, 90, 1)",
          "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
          "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
          "color-bg-fill-success-secondary": "rgba(180, 254, 210, 1)",
          "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
          "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
          "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
          "color-bg-fill-warning-secondary": "rgba(255, 214, 164, 1)",
          "color-bg-fill-caution": "rgba(255, 230, 0, 1)",
          "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
          "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
          "color-bg-fill-caution-secondary": "rgba(255, 235, 120, 1)",
          "color-bg-fill-critical": "rgba(229, 28, 0, 1)",
          "color-bg-fill-critical-hover": "rgba(181, 38, 11, 1)",
          "color-bg-fill-critical-active": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-secondary": "rgba(254, 211, 209, 1)",
          "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
          "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-bg-fill-magic": "rgba(128, 81, 255, 1)",
          "color-bg-fill-magic-secondary": "rgba(233, 229, 255, 1)",
          "color-bg-fill-magic-secondary-hover": "rgba(228, 222, 255, 1)",
          "color-bg-fill-magic-secondary-active": "rgba(223, 217, 255, 1)",
          "color-bg-fill-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-fill-inverse-hover": "rgba(74, 74, 74, 1)",
          "color-bg-fill-inverse-active": "rgba(97, 97, 97, 1)",
          "color-bg-fill-transparent": "rgba(0, 0, 0, 0.02)",
          "color-bg-fill-transparent-hover": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-transparent-active": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-selected": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
          "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
          "color-text": "rgba(48, 48, 48, 1)",
          "color-text-secondary": "rgba(97, 97, 97, 1)",
          "color-text-disabled": "rgba(181, 181, 181, 1)",
          "color-text-link": "rgba(0, 91, 211, 1)",
          "color-text-link-hover": "rgba(0, 66, 153, 1)",
          "color-text-link-active": "rgba(0, 46, 106, 1)",
          "color-text-brand": "rgba(74, 74, 74, 1)",
          "color-text-brand-hover": "rgba(48, 48, 48, 1)",
          "color-text-brand-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
          "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
          "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
          "color-text-info": "rgba(0, 58, 90, 1)",
          "color-text-info-hover": "rgba(0, 58, 90, 1)",
          "color-text-info-active": "rgba(0, 33, 51, 1)",
          "color-text-info-secondary": "rgba(0, 124, 180, 1)",
          "color-text-info-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-text-success": "rgba(12, 81, 50, 1)",
          "color-text-success-hover": "rgba(8, 61, 37, 1)",
          "color-text-success-active": "rgba(9, 42, 27, 1)",
          "color-text-success-secondary": "rgba(41, 132, 90, 1)",
          "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
          "color-text-caution": "rgba(79, 71, 0, 1)",
          "color-text-caution-hover": "rgba(51, 46, 0, 1)",
          "color-text-caution-active": "rgba(31, 28, 0, 1)",
          "color-text-caution-secondary": "rgba(130, 117, 0, 1)",
          "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
          "color-text-warning": "rgba(94, 66, 0, 1)",
          "color-text-warning-hover": "rgba(65, 45, 0, 1)",
          "color-text-warning-active": "rgba(37, 26, 0, 1)",
          "color-text-warning-secondary": "rgba(149, 111, 0, 1)",
          "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
          "color-text-critical": "rgba(142, 31, 11, 1)",
          "color-text-critical-hover": "rgba(95, 21, 7, 1)",
          "color-text-critical-active": "rgba(47, 10, 4, 1)",
          "color-text-critical-secondary": "rgba(229, 28, 0, 1)",
          "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
          "color-text-emphasis": "rgba(0, 91, 211, 1)",
          "color-text-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-text-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
          "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
          "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
          "color-text-magic": "rgba(87, 0, 209, 1)",
          "color-text-magic-secondary": "rgba(113, 38, 255, 1)",
          "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
          "color-text-inverse": "rgba(227, 227, 227, 1)",
          "color-text-inverse-secondary": "rgba(181, 181, 181, 1)",
          "color-text-link-inverse": "rgba(197, 208, 255, 1)",
          "color-border": "rgba(227, 227, 227, 1)",
          "color-border-hover": "rgba(204, 204, 204, 1)",
          "color-border-disabled": "rgba(235, 235, 235, 1)",
          "color-border-secondary": "rgba(235, 235, 235, 1)",
          "color-border-tertiary": "rgba(204, 204, 204, 1)",
          "color-border-focus": "rgba(0, 91, 211, 1)",
          "color-border-brand": "rgba(227, 227, 227, 1)",
          "color-border-info": "rgba(168, 216, 255, 1)",
          "color-border-success": "rgba(146, 254, 194, 1)",
          "color-border-caution": "rgba(255, 235, 120, 1)",
          "color-border-warning": "rgba(255, 200, 121, 1)",
          "color-border-critical": "rgba(254, 195, 193, 1)",
          "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
          "color-border-emphasis": "rgba(0, 91, 211, 1)",
          "color-border-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-border-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-border-magic": "rgba(228, 222, 255, 1)",
          "color-border-magic-secondary": "rgba(148, 116, 255, 1)",
          "color-border-magic-secondary-hover": "rgba(128, 81, 255, 1)",
          "color-border-inverse": "rgba(97, 97, 97, 1)",
          "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
          "color-border-inverse-active": "rgba(227, 227, 227, 1)",
          "color-tooltip-tail-down-border-experimental": "rgba(212, 212, 212, 1)",
          "color-tooltip-tail-up-border-experimental": "rgba(227, 227, 227, 1)",
          "color-border-gradient-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-hover-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-selected-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-active-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-icon": "rgba(74, 74, 74, 1)",
          "color-icon-hover": "rgba(48, 48, 48, 1)",
          "color-icon-active": "rgba(26, 26, 26, 1)",
          "color-icon-disabled": "rgba(204, 204, 204, 1)",
          "color-icon-secondary": "rgba(138, 138, 138, 1)",
          "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
          "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
          "color-icon-brand": "rgba(26, 26, 26, 1)",
          "color-icon-info": "rgba(0, 148, 213, 1)",
          "color-icon-success": "rgba(41, 132, 90, 1)",
          "color-icon-caution": "rgba(153, 138, 0, 1)",
          "color-icon-warning": "rgba(178, 132, 0, 1)",
          "color-icon-critical": "rgba(239, 77, 47, 1)",
          "color-icon-emphasis": "rgba(0, 91, 211, 1)",
          "color-icon-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-icon-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-icon-magic": "rgba(128, 81, 255, 1)",
          "color-icon-inverse": "rgba(227, 227, 227, 1)",
          "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
          "color-avatar-five-bg-fill": "rgba(253, 75, 146, 1)",
          "color-avatar-five-text-on-bg-fill": "rgba(255, 246, 248, 1)",
          "color-avatar-four-bg-fill": "rgba(81, 192, 255, 1)",
          "color-avatar-four-text-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-avatar-one-bg-fill": "rgba(197, 48, 197, 1)",
          "color-avatar-one-text-on-bg-fill": "rgba(253, 239, 253, 1)",
          "color-avatar-seven-bg-fill": "rgba(148, 116, 255, 1)",
          "color-avatar-seven-text-on-bg-fill": "rgba(248, 247, 255, 1)",
          "color-avatar-six-bg-fill": "rgba(37, 232, 43, 1)",
          "color-avatar-six-text-on-bg-fill": "rgba(3, 61, 5, 1)",
          "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-avatar-three-bg-fill": "rgba(44, 224, 212, 1)",
          "color-avatar-three-text-on-bg-fill": "rgba(3, 60, 57, 1)",
          "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
          "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
          "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
          "color-button-gradient-bg-fill": "linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)",
          "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-input-bg-surface": "rgba(253, 253, 253, 1)",
          "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
          "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
          "color-input-border": "rgba(138, 138, 138, 1)",
          "color-input-border-hover": "rgba(97, 97, 97, 1)",
          "color-input-border-active": "rgba(26, 26, 26, 1)",
          "color-nav-bg": "rgba(235, 235, 235, 1)",
          "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
          "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
          "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
          "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
          "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
          "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
          "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-scrollbar-thumb-bg-hover": "rgba(138, 138, 138, 1)"
        },
        "font": {
          "font-family-sans": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
          "font-size-275": "0.6875rem",
          "font-size-300": "0.75rem",
          "font-size-325": "0.8125rem",
          "font-size-350": "0.875rem",
          "font-size-400": "1rem",
          "font-size-450": "1.125rem",
          "font-size-500": "1.25rem",
          "font-size-550": "1.375rem",
          "font-size-600": "1.5rem",
          "font-size-750": "1.875rem",
          "font-size-800": "2rem",
          "font-size-900": "2.25rem",
          "font-size-1000": "2.5rem",
          "font-weight-regular": "450",
          "font-weight-medium": "550",
          "font-weight-semibold": "650",
          "font-weight-bold": "700",
          "font-letter-spacing-densest": "-0.03375rem",
          "font-letter-spacing-denser": "-0.01875rem",
          "font-letter-spacing-dense": "-0.0125rem",
          "font-letter-spacing-normal": "0rem",
          "font-line-height-300": "0.75rem",
          "font-line-height-400": "1rem",
          "font-line-height-500": "1.25rem",
          "font-line-height-600": "1.5rem",
          "font-line-height-700": "1.75rem",
          "font-line-height-800": "2rem",
          "font-line-height-1000": "2.5rem",
          "font-line-height-1200": "3rem"
        },
        "height": {
          "height-0": "0rem",
          "height-025": "0.0625rem",
          "height-050": "0.125rem",
          "height-100": "0.25rem",
          "height-150": "0.375rem",
          "height-200": "0.5rem",
          "height-300": "0.75rem",
          "height-400": "1rem",
          "height-500": "1.25rem",
          "height-600": "1.5rem",
          "height-700": "1.75rem",
          "height-800": "2rem",
          "height-900": "2.25rem",
          "height-1000": "2.5rem",
          "height-1200": "3rem",
          "height-1600": "4rem",
          "height-2000": "5rem",
          "height-2400": "6rem",
          "height-2800": "7rem",
          "height-3200": "8rem"
        },
        "motion": {
          "motion-duration-0": "0ms",
          "motion-duration-50": "50ms",
          "motion-duration-100": "100ms",
          "motion-duration-150": "150ms",
          "motion-duration-200": "200ms",
          "motion-duration-250": "250ms",
          "motion-duration-300": "300ms",
          "motion-duration-350": "350ms",
          "motion-duration-400": "400ms",
          "motion-duration-450": "450ms",
          "motion-duration-500": "500ms",
          "motion-duration-5000": "5000ms",
          "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
          "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
          "motion-ease-out": "cubic-bezier(0.19, 0.91, 0.38, 1)",
          "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
          "motion-linear": "cubic-bezier(0, 0, 1, 1)",
          "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
          "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
          "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
          "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
          "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
          "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
        },
        "shadow": {
          "shadow-0": "none",
          "shadow-100": "0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07)",
          "shadow-200": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)",
          "shadow-300": "0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)",
          "shadow-400": "0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)",
          "shadow-500": "0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)",
          "shadow-600": "0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)",
          "shadow-bevel-100": "0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, -0.0625rem 0rem 0rem 0rem rgba(0, 0, 0, 0.13) inset, 0rem -0.0625rem 0rem 0rem rgba(0, 0, 0, 0.17) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.5) inset",
          "shadow-inset-100": "0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset",
          "shadow-inset-200": "0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset",
          "shadow-button": "0rem -0.0625rem 0rem 0rem #b5b5b5 inset, 0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.1) inset, 0rem 0.03125rem 0rem 0.09375rem #FFF inset",
          "shadow-button-hover": "0rem 0.0625rem 0rem 0rem #EBEBEB inset, -0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0rem -0.0625rem 0rem 0rem #CCC inset",
          "shadow-button-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.2) inset",
          "shadow-button-primary": "0rem -0.0625rem 0rem 0.0625rem rgba(0, 0, 0, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(48, 48, 48, 1) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.25) inset;",
          "shadow-button-primary-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.0625rem 0rem 0rem #000 inset, 0rem -0.0625rem 0rem 0.0625rem #1A1A1A",
          "shadow-button-primary-inset": "0rem 0.1875rem 0rem 0rem rgb(0, 0, 0) inset",
          "shadow-button-primary-critical": "0rem -0.0625rem 0rem 0.0625rem rgba(142, 31, 11, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(181, 38, 11, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.349) inset",
          "shadow-button-primary-critical-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
          "shadow-button-primary-critical-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset",
          "shadow-button-primary-success": "0rem -0.0625rem 0rem 0.0625rem rgba(12, 81, 50, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(19, 111, 69, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.251) inset",
          "shadow-button-primary-success-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
          "shadow-button-primary-success-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset",
          "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
        },
        "space": {
          "space-0": "0rem",
          "space-025": "0.0625rem",
          "space-050": "0.125rem",
          "space-100": "0.25rem",
          "space-150": "0.375rem",
          "space-200": "0.5rem",
          "space-300": "0.75rem",
          "space-400": "1rem",
          "space-500": "1.25rem",
          "space-600": "1.5rem",
          "space-800": "2rem",
          "space-1000": "2.5rem",
          "space-1200": "3rem",
          "space-1600": "4rem",
          "space-2000": "5rem",
          "space-2400": "6rem",
          "space-2800": "7rem",
          "space-3200": "8rem",
          "space-button-group-gap": "0.5rem",
          "space-card-gap": "1rem",
          "space-card-padding": "1rem",
          "space-table-cell-padding": "0.375rem"
        },
        "text": {
          "text-heading-3xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-3xl-font-size": "2.25rem",
          "text-heading-3xl-font-weight": "700",
          "text-heading-3xl-font-letter-spacing": "-0.03375rem",
          "text-heading-3xl-font-line-height": "3rem",
          "text-heading-2xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-2xl-font-size": "1.875rem",
          "text-heading-2xl-font-weight": "700",
          "text-heading-2xl-font-letter-spacing": "-0.01875rem",
          "text-heading-2xl-font-line-height": "2.5rem",
          "text-heading-xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xl-font-size": "1.5rem",
          "text-heading-xl-font-weight": "700",
          "text-heading-xl-font-letter-spacing": "-0.0125rem",
          "text-heading-xl-font-line-height": "2rem",
          "text-heading-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-lg-font-size": "1.25rem",
          "text-heading-lg-font-weight": "650",
          "text-heading-lg-font-letter-spacing": "-0.0125rem",
          "text-heading-lg-font-line-height": "1.5rem",
          "text-heading-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-md-font-size": "0.875rem",
          "text-heading-md-font-weight": "650",
          "text-heading-md-font-letter-spacing": "0rem",
          "text-heading-md-font-line-height": "1.25rem",
          "text-heading-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-sm-font-size": "0.8125rem",
          "text-heading-sm-font-weight": "650",
          "text-heading-sm-font-letter-spacing": "0rem",
          "text-heading-sm-font-line-height": "1.25rem",
          "text-heading-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xs-font-size": "0.75rem",
          "text-heading-xs-font-weight": "650",
          "text-heading-xs-font-letter-spacing": "0rem",
          "text-heading-xs-font-line-height": "1rem",
          "text-body-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-lg-font-size": "0.875rem",
          "text-body-lg-font-weight": "450",
          "text-body-lg-font-letter-spacing": "0rem",
          "text-body-lg-font-line-height": "1.25rem",
          "text-body-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-md-font-size": "0.8125rem",
          "text-body-md-font-weight": "450",
          "text-body-md-font-letter-spacing": "0rem",
          "text-body-md-font-line-height": "1.25rem",
          "text-body-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-sm-font-size": "0.75rem",
          "text-body-sm-font-weight": "450",
          "text-body-sm-font-letter-spacing": "0rem",
          "text-body-sm-font-line-height": "1rem",
          "text-body-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-xs-font-size": "0.6875rem",
          "text-body-xs-font-weight": "450",
          "text-body-xs-font-letter-spacing": "0rem",
          "text-body-xs-font-line-height": "0.75rem"
        },
        "width": {
          "width-0": "0rem",
          "width-025": "0.0625rem",
          "width-050": "0.125rem",
          "width-100": "0.25rem",
          "width-150": "0.375rem",
          "width-200": "0.5rem",
          "width-300": "0.75rem",
          "width-400": "1rem",
          "width-500": "1.25rem",
          "width-600": "1.5rem",
          "width-700": "1.75rem",
          "width-800": "2rem",
          "width-900": "2.25rem",
          "width-1000": "2.5rem",
          "width-1200": "3rem",
          "width-1600": "4rem",
          "width-2000": "5rem",
          "width-2400": "6rem",
          "width-2800": "7rem",
          "width-3200": "8rem"
        },
        "zIndex": {
          "z-index-0": "auto",
          "z-index-1": "100",
          "z-index-2": "400",
          "z-index-3": "510",
          "z-index-4": "512",
          "z-index-5": "513",
          "z-index-6": "514",
          "z-index-7": "515",
          "z-index-8": "516",
          "z-index-9": "517",
          "z-index-10": "518",
          "z-index-11": "519",
          "z-index-12": "520"
        }
      },
      "light-mobile": {
        "border": {
          "border-radius-0": "0rem",
          "border-radius-050": "0.125rem",
          "border-radius-100": "0.25rem",
          "border-radius-150": "0.375rem",
          "border-radius-200": "0.5rem",
          "border-radius-300": "0.75rem",
          "border-radius-400": "1rem",
          "border-radius-500": "1.25rem",
          "border-radius-750": "1.875rem",
          "border-radius-full": "624.9375rem",
          "border-width-0": "0rem",
          "border-width-0165": "0.04125rem",
          "border-width-025": "0.0625rem",
          "border-width-050": "0.125rem",
          "border-width-100": "0.25rem"
        },
        "breakpoints": {
          "breakpoints-xs": "0rem",
          "breakpoints-sm": "30.625rem",
          "breakpoints-md": "48rem",
          "breakpoints-lg": "65rem",
          "breakpoints-xl": "90rem"
        },
        "color": {
          "color-scheme": "light",
          "color-bg": "rgba(241, 241, 241, 1)",
          "color-bg-inverse": "rgba(26, 26, 26, 1)",
          "color-bg-surface": "rgba(255, 255, 255, 1)",
          "color-bg-surface-hover": "rgba(247, 247, 247, 1)",
          "color-bg-surface-active": "rgba(243, 243, 243, 1)",
          "color-bg-surface-selected": "rgba(241, 241, 241, 1)",
          "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-surface-secondary": "rgba(247, 247, 247, 1)",
          "color-bg-surface-secondary-hover": "rgba(241, 241, 241, 1)",
          "color-bg-surface-secondary-active": "rgba(235, 235, 235, 1)",
          "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
          "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
          "color-bg-surface-brand-selected": "rgba(241, 241, 241, 1)",
          "color-bg-surface-info": "rgba(234, 244, 255, 1)",
          "color-bg-surface-info-hover": "rgba(224, 240, 255, 1)",
          "color-bg-surface-info-active": "rgba(202, 230, 255, 1)",
          "color-bg-surface-success": "rgba(205, 254, 225, 1)",
          "color-bg-surface-success-hover": "rgba(180, 254, 210, 1)",
          "color-bg-surface-success-active": "rgba(146, 254, 194, 1)",
          "color-bg-surface-caution": "rgba(255, 248, 219, 1)",
          "color-bg-surface-caution-hover": "rgba(255, 244, 191, 1)",
          "color-bg-surface-caution-active": "rgba(255, 239, 157, 1)",
          "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
          "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
          "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
          "color-bg-surface-critical": "rgba(254, 233, 232, 1)",
          "color-bg-surface-critical-hover": "rgba(254, 226, 225, 1)",
          "color-bg-surface-critical-active": "rgba(254, 218, 217, 1)",
          "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
          "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
          "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
          "color-bg-surface-magic": "rgba(248, 247, 255, 1)",
          "color-bg-surface-magic-hover": "rgba(243, 241, 255, 1)",
          "color-bg-surface-magic-active": "rgba(233, 229, 255, 1)",
          "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
          "color-bg-fill": "rgba(255, 255, 255, 1)",
          "color-bg-fill-hover": "rgba(250, 250, 250, 1)",
          "color-bg-fill-active": "rgba(247, 247, 247, 1)",
          "color-bg-fill-selected": "rgba(204, 204, 204, 1)",
          "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-secondary": "rgba(241, 241, 241, 1)",
          "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary-hover": "rgba(212, 212, 212, 1)",
          "color-bg-fill-tertiary-active": "rgba(204, 204, 204, 1)",
          "color-bg-fill-brand": "rgba(48, 48, 48, 1)",
          "color-bg-fill-brand-hover": "rgba(26, 26, 26, 1)",
          "color-bg-fill-brand-active": "rgba(26, 26, 26, 1)",
          "color-bg-fill-brand-selected": "rgba(48, 48, 48, 1)",
          "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
          "color-bg-fill-info": "rgba(145, 208, 255, 1)",
          "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
          "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
          "color-bg-fill-info-secondary": "rgba(213, 235, 255, 1)",
          "color-bg-fill-success": "rgba(41, 132, 90, 1)",
          "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
          "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
          "color-bg-fill-success-secondary": "rgba(180, 254, 210, 1)",
          "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
          "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
          "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
          "color-bg-fill-warning-secondary": "rgba(255, 214, 164, 1)",
          "color-bg-fill-caution": "rgba(255, 230, 0, 1)",
          "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
          "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
          "color-bg-fill-caution-secondary": "rgba(255, 235, 120, 1)",
          "color-bg-fill-critical": "rgba(229, 28, 0, 1)",
          "color-bg-fill-critical-hover": "rgba(181, 38, 11, 1)",
          "color-bg-fill-critical-active": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-secondary": "rgba(254, 211, 209, 1)",
          "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
          "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-bg-fill-magic": "rgba(128, 81, 255, 1)",
          "color-bg-fill-magic-secondary": "rgba(233, 229, 255, 1)",
          "color-bg-fill-magic-secondary-hover": "rgba(228, 222, 255, 1)",
          "color-bg-fill-magic-secondary-active": "rgba(223, 217, 255, 1)",
          "color-bg-fill-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-fill-inverse-hover": "rgba(74, 74, 74, 1)",
          "color-bg-fill-inverse-active": "rgba(97, 97, 97, 1)",
          "color-bg-fill-transparent": "rgba(0, 0, 0, 0.02)",
          "color-bg-fill-transparent-hover": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-transparent-active": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-selected": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
          "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
          "color-text": "rgba(48, 48, 48, 1)",
          "color-text-secondary": "rgba(97, 97, 97, 1)",
          "color-text-disabled": "rgba(181, 181, 181, 1)",
          "color-text-link": "rgba(0, 91, 211, 1)",
          "color-text-link-hover": "rgba(0, 66, 153, 1)",
          "color-text-link-active": "rgba(0, 46, 106, 1)",
          "color-text-brand": "rgba(74, 74, 74, 1)",
          "color-text-brand-hover": "rgba(48, 48, 48, 1)",
          "color-text-brand-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
          "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
          "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
          "color-text-info": "rgba(0, 58, 90, 1)",
          "color-text-info-hover": "rgba(0, 58, 90, 1)",
          "color-text-info-active": "rgba(0, 33, 51, 1)",
          "color-text-info-secondary": "rgba(0, 124, 180, 1)",
          "color-text-info-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-text-success": "rgba(12, 81, 50, 1)",
          "color-text-success-hover": "rgba(8, 61, 37, 1)",
          "color-text-success-active": "rgba(9, 42, 27, 1)",
          "color-text-success-secondary": "rgba(41, 132, 90, 1)",
          "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
          "color-text-caution": "rgba(79, 71, 0, 1)",
          "color-text-caution-hover": "rgba(51, 46, 0, 1)",
          "color-text-caution-active": "rgba(31, 28, 0, 1)",
          "color-text-caution-secondary": "rgba(130, 117, 0, 1)",
          "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
          "color-text-warning": "rgba(94, 66, 0, 1)",
          "color-text-warning-hover": "rgba(65, 45, 0, 1)",
          "color-text-warning-active": "rgba(37, 26, 0, 1)",
          "color-text-warning-secondary": "rgba(149, 111, 0, 1)",
          "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
          "color-text-critical": "rgba(142, 31, 11, 1)",
          "color-text-critical-hover": "rgba(95, 21, 7, 1)",
          "color-text-critical-active": "rgba(47, 10, 4, 1)",
          "color-text-critical-secondary": "rgba(229, 28, 0, 1)",
          "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
          "color-text-emphasis": "rgba(0, 91, 211, 1)",
          "color-text-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-text-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
          "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
          "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
          "color-text-magic": "rgba(87, 0, 209, 1)",
          "color-text-magic-secondary": "rgba(113, 38, 255, 1)",
          "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
          "color-text-inverse": "rgba(227, 227, 227, 1)",
          "color-text-inverse-secondary": "rgba(181, 181, 181, 1)",
          "color-text-link-inverse": "rgba(197, 208, 255, 1)",
          "color-border": "rgba(227, 227, 227, 1)",
          "color-border-hover": "rgba(204, 204, 204, 1)",
          "color-border-disabled": "rgba(235, 235, 235, 1)",
          "color-border-secondary": "rgba(235, 235, 235, 1)",
          "color-border-tertiary": "rgba(204, 204, 204, 1)",
          "color-border-focus": "rgba(0, 91, 211, 1)",
          "color-border-brand": "rgba(227, 227, 227, 1)",
          "color-border-info": "rgba(168, 216, 255, 1)",
          "color-border-success": "rgba(146, 254, 194, 1)",
          "color-border-caution": "rgba(255, 235, 120, 1)",
          "color-border-warning": "rgba(255, 200, 121, 1)",
          "color-border-critical": "rgba(254, 195, 193, 1)",
          "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
          "color-border-emphasis": "rgba(0, 91, 211, 1)",
          "color-border-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-border-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-border-magic": "rgba(228, 222, 255, 1)",
          "color-border-magic-secondary": "rgba(148, 116, 255, 1)",
          "color-border-magic-secondary-hover": "rgba(128, 81, 255, 1)",
          "color-border-inverse": "rgba(97, 97, 97, 1)",
          "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
          "color-border-inverse-active": "rgba(227, 227, 227, 1)",
          "color-tooltip-tail-down-border-experimental": "rgba(212, 212, 212, 1)",
          "color-tooltip-tail-up-border-experimental": "rgba(227, 227, 227, 1)",
          "color-border-gradient-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-hover-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-selected-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-active-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-icon": "rgba(74, 74, 74, 1)",
          "color-icon-hover": "rgba(48, 48, 48, 1)",
          "color-icon-active": "rgba(26, 26, 26, 1)",
          "color-icon-disabled": "rgba(204, 204, 204, 1)",
          "color-icon-secondary": "rgba(138, 138, 138, 1)",
          "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
          "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
          "color-icon-brand": "rgba(26, 26, 26, 1)",
          "color-icon-info": "rgba(0, 148, 213, 1)",
          "color-icon-success": "rgba(41, 132, 90, 1)",
          "color-icon-caution": "rgba(153, 138, 0, 1)",
          "color-icon-warning": "rgba(178, 132, 0, 1)",
          "color-icon-critical": "rgba(239, 77, 47, 1)",
          "color-icon-emphasis": "rgba(0, 91, 211, 1)",
          "color-icon-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-icon-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-icon-magic": "rgba(128, 81, 255, 1)",
          "color-icon-inverse": "rgba(227, 227, 227, 1)",
          "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
          "color-avatar-five-bg-fill": "rgba(253, 75, 146, 1)",
          "color-avatar-five-text-on-bg-fill": "rgba(255, 246, 248, 1)",
          "color-avatar-four-bg-fill": "rgba(81, 192, 255, 1)",
          "color-avatar-four-text-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-avatar-one-bg-fill": "rgba(197, 48, 197, 1)",
          "color-avatar-one-text-on-bg-fill": "rgba(253, 239, 253, 1)",
          "color-avatar-seven-bg-fill": "rgba(148, 116, 255, 1)",
          "color-avatar-seven-text-on-bg-fill": "rgba(248, 247, 255, 1)",
          "color-avatar-six-bg-fill": "rgba(37, 232, 43, 1)",
          "color-avatar-six-text-on-bg-fill": "rgba(3, 61, 5, 1)",
          "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-avatar-three-bg-fill": "rgba(44, 224, 212, 1)",
          "color-avatar-three-text-on-bg-fill": "rgba(3, 60, 57, 1)",
          "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
          "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
          "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
          "color-button-gradient-bg-fill": "none",
          "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-input-bg-surface": "rgba(253, 253, 253, 1)",
          "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
          "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
          "color-input-border": "rgba(138, 138, 138, 1)",
          "color-input-border-hover": "rgba(97, 97, 97, 1)",
          "color-input-border-active": "rgba(26, 26, 26, 1)",
          "color-nav-bg": "rgba(235, 235, 235, 1)",
          "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
          "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
          "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
          "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
          "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
          "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
          "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-scrollbar-thumb-bg-hover": "rgba(138, 138, 138, 1)"
        },
        "font": {
          "font-family-sans": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
          "font-size-275": "0.6875rem",
          "font-size-300": "0.75rem",
          "font-size-325": "0.8125rem",
          "font-size-350": "0.875rem",
          "font-size-400": "1rem",
          "font-size-450": "1.125rem",
          "font-size-500": "1.25rem",
          "font-size-550": "1.375rem",
          "font-size-600": "1.5rem",
          "font-size-750": "1.875rem",
          "font-size-800": "2rem",
          "font-size-900": "2.25rem",
          "font-size-1000": "2.5rem",
          "font-weight-regular": "450",
          "font-weight-medium": "550",
          "font-weight-semibold": "650",
          "font-weight-bold": "700",
          "font-letter-spacing-densest": "-0.03375rem",
          "font-letter-spacing-denser": "-0.01875rem",
          "font-letter-spacing-dense": "-0.0125rem",
          "font-letter-spacing-normal": "0rem",
          "font-line-height-300": "0.75rem",
          "font-line-height-400": "1rem",
          "font-line-height-500": "1.25rem",
          "font-line-height-600": "1.5rem",
          "font-line-height-700": "1.75rem",
          "font-line-height-800": "2rem",
          "font-line-height-1000": "2.5rem",
          "font-line-height-1200": "3rem"
        },
        "height": {
          "height-0": "0rem",
          "height-025": "0.0625rem",
          "height-050": "0.125rem",
          "height-100": "0.25rem",
          "height-150": "0.375rem",
          "height-200": "0.5rem",
          "height-300": "0.75rem",
          "height-400": "1rem",
          "height-500": "1.25rem",
          "height-600": "1.5rem",
          "height-700": "1.75rem",
          "height-800": "2rem",
          "height-900": "2.25rem",
          "height-1000": "2.5rem",
          "height-1200": "3rem",
          "height-1600": "4rem",
          "height-2000": "5rem",
          "height-2400": "6rem",
          "height-2800": "7rem",
          "height-3200": "8rem"
        },
        "motion": {
          "motion-duration-0": "0ms",
          "motion-duration-50": "50ms",
          "motion-duration-100": "100ms",
          "motion-duration-150": "150ms",
          "motion-duration-200": "200ms",
          "motion-duration-250": "250ms",
          "motion-duration-300": "300ms",
          "motion-duration-350": "350ms",
          "motion-duration-400": "400ms",
          "motion-duration-450": "450ms",
          "motion-duration-500": "500ms",
          "motion-duration-5000": "5000ms",
          "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
          "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
          "motion-ease-out": "cubic-bezier(0.19, 0.91, 0.38, 1)",
          "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
          "motion-linear": "cubic-bezier(0, 0, 1, 1)",
          "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
          "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
          "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
          "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
          "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
          "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
        },
        "shadow": {
          "shadow-0": "none",
          "shadow-100": "none",
          "shadow-200": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)",
          "shadow-300": "0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)",
          "shadow-400": "0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)",
          "shadow-500": "0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)",
          "shadow-600": "0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)",
          "shadow-bevel-100": "none",
          "shadow-inset-100": "0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset",
          "shadow-inset-200": "0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset",
          "shadow-button": "0 0 0 var(--p-border-width-025) var(--p-color-border) inset",
          "shadow-button-hover": "0 0 0 var(--p-border-width-025) var(--p-color-border) inset",
          "shadow-button-inset": "0 0 0 var(--p-border-width-025) var(--p-color-border) inset",
          "shadow-button-primary": "none",
          "shadow-button-primary-hover": "none",
          "shadow-button-primary-inset": "none",
          "shadow-button-primary-critical": "none",
          "shadow-button-primary-critical-hover": "none",
          "shadow-button-primary-critical-inset": "none",
          "shadow-button-primary-success": "none",
          "shadow-button-primary-success-hover": "none",
          "shadow-button-primary-success-inset": "none",
          "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
        },
        "space": {
          "space-0": "0rem",
          "space-025": "0.0625rem",
          "space-050": "0.125rem",
          "space-100": "0.25rem",
          "space-150": "0.375rem",
          "space-200": "0.5rem",
          "space-300": "0.75rem",
          "space-400": "1rem",
          "space-500": "1.25rem",
          "space-600": "1.5rem",
          "space-800": "2rem",
          "space-1000": "2.5rem",
          "space-1200": "3rem",
          "space-1600": "4rem",
          "space-2000": "5rem",
          "space-2400": "6rem",
          "space-2800": "7rem",
          "space-3200": "8rem",
          "space-button-group-gap": "0.5rem",
          "space-card-gap": "0.5rem",
          "space-card-padding": "1rem",
          "space-table-cell-padding": "0.375rem"
        },
        "text": {
          "text-heading-3xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-3xl-font-size": "2.25rem",
          "text-heading-3xl-font-weight": "700",
          "text-heading-3xl-font-letter-spacing": "-0.03375rem",
          "text-heading-3xl-font-line-height": "3rem",
          "text-heading-2xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-2xl-font-size": "2rem",
          "text-heading-2xl-font-weight": "700",
          "text-heading-2xl-font-letter-spacing": "-0.01875rem",
          "text-heading-2xl-font-line-height": "2.5rem",
          "text-heading-xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xl-font-size": "1.375rem",
          "text-heading-xl-font-weight": "700",
          "text-heading-xl-font-letter-spacing": "-0.0125rem",
          "text-heading-xl-font-line-height": "1.75rem",
          "text-heading-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-lg-font-size": "1.125rem",
          "text-heading-lg-font-weight": "650",
          "text-heading-lg-font-letter-spacing": "-0.0125rem",
          "text-heading-lg-font-line-height": "1.5rem",
          "text-heading-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-md-font-size": "1rem",
          "text-heading-md-font-weight": "650",
          "text-heading-md-font-letter-spacing": "0rem",
          "text-heading-md-font-line-height": "1.25rem",
          "text-heading-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-sm-font-size": "0.875rem",
          "text-heading-sm-font-weight": "650",
          "text-heading-sm-font-letter-spacing": "0rem",
          "text-heading-sm-font-line-height": "1.25rem",
          "text-heading-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xs-font-size": "0.75rem",
          "text-heading-xs-font-weight": "650",
          "text-heading-xs-font-letter-spacing": "0rem",
          "text-heading-xs-font-line-height": "1rem",
          "text-body-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-lg-font-size": "1.125rem",
          "text-body-lg-font-weight": "450",
          "text-body-lg-font-letter-spacing": "0rem",
          "text-body-lg-font-line-height": "1.75rem",
          "text-body-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-md-font-size": "1rem",
          "text-body-md-font-weight": "450",
          "text-body-md-font-letter-spacing": "0rem",
          "text-body-md-font-line-height": "1.5rem",
          "text-body-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-sm-font-size": "0.875rem",
          "text-body-sm-font-weight": "450",
          "text-body-sm-font-letter-spacing": "0rem",
          "text-body-sm-font-line-height": "1.25rem",
          "text-body-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-xs-font-size": "0.75rem",
          "text-body-xs-font-weight": "450",
          "text-body-xs-font-letter-spacing": "0rem",
          "text-body-xs-font-line-height": "1rem"
        },
        "width": {
          "width-0": "0rem",
          "width-025": "0.0625rem",
          "width-050": "0.125rem",
          "width-100": "0.25rem",
          "width-150": "0.375rem",
          "width-200": "0.5rem",
          "width-300": "0.75rem",
          "width-400": "1rem",
          "width-500": "1.25rem",
          "width-600": "1.5rem",
          "width-700": "1.75rem",
          "width-800": "2rem",
          "width-900": "2.25rem",
          "width-1000": "2.5rem",
          "width-1200": "3rem",
          "width-1600": "4rem",
          "width-2000": "5rem",
          "width-2400": "6rem",
          "width-2800": "7rem",
          "width-3200": "8rem"
        },
        "zIndex": {
          "z-index-0": "auto",
          "z-index-1": "100",
          "z-index-2": "400",
          "z-index-3": "510",
          "z-index-4": "512",
          "z-index-5": "513",
          "z-index-6": "514",
          "z-index-7": "515",
          "z-index-8": "516",
          "z-index-9": "517",
          "z-index-10": "518",
          "z-index-11": "519",
          "z-index-12": "520"
        }
      },
      "light-high-contrast-experimental": {
        "border": {
          "border-radius-0": "0rem",
          "border-radius-050": "0.125rem",
          "border-radius-100": "0.25rem",
          "border-radius-150": "0.375rem",
          "border-radius-200": "0.5rem",
          "border-radius-300": "0.75rem",
          "border-radius-400": "1rem",
          "border-radius-500": "1.25rem",
          "border-radius-750": "1.875rem",
          "border-radius-full": "624.9375rem",
          "border-width-0": "0rem",
          "border-width-0165": "0.04125rem",
          "border-width-025": "0.0625rem",
          "border-width-050": "0.125rem",
          "border-width-100": "0.25rem"
        },
        "breakpoints": {
          "breakpoints-xs": "0rem",
          "breakpoints-sm": "30.625rem",
          "breakpoints-md": "48rem",
          "breakpoints-lg": "65rem",
          "breakpoints-xl": "90rem"
        },
        "color": {
          "color-scheme": "light",
          "color-bg": "rgba(241, 241, 241, 1)",
          "color-bg-inverse": "rgba(26, 26, 26, 1)",
          "color-bg-surface": "rgba(255, 255, 255, 1)",
          "color-bg-surface-hover": "rgba(247, 247, 247, 1)",
          "color-bg-surface-active": "rgba(243, 243, 243, 1)",
          "color-bg-surface-selected": "rgba(241, 241, 241, 1)",
          "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-surface-secondary": "rgba(241, 241, 241, 1)",
          "color-bg-surface-secondary-hover": "rgba(241, 241, 241, 1)",
          "color-bg-surface-secondary-active": "rgba(235, 235, 235, 1)",
          "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
          "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
          "color-bg-surface-brand-selected": "rgba(241, 241, 241, 1)",
          "color-bg-surface-info": "rgba(234, 244, 255, 1)",
          "color-bg-surface-info-hover": "rgba(224, 240, 255, 1)",
          "color-bg-surface-info-active": "rgba(202, 230, 255, 1)",
          "color-bg-surface-success": "rgba(205, 254, 225, 1)",
          "color-bg-surface-success-hover": "rgba(180, 254, 210, 1)",
          "color-bg-surface-success-active": "rgba(146, 254, 194, 1)",
          "color-bg-surface-caution": "rgba(255, 248, 219, 1)",
          "color-bg-surface-caution-hover": "rgba(255, 244, 191, 1)",
          "color-bg-surface-caution-active": "rgba(255, 239, 157, 1)",
          "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
          "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
          "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
          "color-bg-surface-critical": "rgba(254, 233, 232, 1)",
          "color-bg-surface-critical-hover": "rgba(254, 226, 225, 1)",
          "color-bg-surface-critical-active": "rgba(254, 218, 217, 1)",
          "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
          "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
          "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
          "color-bg-surface-magic": "rgba(248, 247, 255, 1)",
          "color-bg-surface-magic-hover": "rgba(243, 241, 255, 1)",
          "color-bg-surface-magic-active": "rgba(233, 229, 255, 1)",
          "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
          "color-bg-fill": "rgba(255, 255, 255, 1)",
          "color-bg-fill-hover": "rgba(250, 250, 250, 1)",
          "color-bg-fill-active": "rgba(247, 247, 247, 1)",
          "color-bg-fill-selected": "rgba(204, 204, 204, 1)",
          "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-secondary": "rgba(241, 241, 241, 1)",
          "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary-hover": "rgba(212, 212, 212, 1)",
          "color-bg-fill-tertiary-active": "rgba(204, 204, 204, 1)",
          "color-bg-fill-brand": "rgba(48, 48, 48, 1)",
          "color-bg-fill-brand-hover": "rgba(26, 26, 26, 1)",
          "color-bg-fill-brand-active": "rgba(26, 26, 26, 1)",
          "color-bg-fill-brand-selected": "rgba(48, 48, 48, 1)",
          "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
          "color-bg-fill-info": "rgba(145, 208, 255, 1)",
          "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
          "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
          "color-bg-fill-info-secondary": "rgba(213, 235, 255, 1)",
          "color-bg-fill-success": "rgba(41, 132, 90, 1)",
          "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
          "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
          "color-bg-fill-success-secondary": "rgba(180, 254, 210, 1)",
          "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
          "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
          "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
          "color-bg-fill-warning-secondary": "rgba(255, 214, 164, 1)",
          "color-bg-fill-caution": "rgba(255, 230, 0, 1)",
          "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
          "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
          "color-bg-fill-caution-secondary": "rgba(255, 235, 120, 1)",
          "color-bg-fill-critical": "rgba(229, 28, 0, 1)",
          "color-bg-fill-critical-hover": "rgba(181, 38, 11, 1)",
          "color-bg-fill-critical-active": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-secondary": "rgba(254, 211, 209, 1)",
          "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
          "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-bg-fill-magic": "rgba(128, 81, 255, 1)",
          "color-bg-fill-magic-secondary": "rgba(233, 229, 255, 1)",
          "color-bg-fill-magic-secondary-hover": "rgba(228, 222, 255, 1)",
          "color-bg-fill-magic-secondary-active": "rgba(223, 217, 255, 1)",
          "color-bg-fill-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-fill-inverse-hover": "rgba(74, 74, 74, 1)",
          "color-bg-fill-inverse-active": "rgba(97, 97, 97, 1)",
          "color-bg-fill-transparent": "rgba(0, 0, 0, 0.02)",
          "color-bg-fill-transparent-hover": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-transparent-active": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-selected": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
          "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
          "color-text": "rgba(26, 26, 26, 1)",
          "color-text-secondary": "rgba(26, 26, 26, 1)",
          "color-text-disabled": "rgba(181, 181, 181, 1)",
          "color-text-link": "rgba(0, 91, 211, 1)",
          "color-text-link-hover": "rgba(0, 66, 153, 1)",
          "color-text-link-active": "rgba(0, 46, 106, 1)",
          "color-text-brand": "rgba(26, 26, 26, 1)",
          "color-text-brand-hover": "rgba(48, 48, 48, 1)",
          "color-text-brand-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
          "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
          "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
          "color-text-info": "rgba(0, 58, 90, 1)",
          "color-text-info-hover": "rgba(0, 58, 90, 1)",
          "color-text-info-active": "rgba(0, 33, 51, 1)",
          "color-text-info-secondary": "rgba(0, 124, 180, 1)",
          "color-text-info-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-text-success": "rgba(12, 81, 50, 1)",
          "color-text-success-hover": "rgba(8, 61, 37, 1)",
          "color-text-success-active": "rgba(9, 42, 27, 1)",
          "color-text-success-secondary": "rgba(41, 132, 90, 1)",
          "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
          "color-text-caution": "rgba(79, 71, 0, 1)",
          "color-text-caution-hover": "rgba(51, 46, 0, 1)",
          "color-text-caution-active": "rgba(31, 28, 0, 1)",
          "color-text-caution-secondary": "rgba(130, 117, 0, 1)",
          "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
          "color-text-warning": "rgba(94, 66, 0, 1)",
          "color-text-warning-hover": "rgba(65, 45, 0, 1)",
          "color-text-warning-active": "rgba(37, 26, 0, 1)",
          "color-text-warning-secondary": "rgba(149, 111, 0, 1)",
          "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
          "color-text-critical": "rgba(142, 31, 11, 1)",
          "color-text-critical-hover": "rgba(95, 21, 7, 1)",
          "color-text-critical-active": "rgba(47, 10, 4, 1)",
          "color-text-critical-secondary": "rgba(229, 28, 0, 1)",
          "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
          "color-text-emphasis": "rgba(0, 91, 211, 1)",
          "color-text-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-text-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
          "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
          "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
          "color-text-magic": "rgba(87, 0, 209, 1)",
          "color-text-magic-secondary": "rgba(113, 38, 255, 1)",
          "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
          "color-text-inverse": "rgba(227, 227, 227, 1)",
          "color-text-inverse-secondary": "rgba(181, 181, 181, 1)",
          "color-text-link-inverse": "rgba(197, 208, 255, 1)",
          "color-border": "rgba(138, 138, 138, 1)",
          "color-border-hover": "rgba(204, 204, 204, 1)",
          "color-border-disabled": "rgba(235, 235, 235, 1)",
          "color-border-secondary": "rgba(138, 138, 138, 1)",
          "color-border-tertiary": "rgba(204, 204, 204, 1)",
          "color-border-focus": "rgba(0, 91, 211, 1)",
          "color-border-brand": "rgba(227, 227, 227, 1)",
          "color-border-info": "rgba(168, 216, 255, 1)",
          "color-border-success": "rgba(146, 254, 194, 1)",
          "color-border-caution": "rgba(255, 235, 120, 1)",
          "color-border-warning": "rgba(255, 200, 121, 1)",
          "color-border-critical": "rgba(254, 195, 193, 1)",
          "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
          "color-border-emphasis": "rgba(0, 91, 211, 1)",
          "color-border-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-border-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-border-magic": "rgba(228, 222, 255, 1)",
          "color-border-magic-secondary": "rgba(148, 116, 255, 1)",
          "color-border-magic-secondary-hover": "rgba(128, 81, 255, 1)",
          "color-border-inverse": "rgba(97, 97, 97, 1)",
          "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
          "color-border-inverse-active": "rgba(227, 227, 227, 1)",
          "color-tooltip-tail-down-border-experimental": "rgba(212, 212, 212, 1)",
          "color-tooltip-tail-up-border-experimental": "rgba(227, 227, 227, 1)",
          "color-border-gradient-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-hover-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-selected-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-border-gradient-active-experimental": "linear-gradient(to bottom, rgba(235, 235, 235, 1), rgba(204, 204, 204, 1) 78%, rgba(181, 181, 181, 1))",
          "color-icon": "rgba(74, 74, 74, 1)",
          "color-icon-hover": "rgba(48, 48, 48, 1)",
          "color-icon-active": "rgba(26, 26, 26, 1)",
          "color-icon-disabled": "rgba(204, 204, 204, 1)",
          "color-icon-secondary": "rgba(74, 74, 74, 1)",
          "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
          "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
          "color-icon-brand": "rgba(26, 26, 26, 1)",
          "color-icon-info": "rgba(0, 148, 213, 1)",
          "color-icon-success": "rgba(41, 132, 90, 1)",
          "color-icon-caution": "rgba(153, 138, 0, 1)",
          "color-icon-warning": "rgba(178, 132, 0, 1)",
          "color-icon-critical": "rgba(239, 77, 47, 1)",
          "color-icon-emphasis": "rgba(0, 91, 211, 1)",
          "color-icon-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-icon-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-icon-magic": "rgba(128, 81, 255, 1)",
          "color-icon-inverse": "rgba(227, 227, 227, 1)",
          "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
          "color-avatar-five-bg-fill": "rgba(253, 75, 146, 1)",
          "color-avatar-five-text-on-bg-fill": "rgba(255, 246, 248, 1)",
          "color-avatar-four-bg-fill": "rgba(81, 192, 255, 1)",
          "color-avatar-four-text-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-avatar-one-bg-fill": "rgba(197, 48, 197, 1)",
          "color-avatar-one-text-on-bg-fill": "rgba(253, 239, 253, 1)",
          "color-avatar-seven-bg-fill": "rgba(148, 116, 255, 1)",
          "color-avatar-seven-text-on-bg-fill": "rgba(248, 247, 255, 1)",
          "color-avatar-six-bg-fill": "rgba(37, 232, 43, 1)",
          "color-avatar-six-text-on-bg-fill": "rgba(3, 61, 5, 1)",
          "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-avatar-three-bg-fill": "rgba(44, 224, 212, 1)",
          "color-avatar-three-text-on-bg-fill": "rgba(3, 60, 57, 1)",
          "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
          "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
          "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
          "color-button-gradient-bg-fill": "linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)",
          "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-input-bg-surface": "rgba(253, 253, 253, 1)",
          "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
          "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
          "color-input-border": "rgba(74, 74, 74, 1)",
          "color-input-border-hover": "rgba(97, 97, 97, 1)",
          "color-input-border-active": "rgba(26, 26, 26, 1)",
          "color-nav-bg": "rgba(235, 235, 235, 1)",
          "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
          "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
          "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
          "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
          "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
          "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
          "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-scrollbar-thumb-bg-hover": "rgba(138, 138, 138, 1)"
        },
        "font": {
          "font-family-sans": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
          "font-size-275": "0.6875rem",
          "font-size-300": "0.75rem",
          "font-size-325": "0.8125rem",
          "font-size-350": "0.875rem",
          "font-size-400": "1rem",
          "font-size-450": "1.125rem",
          "font-size-500": "1.25rem",
          "font-size-550": "1.375rem",
          "font-size-600": "1.5rem",
          "font-size-750": "1.875rem",
          "font-size-800": "2rem",
          "font-size-900": "2.25rem",
          "font-size-1000": "2.5rem",
          "font-weight-regular": "450",
          "font-weight-medium": "550",
          "font-weight-semibold": "650",
          "font-weight-bold": "700",
          "font-letter-spacing-densest": "-0.03375rem",
          "font-letter-spacing-denser": "-0.01875rem",
          "font-letter-spacing-dense": "-0.0125rem",
          "font-letter-spacing-normal": "0rem",
          "font-line-height-300": "0.75rem",
          "font-line-height-400": "1rem",
          "font-line-height-500": "1.25rem",
          "font-line-height-600": "1.5rem",
          "font-line-height-700": "1.75rem",
          "font-line-height-800": "2rem",
          "font-line-height-1000": "2.5rem",
          "font-line-height-1200": "3rem"
        },
        "height": {
          "height-0": "0rem",
          "height-025": "0.0625rem",
          "height-050": "0.125rem",
          "height-100": "0.25rem",
          "height-150": "0.375rem",
          "height-200": "0.5rem",
          "height-300": "0.75rem",
          "height-400": "1rem",
          "height-500": "1.25rem",
          "height-600": "1.5rem",
          "height-700": "1.75rem",
          "height-800": "2rem",
          "height-900": "2.25rem",
          "height-1000": "2.5rem",
          "height-1200": "3rem",
          "height-1600": "4rem",
          "height-2000": "5rem",
          "height-2400": "6rem",
          "height-2800": "7rem",
          "height-3200": "8rem"
        },
        "motion": {
          "motion-duration-0": "0ms",
          "motion-duration-50": "50ms",
          "motion-duration-100": "100ms",
          "motion-duration-150": "150ms",
          "motion-duration-200": "200ms",
          "motion-duration-250": "250ms",
          "motion-duration-300": "300ms",
          "motion-duration-350": "350ms",
          "motion-duration-400": "400ms",
          "motion-duration-450": "450ms",
          "motion-duration-500": "500ms",
          "motion-duration-5000": "5000ms",
          "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
          "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
          "motion-ease-out": "cubic-bezier(0.19, 0.91, 0.38, 1)",
          "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
          "motion-linear": "cubic-bezier(0, 0, 1, 1)",
          "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
          "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
          "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
          "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
          "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
          "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
        },
        "shadow": {
          "shadow-0": "none",
          "shadow-100": "0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07)",
          "shadow-200": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)",
          "shadow-300": "0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)",
          "shadow-400": "0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)",
          "shadow-500": "0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)",
          "shadow-600": "0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)",
          "shadow-bevel-100": "0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07), 0rem 0.0625rem 0rem 0rem rgba(208, 208, 208, 0.40) inset, 0.0625rem 0rem 0rem 0rem #CCC inset, -0.0625rem 0rem 0rem 0rem #CCC inset, 0rem -0.0625rem 0rem 0rem #999 inset",
          "shadow-inset-100": "0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset",
          "shadow-inset-200": "0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset",
          "shadow-button": "0rem -0.0625rem 0rem 0rem #b5b5b5 inset, 0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.1) inset, 0rem 0.03125rem 0rem 0.09375rem #FFF inset",
          "shadow-button-hover": "0rem 0.0625rem 0rem 0rem #EBEBEB inset, -0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0rem -0.0625rem 0rem 0rem #CCC inset",
          "shadow-button-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.2) inset",
          "shadow-button-primary": "0rem -0.0625rem 0rem 0.0625rem rgba(0, 0, 0, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(48, 48, 48, 1) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.25) inset;",
          "shadow-button-primary-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.0625rem 0rem 0rem #000 inset, 0rem -0.0625rem 0rem 0.0625rem #1A1A1A",
          "shadow-button-primary-inset": "0rem 0.1875rem 0rem 0rem rgb(0, 0, 0) inset",
          "shadow-button-primary-critical": "0rem -0.0625rem 0rem 0.0625rem rgba(142, 31, 11, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(181, 38, 11, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.349) inset",
          "shadow-button-primary-critical-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
          "shadow-button-primary-critical-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset",
          "shadow-button-primary-success": "0rem -0.0625rem 0rem 0.0625rem rgba(12, 81, 50, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(19, 111, 69, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.251) inset",
          "shadow-button-primary-success-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
          "shadow-button-primary-success-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset",
          "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
        },
        "space": {
          "space-0": "0rem",
          "space-025": "0.0625rem",
          "space-050": "0.125rem",
          "space-100": "0.25rem",
          "space-150": "0.375rem",
          "space-200": "0.5rem",
          "space-300": "0.75rem",
          "space-400": "1rem",
          "space-500": "1.25rem",
          "space-600": "1.5rem",
          "space-800": "2rem",
          "space-1000": "2.5rem",
          "space-1200": "3rem",
          "space-1600": "4rem",
          "space-2000": "5rem",
          "space-2400": "6rem",
          "space-2800": "7rem",
          "space-3200": "8rem",
          "space-button-group-gap": "0.5rem",
          "space-card-gap": "1rem",
          "space-card-padding": "1rem",
          "space-table-cell-padding": "0.375rem"
        },
        "text": {
          "text-heading-3xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-3xl-font-size": "2.25rem",
          "text-heading-3xl-font-weight": "700",
          "text-heading-3xl-font-letter-spacing": "-0.03375rem",
          "text-heading-3xl-font-line-height": "3rem",
          "text-heading-2xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-2xl-font-size": "1.875rem",
          "text-heading-2xl-font-weight": "700",
          "text-heading-2xl-font-letter-spacing": "-0.01875rem",
          "text-heading-2xl-font-line-height": "2.5rem",
          "text-heading-xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xl-font-size": "1.5rem",
          "text-heading-xl-font-weight": "700",
          "text-heading-xl-font-letter-spacing": "-0.0125rem",
          "text-heading-xl-font-line-height": "2rem",
          "text-heading-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-lg-font-size": "1.25rem",
          "text-heading-lg-font-weight": "650",
          "text-heading-lg-font-letter-spacing": "-0.0125rem",
          "text-heading-lg-font-line-height": "1.5rem",
          "text-heading-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-md-font-size": "0.875rem",
          "text-heading-md-font-weight": "650",
          "text-heading-md-font-letter-spacing": "0rem",
          "text-heading-md-font-line-height": "1.25rem",
          "text-heading-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-sm-font-size": "0.8125rem",
          "text-heading-sm-font-weight": "650",
          "text-heading-sm-font-letter-spacing": "0rem",
          "text-heading-sm-font-line-height": "1.25rem",
          "text-heading-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xs-font-size": "0.75rem",
          "text-heading-xs-font-weight": "650",
          "text-heading-xs-font-letter-spacing": "0rem",
          "text-heading-xs-font-line-height": "1rem",
          "text-body-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-lg-font-size": "0.875rem",
          "text-body-lg-font-weight": "450",
          "text-body-lg-font-letter-spacing": "0rem",
          "text-body-lg-font-line-height": "1.25rem",
          "text-body-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-md-font-size": "0.8125rem",
          "text-body-md-font-weight": "450",
          "text-body-md-font-letter-spacing": "0rem",
          "text-body-md-font-line-height": "1.25rem",
          "text-body-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-sm-font-size": "0.75rem",
          "text-body-sm-font-weight": "450",
          "text-body-sm-font-letter-spacing": "0rem",
          "text-body-sm-font-line-height": "1rem",
          "text-body-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-xs-font-size": "0.6875rem",
          "text-body-xs-font-weight": "450",
          "text-body-xs-font-letter-spacing": "0rem",
          "text-body-xs-font-line-height": "0.75rem"
        },
        "width": {
          "width-0": "0rem",
          "width-025": "0.0625rem",
          "width-050": "0.125rem",
          "width-100": "0.25rem",
          "width-150": "0.375rem",
          "width-200": "0.5rem",
          "width-300": "0.75rem",
          "width-400": "1rem",
          "width-500": "1.25rem",
          "width-600": "1.5rem",
          "width-700": "1.75rem",
          "width-800": "2rem",
          "width-900": "2.25rem",
          "width-1000": "2.5rem",
          "width-1200": "3rem",
          "width-1600": "4rem",
          "width-2000": "5rem",
          "width-2400": "6rem",
          "width-2800": "7rem",
          "width-3200": "8rem"
        },
        "zIndex": {
          "z-index-0": "auto",
          "z-index-1": "100",
          "z-index-2": "400",
          "z-index-3": "510",
          "z-index-4": "512",
          "z-index-5": "513",
          "z-index-6": "514",
          "z-index-7": "515",
          "z-index-8": "516",
          "z-index-9": "517",
          "z-index-10": "518",
          "z-index-11": "519",
          "z-index-12": "520"
        }
      },
      "dark-experimental": {
        "border": {
          "border-radius-0": "0rem",
          "border-radius-050": "0.125rem",
          "border-radius-100": "0.25rem",
          "border-radius-150": "0.375rem",
          "border-radius-200": "0.5rem",
          "border-radius-300": "0.75rem",
          "border-radius-400": "1rem",
          "border-radius-500": "1.25rem",
          "border-radius-750": "1.875rem",
          "border-radius-full": "624.9375rem",
          "border-width-0": "0rem",
          "border-width-0165": "0.04125rem",
          "border-width-025": "0.0625rem",
          "border-width-050": "0.125rem",
          "border-width-100": "0.25rem"
        },
        "breakpoints": {
          "breakpoints-xs": "0rem",
          "breakpoints-sm": "30.625rem",
          "breakpoints-md": "48rem",
          "breakpoints-lg": "65rem",
          "breakpoints-xl": "90rem"
        },
        "color": {
          "color-scheme": "dark",
          "color-bg": "rgba(26, 26, 26, 1)",
          "color-bg-inverse": "rgba(26, 26, 26, 1)",
          "color-bg-surface": "rgba(48, 48, 48, 1)",
          "color-bg-surface-hover": "rgba(74, 74, 74, 1)",
          "color-bg-surface-active": "rgba(97, 97, 97, 1)",
          "color-bg-surface-selected": "rgba(97, 97, 97, 1)",
          "color-bg-surface-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-surface-secondary": "rgba(247, 247, 247, 1)",
          "color-bg-surface-secondary-hover": "rgba(74, 74, 74, 1)",
          "color-bg-surface-secondary-active": "rgba(97, 97, 97, 1)",
          "color-bg-surface-secondary-selected": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary": "rgba(243, 243, 243, 1)",
          "color-bg-surface-tertiary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-tertiary-active": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand": "rgba(227, 227, 227, 1)",
          "color-bg-surface-brand-hover": "rgba(235, 235, 235, 1)",
          "color-bg-surface-brand-active": "rgba(241, 241, 241, 1)",
          "color-bg-surface-brand-selected": "rgba(74, 74, 74, 1)",
          "color-bg-surface-info": "rgba(234, 244, 255, 1)",
          "color-bg-surface-info-hover": "rgba(224, 240, 255, 1)",
          "color-bg-surface-info-active": "rgba(202, 230, 255, 1)",
          "color-bg-surface-success": "rgba(205, 254, 225, 1)",
          "color-bg-surface-success-hover": "rgba(180, 254, 210, 1)",
          "color-bg-surface-success-active": "rgba(146, 254, 194, 1)",
          "color-bg-surface-caution": "rgba(255, 248, 219, 1)",
          "color-bg-surface-caution-hover": "rgba(255, 244, 191, 1)",
          "color-bg-surface-caution-active": "rgba(255, 239, 157, 1)",
          "color-bg-surface-warning": "rgba(255, 241, 227, 1)",
          "color-bg-surface-warning-hover": "rgba(255, 235, 213, 1)",
          "color-bg-surface-warning-active": "rgba(255, 228, 198, 1)",
          "color-bg-surface-critical": "rgba(254, 233, 232, 1)",
          "color-bg-surface-critical-hover": "rgba(254, 226, 225, 1)",
          "color-bg-surface-critical-active": "rgba(254, 218, 217, 1)",
          "color-bg-surface-emphasis": "rgba(240, 242, 255, 1)",
          "color-bg-surface-emphasis-hover": "rgba(234, 237, 255, 1)",
          "color-bg-surface-emphasis-active": "rgba(226, 231, 255, 1)",
          "color-bg-surface-magic": "rgba(248, 247, 255, 1)",
          "color-bg-surface-magic-hover": "rgba(243, 241, 255, 1)",
          "color-bg-surface-magic-active": "rgba(233, 229, 255, 1)",
          "color-bg-surface-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-surface-transparent": "rgba(0, 0, 0, 0)",
          "color-bg-fill": "rgba(48, 48, 48, 1)",
          "color-bg-fill-hover": "rgba(74, 74, 74, 1)",
          "color-bg-fill-active": "rgba(97, 97, 97, 1)",
          "color-bg-fill-selected": "rgba(97, 97, 97, 1)",
          "color-bg-fill-disabled": "rgba(0, 0, 0, 0.05)",
          "color-bg-fill-secondary": "rgba(241, 241, 241, 1)",
          "color-bg-fill-secondary-hover": "rgba(235, 235, 235, 1)",
          "color-bg-fill-secondary-active": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary": "rgba(227, 227, 227, 1)",
          "color-bg-fill-tertiary-hover": "rgba(212, 212, 212, 1)",
          "color-bg-fill-tertiary-active": "rgba(204, 204, 204, 1)",
          "color-bg-fill-brand": "rgba(255, 255, 255, 1)",
          "color-bg-fill-brand-hover": "rgba(243, 243, 243, 1)",
          "color-bg-fill-brand-active": "rgba(247, 247, 247, 1)",
          "color-bg-fill-brand-selected": "rgba(212, 212, 212, 1)",
          "color-bg-fill-brand-disabled": "rgba(0, 0, 0, 0.17)",
          "color-bg-fill-info": "rgba(145, 208, 255, 1)",
          "color-bg-fill-info-hover": "rgba(81, 192, 255, 1)",
          "color-bg-fill-info-active": "rgba(0, 148, 213, 1)",
          "color-bg-fill-info-secondary": "rgba(213, 235, 255, 1)",
          "color-bg-fill-success": "rgba(41, 132, 90, 1)",
          "color-bg-fill-success-hover": "rgba(19, 111, 69, 1)",
          "color-bg-fill-success-active": "rgba(12, 81, 50, 1)",
          "color-bg-fill-success-secondary": "rgba(180, 254, 210, 1)",
          "color-bg-fill-warning": "rgba(255, 184, 0, 1)",
          "color-bg-fill-warning-hover": "rgba(229, 165, 0, 1)",
          "color-bg-fill-warning-active": "rgba(178, 132, 0, 1)",
          "color-bg-fill-warning-secondary": "rgba(255, 214, 164, 1)",
          "color-bg-fill-caution": "rgba(255, 230, 0, 1)",
          "color-bg-fill-caution-hover": "rgba(234, 211, 0, 1)",
          "color-bg-fill-caution-active": "rgba(225, 203, 0, 1)",
          "color-bg-fill-caution-secondary": "rgba(255, 235, 120, 1)",
          "color-bg-fill-critical": "rgba(229, 28, 0, 1)",
          "color-bg-fill-critical-hover": "rgba(181, 38, 11, 1)",
          "color-bg-fill-critical-active": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-selected": "rgba(142, 31, 11, 1)",
          "color-bg-fill-critical-secondary": "rgba(254, 211, 209, 1)",
          "color-bg-fill-emphasis": "rgba(0, 91, 211, 1)",
          "color-bg-fill-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-bg-fill-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-bg-fill-magic": "rgba(128, 81, 255, 1)",
          "color-bg-fill-magic-secondary": "rgba(233, 229, 255, 1)",
          "color-bg-fill-magic-secondary-hover": "rgba(228, 222, 255, 1)",
          "color-bg-fill-magic-secondary-active": "rgba(223, 217, 255, 1)",
          "color-bg-fill-inverse": "rgba(48, 48, 48, 1)",
          "color-bg-fill-inverse-hover": "rgba(74, 74, 74, 1)",
          "color-bg-fill-inverse-active": "rgba(97, 97, 97, 1)",
          "color-bg-fill-transparent": "rgba(255, 255, 255, 0.11)",
          "color-bg-fill-transparent-hover": "rgba(255, 255, 255, 0.17)",
          "color-bg-fill-transparent-active": "rgba(255, 255, 255, 0.20)",
          "color-bg-fill-transparent-selected": "rgba(255, 255, 255, 0.28)",
          "color-bg-fill-transparent-secondary": "rgba(0, 0, 0, 0.06)",
          "color-bg-fill-transparent-secondary-hover": "rgba(0, 0, 0, 0.08)",
          "color-bg-fill-transparent-secondary-active": "rgba(0, 0, 0, 0.11)",
          "color-text": "rgba(227, 227, 227, 1)",
          "color-text-secondary": "rgba(181, 181, 181, 1)",
          "color-text-disabled": "rgba(181, 181, 181, 1)",
          "color-text-link": "rgba(0, 91, 211, 1)",
          "color-text-link-hover": "rgba(0, 66, 153, 1)",
          "color-text-link-active": "rgba(0, 46, 106, 1)",
          "color-text-brand": "rgba(74, 74, 74, 1)",
          "color-text-brand-hover": "rgba(48, 48, 48, 1)",
          "color-text-brand-on-bg-fill": "rgba(48, 48, 48, 1)",
          "color-text-brand-on-bg-fill-hover": "rgba(227, 227, 227, 1)",
          "color-text-brand-on-bg-fill-active": "rgba(204, 204, 204, 1)",
          "color-text-brand-on-bg-fill-disabled": "rgba(255, 255, 255, 1)",
          "color-text-info": "rgba(0, 58, 90, 1)",
          "color-text-info-hover": "rgba(0, 58, 90, 1)",
          "color-text-info-active": "rgba(0, 33, 51, 1)",
          "color-text-info-secondary": "rgba(0, 124, 180, 1)",
          "color-text-info-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-text-success": "rgba(12, 81, 50, 1)",
          "color-text-success-hover": "rgba(8, 61, 37, 1)",
          "color-text-success-active": "rgba(9, 42, 27, 1)",
          "color-text-success-secondary": "rgba(41, 132, 90, 1)",
          "color-text-success-on-bg-fill": "rgba(248, 255, 251, 1)",
          "color-text-caution": "rgba(79, 71, 0, 1)",
          "color-text-caution-hover": "rgba(51, 46, 0, 1)",
          "color-text-caution-active": "rgba(31, 28, 0, 1)",
          "color-text-caution-secondary": "rgba(130, 117, 0, 1)",
          "color-text-caution-on-bg-fill": "rgba(51, 46, 0, 1)",
          "color-text-warning": "rgba(94, 66, 0, 1)",
          "color-text-warning-hover": "rgba(65, 45, 0, 1)",
          "color-text-warning-active": "rgba(37, 26, 0, 1)",
          "color-text-warning-secondary": "rgba(149, 111, 0, 1)",
          "color-text-warning-on-bg-fill": "rgba(37, 26, 0, 1)",
          "color-text-critical": "rgba(142, 31, 11, 1)",
          "color-text-critical-hover": "rgba(95, 21, 7, 1)",
          "color-text-critical-active": "rgba(47, 10, 4, 1)",
          "color-text-critical-secondary": "rgba(229, 28, 0, 1)",
          "color-text-critical-on-bg-fill": "rgba(255, 251, 251, 1)",
          "color-text-emphasis": "rgba(0, 91, 211, 1)",
          "color-text-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-text-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-text-emphasis-on-bg-fill": "rgba(252, 253, 255, 1)",
          "color-text-emphasis-on-bg-fill-hover": "rgba(226, 231, 255, 1)",
          "color-text-emphasis-on-bg-fill-active": "rgba(213, 220, 255, 1)",
          "color-text-magic": "rgba(87, 0, 209, 1)",
          "color-text-magic-secondary": "rgba(113, 38, 255, 1)",
          "color-text-magic-on-bg-fill": "rgba(253, 253, 255, 1)",
          "color-text-inverse": "rgba(227, 227, 227, 1)",
          "color-text-inverse-secondary": "rgba(181, 181, 181, 1)",
          "color-text-link-inverse": "rgba(197, 208, 255, 1)",
          "color-border": "rgba(227, 227, 227, 1)",
          "color-border-hover": "rgba(204, 204, 204, 1)",
          "color-border-disabled": "rgba(235, 235, 235, 1)",
          "color-border-secondary": "rgba(97, 97, 97, 1)",
          "color-border-tertiary": "rgba(204, 204, 204, 1)",
          "color-border-focus": "rgba(0, 91, 211, 1)",
          "color-border-brand": "rgba(227, 227, 227, 1)",
          "color-border-info": "rgba(168, 216, 255, 1)",
          "color-border-success": "rgba(146, 254, 194, 1)",
          "color-border-caution": "rgba(255, 235, 120, 1)",
          "color-border-warning": "rgba(255, 200, 121, 1)",
          "color-border-critical": "rgba(254, 195, 193, 1)",
          "color-border-critical-secondary": "rgba(142, 31, 11, 1)",
          "color-border-emphasis": "rgba(0, 91, 211, 1)",
          "color-border-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-border-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-border-magic": "rgba(228, 222, 255, 1)",
          "color-border-magic-secondary": "rgba(148, 116, 255, 1)",
          "color-border-magic-secondary-hover": "rgba(128, 81, 255, 1)",
          "color-border-inverse": "rgba(97, 97, 97, 1)",
          "color-border-inverse-hover": "rgba(204, 204, 204, 1)",
          "color-border-inverse-active": "rgba(227, 227, 227, 1)",
          "color-tooltip-tail-down-border-experimental": "rgba(60, 60, 60, 1)",
          "color-tooltip-tail-up-border-experimental": "rgba(71, 71, 71, 1)",
          "color-border-gradient-experimental": "linear-gradient(to bottom, rgba(255, 255, 255, 0.17), rgba(255, 255, 255, 0.03))",
          "color-border-gradient-hover-experimental": "linear-gradient(to bottom, rgba(255, 255, 255, 0.17), rgba(255, 255, 255, 0.03))",
          "color-border-gradient-selected-experimental": "linear-gradient(to bottom, rgba(0, 0, 0, 0.20), rgba(255, 255, 255, 0.20))",
          "color-border-gradient-active-experimental": "linear-gradient(to bottom, rgba(255, 255, 255, 0.20), rgba(255, 255, 255, 0.03))",
          "color-icon": "rgba(227, 227, 227, 1)",
          "color-icon-hover": "rgba(48, 48, 48, 1)",
          "color-icon-active": "rgba(26, 26, 26, 1)",
          "color-icon-disabled": "rgba(204, 204, 204, 1)",
          "color-icon-secondary": "rgba(138, 138, 138, 1)",
          "color-icon-secondary-hover": "rgba(97, 97, 97, 1)",
          "color-icon-secondary-active": "rgba(74, 74, 74, 1)",
          "color-icon-brand": "rgba(26, 26, 26, 1)",
          "color-icon-info": "rgba(0, 148, 213, 1)",
          "color-icon-success": "rgba(41, 132, 90, 1)",
          "color-icon-caution": "rgba(153, 138, 0, 1)",
          "color-icon-warning": "rgba(178, 132, 0, 1)",
          "color-icon-critical": "rgba(239, 77, 47, 1)",
          "color-icon-emphasis": "rgba(0, 91, 211, 1)",
          "color-icon-emphasis-hover": "rgba(0, 66, 153, 1)",
          "color-icon-emphasis-active": "rgba(0, 46, 106, 1)",
          "color-icon-magic": "rgba(128, 81, 255, 1)",
          "color-icon-inverse": "rgba(227, 227, 227, 1)",
          "color-avatar-bg-fill": "rgba(181, 181, 181, 1)",
          "color-avatar-five-bg-fill": "rgba(253, 75, 146, 1)",
          "color-avatar-five-text-on-bg-fill": "rgba(255, 246, 248, 1)",
          "color-avatar-four-bg-fill": "rgba(81, 192, 255, 1)",
          "color-avatar-four-text-on-bg-fill": "rgba(0, 33, 51, 1)",
          "color-avatar-one-bg-fill": "rgba(197, 48, 197, 1)",
          "color-avatar-one-text-on-bg-fill": "rgba(253, 239, 253, 1)",
          "color-avatar-seven-bg-fill": "rgba(148, 116, 255, 1)",
          "color-avatar-seven-text-on-bg-fill": "rgba(248, 247, 255, 1)",
          "color-avatar-six-bg-fill": "rgba(37, 232, 43, 1)",
          "color-avatar-six-text-on-bg-fill": "rgba(3, 61, 5, 1)",
          "color-avatar-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-avatar-three-bg-fill": "rgba(44, 224, 212, 1)",
          "color-avatar-three-text-on-bg-fill": "rgba(3, 60, 57, 1)",
          "color-avatar-two-bg-fill": "rgba(56, 250, 163, 1)",
          "color-avatar-two-text-on-bg-fill": "rgba(12, 81, 50, 1)",
          "color-backdrop-bg": "rgba(0, 0, 0, 0.71)",
          "color-button-gradient-bg-fill": "linear-gradient(180deg, rgba(48, 48, 48, 0) 63.53%, rgba(255, 255, 255, 0.15) 100%)",
          "color-checkbox-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-checkbox-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-input-bg-surface": "rgba(253, 253, 253, 1)",
          "color-input-bg-surface-hover": "rgba(250, 250, 250, 1)",
          "color-input-bg-surface-active": "rgba(247, 247, 247, 1)",
          "color-input-border": "rgba(138, 138, 138, 1)",
          "color-input-border-hover": "rgba(97, 97, 97, 1)",
          "color-input-border-active": "rgba(26, 26, 26, 1)",
          "color-nav-bg": "rgba(235, 235, 235, 1)",
          "color-nav-bg-surface": "rgba(0, 0, 0, 0.02)",
          "color-nav-bg-surface-hover": "rgba(241, 241, 241, 1)",
          "color-nav-bg-surface-active": "rgba(250, 250, 250, 1)",
          "color-nav-bg-surface-selected": "rgba(250, 250, 250, 1)",
          "color-radio-button-bg-surface-disabled": "rgba(0, 0, 0, 0.08)",
          "color-radio-button-icon-disabled": "rgba(255, 255, 255, 1)",
          "color-video-thumbnail-play-button-bg-fill-hover": "rgba(0, 0, 0, 0.81)",
          "color-video-thumbnail-play-button-bg-fill": "rgba(0, 0, 0, 0.71)",
          "color-video-thumbnail-play-button-text-on-bg-fill": "rgba(255, 255, 255, 1)",
          "color-scrollbar-thumb-bg-hover": "rgba(138, 138, 138, 1)"
        },
        "font": {
          "font-family-sans": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "font-family-mono": "ui-monospace, SFMono-Regular, 'SF Mono', Consolas, 'Liberation Mono', Menlo, monospace",
          "font-size-275": "0.6875rem",
          "font-size-300": "0.75rem",
          "font-size-325": "0.8125rem",
          "font-size-350": "0.875rem",
          "font-size-400": "1rem",
          "font-size-450": "1.125rem",
          "font-size-500": "1.25rem",
          "font-size-550": "1.375rem",
          "font-size-600": "1.5rem",
          "font-size-750": "1.875rem",
          "font-size-800": "2rem",
          "font-size-900": "2.25rem",
          "font-size-1000": "2.5rem",
          "font-weight-regular": "450",
          "font-weight-medium": "550",
          "font-weight-semibold": "650",
          "font-weight-bold": "700",
          "font-letter-spacing-densest": "-0.03375rem",
          "font-letter-spacing-denser": "-0.01875rem",
          "font-letter-spacing-dense": "-0.0125rem",
          "font-letter-spacing-normal": "0rem",
          "font-line-height-300": "0.75rem",
          "font-line-height-400": "1rem",
          "font-line-height-500": "1.25rem",
          "font-line-height-600": "1.5rem",
          "font-line-height-700": "1.75rem",
          "font-line-height-800": "2rem",
          "font-line-height-1000": "2.5rem",
          "font-line-height-1200": "3rem"
        },
        "height": {
          "height-0": "0rem",
          "height-025": "0.0625rem",
          "height-050": "0.125rem",
          "height-100": "0.25rem",
          "height-150": "0.375rem",
          "height-200": "0.5rem",
          "height-300": "0.75rem",
          "height-400": "1rem",
          "height-500": "1.25rem",
          "height-600": "1.5rem",
          "height-700": "1.75rem",
          "height-800": "2rem",
          "height-900": "2.25rem",
          "height-1000": "2.5rem",
          "height-1200": "3rem",
          "height-1600": "4rem",
          "height-2000": "5rem",
          "height-2400": "6rem",
          "height-2800": "7rem",
          "height-3200": "8rem"
        },
        "motion": {
          "motion-duration-0": "0ms",
          "motion-duration-50": "50ms",
          "motion-duration-100": "100ms",
          "motion-duration-150": "150ms",
          "motion-duration-200": "200ms",
          "motion-duration-250": "250ms",
          "motion-duration-300": "300ms",
          "motion-duration-350": "350ms",
          "motion-duration-400": "400ms",
          "motion-duration-450": "450ms",
          "motion-duration-500": "500ms",
          "motion-duration-5000": "5000ms",
          "motion-ease": "cubic-bezier(0.25, 0.1, 0.25, 1)",
          "motion-ease-in": "cubic-bezier(0.42, 0, 1, 1)",
          "motion-ease-out": "cubic-bezier(0.19, 0.91, 0.38, 1)",
          "motion-ease-in-out": "cubic-bezier(0.42, 0, 0.58, 1)",
          "motion-linear": "cubic-bezier(0, 0, 1, 1)",
          "motion-keyframes-bounce": "{ from, 65%, 85% { transform: scale(1) } 75% { transform: scale(0.85) } 82.5% { transform: scale(1.05) } }",
          "motion-keyframes-fade-in": "{ to { opacity: 1 } }",
          "motion-keyframes-pulse": "{ from, 75% { transform: scale(0.85); opacity: 1; } to { transform: scale(2.5); opacity: 0; } }",
          "motion-keyframes-spin": "{ to { transform: rotate(1turn) } }",
          "motion-keyframes-appear-above": "{ from { transform: translateY(var(--p-space-100)); opacity: 0; } to { transform: none; opacity: 1; } }",
          "motion-keyframes-appear-below": "{ from { transform: translateY(calc(var(--p-space-100) * -1)); opacity: 0; } to { transform: none; opacity: 1; } }"
        },
        "shadow": {
          "shadow-0": "none",
          "shadow-100": "0rem 0.0625rem 0rem 0rem rgba(26, 26, 26, 0.07)",
          "shadow-200": "0rem 0.1875rem 0.0625rem -0.0625rem rgba(26, 26, 26, 0.07)",
          "shadow-300": "0rem 0.25rem 0.375rem -0.125rem rgba(26, 26, 26, 0.20)",
          "shadow-400": "0rem 0.5rem 1rem -0.25rem rgba(26, 26, 26, 0.22)",
          "shadow-500": "0rem 0.75rem 1.25rem -0.5rem rgba(26, 26, 26, 0.24)",
          "shadow-600": "0rem 1.25rem 1.25rem -0.5rem rgba(26, 26, 26, 0.28)",
          "shadow-bevel-100": "0.0625rem 0rem 0rem 0rem rgba(204, 204, 204, 0.08) inset, -0.0625rem 0rem 0rem 0rem rgba(204, 204, 204, 0.08) inset, 0rem -0.0625rem 0rem 0rem rgba(204, 204, 204, 0.08) inset, 0rem 0.0625rem 0rem 0rem rgba(204, 204, 204, 0.16) inset",
          "shadow-inset-100": "0rem 0.0625rem 0.125rem 0rem rgba(26, 26, 26, 0.15) inset, 0rem 0.0625rem 0.0625rem 0rem rgba(26, 26, 26, 0.15) inset",
          "shadow-inset-200": "0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.20) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset, -0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.12) inset",
          "shadow-button": "0rem -0.0625rem 0rem 0rem #b5b5b5 inset, 0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.1) inset, 0rem 0.03125rem 0rem 0.09375rem #FFF inset",
          "shadow-button-hover": "0rem 0.0625rem 0rem 0rem #EBEBEB inset, -0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0.0625rem 0rem 0rem 0rem #EBEBEB inset, 0rem -0.0625rem 0rem 0rem #CCC inset",
          "shadow-button-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(26, 26, 26, 0.122) inset, 0rem 0.125rem 0.0625rem 0rem rgba(26, 26, 26, 0.2) inset",
          "shadow-button-primary": "0rem -0.0625rem 0rem 0.0625rem rgba(0, 0, 0, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(48, 48, 48, 1) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.25) inset;",
          "shadow-button-primary-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.24) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.0625rem 0rem 0rem #000 inset, 0rem -0.0625rem 0rem 0.0625rem #1A1A1A",
          "shadow-button-primary-inset": "0rem 0.1875rem 0rem 0rem rgb(0, 0, 0) inset",
          "shadow-button-primary-critical": "0rem -0.0625rem 0rem 0.0625rem rgba(142, 31, 11, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(181, 38, 11, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.349) inset",
          "shadow-button-primary-critical-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
          "shadow-button-primary-critical-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset",
          "shadow-button-primary-success": "0rem -0.0625rem 0rem 0.0625rem rgba(12, 81, 50, 0.8) inset, 0rem 0rem 0rem 0.0625rem rgba(19, 111, 69, 0.8) inset, 0rem 0.03125rem 0rem 0.09375rem rgba(255, 255, 255, 0.251) inset",
          "shadow-button-primary-success-hover": "0rem 0.0625rem 0rem 0rem rgba(255, 255, 255, 0.48) inset, 0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, -0.0625rem 0rem 0rem 0rem rgba(255, 255, 255, 0.20) inset, 0rem -0.09375rem 0rem 0rem rgba(0, 0, 0, 0.25) inset",
          "shadow-button-primary-success-inset": "-0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0.0625rem 0rem 0.0625rem 0rem rgba(0, 0, 0, 0.2) inset, 0rem 0.125rem 0rem 0rem rgba(0, 0, 0, 0.6) inset",
          "shadow-border-inset": "0rem 0rem 0rem 0.0625rem rgba(0, 0, 0, 0.08) inset"
        },
        "space": {
          "space-0": "0rem",
          "space-025": "0.0625rem",
          "space-050": "0.125rem",
          "space-100": "0.25rem",
          "space-150": "0.375rem",
          "space-200": "0.5rem",
          "space-300": "0.75rem",
          "space-400": "1rem",
          "space-500": "1.25rem",
          "space-600": "1.5rem",
          "space-800": "2rem",
          "space-1000": "2.5rem",
          "space-1200": "3rem",
          "space-1600": "4rem",
          "space-2000": "5rem",
          "space-2400": "6rem",
          "space-2800": "7rem",
          "space-3200": "8rem",
          "space-button-group-gap": "0.5rem",
          "space-card-gap": "1rem",
          "space-card-padding": "1rem",
          "space-table-cell-padding": "0.375rem"
        },
        "text": {
          "text-heading-3xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-3xl-font-size": "2.25rem",
          "text-heading-3xl-font-weight": "700",
          "text-heading-3xl-font-letter-spacing": "-0.03375rem",
          "text-heading-3xl-font-line-height": "3rem",
          "text-heading-2xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-2xl-font-size": "1.875rem",
          "text-heading-2xl-font-weight": "700",
          "text-heading-2xl-font-letter-spacing": "-0.01875rem",
          "text-heading-2xl-font-line-height": "2.5rem",
          "text-heading-xl-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xl-font-size": "1.5rem",
          "text-heading-xl-font-weight": "700",
          "text-heading-xl-font-letter-spacing": "-0.0125rem",
          "text-heading-xl-font-line-height": "2rem",
          "text-heading-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-lg-font-size": "1.25rem",
          "text-heading-lg-font-weight": "650",
          "text-heading-lg-font-letter-spacing": "-0.0125rem",
          "text-heading-lg-font-line-height": "1.5rem",
          "text-heading-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-md-font-size": "0.875rem",
          "text-heading-md-font-weight": "650",
          "text-heading-md-font-letter-spacing": "0rem",
          "text-heading-md-font-line-height": "1.25rem",
          "text-heading-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-sm-font-size": "0.8125rem",
          "text-heading-sm-font-weight": "650",
          "text-heading-sm-font-letter-spacing": "0rem",
          "text-heading-sm-font-line-height": "1.25rem",
          "text-heading-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-heading-xs-font-size": "0.75rem",
          "text-heading-xs-font-weight": "650",
          "text-heading-xs-font-letter-spacing": "0rem",
          "text-heading-xs-font-line-height": "1rem",
          "text-body-lg-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-lg-font-size": "0.875rem",
          "text-body-lg-font-weight": "450",
          "text-body-lg-font-letter-spacing": "0rem",
          "text-body-lg-font-line-height": "1.25rem",
          "text-body-md-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-md-font-size": "0.8125rem",
          "text-body-md-font-weight": "450",
          "text-body-md-font-letter-spacing": "0rem",
          "text-body-md-font-line-height": "1.25rem",
          "text-body-sm-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-sm-font-size": "0.75rem",
          "text-body-sm-font-weight": "450",
          "text-body-sm-font-letter-spacing": "0rem",
          "text-body-sm-font-line-height": "1rem",
          "text-body-xs-font-family": "'Inter', -apple-system, BlinkMacSystemFont, 'San Francisco', 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif",
          "text-body-xs-font-size": "0.6875rem",
          "text-body-xs-font-weight": "450",
          "text-body-xs-font-letter-spacing": "0rem",
          "text-body-xs-font-line-height": "0.75rem"
        },
        "width": {
          "width-0": "0rem",
          "width-025": "0.0625rem",
          "width-050": "0.125rem",
          "width-100": "0.25rem",
          "width-150": "0.375rem",
          "width-200": "0.5rem",
          "width-300": "0.75rem",
          "width-400": "1rem",
          "width-500": "1.25rem",
          "width-600": "1.5rem",
          "width-700": "1.75rem",
          "width-800": "2rem",
          "width-900": "2.25rem",
          "width-1000": "2.5rem",
          "width-1200": "3rem",
          "width-1600": "4rem",
          "width-2000": "5rem",
          "width-2400": "6rem",
          "width-2800": "7rem",
          "width-3200": "8rem"
        },
        "zIndex": {
          "z-index-0": "auto",
          "z-index-1": "100",
          "z-index-2": "400",
          "z-index-3": "510",
          "z-index-4": "512",
          "z-index-5": "513",
          "z-index-6": "514",
          "z-index-7": "515",
          "z-index-8": "516",
          "z-index-9": "517",
          "z-index-10": "518",
          "z-index-11": "519",
          "z-index-12": "520"
        }
      }
    };
    themeDefault = themes[themeNameDefault];
    isTokenName = createIsTokenName(themes[themeNameDefault]);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-theme.js
function getTheme(themeName) {
  return themes[themeName];
}
function useTheme() {
  const theme = (0, import_react.useContext)(ThemeContext);
  if (!theme) {
    throw new Error("No theme was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return theme;
}
function useThemeName() {
  const themeName = (0, import_react.useContext)(ThemeNameContext);
  if (!themeName) {
    throw new Error("No themeName was provided. Your application must be wrapped in an <AppProvider> or <ThemeProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return themeName;
}
function UseTheme(props) {
  const theme = useTheme();
  return props.children(theme);
}
var import_react, ThemeContext, ThemeNameContext;
var init_use_theme = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-theme.js"() {
    import_react = __toESM(require_react());
    init_build();
    ThemeContext = /* @__PURE__ */ (0, import_react.createContext)(null);
    ThemeNameContext = /* @__PURE__ */ (0, import_react.createContext)(null);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/debounce.js
function debounce(func, waitArg, options) {
  let lastArgs;
  let lastThis;
  let maxWait;
  let result;
  let timerId;
  let lastCallTime;
  let lastInvokeTime = 0;
  let leading = false;
  let maxing = false;
  let trailing = true;
  const useRAF = !waitArg && waitArg !== 0;
  if (typeof func !== "function") {
    throw new TypeError("Expected a function");
  }
  const wait = waitArg || 0;
  if (typeof options === "object") {
    leading = Boolean(options.leading);
    maxing = "maxWait" in options;
    maxWait = maxing ? Math.max(Number(options.maxWait) || 0, wait) : void 0;
    trailing = "trailing" in options ? Boolean(options.trailing) : trailing;
  }
  function invokeFunc(time) {
    const args = lastArgs;
    const thisArg = lastThis;
    lastArgs = void 0;
    lastThis = void 0;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }
  function startTimer(pendingFunc, wait2) {
    if (useRAF) {
      cancelAnimationFrame(timerId);
      return requestAnimationFrame(pendingFunc);
    }
    return setTimeout(pendingFunc, wait2);
  }
  function cancelTimer(id) {
    if (useRAF) {
      return cancelAnimationFrame(id);
    }
    clearTimeout(id);
  }
  function leadingEdge(time) {
    lastInvokeTime = time;
    timerId = startTimer(timerExpired, wait);
    return leading ? invokeFunc(time) : result;
  }
  function remainingWait(time) {
    const timeSinceLastCall = time - lastCallTime;
    const timeSinceLastInvoke = time - lastInvokeTime;
    const timeWaiting = wait - timeSinceLastCall;
    return maxing && maxWait ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time) {
    const timeSinceLastCall = time - lastCallTime;
    const timeSinceLastInvoke = time - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && maxWait && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    const time = Date.now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    timerId = startTimer(timerExpired, remainingWait(time));
  }
  function trailingEdge(time) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      cancelTimer(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(Date.now());
  }
  function pending() {
    return timerId !== void 0;
  }
  function debounced(...args) {
    const time = Date.now();
    const isInvoking = shouldInvoke(time);
    lastArgs = args;
    lastThis = this;
    lastCallTime = time;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        timerId = startTimer(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = startTimer(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  debounced.pending = pending;
  return debounced;
}
var init_debounce = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/debounce.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/shared.js
var scrollable, overlay, layer, unstyled, dataPolarisTopBar, headerCell, portal, DATA_ATTRIBUTE;
var init_shared = __esm({
  "node_modules/@shopify/polaris/build/esm/components/shared.js"() {
    scrollable = {
      props: {
        "data-polaris-scrollable": true
      },
      selector: "[data-polaris-scrollable]"
    };
    overlay = {
      props: {
        "data-polaris-overlay": true
      },
      selector: "[data-polaris-overlay]"
    };
    layer = {
      props: {
        "data-polaris-layer": true
      },
      selector: "[data-polaris-layer]"
    };
    unstyled = {
      props: {
        "data-polaris-unstyled": true
      },
      selector: "[data-polaris-unstyled]"
    };
    dataPolarisTopBar = {
      props: {
        "data-polaris-top-bar": true
      },
      selector: "[data-polaris-top-bar]"
    };
    headerCell = {
      props: {
        "data-polaris-header-cell": true
      },
      selector: "[data-polaris-header-cell]"
    };
    portal = {
      props: ["data-portal-id"],
      selector: "[data-portal-id]"
    };
    DATA_ATTRIBUTE = {
      overlay,
      layer
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/target.js
var isServer;
var init_target = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/target.js"() {
    isServer = typeof window === "undefined" || typeof document === "undefined";
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-isomorphic-layout-effect.js
var import_react2, useIsomorphicLayoutEffect;
var init_use_isomorphic_layout_effect = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-isomorphic-layout-effect.js"() {
    import_react2 = __toESM(require_react());
    init_target();
    useIsomorphicLayoutEffect = isServer ? import_react2.useEffect : import_react2.useLayoutEffect;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/breakpoints.js
function noop() {
}
function navigationBarCollapsed() {
  return typeof window === "undefined" ? noWindowMatches : window.matchMedia(`(max-width: ${Breakpoints.navigationBarCollapsed})`);
}
function stackedContent() {
  return typeof window === "undefined" ? noWindowMatches : window.matchMedia(`(max-width: ${Breakpoints.stackedContent})`);
}
function getMatches(defaults, forceDefaults) {
  if (!isServer && !forceDefaults) {
    return Object.fromEntries(breakpointsQueryEntries.map(([directionAlias, query]) => [directionAlias, window.matchMedia(query).matches]));
  }
  if (typeof defaults === "object" && defaults !== null) {
    return Object.fromEntries(breakpointsQueryEntries.map(([directionAlias]) => [directionAlias, defaults[directionAlias] ?? false]));
  }
  return Object.fromEntries(breakpointsQueryEntries.map(([directionAlias]) => [directionAlias, defaults ?? false]));
}
function useBreakpoints(options) {
  const [breakpoints2, setBreakpoints] = (0, import_react3.useState)(getMatches(options?.defaults, true));
  useIsomorphicLayoutEffect(() => {
    const mediaQueryLists = breakpointsQueryEntries.map(([_, query]) => window.matchMedia(query));
    const handler = () => setBreakpoints(getMatches());
    mediaQueryLists.forEach((mql) => {
      if (mql.addListener) {
        mql.addListener(handler);
      } else {
        mql.addEventListener("change", handler);
      }
    });
    handler();
    return () => {
      mediaQueryLists.forEach((mql) => {
        if (mql.removeListener) {
          mql.removeListener(handler);
        } else {
          mql.removeEventListener("change", handler);
        }
      });
    };
  }, []);
  return breakpoints2;
}
function getBreakpointsQueryEntries(breakpoints2) {
  const mediaConditionEntries = Object.entries(getMediaConditions(breakpoints2));
  return mediaConditionEntries.map(([breakpointsToken, mediaConditions]) => Object.entries(mediaConditions).map(([direction, mediaCondition]) => {
    const breakpointsAlias = breakpointsToken.split("-")[1];
    const directionAlias = `${breakpointsAlias}${capitalize(direction)}`;
    return [directionAlias, mediaCondition];
  })).flat();
}
function capitalize(str) {
  return str.charAt(0).toUpperCase() + str.slice(1);
}
var import_react3, Breakpoints, noWindowMatches, breakpointsQueryEntries;
var init_breakpoints2 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/breakpoints.js"() {
    import_react3 = __toESM(require_react());
    init_build();
    init_target();
    init_use_isomorphic_layout_effect();
    Breakpoints = {
      // TODO: Update to smDown
      navigationBarCollapsed: "767.95px",
      // TODO: Update to lgDown
      stackedContent: "1039.95px"
    };
    noWindowMatches = {
      media: "",
      addListener: noop,
      removeListener: noop,
      matches: false,
      onchange: noop,
      addEventListener: noop,
      removeEventListener: noop,
      dispatchEvent: (_) => true
    };
    breakpointsQueryEntries = getBreakpointsQueryEntries(themeDefault.breakpoints);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/geometry.js
function getRectForNode(node) {
  if (!(node instanceof Element)) {
    return new Rect({
      width: window.innerWidth,
      height: window.innerHeight
    });
  }
  const rect = node.getBoundingClientRect();
  return new Rect({
    top: rect.top,
    left: rect.left,
    width: rect.width,
    height: rect.height
  });
}
var Rect;
var init_geometry = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/geometry.js"() {
    Rect = class {
      static get zero() {
        return new Rect();
      }
      constructor({
        top = 0,
        left = 0,
        width: width2 = 0,
        height: height2 = 0
      } = {}) {
        this.top = top;
        this.left = left;
        this.width = width2;
        this.height = height2;
      }
      get center() {
        return {
          x: this.left + this.width / 2,
          y: this.top + this.height / 2
        };
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/sticky-manager.js
function isDocument(node) {
  return node === document;
}
function scrollTopFor(container) {
  return isDocument(container) ? document.body.scrollTop || document.documentElement.scrollTop : container.scrollTop;
}
function horizontallyOverlaps(rect1, rect2) {
  const rect1Left = rect1.left;
  const rect1Right = rect1.left + rect1.width;
  const rect2Left = rect2.left;
  const rect2Right = rect2.left + rect2.width;
  return rect2Right < rect1Left || rect1Right < rect2Left;
}
var SIXTY_FPS, StickyManager;
var init_sticky_manager = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/sticky-manager.js"() {
    init_build();
    init_debounce();
    init_shared();
    init_breakpoints2();
    init_geometry();
    SIXTY_FPS = 1e3 / 60;
    StickyManager = class {
      constructor(container) {
        this.stickyItems = [];
        this.stuckItems = [];
        this.container = null;
        this.topBarOffset = 0;
        this.handleResize = debounce(() => {
          this.manageStickyItems();
        }, SIXTY_FPS, {
          leading: true,
          trailing: true,
          maxWait: SIXTY_FPS
        });
        this.handleScroll = debounce(() => {
          this.manageStickyItems();
        }, SIXTY_FPS, {
          leading: true,
          trailing: true,
          maxWait: SIXTY_FPS
        });
        if (container) {
          this.setContainer(container);
        }
      }
      registerStickyItem(stickyItem) {
        this.stickyItems.push(stickyItem);
      }
      unregisterStickyItem(nodeToRemove) {
        const nodeIndex = this.stickyItems.findIndex(({
          stickyNode
        }) => nodeToRemove === stickyNode);
        this.stickyItems.splice(nodeIndex, 1);
      }
      setContainer(el) {
        this.container = el;
        if (isDocument(el)) {
          this.setTopBarOffset(el);
        }
        this.container.addEventListener("scroll", this.handleScroll);
        window.addEventListener("resize", this.handleResize);
        this.manageStickyItems();
      }
      removeScrollListener() {
        if (this.container) {
          this.container.removeEventListener("scroll", this.handleScroll);
          window.removeEventListener("resize", this.handleResize);
        }
      }
      manageStickyItems() {
        if (this.stickyItems.length <= 0) {
          return;
        }
        const scrollTop = this.container ? scrollTopFor(this.container) : 0;
        const containerTop = getRectForNode(this.container).top + this.topBarOffset;
        this.stickyItems.forEach((stickyItem) => {
          const {
            handlePositioning
          } = stickyItem;
          const {
            sticky,
            top,
            left,
            width: width2
          } = this.evaluateStickyItem(stickyItem, scrollTop, containerTop);
          this.updateStuckItems(stickyItem, sticky);
          handlePositioning(sticky, top, left, width2);
        });
      }
      evaluateStickyItem(stickyItem, scrollTop, containerTop) {
        const {
          stickyNode,
          placeHolderNode,
          boundingElement,
          offset,
          disableWhenStacked
        } = stickyItem;
        if (disableWhenStacked && stackedContent().matches) {
          return {
            sticky: false,
            top: 0,
            left: 0,
            width: "auto"
          };
        }
        const stickyOffset = offset ? this.getOffset(stickyNode) + parseInt(
          // Important: This will not update when the active theme changes.
          // Update this to `useTheme` once converted to a function component.
          themeDefault.space["space-500"],
          10
        ) : this.getOffset(stickyNode);
        const scrollPosition2 = scrollTop + stickyOffset;
        const placeHolderNodeCurrentTop = placeHolderNode.getBoundingClientRect().top - containerTop + scrollTop;
        const top = containerTop + stickyOffset;
        const width2 = placeHolderNode.getBoundingClientRect().width;
        const left = placeHolderNode.getBoundingClientRect().left;
        let sticky;
        if (boundingElement == null) {
          sticky = scrollPosition2 >= placeHolderNodeCurrentTop;
        } else {
          const stickyItemHeight = stickyNode.getBoundingClientRect().height || stickyNode.firstElementChild?.getBoundingClientRect().height || 0;
          const stickyItemBottomPosition = boundingElement.getBoundingClientRect().bottom - stickyItemHeight + scrollTop - containerTop;
          sticky = scrollPosition2 >= placeHolderNodeCurrentTop && scrollPosition2 < stickyItemBottomPosition;
        }
        return {
          sticky,
          top,
          left,
          width: width2
        };
      }
      updateStuckItems(item, sticky) {
        const {
          stickyNode
        } = item;
        if (sticky && !this.isNodeStuck(stickyNode)) {
          this.addStuckItem(item);
        } else if (!sticky && this.isNodeStuck(stickyNode)) {
          this.removeStuckItem(item);
        }
      }
      addStuckItem(stickyItem) {
        this.stuckItems.push(stickyItem);
      }
      removeStuckItem(stickyItem) {
        const {
          stickyNode: nodeToRemove
        } = stickyItem;
        const nodeIndex = this.stuckItems.findIndex(({
          stickyNode
        }) => nodeToRemove === stickyNode);
        this.stuckItems.splice(nodeIndex, 1);
      }
      getOffset(node) {
        if (this.stuckItems.length === 0) {
          return 0;
        }
        let offset = 0;
        let count = 0;
        const stuckNodesLength = this.stuckItems.length;
        const nodeRect = getRectForNode(node);
        while (count < stuckNodesLength) {
          const stuckNode = this.stuckItems[count].stickyNode;
          if (stuckNode !== node) {
            const stuckNodeRect = getRectForNode(stuckNode);
            if (!horizontallyOverlaps(nodeRect, stuckNodeRect)) {
              offset += getRectForNode(stuckNode).height;
            }
          } else {
            break;
          }
          count++;
        }
        return offset;
      }
      isNodeStuck(node) {
        const nodeFound = this.stuckItems.findIndex(({
          stickyNode
        }) => node === stickyNode);
        return nodeFound >= 0;
      }
      setTopBarOffset(container) {
        const topbarElement = container.querySelector(`:not(${scrollable.selector}) ${dataPolarisTopBar.selector}`);
        this.topBarOffset = topbarElement ? topbarElement.clientHeight : 0;
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/scroll-lock-manager.js
function isScrollBarVisible() {
  const {
    body
  } = document;
  return body.scrollHeight > body.clientHeight;
}
var SCROLL_LOCKING_ATTRIBUTE, SCROLL_LOCKING_HIDDEN_ATTRIBUTE, SCROLL_LOCKING_WRAPPER_ATTRIBUTE, scrollPosition, ScrollLockManager;
var init_scroll_lock_manager = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/scroll-lock-manager.js"() {
    init_target();
    SCROLL_LOCKING_ATTRIBUTE = "data-lock-scrolling";
    SCROLL_LOCKING_HIDDEN_ATTRIBUTE = "data-lock-scrolling-hidden";
    SCROLL_LOCKING_WRAPPER_ATTRIBUTE = "data-lock-scrolling-wrapper";
    scrollPosition = 0;
    ScrollLockManager = class {
      constructor() {
        this.scrollLocks = 0;
        this.locked = false;
      }
      registerScrollLock() {
        this.scrollLocks += 1;
        this.handleScrollLocking();
      }
      unregisterScrollLock() {
        this.scrollLocks -= 1;
        this.handleScrollLocking();
      }
      handleScrollLocking() {
        if (isServer)
          return;
        const {
          scrollLocks
        } = this;
        const {
          body
        } = document;
        const wrapper = body.firstElementChild;
        if (scrollLocks === 0) {
          body.removeAttribute(SCROLL_LOCKING_ATTRIBUTE);
          body.removeAttribute(SCROLL_LOCKING_HIDDEN_ATTRIBUTE);
          if (wrapper) {
            wrapper.removeAttribute(SCROLL_LOCKING_WRAPPER_ATTRIBUTE);
          }
          window.scroll(0, scrollPosition);
          this.locked = false;
        } else if (scrollLocks > 0 && !this.locked) {
          scrollPosition = window.pageYOffset;
          body.setAttribute(SCROLL_LOCKING_ATTRIBUTE, "");
          if (!isScrollBarVisible()) {
            body.setAttribute(SCROLL_LOCKING_HIDDEN_ATTRIBUTE, "");
          }
          if (wrapper) {
            wrapper.setAttribute(SCROLL_LOCKING_WRAPPER_ATTRIBUTE, "");
            wrapper.scrollTop = scrollPosition;
          }
          this.locked = true;
        }
      }
      resetScrollPosition() {
        scrollPosition = 0;
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/get.js
function get(obj, keypath, defaultValue) {
  if (obj == null)
    return void 0;
  const keys = Array.isArray(keypath) ? keypath : getKeypath(keypath);
  let acc = obj;
  for (let i = 0; i < keys.length; i++) {
    const val = acc[keys[i]];
    if (val === void 0)
      return defaultValue;
    acc = val;
  }
  return acc;
}
function getKeypath(str) {
  const path = [];
  let result;
  while (result = OBJECT_NOTATION_MATCHER.exec(str)) {
    const [, first, second] = result;
    path.push(first || second);
  }
  return path;
}
var OBJECT_NOTATION_MATCHER;
var init_get = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/get.js"() {
    OBJECT_NOTATION_MATCHER = /\[(.*?)\]|(\w+)/g;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/merge.js
function merge(...objs) {
  let final = {};
  for (const obj of objs) {
    final = mergeRecursively(final, obj);
  }
  return final;
}
function mergeRecursively(inputObjA, objB) {
  const objA = Array.isArray(inputObjA) ? [...inputObjA] : {
    ...inputObjA
  };
  for (const key in objB) {
    if (!Object.prototype.hasOwnProperty.call(objB, key)) {
      continue;
    } else if (isMergeableValue(objB[key]) && isMergeableValue(objA[key])) {
      objA[key] = mergeRecursively(objA[key], objB[key]);
    } else {
      objA[key] = objB[key];
    }
  }
  return objA;
}
function isMergeableValue(value) {
  return value !== null && typeof value === "object";
}
var init_merge = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/merge.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/i18n/I18n.js
var REPLACE_REGEX, I18n;
var init_I18n = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/i18n/I18n.js"() {
    init_get();
    init_merge();
    REPLACE_REGEX = /{([^}]*)}/g;
    I18n = class {
      /**
       * @param translation A locale object or array of locale objects that overrides default translations. If specifying an array then your desired language dictionary should come first, followed by your fallback language dictionaries
       */
      constructor(translation) {
        this.translation = {};
        this.translation = Array.isArray(translation) ? merge(...translation.slice().reverse()) : translation;
      }
      translate(id, replacements) {
        const text2 = get(this.translation, id, "");
        if (!text2) {
          return "";
        }
        if (replacements) {
          return text2.replace(REPLACE_REGEX, (match) => {
            const replacement = match.substring(1, match.length - 1);
            if (replacements[replacement] === void 0) {
              const replacementData = JSON.stringify(replacements);
              throw new Error(`Error in translation for key '${id}'. No replacement found for key '${replacement}'. The following replacements were passed: '${replacementData}'`);
            }
            return replacements[replacement];
          });
        }
        return text2;
      }
      translationKeyExists(path) {
        return Boolean(get(this.translation, path));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/features/context.js
var import_react4, FeaturesContext;
var init_context = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/features/context.js"() {
    import_react4 = __toESM(require_react());
    FeaturesContext = /* @__PURE__ */ (0, import_react4.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/i18n/context.js
var import_react5, I18nContext;
var init_context2 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/i18n/context.js"() {
    import_react5 = __toESM(require_react());
    I18nContext = /* @__PURE__ */ (0, import_react5.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/context.js
var import_react6, ScrollLockManagerContext;
var init_context3 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/context.js"() {
    import_react6 = __toESM(require_react());
    ScrollLockManagerContext = /* @__PURE__ */ (0, import_react6.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/context.js
var import_react7, StickyManagerContext;
var init_context4 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/context.js"() {
    import_react7 = __toESM(require_react());
    StickyManagerContext = /* @__PURE__ */ (0, import_react7.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/link/context.js
var import_react8, LinkContext;
var init_context5 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/link/context.js"() {
    import_react8 = __toESM(require_react());
    LinkContext = /* @__PURE__ */ (0, import_react8.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/media-query/context.js
var import_react9, MediaQueryContext;
var init_context6 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/media-query/context.js"() {
    import_react9 = __toESM(require_react());
    MediaQueryContext = /* @__PURE__ */ (0, import_react9.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/components/EventListener/EventListener.js
var import_react10, EventListener;
var init_EventListener = __esm({
  "node_modules/@shopify/polaris/build/esm/components/EventListener/EventListener.js"() {
    import_react10 = __toESM(require_react());
    EventListener = class extends import_react10.PureComponent {
      componentDidMount() {
        this.attachListener();
      }
      componentDidUpdate({
        passive,
        ...detachProps
      }) {
        this.detachListener(detachProps);
        this.attachListener();
      }
      componentWillUnmount() {
        this.detachListener();
      }
      render() {
        return null;
      }
      attachListener() {
        const {
          event,
          handler,
          capture,
          passive
        } = this.props;
        window.addEventListener(event, handler, {
          capture,
          passive
        });
      }
      detachListener(prevProps) {
        const {
          event,
          handler,
          capture
        } = prevProps || this.props;
        window.removeEventListener(event, handler, capture);
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/MediaQueryProvider/MediaQueryProvider.js
var import_react11, MediaQueryProvider;
var init_MediaQueryProvider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/MediaQueryProvider/MediaQueryProvider.js"() {
    import_react11 = __toESM(require_react());
    init_debounce();
    init_breakpoints2();
    init_context6();
    init_EventListener();
    MediaQueryProvider = function MediaQueryProvider2({
      children
    }) {
      const [isNavigationCollapsed, setIsNavigationCollapsed] = (0, import_react11.useState)(navigationBarCollapsed().matches);
      const handleResize = (0, import_react11.useCallback)(debounce(() => {
        if (isNavigationCollapsed !== navigationBarCollapsed().matches) {
          setIsNavigationCollapsed(!isNavigationCollapsed);
        }
      }, 40, {
        trailing: true,
        leading: true,
        maxWait: 40
      }), [isNavigationCollapsed]);
      (0, import_react11.useEffect)(() => {
        setIsNavigationCollapsed(navigationBarCollapsed().matches);
      }, []);
      const context = (0, import_react11.useMemo)(() => ({
        isNavigationCollapsed
      }), [isNavigationCollapsed]);
      return /* @__PURE__ */ import_react11.default.createElement(MediaQueryContext.Provider, {
        value: context
      }, /* @__PURE__ */ import_react11.default.createElement(EventListener, {
        event: "resize",
        handler: handleResize
      }), children);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-is-after-initial-mount.js
function useIsAfterInitialMount() {
  const [isAfterInitialMount, setIsAfterInitialMount] = (0, import_react12.useState)(false);
  (0, import_react12.useEffect)(() => {
    setIsAfterInitialMount(true);
  }, []);
  return isAfterInitialMount;
}
var import_react12;
var init_use_is_after_initial_mount = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-is-after-initial-mount.js"() {
    import_react12 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/portals/context.js
var import_react13, PortalsManagerContext;
var init_context7 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/portals/context.js"() {
    import_react13 = __toESM(require_react());
    PortalsManagerContext = /* @__PURE__ */ (0, import_react13.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/components/PortalsManager/components/PortalsContainer/PortalsContainer.js
function PortalsContainerComponent(_props, ref) {
  return /* @__PURE__ */ import_react14.default.createElement("div", {
    id: "PolarisPortalsContainer",
    ref
  });
}
var import_react14, PortalsContainer;
var init_PortalsContainer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PortalsManager/components/PortalsContainer/PortalsContainer.js"() {
    import_react14 = __toESM(require_react());
    PortalsContainer = /* @__PURE__ */ (0, import_react14.forwardRef)(PortalsContainerComponent);
  }
});

// node_modules/@shopify/polaris/build/esm/components/PortalsManager/PortalsManager.js
function PortalsManager({
  children,
  container
}) {
  const isMounted = useIsAfterInitialMount();
  const ref = (0, import_react15.useRef)(null);
  const contextValue = (0, import_react15.useMemo)(() => {
    if (container) {
      return {
        container
      };
    } else if (isMounted) {
      return {
        container: ref.current
      };
    } else {
      return {
        container: null
      };
    }
  }, [container, isMounted]);
  return /* @__PURE__ */ import_react15.default.createElement(PortalsManagerContext.Provider, {
    value: contextValue
  }, children, container ? null : /* @__PURE__ */ import_react15.default.createElement(PortalsContainer, {
    ref
  }));
}
var import_react15;
var init_PortalsManager = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PortalsManager/PortalsManager.js"() {
    import_react15 = __toESM(require_react());
    init_use_is_after_initial_mount();
    init_context7();
    init_PortalsContainer();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/focus-manager/context.js
var import_react16, FocusManagerContext;
var init_context8 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/focus-manager/context.js"() {
    import_react16 = __toESM(require_react());
    FocusManagerContext = /* @__PURE__ */ (0, import_react16.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/components/FocusManager/FocusManager.js
function FocusManager({
  children
}) {
  const [trapFocusList, setTrapFocusList] = (0, import_react17.useState)([]);
  const add = (0, import_react17.useCallback)((id) => {
    setTrapFocusList((list) => [...list, id]);
  }, []);
  const remove = (0, import_react17.useCallback)((id) => {
    let removed = true;
    setTrapFocusList((list) => {
      const clone = [...list];
      const index = clone.indexOf(id);
      if (index === -1) {
        removed = false;
      } else {
        clone.splice(index, 1);
      }
      return clone;
    });
    return removed;
  }, []);
  const value = (0, import_react17.useMemo)(() => ({
    trapFocusList,
    add,
    remove
  }), [add, trapFocusList, remove]);
  return /* @__PURE__ */ import_react17.default.createElement(FocusManagerContext.Provider, {
    value
  }, children);
}
var import_react17;
var init_FocusManager = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FocusManager/FocusManager.js"() {
    import_react17 = __toESM(require_react());
    init_context8();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/ephemeral-presence-manager/context.js
var import_react18, EphemeralPresenceManagerContext;
var init_context9 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/ephemeral-presence-manager/context.js"() {
    import_react18 = __toESM(require_react());
    EphemeralPresenceManagerContext = /* @__PURE__ */ (0, import_react18.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/components/EphemeralPresenceManager/EphemeralPresenceManager.js
function EphemeralPresenceManager({
  children
}) {
  const [presenceCounter, setPresenceCounter] = (0, import_react19.useState)(defaultState);
  const addPresence = (0, import_react19.useCallback)((key) => {
    setPresenceCounter((prevList) => ({
      ...prevList,
      [key]: prevList[key] + 1
    }));
  }, []);
  const removePresence = (0, import_react19.useCallback)((key) => {
    setPresenceCounter((prevList) => ({
      ...prevList,
      [key]: prevList[key] - 1
    }));
  }, []);
  const value = (0, import_react19.useMemo)(() => ({
    presenceList: Object.entries(presenceCounter).reduce((previousValue, currentValue) => {
      const [key, value2] = currentValue;
      return {
        ...previousValue,
        [key]: value2 >= 1
      };
    }, {}),
    presenceCounter,
    addPresence,
    removePresence
  }), [addPresence, removePresence, presenceCounter]);
  return /* @__PURE__ */ import_react19.default.createElement(EphemeralPresenceManagerContext.Provider, {
    value
  }, children);
}
var import_react19, defaultState;
var init_EphemeralPresenceManager = __esm({
  "node_modules/@shopify/polaris/build/esm/components/EphemeralPresenceManager/EphemeralPresenceManager.js"() {
    import_react19 = __toESM(require_react());
    init_context9();
    defaultState = {
      tooltip: 0,
      hovercard: 0
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/AppProvider/AppProvider.js
function measureScrollbars() {
  const parentEl = document.createElement("div");
  parentEl.setAttribute("style", `position: absolute; opacity: 0; transform: translate3d(-9999px, -9999px, 0); pointer-events: none; width:${SCROLLBAR_TEST_ELEMENT_PARENT_SIZE}px; height:${SCROLLBAR_TEST_ELEMENT_PARENT_SIZE}px;`);
  const child = document.createElement("div");
  child.setAttribute("style", `width:100%; height: ${SCROLLBAR_TEST_ELEMENT_CHILD_SIZE}; overflow:scroll; scrollbar-width: thin;`);
  parentEl.appendChild(child);
  document.body.appendChild(parentEl);
  const scrollbarWidth = SCROLLBAR_TEST_ELEMENT_PARENT_SIZE - (parentEl.firstElementChild?.clientWidth ?? 0);
  const scrollbarWidthWithSafetyHatch = Math.min(scrollbarWidth, MAX_SCROLLBAR_WIDTH);
  document.documentElement.style.setProperty("--pc-app-provider-scrollbar-width", `${scrollbarWidthWithSafetyHatch}px`);
  document.body.removeChild(parentEl);
}
var import_react20, MAX_SCROLLBAR_WIDTH, SCROLLBAR_TEST_ELEMENT_PARENT_SIZE, SCROLLBAR_TEST_ELEMENT_CHILD_SIZE, AppProvider;
var init_AppProvider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/AppProvider/AppProvider.js"() {
    import_react20 = __toESM(require_react());
    init_build();
    init_use_theme();
    init_sticky_manager();
    init_scroll_lock_manager();
    init_I18n();
    init_context();
    init_context2();
    init_context3();
    init_context4();
    init_context5();
    init_MediaQueryProvider();
    init_PortalsManager();
    init_FocusManager();
    init_EphemeralPresenceManager();
    MAX_SCROLLBAR_WIDTH = 20;
    SCROLLBAR_TEST_ELEMENT_PARENT_SIZE = 30;
    SCROLLBAR_TEST_ELEMENT_CHILD_SIZE = SCROLLBAR_TEST_ELEMENT_PARENT_SIZE + 10;
    AppProvider = class extends import_react20.Component {
      constructor(props) {
        super(props);
        this.setBodyStyles = () => {
          document.body.style.backgroundColor = "var(--p-color-bg)";
          document.body.style.color = "var(--p-color-text)";
        };
        this.setRootAttributes = () => {
          const activeThemeName = this.getThemeName();
          themeNames.forEach((themeName) => {
            document.documentElement.classList.toggle(createThemeClassName(themeName), themeName === activeThemeName);
          });
        };
        this.getThemeName = () => this.props.theme ?? themeNameDefault;
        this.stickyManager = new StickyManager();
        this.scrollLockManager = new ScrollLockManager();
        const {
          i18n,
          linkComponent
        } = this.props;
        this.state = {
          link: linkComponent,
          intl: new I18n(i18n)
        };
      }
      componentDidMount() {
        if (document != null) {
          this.stickyManager.setContainer(document);
          this.setBodyStyles();
          this.setRootAttributes();
          const isSafari16 = navigator.userAgent.includes("Safari") && !navigator.userAgent.includes("Chrome") && (navigator.userAgent.includes("Version/16.1") || navigator.userAgent.includes("Version/16.2") || navigator.userAgent.includes("Version/16.3"));
          const isMobileApp16 = navigator.userAgent.includes("Shopify Mobile/iOS") && (navigator.userAgent.includes("OS 16_1") || navigator.userAgent.includes("OS 16_2") || navigator.userAgent.includes("OS 16_3"));
          if (isSafari16 || isMobileApp16) {
            document.documentElement.classList.add("Polaris-Safari-16-Font-Optical-Sizing-Patch");
          }
        }
        measureScrollbars();
      }
      componentDidUpdate({
        i18n: prevI18n,
        linkComponent: prevLinkComponent
      }) {
        const {
          i18n,
          linkComponent
        } = this.props;
        this.setRootAttributes();
        if (i18n === prevI18n && linkComponent === prevLinkComponent) {
          return;
        }
        this.setState({
          link: linkComponent,
          intl: new I18n(i18n)
        });
      }
      render() {
        const {
          children,
          features
        } = this.props;
        const themeName = this.getThemeName();
        const {
          intl,
          link
        } = this.state;
        return /* @__PURE__ */ import_react20.default.createElement(ThemeNameContext.Provider, {
          value: themeName
        }, /* @__PURE__ */ import_react20.default.createElement(ThemeContext.Provider, {
          value: getTheme(themeName)
        }, /* @__PURE__ */ import_react20.default.createElement(FeaturesContext.Provider, {
          value: features
        }, /* @__PURE__ */ import_react20.default.createElement(I18nContext.Provider, {
          value: intl
        }, /* @__PURE__ */ import_react20.default.createElement(ScrollLockManagerContext.Provider, {
          value: this.scrollLockManager
        }, /* @__PURE__ */ import_react20.default.createElement(StickyManagerContext.Provider, {
          value: this.stickyManager
        }, /* @__PURE__ */ import_react20.default.createElement(LinkContext.Provider, {
          value: link
        }, /* @__PURE__ */ import_react20.default.createElement(MediaQueryProvider, null, /* @__PURE__ */ import_react20.default.createElement(PortalsManager, null, /* @__PURE__ */ import_react20.default.createElement(FocusManager, null, /* @__PURE__ */ import_react20.default.createElement(EphemeralPresenceManager, null, children)))))))))));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/is-object.js
function isObject(value) {
  const type = typeof value;
  return value != null && (type === "object" || type === "function");
}
var init_is_object = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/is-object.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/css.js
function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}
function variationName(name, value) {
  return `${name}${value.charAt(0).toUpperCase()}${value.slice(1)}`;
}
function sanitizeCustomProperties(styles132) {
  const nonNullValues = Object.entries(styles132).filter(([_, value]) => value != null);
  return nonNullValues.length ? Object.fromEntries(nonNullValues) : void 0;
}
function getResponsiveProps(componentName, componentProp, tokenSubgroup, responsiveProp) {
  if (!responsiveProp)
    return {};
  let result;
  if (!isObject(responsiveProp)) {
    result = {
      [breakpointsAliases[0]]: `var(--p-${tokenSubgroup}-${responsiveProp})`
    };
  } else {
    result = Object.fromEntries(Object.entries(responsiveProp).map(([breakpointAlias, aliasOrScale]) => [breakpointAlias, `var(--p-${tokenSubgroup}-${aliasOrScale})`]));
  }
  return Object.fromEntries(Object.entries(result).map(([breakpointAlias, value]) => [`--pc-${componentName}-${componentProp}-${breakpointAlias}`, value]));
}
function getResponsiveValue(componentName, componentProp, responsiveProp) {
  if (!responsiveProp)
    return {};
  if (!isObject(responsiveProp)) {
    return {
      [`--pc-${componentName}-${componentProp}-${breakpointsAliases[0]}`]: responsiveProp
    };
  }
  return Object.fromEntries(Object.entries(responsiveProp).map(([breakpointAlias, responsiveValue]) => [`--pc-${componentName}-${componentProp}-${breakpointAlias}`, responsiveValue]));
}
var init_css = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/css.js"() {
    init_build();
    init_is_object();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Text/Text.css.js
var styles;
var init_Text_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Text/Text.css.js"() {
    styles = {
      "root": "Polaris-Text--root",
      "block": "Polaris-Text--block",
      "truncate": "Polaris-Text--truncate",
      "visuallyHidden": "Polaris-Text--visuallyHidden",
      "start": "Polaris-Text--start",
      "center": "Polaris-Text--center",
      "end": "Polaris-Text--end",
      "justify": "Polaris-Text--justify",
      "base": "Polaris-Text--base",
      "inherit": "Polaris-Text--inherit",
      "disabled": "Polaris-Text--disabled",
      "success": "Polaris-Text--success",
      "critical": "Polaris-Text--critical",
      "caution": "Polaris-Text--caution",
      "subdued": "Polaris-Text--subdued",
      "magic": "Polaris-Text--magic",
      "magic-subdued": "Polaris-Text__magic--subdued",
      "text-inverse": "Polaris-Text__text--inverse",
      "text-inverse-secondary": "Polaris-Text--textInverseSecondary",
      "headingXs": "Polaris-Text--headingXs",
      "headingSm": "Polaris-Text--headingSm",
      "headingMd": "Polaris-Text--headingMd",
      "headingLg": "Polaris-Text--headingLg",
      "headingXl": "Polaris-Text--headingXl",
      "heading2xl": "Polaris-Text--heading2xl",
      "heading3xl": "Polaris-Text--heading3xl",
      "bodyXs": "Polaris-Text--bodyXs",
      "bodySm": "Polaris-Text--bodySm",
      "bodyMd": "Polaris-Text--bodyMd",
      "bodyLg": "Polaris-Text--bodyLg",
      "regular": "Polaris-Text--regular",
      "medium": "Polaris-Text--medium",
      "semibold": "Polaris-Text--semibold",
      "bold": "Polaris-Text--bold",
      "break": "Polaris-Text--break",
      "numeric": "Polaris-Text--numeric",
      "line-through": "Polaris-Text__line--through"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Text/Text.js
var import_react21, deprecatedVariants, Text;
var init_Text = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Text/Text.js"() {
    import_react21 = __toESM(require_react());
    init_css();
    init_Text_css();
    deprecatedVariants = {
      heading3xl: "heading2xl"
    };
    Text = ({
      alignment,
      as,
      breakWord,
      children,
      tone,
      fontWeight,
      id,
      numeric = false,
      truncate = false,
      variant,
      visuallyHidden = false,
      textDecorationLine
    }) => {
      if (variant && Object.prototype.hasOwnProperty.call(deprecatedVariants, variant)) {
        console.warn(`Deprecation: <Text variant="${variant}" />. The value "${variant}" will be removed in a future major version of Polaris. Use "${deprecatedVariants[variant]}" instead.`);
      }
      const Component7 = as || (visuallyHidden ? "span" : "p");
      const className = classNames(styles.root, variant && styles[variant], fontWeight && styles[fontWeight], (alignment || truncate) && styles.block, alignment && styles[alignment], breakWord && styles.break, tone && styles[tone], numeric && styles.numeric, truncate && styles.truncate, visuallyHidden && styles.visuallyHidden, textDecorationLine && styles[textDecorationLine]);
      return /* @__PURE__ */ import_react21.default.createElement(Component7, Object.assign({
        className
      }, id && {
        id
      }), children);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.css.js
var styles2;
var init_Spinner_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.css.js"() {
    styles2 = {
      "Spinner": "Polaris-Spinner",
      "sizeSmall": "Polaris-Spinner--sizeSmall",
      "sizeLarge": "Polaris-Spinner--sizeLarge"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.js
function Spinner({
  size: size2 = "large",
  accessibilityLabel,
  hasFocusableParent
}) {
  const isAfterInitialMount = useIsAfterInitialMount();
  const className = classNames(styles2.Spinner, size2 && styles2[variationName("size", size2)]);
  const spinnerSVGMarkup = size2 === "large" ? /* @__PURE__ */ import_react22.default.createElement("svg", {
    viewBox: "0 0 44 44",
    xmlns: "http://www.w3.org/2000/svg"
  }, /* @__PURE__ */ import_react22.default.createElement("path", {
    d: "M15.542 1.487A21.507 21.507 0 00.5 22c0 11.874 9.626 21.5 21.5 21.5 9.847 0 18.364-6.675 20.809-16.072a1.5 1.5 0 00-2.904-.756C37.803 34.755 30.473 40.5 22 40.5 11.783 40.5 3.5 32.217 3.5 22c0-8.137 5.3-15.247 12.942-17.65a1.5 1.5 0 10-.9-2.863z"
  })) : /* @__PURE__ */ import_react22.default.createElement("svg", {
    viewBox: "0 0 20 20",
    xmlns: "http://www.w3.org/2000/svg"
  }, /* @__PURE__ */ import_react22.default.createElement("path", {
    d: "M7.229 1.173a9.25 9.25 0 1011.655 11.412 1.25 1.25 0 10-2.4-.698 6.75 6.75 0 11-8.506-8.329 1.25 1.25 0 10-.75-2.385z"
  }));
  const spanAttributes = {
    ...!hasFocusableParent && {
      role: "status"
    }
  };
  const accessibilityLabelMarkup = (isAfterInitialMount || !hasFocusableParent) && /* @__PURE__ */ import_react22.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel);
  return /* @__PURE__ */ import_react22.default.createElement(import_react22.default.Fragment, null, /* @__PURE__ */ import_react22.default.createElement("span", {
    className
  }, spinnerSVGMarkup), /* @__PURE__ */ import_react22.default.createElement("span", spanAttributes, accessibilityLabelMarkup));
}
var import_react22;
var init_Spinner = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Spinner/Spinner.js"() {
    import_react22 = __toESM(require_react());
    init_css();
    init_use_is_after_initial_mount();
    init_Spinner_css();
    init_Text();
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/AlertCircleIcon.svg.mjs
var import_react23, SvgAlertCircleIcon;
var init_AlertCircleIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/AlertCircleIcon.svg.mjs"() {
    import_react23 = __toESM(require_react(), 1);
    SvgAlertCircleIcon = function SvgAlertCircleIcon2(props) {
      return /* @__PURE__ */ import_react23.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react23.default.createElement("path", {
        d: "M10 6a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"
      }), /* @__PURE__ */ import_react23.default.createElement("path", {
        d: "M11 13a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"
      }), /* @__PURE__ */ import_react23.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Zm-1.5 0a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"
      }));
    };
    SvgAlertCircleIcon.displayName = "AlertCircleIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/AlertDiamondIcon.svg.mjs
var import_react24, SvgAlertDiamondIcon;
var init_AlertDiamondIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/AlertDiamondIcon.svg.mjs"() {
    import_react24 = __toESM(require_react(), 1);
    SvgAlertDiamondIcon = function SvgAlertDiamondIcon2(props) {
      return /* @__PURE__ */ import_react24.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react24.default.createElement("path", {
        d: "M10 6a.75.75 0 0 1 .75.75v3.5a.75.75 0 0 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"
      }), /* @__PURE__ */ import_react24.default.createElement("path", {
        d: "M11 13a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"
      }), /* @__PURE__ */ import_react24.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.237 3.177a1.75 1.75 0 0 0-2.474 0l-5.586 5.585a1.75 1.75 0 0 0 0 2.475l5.586 5.586a1.75 1.75 0 0 0 2.474 0l5.586-5.586a1.75 1.75 0 0 0 0-2.475l-5.586-5.585Zm-1.414 1.06a.25.25 0 0 1 .354 0l5.586 5.586a.25.25 0 0 1 0 .354l-5.586 5.585a.25.25 0 0 1-.354 0l-5.586-5.585a.25.25 0 0 1 0-.354l5.586-5.586Z"
      }));
    };
    SvgAlertDiamondIcon.displayName = "AlertDiamondIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/AlertTriangleIcon.svg.mjs
var import_react25, SvgAlertTriangleIcon;
var init_AlertTriangleIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/AlertTriangleIcon.svg.mjs"() {
    import_react25 = __toESM(require_react(), 1);
    SvgAlertTriangleIcon = function SvgAlertTriangleIcon2(props) {
      return /* @__PURE__ */ import_react25.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react25.default.createElement("path", {
        d: "M10 6.75a.75.75 0 0 1 .75.75v3.5a.75.75 0 1 1-1.5 0v-3.5a.75.75 0 0 1 .75-.75Z"
      }), /* @__PURE__ */ import_react25.default.createElement("path", {
        d: "M11 13.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"
      }), /* @__PURE__ */ import_react25.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3.5c-1.045 0-1.784.702-2.152 1.447a449.26 449.26 0 0 1-2.005 3.847l-.028.052a403.426 403.426 0 0 0-2.008 3.856c-.372.752-.478 1.75.093 2.614.57.863 1.542 1.184 2.464 1.184h7.272c.922 0 1.895-.32 2.464-1.184.57-.864.465-1.862.093-2.614-.21-.424-1.113-2.147-2.004-3.847l-.032-.061a429.497 429.497 0 0 1-2.005-3.847c-.368-.745-1.107-1.447-2.152-1.447Zm-.808 2.112c.404-.816 1.212-.816 1.616 0 .202.409 1.112 2.145 2.022 3.88a418.904 418.904 0 0 1 2.018 3.875c.404.817 0 1.633-1.212 1.633h-7.272c-1.212 0-1.617-.816-1.212-1.633.202-.408 1.113-2.147 2.023-3.883a421.932 421.932 0 0 0 2.017-3.872Z"
      }));
    };
    SvgAlertTriangleIcon.displayName = "AlertTriangleIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowDownIcon.svg.mjs
var import_react26, SvgArrowDownIcon;
var init_ArrowDownIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowDownIcon.svg.mjs"() {
    import_react26 = __toESM(require_react(), 1);
    SvgArrowDownIcon = function SvgArrowDownIcon2(props) {
      return /* @__PURE__ */ import_react26.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react26.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 3.5a.75.75 0 0 1 .75.75v9.69l2.72-2.72a.75.75 0 0 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l2.72 2.72v-9.69a.75.75 0 0 1 .75-.75Z"
      }));
    };
    SvgArrowDownIcon.displayName = "ArrowDownIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowLeftIcon.svg.mjs
var import_react27, SvgArrowLeftIcon;
var init_ArrowLeftIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowLeftIcon.svg.mjs"() {
    import_react27 = __toESM(require_react(), 1);
    SvgArrowLeftIcon = function SvgArrowLeftIcon2(props) {
      return /* @__PURE__ */ import_react27.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react27.default.createElement("path", {
        fillRule: "evenodd",
        d: "M16.5 10a.75.75 0 0 1-.75.75h-9.69l2.72 2.72a.75.75 0 0 1-1.06 1.06l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 1 1 1.06 1.06l-2.72 2.72h9.69a.75.75 0 0 1 .75.75Z"
      }));
    };
    SvgArrowLeftIcon.displayName = "ArrowLeftIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowRightIcon.svg.mjs
var import_react28, SvgArrowRightIcon;
var init_ArrowRightIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowRightIcon.svg.mjs"() {
    import_react28 = __toESM(require_react(), 1);
    SvgArrowRightIcon = function SvgArrowRightIcon2(props) {
      return /* @__PURE__ */ import_react28.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react28.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3.5 10a.75.75 0 0 1 .75-.75h9.69l-2.72-2.72a.75.75 0 1 1 1.06-1.06l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06l2.72-2.72h-9.69a.75.75 0 0 1-.75-.75Z"
      }));
    };
    SvgArrowRightIcon.displayName = "ArrowRightIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowUpIcon.svg.mjs
var import_react29, SvgArrowUpIcon;
var init_ArrowUpIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ArrowUpIcon.svg.mjs"() {
    import_react29 = __toESM(require_react(), 1);
    SvgArrowUpIcon = function SvgArrowUpIcon2(props) {
      return /* @__PURE__ */ import_react29.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react29.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 16.5a.75.75 0 0 1-.75-.75v-9.69l-2.72 2.72a.75.75 0 1 1-1.06-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 1 1-1.06 1.06l-2.72-2.72v9.69a.75.75 0 0 1-.75.75Z"
      }));
    };
    SvgArrowUpIcon.displayName = "ArrowUpIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/CheckIcon.svg.mjs
var import_react30, SvgCheckIcon;
var init_CheckIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/CheckIcon.svg.mjs"() {
    import_react30 = __toESM(require_react(), 1);
    SvgCheckIcon = function SvgCheckIcon2(props) {
      return /* @__PURE__ */ import_react30.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react30.default.createElement("path", {
        fillRule: "evenodd",
        d: "M15.78 5.97a.75.75 0 0 1 0 1.06l-6.5 6.5a.75.75 0 0 1-1.06 0l-3.25-3.25a.75.75 0 1 1 1.06-1.06l2.72 2.72 5.97-5.97a.75.75 0 0 1 1.06 0Z"
      }));
    };
    SvgCheckIcon.displayName = "CheckIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/CheckboxIcon.svg.mjs
var import_react31, SvgCheckboxIcon;
var init_CheckboxIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/CheckboxIcon.svg.mjs"() {
    import_react31 = __toESM(require_react(), 1);
    SvgCheckboxIcon = function SvgCheckboxIcon2(props) {
      return /* @__PURE__ */ import_react31.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react31.default.createElement("path", {
        d: "M13.28 8.78a.75.75 0 0 0-1.06-1.06l-2.97 2.97-1.22-1.22a.75.75 0 0 0-1.06 1.06l1.75 1.75a.75.75 0 0 0 1.06 0l3.5-3.5Z"
      }), /* @__PURE__ */ import_react31.default.createElement("path", {
        fillRule: "evenodd",
        d: "M6.25 3.5a2.75 2.75 0 0 0-2.75 2.75v7.5a2.75 2.75 0 0 0 2.75 2.75h7.5a2.75 2.75 0 0 0 2.75-2.75v-7.5a2.75 2.75 0 0 0-2.75-2.75h-7.5Zm-1.25 2.75c0-.69.56-1.25 1.25-1.25h7.5c.69 0 1.25.56 1.25 1.25v7.5c0 .69-.56 1.25-1.25 1.25h-7.5c-.69 0-1.25-.56-1.25-1.25v-7.5Z"
      }));
    };
    SvgCheckboxIcon.displayName = "CheckboxIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronDownIcon.svg.mjs
var import_react32, SvgChevronDownIcon;
var init_ChevronDownIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronDownIcon.svg.mjs"() {
    import_react32 = __toESM(require_react(), 1);
    SvgChevronDownIcon = function SvgChevronDownIcon2(props) {
      return /* @__PURE__ */ import_react32.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react32.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5.72 8.47a.75.75 0 0 1 1.06 0l3.47 3.47 3.47-3.47a.75.75 0 1 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06Z"
      }));
    };
    SvgChevronDownIcon.displayName = "ChevronDownIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronLeftIcon.svg.mjs
var import_react33, SvgChevronLeftIcon;
var init_ChevronLeftIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronLeftIcon.svg.mjs"() {
    import_react33 = __toESM(require_react(), 1);
    SvgChevronLeftIcon = function SvgChevronLeftIcon2(props) {
      return /* @__PURE__ */ import_react33.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react33.default.createElement("path", {
        fillRule: "evenodd",
        d: "M11.764 5.204a.75.75 0 0 1 .032 1.06l-3.516 3.736 3.516 3.736a.75.75 0 1 1-1.092 1.028l-4-4.25a.75.75 0 0 1 0-1.028l4-4.25a.75.75 0 0 1 1.06-.032Z"
      }));
    };
    SvgChevronLeftIcon.displayName = "ChevronLeftIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronRightIcon.svg.mjs
var import_react34, SvgChevronRightIcon;
var init_ChevronRightIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronRightIcon.svg.mjs"() {
    import_react34 = __toESM(require_react(), 1);
    SvgChevronRightIcon = function SvgChevronRightIcon2(props) {
      return /* @__PURE__ */ import_react34.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react34.default.createElement("path", {
        fillRule: "evenodd",
        d: "M7.72 14.53a.75.75 0 0 1 0-1.06l3.47-3.47-3.47-3.47a.75.75 0 0 1 1.06-1.06l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0Z"
      }));
    };
    SvgChevronRightIcon.displayName = "ChevronRightIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronUpIcon.svg.mjs
var import_react35, SvgChevronUpIcon;
var init_ChevronUpIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ChevronUpIcon.svg.mjs"() {
    import_react35 = __toESM(require_react(), 1);
    SvgChevronUpIcon = function SvgChevronUpIcon2(props) {
      return /* @__PURE__ */ import_react35.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react35.default.createElement("path", {
        fillRule: "evenodd",
        d: "M14.53 12.28a.75.75 0 0 1-1.06 0l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06Z"
      }));
    };
    SvgChevronUpIcon.displayName = "ChevronUpIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/DeleteIcon.svg.mjs
var import_react36, SvgDeleteIcon;
var init_DeleteIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/DeleteIcon.svg.mjs"() {
    import_react36 = __toESM(require_react(), 1);
    SvgDeleteIcon = function SvgDeleteIcon2(props) {
      return /* @__PURE__ */ import_react36.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react36.default.createElement("path", {
        d: "M11.5 8.25a.75.75 0 0 1 .75.75v4.25a.75.75 0 0 1-1.5 0v-4.25a.75.75 0 0 1 .75-.75Z"
      }), /* @__PURE__ */ import_react36.default.createElement("path", {
        d: "M9.25 9a.75.75 0 0 0-1.5 0v4.25a.75.75 0 0 0 1.5 0v-4.25Z"
      }), /* @__PURE__ */ import_react36.default.createElement("path", {
        fillRule: "evenodd",
        d: "M7.25 5.25a2.75 2.75 0 0 1 5.5 0h3a.75.75 0 0 1 0 1.5h-.75v5.45c0 1.68 0 2.52-.327 3.162a3 3 0 0 1-1.311 1.311c-.642.327-1.482.327-3.162.327h-.4c-1.68 0-2.52 0-3.162-.327a3 3 0 0 1-1.311-1.311c-.327-.642-.327-1.482-.327-3.162v-5.45h-.75a.75.75 0 0 1 0-1.5h3Zm1.5 0a1.25 1.25 0 1 1 2.5 0h-2.5Zm-2.25 1.5h7v5.45c0 .865-.001 1.423-.036 1.848-.033.408-.09.559-.128.633a1.5 1.5 0 0 1-.655.655c-.074.038-.225.095-.633.128-.425.035-.983.036-1.848.036h-.4c-.865 0-1.423-.001-1.848-.036-.408-.033-.559-.09-.633-.128a1.5 1.5 0 0 1-.656-.655c-.037-.074-.094-.225-.127-.633-.035-.425-.036-.983-.036-1.848v-5.45Z"
      }));
    };
    SvgDeleteIcon.displayName = "DeleteIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/DuplicateIcon.svg.mjs
var import_react37, SvgDuplicateIcon;
var init_DuplicateIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/DuplicateIcon.svg.mjs"() {
    import_react37 = __toESM(require_react(), 1);
    SvgDuplicateIcon = function SvgDuplicateIcon2(props) {
      return /* @__PURE__ */ import_react37.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react37.default.createElement("path", {
        d: "M11.25 8.5c-.414 0-.75.336-.75.75v1.25h-1.25c-.414 0-.75.336-.75.75s.336.75.75.75h1.25v1.25c0 .414.336.75.75.75s.75-.336.75-.75v-1.25h1.25c.414 0 .75-.336.75-.75s-.336-.75-.75-.75h-1.25v-1.25c0-.414-.336-.75-.75-.75Z"
      }), /* @__PURE__ */ import_react37.default.createElement("path", {
        fillRule: "evenodd",
        d: "M8.75 16.5c-1.438 0-2.618-1.104-2.74-2.51-1.406-.122-2.51-1.302-2.51-2.74v-5c0-1.519 1.231-2.75 2.75-2.75h5c1.438 0 2.618 1.104 2.74 2.51 1.406.122 2.51 1.302 2.51 2.74v5c0 1.519-1.231 2.75-2.75 2.75h-5Zm0-10.5c-1.519 0-2.75 1.231-2.75 2.75v3.725c-.57-.116-1-.62-1-1.225v-5c0-.69.56-1.25 1.25-1.25h5c.605 0 1.11.43 1.225 1h-3.725Zm0 1.5c-.69 0-1.25.56-1.25 1.25v5c0 .69.56 1.25 1.25 1.25h5c.69 0 1.25-.56 1.25-1.25v-5c0-.69-.56-1.25-1.25-1.25h-5Z"
      }));
    };
    SvgDuplicateIcon.displayName = "DuplicateIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/EditIcon.svg.mjs
var import_react38, SvgEditIcon;
var init_EditIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/EditIcon.svg.mjs"() {
    import_react38 = __toESM(require_react(), 1);
    SvgEditIcon = function SvgEditIcon2(props) {
      return /* @__PURE__ */ import_react38.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react38.default.createElement("path", {
        fillRule: "evenodd",
        d: "M15.655 4.344a2.695 2.695 0 0 0-3.81 0l-.599.599-.009-.009-1.06 1.06.008.01-5.88 5.88a2.75 2.75 0 0 0-.805 1.944v1.922a.75.75 0 0 0 .75.75h1.922a2.75 2.75 0 0 0 1.944-.806l7.54-7.539a2.695 2.695 0 0 0 0-3.81Zm-4.409 2.72-5.88 5.88a1.25 1.25 0 0 0-.366.884v1.172h1.172c.331 0 .65-.132.883-.366l5.88-5.88-1.689-1.69Zm2.75.629.599-.599a1.195 1.195 0 1 0-1.69-1.689l-.598.599 1.69 1.689Z"
      }));
    };
    SvgEditIcon.displayName = "EditIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ExitIcon.svg.mjs
var import_react39, SvgExitIcon;
var init_ExitIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/ExitIcon.svg.mjs"() {
    import_react39 = __toESM(require_react(), 1);
    SvgExitIcon = function SvgExitIcon2(props) {
      return /* @__PURE__ */ import_react39.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react39.default.createElement("path", {
        d: "M9.75 3c-1.243 0-2.25 1.007-2.25 2.25 0 .414.336.75.75.75s.75-.336.75-.75.336-.75.75-.75h3.5c.69 0 1.25.56 1.25 1.25v8.5c0 .69-.56 1.25-1.25 1.25h-3.5c-.414 0-.75-.336-.75-.75s-.336-.75-.75-.75-.75.336-.75.75c0 1.243 1.007 2.25 2.25 2.25h3.5c1.519 0 2.75-1.231 2.75-2.75v-8.5c0-1.519-1.231-2.75-2.75-2.75h-3.5Z"
      }), /* @__PURE__ */ import_react39.default.createElement("path", {
        d: "M12.25 10.75c.414 0 .75-.336.75-.75s-.336-.75-.75-.75h-5.69l.97-.97c.293-.293.293-.767 0-1.06-.293-.293-.767-.293-1.06 0l-2.25 2.25c-.141.14-.22.331-.22.53s.079.39.22.53l2.25 2.25c.293.293.767.293 1.06 0 .293-.293.293-.767 0-1.06l-.97-.97h5.69Z"
      }));
    };
    SvgExitIcon.displayName = "ExitIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/FilterIcon.svg.mjs
var import_react40, SvgFilterIcon;
var init_FilterIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/FilterIcon.svg.mjs"() {
    import_react40 = __toESM(require_react(), 1);
    SvgFilterIcon = function SvgFilterIcon2(props) {
      return /* @__PURE__ */ import_react40.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react40.default.createElement("path", {
        d: "M3 6a.75.75 0 0 1 .75-.75h12.5a.75.75 0 0 1 0 1.5h-12.5a.75.75 0 0 1-.75-.75Z"
      }), /* @__PURE__ */ import_react40.default.createElement("path", {
        d: "M6.75 14a.75.75 0 0 1 .75-.75h5a.75.75 0 0 1 0 1.5h-5a.75.75 0 0 1-.75-.75Z"
      }), /* @__PURE__ */ import_react40.default.createElement("path", {
        d: "M5.5 9.25a.75.75 0 0 0 0 1.5h9a.75.75 0 0 0 0-1.5h-9Z"
      }));
    };
    SvgFilterIcon.displayName = "FilterIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/InfoIcon.svg.mjs
var import_react41, SvgInfoIcon;
var init_InfoIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/InfoIcon.svg.mjs"() {
    import_react41 = __toESM(require_react(), 1);
    SvgInfoIcon = function SvgInfoIcon2(props) {
      return /* @__PURE__ */ import_react41.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react41.default.createElement("path", {
        d: "M10 14a.75.75 0 0 1-.75-.75v-3.5a.75.75 0 0 1 1.5 0v3.5a.75.75 0 0 1-.75.75Z"
      }), /* @__PURE__ */ import_react41.default.createElement("path", {
        d: "M9 7a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z"
      }), /* @__PURE__ */ import_react41.default.createElement("path", {
        fillRule: "evenodd",
        d: "M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Zm-1.5 0a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0Z"
      }));
    };
    SvgInfoIcon.displayName = "InfoIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/LayoutColumns3Icon.svg.mjs
var import_react42, SvgLayoutColumns3Icon;
var init_LayoutColumns3Icon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/LayoutColumns3Icon.svg.mjs"() {
    import_react42 = __toESM(require_react(), 1);
    SvgLayoutColumns3Icon = function SvgLayoutColumns3Icon2(props) {
      return /* @__PURE__ */ import_react42.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react42.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 6.75c0-2.071 1.679-3.75 3.75-3.75h6.5c2.071 0 3.75 1.679 3.75 3.75v6.5c0 2.071-1.679 3.75-3.75 3.75h-6.5c-2.071 0-3.75-1.679-3.75-3.75v-6.5Zm3.75-2.25c-1.243 0-2.25 1.007-2.25 2.25v6.5c0 1.243 1.007 2.25 2.25 2.25h.5v-11h-.5Zm4.5 11h-2.5v-11h2.5v11Zm1.5 0h.5c1.243 0 2.25-1.007 2.25-2.25v-6.5c0-1.243-1.007-2.25-2.25-2.25h-.5v11Z"
      }));
    };
    SvgLayoutColumns3Icon.displayName = "LayoutColumns3Icon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/MenuHorizontalIcon.svg.mjs
var import_react43, SvgMenuHorizontalIcon;
var init_MenuHorizontalIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/MenuHorizontalIcon.svg.mjs"() {
    import_react43 = __toESM(require_react(), 1);
    SvgMenuHorizontalIcon = function SvgMenuHorizontalIcon2(props) {
      return /* @__PURE__ */ import_react43.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react43.default.createElement("path", {
        d: "M6 10a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"
      }), /* @__PURE__ */ import_react43.default.createElement("path", {
        d: "M11.5 10a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"
      }), /* @__PURE__ */ import_react43.default.createElement("path", {
        d: "M17 10a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0Z"
      }));
    };
    SvgMenuHorizontalIcon.displayName = "MenuHorizontalIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/MenuIcon.svg.mjs
var import_react44, SvgMenuIcon;
var init_MenuIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/MenuIcon.svg.mjs"() {
    import_react44 = __toESM(require_react(), 1);
    SvgMenuIcon = function SvgMenuIcon2(props) {
      return /* @__PURE__ */ import_react44.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react44.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 4.75a.75.75 0 0 1 .75-.75h12.5a.75.75 0 0 1 0 1.5h-12.5a.75.75 0 0 1-.75-.75Z"
      }), /* @__PURE__ */ import_react44.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 10a.75.75 0 0 1 .75-.75h12.5a.75.75 0 0 1 0 1.5h-12.5a.75.75 0 0 1-.75-.75Z"
      }), /* @__PURE__ */ import_react44.default.createElement("path", {
        fillRule: "evenodd",
        d: "M3 15.25a.75.75 0 0 1 .75-.75h12.5a.75.75 0 0 1 0 1.5h-12.5a.75.75 0 0 1-.75-.75Z"
      }));
    };
    SvgMenuIcon.displayName = "MenuIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/MinusIcon.svg.mjs
var import_react45, SvgMinusIcon;
var init_MinusIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/MinusIcon.svg.mjs"() {
    import_react45 = __toESM(require_react(), 1);
    SvgMinusIcon = function SvgMinusIcon2(props) {
      return /* @__PURE__ */ import_react45.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react45.default.createElement("path", {
        fillRule: "evenodd",
        d: "M5 10c0-.414.336-.75.75-.75h8.5c.414 0 .75.336.75.75s-.336.75-.75.75h-8.5c-.414 0-.75-.336-.75-.75Z"
      }));
    };
    SvgMinusIcon.displayName = "MinusIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/PlayIcon.svg.mjs
var import_react46, SvgPlayIcon;
var init_PlayIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/PlayIcon.svg.mjs"() {
    import_react46 = __toESM(require_react(), 1);
    SvgPlayIcon = function SvgPlayIcon2(props) {
      return /* @__PURE__ */ import_react46.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react46.default.createElement("path", {
        fillRule: "evenodd",
        d: "M15.375 8.485c1.167.674 1.167 2.358 0 3.031l-7.5 4.33c-1.167.674-2.625-.168-2.625-1.515v-8.66c0-1.348 1.458-2.19 2.625-1.516l7.5 4.33Zm-.75 1.732a.25.25 0 0 0 0-.433l-7.5-4.33a.25.25 0 0 0-.375.217v8.66a.25.25 0 0 0 .375.216l7.5-4.33Z"
      }));
    };
    SvgPlayIcon.displayName = "PlayIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/PlusIcon.svg.mjs
var import_react47, SvgPlusIcon;
var init_PlusIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/PlusIcon.svg.mjs"() {
    import_react47 = __toESM(require_react(), 1);
    SvgPlusIcon = function SvgPlusIcon2(props) {
      return /* @__PURE__ */ import_react47.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react47.default.createElement("path", {
        d: "M10.75 5.75c0-.414-.336-.75-.75-.75s-.75.336-.75.75v3.5h-3.5c-.414 0-.75.336-.75.75s.336.75.75.75h3.5v3.5c0 .414.336.75.75.75s.75-.336.75-.75v-3.5h3.5c.414 0 .75-.336.75-.75s-.336-.75-.75-.75h-3.5v-3.5Z"
      }));
    };
    SvgPlusIcon.displayName = "PlusIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SearchIcon.svg.mjs
var import_react48, SvgSearchIcon;
var init_SearchIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SearchIcon.svg.mjs"() {
    import_react48 = __toESM(require_react(), 1);
    SvgSearchIcon = function SvgSearchIcon2(props) {
      return /* @__PURE__ */ import_react48.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react48.default.createElement("path", {
        fillRule: "evenodd",
        d: "M12.323 13.383a5.5 5.5 0 1 1 1.06-1.06l2.897 2.897a.75.75 0 1 1-1.06 1.06l-2.897-2.897Zm.677-4.383a4 4 0 1 1-8 0 4 4 0 0 1 8 0Z"
      }));
    };
    SvgSearchIcon.displayName = "SearchIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SelectIcon.svg.mjs
var import_react49, SvgSelectIcon;
var init_SelectIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SelectIcon.svg.mjs"() {
    import_react49 = __toESM(require_react(), 1);
    SvgSelectIcon = function SvgSelectIcon2(props) {
      return /* @__PURE__ */ import_react49.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react49.default.createElement("path", {
        d: "M10.884 4.323a1.25 1.25 0 0 0-1.768 0l-2.646 2.647a.75.75 0 0 0 1.06 1.06l2.47-2.47 2.47 2.47a.75.75 0 1 0 1.06-1.06l-2.646-2.647Z"
      }), /* @__PURE__ */ import_react49.default.createElement("path", {
        d: "m13.53 13.03-2.646 2.647a1.25 1.25 0 0 1-1.768 0l-2.646-2.647a.75.75 0 0 1 1.06-1.06l2.47 2.47 2.47-2.47a.75.75 0 0 1 1.06 1.06Z"
      }));
    };
    SvgSelectIcon.displayName = "SelectIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SortAscendingIcon.svg.mjs
var import_react50, SvgSortAscendingIcon;
var init_SortAscendingIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SortAscendingIcon.svg.mjs"() {
    import_react50 = __toESM(require_react(), 1);
    SvgSortAscendingIcon = function SvgSortAscendingIcon2(props) {
      return /* @__PURE__ */ import_react50.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react50.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9.116 4.323a1.25 1.25 0 0 1 1.768 0l2.646 2.647a.75.75 0 0 1-1.06 1.06l-2.47-2.47-2.47 2.47a.75.75 0 1 1-1.06-1.06l2.646-2.647Z"
      }), /* @__PURE__ */ import_react50.default.createElement("path", {
        fillOpacity: 0.33,
        fillRule: "evenodd",
        d: "M9.116 15.677a1.25 1.25 0 0 0 1.768 0l2.646-2.647a.75.75 0 0 0-1.06-1.06l-2.47 2.47-2.47-2.47a.75.75 0 0 0-1.06 1.06l2.646 2.647Z"
      }));
    };
    SvgSortAscendingIcon.displayName = "SortAscendingIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SortDescendingIcon.svg.mjs
var import_react51, SvgSortDescendingIcon;
var init_SortDescendingIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SortDescendingIcon.svg.mjs"() {
    import_react51 = __toESM(require_react(), 1);
    SvgSortDescendingIcon = function SvgSortDescendingIcon2(props) {
      return /* @__PURE__ */ import_react51.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react51.default.createElement("path", {
        fillOpacity: 0.33,
        fillRule: "evenodd",
        d: "M9.116 4.823a1.25 1.25 0 0 1 1.768 0l2.646 2.647a.75.75 0 0 1-1.06 1.06l-2.47-2.47-2.47 2.47a.75.75 0 1 1-1.06-1.06l2.646-2.647Z"
      }), /* @__PURE__ */ import_react51.default.createElement("path", {
        fillRule: "evenodd",
        d: "M9.116 15.177a1.25 1.25 0 0 0 1.768 0l2.646-2.647a.75.75 0 0 0-1.06-1.06l-2.47 2.47-2.47-2.47a.75.75 0 0 0-1.06 1.06l2.646 2.647Z"
      }));
    };
    SvgSortDescendingIcon.displayName = "SortDescendingIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SortIcon.svg.mjs
var import_react52, SvgSortIcon;
var init_SortIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/SortIcon.svg.mjs"() {
    import_react52 = __toESM(require_react(), 1);
    SvgSortIcon = function SvgSortIcon2(props) {
      return /* @__PURE__ */ import_react52.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react52.default.createElement("path", {
        d: "M7.75 6.06v7.69a.75.75 0 0 1-1.5 0v-7.69l-1.72 1.72a.75.75 0 0 1-1.06-1.06l3-3a.75.75 0 0 1 1.06 0l3 3a.75.75 0 1 1-1.06 1.06l-1.72-1.72Z"
      }), /* @__PURE__ */ import_react52.default.createElement("path", {
        d: "M13.75 6.25a.75.75 0 0 0-1.5 0v7.69l-1.72-1.72a.75.75 0 1 0-1.06 1.06l3 3a.75.75 0 0 0 1.06 0l3-3a.75.75 0 1 0-1.06-1.06l-1.72 1.72v-7.69Z"
      }));
    };
    SvgSortIcon.displayName = "SortIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/UploadIcon.svg.mjs
var import_react53, SvgUploadIcon;
var init_UploadIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/UploadIcon.svg.mjs"() {
    import_react53 = __toESM(require_react(), 1);
    SvgUploadIcon = function SvgUploadIcon2(props) {
      return /* @__PURE__ */ import_react53.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react53.default.createElement("path", {
        d: "M16.5 6.26a.75.75 0 0 1-1.5 0v-.51a.75.75 0 0 0-.75-.75h-8.5a.75.75 0 0 0-.75.75v.51a.75.75 0 0 1-1.5 0v-.51a2.25 2.25 0 0 1 2.25-2.25h8.5a2.25 2.25 0 0 1 2.25 2.25v.51Z"
      }), /* @__PURE__ */ import_react53.default.createElement("path", {
        d: "M10.75 16.01a.75.75 0 0 1-1.5 0v-6.69l-1.72 1.72a.75.75 0 1 1-1.06-1.06l3-3a.75.75 0 0 1 1.06 0l3 3a.75.75 0 1 1-1.06 1.06l-1.72-1.72v6.69Z"
      }));
    };
    SvgUploadIcon.displayName = "UploadIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/XCircleIcon.svg.mjs
var import_react54, SvgXCircleIcon;
var init_XCircleIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/XCircleIcon.svg.mjs"() {
    import_react54 = __toESM(require_react(), 1);
    SvgXCircleIcon = function SvgXCircleIcon2(props) {
      return /* @__PURE__ */ import_react54.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react54.default.createElement("path", {
        d: "M13.03 6.97a.75.75 0 0 1 0 1.06l-1.97 1.97 1.97 1.97a.75.75 0 1 1-1.06 1.06l-1.97-1.97-1.97 1.97a.75.75 0 0 1-1.06-1.06l1.97-1.97-1.97-1.97a.75.75 0 0 1 1.06-1.06l1.97 1.97 1.97-1.97a.75.75 0 0 1 1.06 0Z"
      }), /* @__PURE__ */ import_react54.default.createElement("path", {
        fillRule: "evenodd",
        d: "M10 17a7 7 0 1 0 0-14 7 7 0 0 0 0 14Zm0-1.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z"
      }));
    };
    SvgXCircleIcon.displayName = "XCircleIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/XIcon.svg.mjs
var import_react55, SvgXIcon;
var init_XIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/XIcon.svg.mjs"() {
    import_react55 = __toESM(require_react(), 1);
    SvgXIcon = function SvgXIcon2(props) {
      return /* @__PURE__ */ import_react55.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react55.default.createElement("path", {
        d: "M12.72 13.78a.75.75 0 1 0 1.06-1.06l-2.72-2.72 2.72-2.72a.75.75 0 0 0-1.06-1.06l-2.72 2.72-2.72-2.72a.75.75 0 0 0-1.06 1.06l2.72 2.72-2.72 2.72a.75.75 0 1 0 1.06 1.06l2.72-2.72 2.72 2.72Z"
      }));
    };
    SvgXIcon.displayName = "XIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/XSmallIcon.svg.mjs
var import_react56, SvgXSmallIcon;
var init_XSmallIcon_svg = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/icons/XSmallIcon.svg.mjs"() {
    import_react56 = __toESM(require_react(), 1);
    SvgXSmallIcon = function SvgXSmallIcon2(props) {
      return /* @__PURE__ */ import_react56.default.createElement("svg", Object.assign({
        viewBox: "0 0 20 20"
      }, props), /* @__PURE__ */ import_react56.default.createElement("path", {
        d: "M12.72 13.78a.75.75 0 1 0 1.06-1.06l-2.72-2.72 2.72-2.72a.75.75 0 0 0-1.06-1.06l-2.72 2.72-2.72-2.72a.75.75 0 0 0-1.06 1.06l2.72 2.72-2.72 2.72a.75.75 0 1 0 1.06 1.06l2.72-2.72 2.72 2.72Z"
      }));
    };
    SvgXSmallIcon.displayName = "XSmallIcon";
  }
});

// node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/index.mjs
var import_react57;
var init_dist = __esm({
  "node_modules/@shopify/polaris/node_modules/@shopify/polaris-icons/dist/index.mjs"() {
    init_AlertCircleIcon_svg();
    init_AlertDiamondIcon_svg();
    init_AlertTriangleIcon_svg();
    init_ArrowDownIcon_svg();
    init_ArrowLeftIcon_svg();
    init_ArrowRightIcon_svg();
    init_ArrowUpIcon_svg();
    init_CheckIcon_svg();
    init_CheckboxIcon_svg();
    init_ChevronDownIcon_svg();
    init_ChevronLeftIcon_svg();
    init_ChevronRightIcon_svg();
    init_ChevronUpIcon_svg();
    init_DeleteIcon_svg();
    init_DuplicateIcon_svg();
    init_EditIcon_svg();
    init_ExitIcon_svg();
    init_FilterIcon_svg();
    init_InfoIcon_svg();
    init_LayoutColumns3Icon_svg();
    init_MenuHorizontalIcon_svg();
    init_MenuIcon_svg();
    init_MinusIcon_svg();
    init_PlayIcon_svg();
    init_PlusIcon_svg();
    init_SearchIcon_svg();
    init_SelectIcon_svg();
    init_SortAscendingIcon_svg();
    init_SortDescendingIcon_svg();
    init_SortIcon_svg();
    init_UploadIcon_svg();
    init_XCircleIcon_svg();
    init_XIcon_svg();
    init_XSmallIcon_svg();
    import_react57 = __toESM(require_react(), 1);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/is-element-in-viewport.js
function isElementInViewport(element) {
  const {
    top,
    left,
    bottom,
    right
  } = element.getBoundingClientRect();
  return top >= 0 && right <= window.innerWidth && bottom <= window.innerHeight && left >= 0;
}
var init_is_element_in_viewport = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/is-element-in-viewport.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/focus.js
function nextFocusableNode(node, filter) {
  const allFocusableElements = [...document.querySelectorAll(FOCUSABLE_SELECTOR)];
  const sliceLocation = allFocusableElements.indexOf(node) + 1;
  const focusableElementsAfterNode = allFocusableElements.slice(sliceLocation);
  for (const focusableElement of focusableElementsAfterNode) {
    if (isElementInViewport(focusableElement) && (!filter || filter && filter(focusableElement))) {
      return focusableElement;
    }
  }
  return null;
}
function findFirstFocusableNode(element, onlyDescendants = true) {
  if (!onlyDescendants && matches(element, FOCUSABLE_SELECTOR)) {
    return element;
  }
  return element.querySelector(FOCUSABLE_SELECTOR);
}
function findFirstFocusableNodeIncludingDisabled(element) {
  const focusableSelector = `a,button,frame,iframe,input:not([type=hidden]),select,textarea,*[tabindex]`;
  if (matches(element, focusableSelector)) {
    return element;
  }
  return element.querySelector(focusableSelector);
}
function focusFirstFocusableNode(element, onlyDescendants = true) {
  findFirstFocusableNode(element, onlyDescendants)?.focus();
}
function focusNextFocusableNode(node, filter) {
  const nextFocusable = nextFocusableNode(node, filter);
  if (nextFocusable && nextFocusable instanceof HTMLElement) {
    nextFocusable.focus();
    return true;
  }
  return false;
}
function findFirstKeyboardFocusableNode(element, onlyDescendants = true) {
  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {
    return element;
  }
  return element.querySelector(KEYBOARD_FOCUSABLE_SELECTORS);
}
function focusFirstKeyboardFocusableNode(element, onlyDescendants = true) {
  const firstFocusable = findFirstKeyboardFocusableNode(element, onlyDescendants);
  if (firstFocusable) {
    firstFocusable.focus();
    return true;
  }
  return false;
}
function findLastKeyboardFocusableNode(element, onlyDescendants = true) {
  if (!onlyDescendants && matches(element, KEYBOARD_FOCUSABLE_SELECTORS)) {
    return element;
  }
  const allFocusable = element.querySelectorAll(KEYBOARD_FOCUSABLE_SELECTORS);
  return allFocusable[allFocusable.length - 1];
}
function focusLastKeyboardFocusableNode(element, onlyDescendants = true) {
  const lastFocusable = findLastKeyboardFocusableNode(element, onlyDescendants);
  if (lastFocusable) {
    lastFocusable.focus();
    return true;
  }
  return false;
}
function wrapFocusPreviousFocusableMenuItem(parentElement, currentFocusedElement) {
  const allFocusableChildren = getMenuFocusableDescendants(parentElement);
  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);
  if (currentItemIdx === -1) {
    allFocusableChildren[0].focus();
  } else {
    allFocusableChildren[(currentItemIdx - 1 + allFocusableChildren.length) % allFocusableChildren.length].focus();
  }
}
function wrapFocusNextFocusableMenuItem(parentElement, currentFocusedElement) {
  const allFocusableChildren = getMenuFocusableDescendants(parentElement);
  const currentItemIdx = getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement);
  if (currentItemIdx === -1) {
    allFocusableChildren[0].focus();
  } else {
    allFocusableChildren[(currentItemIdx + 1) % allFocusableChildren.length].focus();
  }
}
function getMenuFocusableDescendants(element) {
  return element.querySelectorAll(MENUITEM_FOCUSABLE_SELECTORS);
}
function getCurrentFocusedElementIndex(allFocusableChildren, currentFocusedElement) {
  let currentItemIdx = 0;
  for (const focusableChild of allFocusableChildren) {
    if (focusableChild === currentFocusedElement) {
      break;
    }
    currentItemIdx++;
  }
  return currentItemIdx === allFocusableChildren.length ? -1 : currentItemIdx;
}
function matches(node, selector) {
  if (node.matches) {
    return node.matches(selector);
  }
  const matches2 = (node.ownerDocument || document).querySelectorAll(selector);
  let i = matches2.length;
  while (--i >= 0 && matches2.item(i) !== node)
    return i > -1;
}
var FOCUSABLE_SELECTOR, KEYBOARD_FOCUSABLE_SELECTORS, MENUITEM_FOCUSABLE_SELECTORS, handleMouseUpByBlurring;
var init_focus = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/focus.js"() {
    init_is_element_in_viewport();
    FOCUSABLE_SELECTOR = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled="true"]):not([tabindex="-1"]):not(:disabled),*[tabindex]';
    KEYBOARD_FOCUSABLE_SELECTORS = 'a,frame,iframe,input:not([type=hidden]):not(:disabled),select:not(:disabled),textarea:not(:disabled),button:not([aria-disabled="true"]):not([tabindex="-1"]):not(:disabled),*[tabindex]:not([tabindex="-1"])';
    MENUITEM_FOCUSABLE_SELECTORS = 'a[role="menuitem"],frame[role="menuitem"],iframe[role="menuitem"],input[role="menuitem"]:not([type=hidden]):not(:disabled),select[role="menuitem"]:not(:disabled),textarea[role="menuitem"]:not(:disabled),button[role="menuitem"]:not(:disabled),*[tabindex]:not([tabindex="-1"])';
    handleMouseUpByBlurring = ({
      currentTarget
    }) => currentTarget.blur();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Button/Button.css.js
var styles3;
var init_Button_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Button/Button.css.js"() {
    styles3 = {
      "Button": "Polaris-Button",
      "disabled": "Polaris-Button--disabled",
      "pressed": "Polaris-Button--pressed",
      "variantPrimary": "Polaris-Button--variantPrimary",
      "variantSecondary": "Polaris-Button--variantSecondary",
      "variantTertiary": "Polaris-Button--variantTertiary",
      "variantPlain": "Polaris-Button--variantPlain",
      "removeUnderline": "Polaris-Button--removeUnderline",
      "variantMonochromePlain": "Polaris-Button--variantMonochromePlain",
      "toneSuccess": "Polaris-Button--toneSuccess",
      "toneCritical": "Polaris-Button--toneCritical",
      "sizeMicro": "Polaris-Button--sizeMicro",
      "sizeSlim": "Polaris-Button--sizeSlim",
      "sizeMedium": "Polaris-Button--sizeMedium",
      "sizeLarge": "Polaris-Button--sizeLarge",
      "textAlignCenter": "Polaris-Button--textAlignCenter",
      "textAlignStart": "Polaris-Button--textAlignStart",
      "textAlignLeft": "Polaris-Button--textAlignLeft",
      "textAlignEnd": "Polaris-Button--textAlignEnd",
      "textAlignRight": "Polaris-Button--textAlignRight",
      "fullWidth": "Polaris-Button--fullWidth",
      "iconOnly": "Polaris-Button--iconOnly",
      "iconWithText": "Polaris-Button--iconWithText",
      "disclosure": "Polaris-Button--disclosure",
      "loading": "Polaris-Button--loading",
      "pressable": "Polaris-Button--pressable",
      "hidden": "Polaris-Button--hidden",
      "Icon": "Polaris-Button__Icon",
      "Spinner": "Polaris-Button__Spinner"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Icon/Icon.css.js
var styles4;
var init_Icon_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Icon/Icon.css.js"() {
    styles4 = {
      "Icon": "Polaris-Icon",
      "toneInherit": "Polaris-Icon--toneInherit",
      "toneBase": "Polaris-Icon--toneBase",
      "toneSubdued": "Polaris-Icon--toneSubdued",
      "toneCaution": "Polaris-Icon--toneCaution",
      "toneWarning": "Polaris-Icon--toneWarning",
      "toneCritical": "Polaris-Icon--toneCritical",
      "toneInteractive": "Polaris-Icon--toneInteractive",
      "toneInfo": "Polaris-Icon--toneInfo",
      "toneSuccess": "Polaris-Icon--toneSuccess",
      "tonePrimary": "Polaris-Icon--tonePrimary",
      "toneEmphasis": "Polaris-Icon--toneEmphasis",
      "toneMagic": "Polaris-Icon--toneMagic",
      "toneTextCaution": "Polaris-Icon--toneTextCaution",
      "toneTextWarning": "Polaris-Icon--toneTextWarning",
      "toneTextCritical": "Polaris-Icon--toneTextCritical",
      "toneTextInfo": "Polaris-Icon--toneTextInfo",
      "toneTextPrimary": "Polaris-Icon--toneTextPrimary",
      "toneTextSuccess": "Polaris-Icon--toneTextSuccess",
      "toneTextMagic": "Polaris-Icon--toneTextMagic",
      "Svg": "Polaris-Icon__Svg",
      "Img": "Polaris-Icon__Img",
      "Placeholder": "Polaris-Icon__Placeholder"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Icon/Icon.js
function Icon({
  source,
  tone,
  accessibilityLabel
}) {
  let sourceType;
  if (typeof source === "function") {
    sourceType = "function";
  } else if (source === "placeholder") {
    sourceType = "placeholder";
  } else {
    sourceType = "external";
  }
  if (tone && sourceType === "external" && true) {
    console.warn("Recoloring external SVGs is not supported. Set the intended color on your SVG instead.");
  }
  const className = classNames(styles4.Icon, tone && styles4[variationName("tone", tone)]);
  const {
    mdDown
  } = useBreakpoints();
  const SourceComponent = source;
  const contentMarkup = {
    function: /* @__PURE__ */ import_react58.default.createElement(SourceComponent, Object.assign({
      className: styles4.Svg,
      focusable: "false",
      "aria-hidden": "true"
      // On Mobile we're scaling the viewBox to 18x18 to make the icons bigger
      // Also, we're setting the viewport origin to 1x1 to center the icon
      // We use this syntax so we don't override the existing viewBox value if we don't need to.
    }, mdDown ? {
      viewBox: "1 1 18 18"
    } : {})),
    placeholder: /* @__PURE__ */ import_react58.default.createElement("div", {
      className: styles4.Placeholder
    }),
    external: /* @__PURE__ */ import_react58.default.createElement("img", {
      className: styles4.Img,
      src: `data:image/svg+xml;utf8,${source}`,
      alt: "",
      "aria-hidden": "true"
    })
  };
  return /* @__PURE__ */ import_react58.default.createElement("span", {
    className
  }, accessibilityLabel && /* @__PURE__ */ import_react58.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel), contentMarkup[sourceType]);
}
var import_react58;
var init_Icon = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Icon/Icon.js"() {
    import_react58 = __toESM(require_react());
    init_css();
    init_breakpoints2();
    init_Icon_css();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-disable-interaction.js
function useDisableClick(disabled, handleClick) {
  const handleClickWrapper = (0, import_react59.useCallback)((event) => {
    if (disabled) {
      event.preventDefault();
      event.stopPropagation();
    }
  }, [disabled]);
  if (!disabled) {
    return handleClick;
  }
  return handleClickWrapper;
}
var import_react59;
var init_use_disable_interaction = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-disable-interaction.js"() {
    import_react59 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/link/hooks.js
function useLink() {
  return (0, import_react60.useContext)(LinkContext);
}
var import_react60;
var init_hooks = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/link/hooks.js"() {
    import_react60 = __toESM(require_react());
    init_context5();
  }
});

// node_modules/@shopify/polaris/build/esm/components/UnstyledLink/UnstyledLink.js
var import_react61, UnstyledLink;
var init_UnstyledLink = __esm({
  "node_modules/@shopify/polaris/build/esm/components/UnstyledLink/UnstyledLink.js"() {
    import_react61 = __toESM(require_react());
    init_shared();
    init_hooks();
    UnstyledLink = /* @__PURE__ */ (0, import_react61.memo)(/* @__PURE__ */ (0, import_react61.forwardRef)(function UnstyledLink2(props, _ref) {
      const LinkComponent = useLink();
      if (LinkComponent) {
        return /* @__PURE__ */ import_react61.default.createElement(LinkComponent, Object.assign({}, unstyled.props, props, {
          ref: _ref
        }));
      }
      const {
        external,
        url,
        target: targetProp,
        ...rest
      } = props;
      let target;
      if (external) {
        target = "_blank";
      } else {
        target = targetProp ?? void 0;
      }
      const rel = target === "_blank" ? "noopener noreferrer" : void 0;
      return /* @__PURE__ */ import_react61.default.createElement("a", Object.assign({
        target
      }, rest, {
        href: url,
        rel
      }, unstyled.props, {
        ref: _ref
      }));
    }));
  }
});

// node_modules/@shopify/polaris/build/esm/components/UnstyledButton/UnstyledButton.js
function UnstyledButton({
  id,
  children,
  className,
  url,
  external,
  target,
  download,
  submit,
  disabled,
  loading,
  pressed,
  accessibilityLabel,
  role,
  ariaControls,
  ariaExpanded,
  ariaDescribedBy,
  ariaChecked,
  onClick,
  onFocus,
  onBlur,
  onKeyDown,
  onKeyPress,
  onKeyUp,
  onMouseEnter,
  onTouchStart,
  ...rest
}) {
  let buttonMarkup;
  const commonProps = {
    id,
    className,
    "aria-label": accessibilityLabel
  };
  const interactiveProps = {
    ...commonProps,
    role,
    onClick,
    onFocus,
    onBlur,
    onMouseUp: handleMouseUpByBlurring,
    onMouseEnter,
    onTouchStart
  };
  const handleClick = useDisableClick(disabled, onClick);
  if (url) {
    buttonMarkup = disabled ? (
      // Render an `<a>` so toggling disabled/enabled state changes only the
      // `href` attribute instead of replacing the whole element.
      /* @__PURE__ */ import_react62.default.createElement("a", commonProps, children)
    ) : /* @__PURE__ */ import_react62.default.createElement(UnstyledLink, Object.assign({}, interactiveProps, {
      url,
      external,
      target,
      download
    }, rest), children);
  } else {
    buttonMarkup = /* @__PURE__ */ import_react62.default.createElement("button", Object.assign({}, interactiveProps, {
      "aria-disabled": disabled,
      type: submit ? "submit" : "button",
      "aria-busy": loading ? true : void 0,
      "aria-controls": ariaControls,
      "aria-expanded": ariaExpanded,
      "aria-describedby": ariaDescribedBy,
      "aria-checked": ariaChecked,
      "aria-pressed": pressed,
      onKeyDown,
      onKeyUp,
      onKeyPress,
      onClick: handleClick,
      tabIndex: disabled ? -1 : void 0
    }, rest), children);
  }
  return buttonMarkup;
}
var import_react62;
var init_UnstyledButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/UnstyledButton/UnstyledButton.js"() {
    import_react62 = __toESM(require_react());
    init_focus();
    init_use_disable_interaction();
    init_UnstyledLink();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/errors.js
var MissingAppProviderError;
var init_errors = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/errors.js"() {
    MissingAppProviderError = class extends Error {
      constructor(message = "") {
        super(`${message ? `${message} ` : message}Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.`);
        this.name = "MissingAppProviderError";
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/i18n/hooks.js
function useI18n() {
  const i18n = (0, import_react63.useContext)(I18nContext);
  if (!i18n) {
    throw new MissingAppProviderError("No i18n was provided.");
  }
  return i18n;
}
var import_react63;
var init_hooks2 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/i18n/hooks.js"() {
    import_react63 = __toESM(require_react());
    init_errors();
    init_context2();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Button/Button.js
function Button({
  id,
  children,
  url,
  disabled,
  external,
  download,
  target,
  submit,
  loading,
  pressed,
  accessibilityLabel,
  role,
  ariaControls,
  ariaExpanded,
  ariaDescribedBy,
  ariaChecked,
  onClick,
  onFocus,
  onBlur,
  onKeyDown,
  onKeyPress,
  onKeyUp,
  onMouseEnter,
  onTouchStart,
  onPointerDown,
  icon,
  disclosure,
  removeUnderline,
  size: size2 = "medium",
  textAlign = "center",
  fullWidth,
  dataPrimaryLink,
  tone,
  variant = "secondary"
}) {
  const i18n = useI18n();
  const isDisabled = disabled || loading;
  const {
    mdUp
  } = useBreakpoints();
  const className = classNames(styles3.Button, styles3.pressable, styles3[variationName("variant", variant)], styles3[variationName("size", size2)], styles3[variationName("textAlign", textAlign)], fullWidth && styles3.fullWidth, disclosure && styles3.disclosure, icon && children && styles3.iconWithText, icon && children == null && styles3.iconOnly, isDisabled && styles3.disabled, loading && styles3.loading, pressed && !disabled && !url && styles3.pressed, removeUnderline && styles3.removeUnderline, tone && styles3[variationName("tone", tone)]);
  const disclosureMarkup = disclosure ? /* @__PURE__ */ import_react64.default.createElement("span", {
    className: loading ? styles3.hidden : styles3.Icon
  }, /* @__PURE__ */ import_react64.default.createElement(Icon, {
    source: loading ? "placeholder" : getDisclosureIconSource(disclosure, SvgChevronUpIcon, SvgChevronDownIcon)
  })) : null;
  const iconSource = isIconSource(icon) ? /* @__PURE__ */ import_react64.default.createElement(Icon, {
    source: loading ? "placeholder" : icon
  }) : icon;
  const iconMarkup = iconSource ? /* @__PURE__ */ import_react64.default.createElement("span", {
    className: loading ? styles3.hidden : styles3.Icon
  }, iconSource) : null;
  const hasPlainText = ["plain", "monochromePlain"].includes(variant);
  let textFontWeight = "medium";
  if (hasPlainText) {
    textFontWeight = "regular";
  } else if (variant === "primary") {
    textFontWeight = mdUp ? "medium" : "semibold";
  }
  let textVariant = "bodySm";
  if (size2 === "large" || hasPlainText && size2 !== "micro") {
    textVariant = "bodyMd";
  }
  const childMarkup = children ? /* @__PURE__ */ import_react64.default.createElement(Text, {
    as: "span",
    variant: textVariant,
    fontWeight: textFontWeight,
    key: disabled ? "text-disabled" : "text"
  }, children) : null;
  const spinnerSVGMarkup = loading ? /* @__PURE__ */ import_react64.default.createElement("span", {
    className: styles3.Spinner
  }, /* @__PURE__ */ import_react64.default.createElement(Spinner, {
    size: "small",
    accessibilityLabel: i18n.translate("Polaris.Button.spinnerAccessibilityLabel")
  })) : null;
  const commonProps = {
    id,
    className,
    accessibilityLabel,
    ariaDescribedBy,
    role,
    onClick,
    onFocus,
    onBlur,
    onMouseUp: handleMouseUpByBlurring,
    onMouseEnter,
    onTouchStart,
    "data-primary-link": dataPrimaryLink
  };
  const linkProps = {
    url,
    external,
    download,
    target
  };
  const actionProps = {
    submit,
    disabled: isDisabled,
    loading,
    ariaControls,
    ariaExpanded,
    ariaChecked,
    pressed,
    onKeyDown,
    onKeyUp,
    onKeyPress,
    onPointerDown
  };
  const buttonMarkup = /* @__PURE__ */ import_react64.default.createElement(UnstyledButton, Object.assign({}, commonProps, linkProps, actionProps), spinnerSVGMarkup, iconMarkup, childMarkup, disclosureMarkup);
  return buttonMarkup;
}
function isIconSource(x) {
  return typeof x === "string" || typeof x === "object" && x.body || typeof x === "function";
}
function getDisclosureIconSource(disclosure, upIcon, downIcon) {
  if (disclosure === "select") {
    return SvgSelectIcon;
  }
  return disclosure === "up" ? upIcon : downIcon;
}
var import_react64;
var init_Button = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Button/Button.js"() {
    import_react64 = __toESM(require_react());
    init_dist();
    init_breakpoints2();
    init_css();
    init_focus();
    init_Button_css();
    init_Icon();
    init_Spinner();
    init_UnstyledButton();
    init_hooks2();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Box/Box.css.js
var styles5;
var init_Box_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Box/Box.css.js"() {
    styles5 = {
      "listReset": "Polaris-Box--listReset",
      "Box": "Polaris-Box",
      "visuallyHidden": "Polaris-Box--visuallyHidden",
      "printHidden": "Polaris-Box--printHidden"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Box/Box.js
var import_react65, Box;
var init_Box = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Box/Box.js"() {
    import_react65 = __toESM(require_react());
    init_css();
    init_Box_css();
    Box = /* @__PURE__ */ (0, import_react65.forwardRef)(({
      as = "div",
      background,
      borderColor,
      borderStyle,
      borderWidth,
      borderBlockStartWidth,
      borderBlockEndWidth,
      borderInlineStartWidth,
      borderInlineEndWidth,
      borderRadius,
      borderEndStartRadius,
      borderEndEndRadius,
      borderStartStartRadius,
      borderStartEndRadius,
      children,
      color: color2,
      id,
      minHeight,
      minWidth,
      maxWidth,
      overflowX,
      overflowY,
      outlineColor,
      outlineStyle,
      outlineWidth,
      padding,
      paddingBlock,
      paddingBlockStart,
      paddingBlockEnd,
      paddingInline,
      paddingInlineStart,
      paddingInlineEnd,
      role,
      shadow: shadow2,
      tabIndex,
      width: width2,
      printHidden,
      visuallyHidden,
      position,
      insetBlockStart,
      insetBlockEnd,
      insetInlineStart,
      insetInlineEnd,
      zIndex: zIndex2,
      opacity,
      ...restProps
    }, ref) => {
      const borderStyleValue = borderStyle ? borderStyle : borderColor || borderWidth || borderBlockStartWidth || borderBlockEndWidth || borderInlineStartWidth || borderInlineEndWidth ? "solid" : void 0;
      const outlineStyleValue = outlineStyle ? outlineStyle : outlineColor || outlineWidth ? "solid" : void 0;
      const style = {
        "--pc-box-color": color2 ? `var(--p-color-${color2})` : void 0,
        "--pc-box-background": background ? `var(--p-color-${background})` : void 0,
        // eslint-disable-next-line no-nested-ternary
        "--pc-box-border-color": borderColor ? borderColor === "transparent" ? "transparent" : `var(--p-color-${borderColor})` : void 0,
        "--pc-box-border-style": borderStyleValue,
        "--pc-box-border-radius": borderRadius ? `var(--p-border-radius-${borderRadius})` : void 0,
        "--pc-box-border-end-start-radius": borderEndStartRadius ? `var(--p-border-radius-${borderEndStartRadius})` : void 0,
        "--pc-box-border-end-end-radius": borderEndEndRadius ? `var(--p-border-radius-${borderEndEndRadius})` : void 0,
        "--pc-box-border-start-start-radius": borderStartStartRadius ? `var(--p-border-radius-${borderStartStartRadius})` : void 0,
        "--pc-box-border-start-end-radius": borderStartEndRadius ? `var(--p-border-radius-${borderStartEndRadius})` : void 0,
        "--pc-box-border-width": borderWidth ? `var(--p-border-width-${borderWidth})` : void 0,
        "--pc-box-border-block-start-width": borderBlockStartWidth ? `var(--p-border-width-${borderBlockStartWidth})` : void 0,
        "--pc-box-border-block-end-width": borderBlockEndWidth ? `var(--p-border-width-${borderBlockEndWidth})` : void 0,
        "--pc-box-border-inline-start-width": borderInlineStartWidth ? `var(--p-border-width-${borderInlineStartWidth})` : void 0,
        "--pc-box-border-inline-end-width": borderInlineEndWidth ? `var(--p-border-width-${borderInlineEndWidth})` : void 0,
        "--pc-box-min-height": minHeight,
        "--pc-box-min-width": minWidth,
        "--pc-box-max-width": maxWidth,
        "--pc-box-outline-color": outlineColor ? `var(--p-color-${outlineColor})` : void 0,
        "--pc-box-outline-style": outlineStyleValue,
        "--pc-box-outline-width": outlineWidth ? `var(--p-border-width-${outlineWidth})` : void 0,
        "--pc-box-overflow-x": overflowX,
        "--pc-box-overflow-y": overflowY,
        ...getResponsiveProps("box", "padding-block-start", "space", paddingBlockStart || paddingBlock || padding),
        ...getResponsiveProps("box", "padding-block-end", "space", paddingBlockEnd || paddingBlock || padding),
        ...getResponsiveProps("box", "padding-inline-start", "space", paddingInlineStart || paddingInline || padding),
        ...getResponsiveProps("box", "padding-inline-end", "space", paddingInlineEnd || paddingInline || padding),
        "--pc-box-shadow": shadow2 ? `var(--p-shadow-${shadow2})` : void 0,
        "--pc-box-width": width2,
        position,
        "--pc-box-inset-block-start": insetBlockStart ? `var(--p-space-${insetBlockStart})` : void 0,
        "--pc-box-inset-block-end": insetBlockEnd ? `var(--p-space-${insetBlockEnd})` : void 0,
        "--pc-box-inset-inline-start": insetInlineStart ? `var(--p-space-${insetInlineStart})` : void 0,
        "--pc-box-inset-inline-end": insetInlineEnd ? `var(--p-space-${insetInlineEnd})` : void 0,
        zIndex: zIndex2,
        opacity
      };
      const className = classNames(styles5.Box, visuallyHidden && styles5.visuallyHidden, printHidden && styles5.printHidden, as === "ul" && styles5.listReset);
      return /* @__PURE__ */ import_react65.default.createElement(as, {
        className,
        id,
        ref,
        style: sanitizeCustomProperties(style),
        role,
        tabIndex,
        ...restProps
      }, children);
    });
    Box.displayName = "Box";
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/within-content-context.js
var import_react66, WithinContentContext;
var init_within_content_context = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/within-content-context.js"() {
    import_react66 = __toESM(require_react());
    WithinContentContext = /* @__PURE__ */ (0, import_react66.createContext)(false);
  }
});

// node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.css.js
var styles6;
var init_ShadowBevel_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.css.js"() {
    styles6 = {
      "ShadowBevel": "Polaris-ShadowBevel"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.js
function ShadowBevel(props) {
  const {
    as = "div",
    bevel = true,
    borderRadius,
    boxShadow,
    children,
    zIndex: zIndex2 = "0"
  } = props;
  const Component7 = as;
  return /* @__PURE__ */ import_react67.default.createElement(Component7, {
    className: styles6.ShadowBevel,
    style: {
      "--pc-shadow-bevel-z-index": zIndex2,
      ...getResponsiveValue("shadow-bevel", "content", mapResponsiveProp(bevel, (bevel2) => bevel2 ? '""' : "none")),
      ...getResponsiveValue("shadow-bevel", "box-shadow", mapResponsiveProp(bevel, (bevel2) => bevel2 ? `var(--p-shadow-${boxShadow})` : "none")),
      ...getResponsiveValue("shadow-bevel", "border-radius", mapResponsiveProp(bevel, (bevel2) => bevel2 ? `var(--p-border-radius-${borderRadius})` : "var(--p-border-radius-0)"))
    }
  }, children);
}
function mapResponsiveProp(responsiveProp, callback) {
  if (typeof responsiveProp === "boolean") {
    return callback(responsiveProp);
  }
  return Object.fromEntries(Object.entries(responsiveProp).map(([breakpointsAlias, value]) => [breakpointsAlias, callback(value)]));
}
var import_react67;
var init_ShadowBevel = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ShadowBevel/ShadowBevel.js"() {
    import_react67 = __toESM(require_react());
    init_css();
    init_ShadowBevel_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Card/Card.js
var import_react68, Card;
var init_Card = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Card/Card.js"() {
    import_react68 = __toESM(require_react());
    init_breakpoints2();
    init_within_content_context();
    init_ShadowBevel();
    init_Box();
    Card = ({
      children,
      background = "bg-surface",
      padding = {
        xs: "400"
      },
      roundedAbove = "sm"
    }) => {
      const breakpoints2 = useBreakpoints();
      const defaultBorderRadius = "300";
      const hasBorderRadius = Boolean(breakpoints2[`${roundedAbove}Up`]);
      return /* @__PURE__ */ import_react68.default.createElement(WithinContentContext.Provider, {
        value: true
      }, /* @__PURE__ */ import_react68.default.createElement(ShadowBevel, {
        boxShadow: "100",
        borderRadius: hasBorderRadius ? defaultBorderRadius : "0",
        zIndex: "32"
      }, /* @__PURE__ */ import_react68.default.createElement(Box, {
        background,
        padding,
        overflowX: "clip",
        overflowY: "clip",
        minHeight: "100%"
      }, children)));
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineStack/InlineStack.css.js
var styles7;
var init_InlineStack_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineStack/InlineStack.css.js"() {
    styles7 = {
      "InlineStack": "Polaris-InlineStack"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineStack/InlineStack.js
var import_react69, InlineStack;
var init_InlineStack = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineStack/InlineStack.js"() {
    import_react69 = __toESM(require_react());
    init_css();
    init_InlineStack_css();
    InlineStack = function InlineStack2({
      as: Element2 = "div",
      align,
      direction = "row",
      blockAlign,
      gap,
      wrap = true,
      children
    }) {
      const style = {
        "--pc-inline-stack-align": align,
        "--pc-inline-stack-block-align": blockAlign,
        "--pc-inline-stack-wrap": wrap ? "wrap" : "nowrap",
        ...getResponsiveProps("inline-stack", "gap", "space", gap),
        ...getResponsiveValue("inline-stack", "flex-direction", direction)
      };
      return /* @__PURE__ */ import_react69.default.createElement(Element2, {
        className: styles7.InlineStack,
        style
      }, children);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/BlockStack/BlockStack.css.js
var styles8;
var init_BlockStack_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BlockStack/BlockStack.css.js"() {
    styles8 = {
      "BlockStack": "Polaris-BlockStack",
      "listReset": "Polaris-BlockStack--listReset",
      "fieldsetReset": "Polaris-BlockStack--fieldsetReset"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/BlockStack/BlockStack.js
var import_react70, BlockStack;
var init_BlockStack = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BlockStack/BlockStack.js"() {
    import_react70 = __toESM(require_react());
    init_css();
    init_BlockStack_css();
    BlockStack = ({
      as = "div",
      children,
      align,
      inlineAlign,
      gap,
      id,
      reverseOrder = false,
      ...restProps
    }) => {
      const className = classNames(styles8.BlockStack, (as === "ul" || as === "ol") && styles8.listReset, as === "fieldset" && styles8.fieldsetReset);
      const style = {
        "--pc-block-stack-align": align ? `${align}` : null,
        "--pc-block-stack-inline-align": inlineAlign ? `${inlineAlign}` : null,
        "--pc-block-stack-order": reverseOrder ? "column-reverse" : "column",
        ...getResponsiveProps("block-stack", "gap", "space", gap)
      };
      return /* @__PURE__ */ import_react70.default.createElement(as, {
        className,
        id,
        style: sanitizeCustomProperties(style),
        ...restProps
      }, children);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/types.js
var Key;
var init_types = __esm({
  "node_modules/@shopify/polaris/build/esm/types.js"() {
    (function(Key2) {
      Key2[Key2["Backspace"] = 8] = "Backspace";
      Key2[Key2["Tab"] = 9] = "Tab";
      Key2[Key2["Enter"] = 13] = "Enter";
      Key2[Key2["Shift"] = 16] = "Shift";
      Key2[Key2["Ctrl"] = 17] = "Ctrl";
      Key2[Key2["Alt"] = 18] = "Alt";
      Key2[Key2["Pause"] = 19] = "Pause";
      Key2[Key2["CapsLock"] = 20] = "CapsLock";
      Key2[Key2["Escape"] = 27] = "Escape";
      Key2[Key2["Space"] = 32] = "Space";
      Key2[Key2["PageUp"] = 33] = "PageUp";
      Key2[Key2["PageDown"] = 34] = "PageDown";
      Key2[Key2["End"] = 35] = "End";
      Key2[Key2["Home"] = 36] = "Home";
      Key2[Key2["LeftArrow"] = 37] = "LeftArrow";
      Key2[Key2["UpArrow"] = 38] = "UpArrow";
      Key2[Key2["RightArrow"] = 39] = "RightArrow";
      Key2[Key2["DownArrow"] = 40] = "DownArrow";
      Key2[Key2["Insert"] = 45] = "Insert";
      Key2[Key2["Delete"] = 46] = "Delete";
      Key2[Key2["Key0"] = 48] = "Key0";
      Key2[Key2["Key1"] = 49] = "Key1";
      Key2[Key2["Key2"] = 50] = "Key2";
      Key2[Key2["Key3"] = 51] = "Key3";
      Key2[Key2["Key4"] = 52] = "Key4";
      Key2[Key2["Key5"] = 53] = "Key5";
      Key2[Key2["Key6"] = 54] = "Key6";
      Key2[Key2["Key7"] = 55] = "Key7";
      Key2[Key2["Key8"] = 56] = "Key8";
      Key2[Key2["Key9"] = 57] = "Key9";
      Key2[Key2["KeyA"] = 65] = "KeyA";
      Key2[Key2["KeyB"] = 66] = "KeyB";
      Key2[Key2["KeyC"] = 67] = "KeyC";
      Key2[Key2["KeyD"] = 68] = "KeyD";
      Key2[Key2["KeyE"] = 69] = "KeyE";
      Key2[Key2["KeyF"] = 70] = "KeyF";
      Key2[Key2["KeyG"] = 71] = "KeyG";
      Key2[Key2["KeyH"] = 72] = "KeyH";
      Key2[Key2["KeyI"] = 73] = "KeyI";
      Key2[Key2["KeyJ"] = 74] = "KeyJ";
      Key2[Key2["KeyK"] = 75] = "KeyK";
      Key2[Key2["KeyL"] = 76] = "KeyL";
      Key2[Key2["KeyM"] = 77] = "KeyM";
      Key2[Key2["KeyN"] = 78] = "KeyN";
      Key2[Key2["KeyO"] = 79] = "KeyO";
      Key2[Key2["KeyP"] = 80] = "KeyP";
      Key2[Key2["KeyQ"] = 81] = "KeyQ";
      Key2[Key2["KeyR"] = 82] = "KeyR";
      Key2[Key2["KeyS"] = 83] = "KeyS";
      Key2[Key2["KeyT"] = 84] = "KeyT";
      Key2[Key2["KeyU"] = 85] = "KeyU";
      Key2[Key2["KeyV"] = 86] = "KeyV";
      Key2[Key2["KeyW"] = 87] = "KeyW";
      Key2[Key2["KeyX"] = 88] = "KeyX";
      Key2[Key2["KeyY"] = 89] = "KeyY";
      Key2[Key2["KeyZ"] = 90] = "KeyZ";
      Key2[Key2["LeftMeta"] = 91] = "LeftMeta";
      Key2[Key2["RightMeta"] = 92] = "RightMeta";
      Key2[Key2["Select"] = 93] = "Select";
      Key2[Key2["Numpad0"] = 96] = "Numpad0";
      Key2[Key2["Numpad1"] = 97] = "Numpad1";
      Key2[Key2["Numpad2"] = 98] = "Numpad2";
      Key2[Key2["Numpad3"] = 99] = "Numpad3";
      Key2[Key2["Numpad4"] = 100] = "Numpad4";
      Key2[Key2["Numpad5"] = 101] = "Numpad5";
      Key2[Key2["Numpad6"] = 102] = "Numpad6";
      Key2[Key2["Numpad7"] = 103] = "Numpad7";
      Key2[Key2["Numpad8"] = 104] = "Numpad8";
      Key2[Key2["Numpad9"] = 105] = "Numpad9";
      Key2[Key2["Multiply"] = 106] = "Multiply";
      Key2[Key2["Add"] = 107] = "Add";
      Key2[Key2["Subtract"] = 109] = "Subtract";
      Key2[Key2["Decimal"] = 110] = "Decimal";
      Key2[Key2["Divide"] = 111] = "Divide";
      Key2[Key2["F1"] = 112] = "F1";
      Key2[Key2["F2"] = 113] = "F2";
      Key2[Key2["F3"] = 114] = "F3";
      Key2[Key2["F4"] = 115] = "F4";
      Key2[Key2["F5"] = 116] = "F5";
      Key2[Key2["F6"] = 117] = "F6";
      Key2[Key2["F7"] = 118] = "F7";
      Key2[Key2["F8"] = 119] = "F8";
      Key2[Key2["F9"] = 120] = "F9";
      Key2[Key2["F10"] = 121] = "F10";
      Key2[Key2["F11"] = 122] = "F11";
      Key2[Key2["F12"] = 123] = "F12";
      Key2[Key2["NumLock"] = 144] = "NumLock";
      Key2[Key2["ScrollLock"] = 145] = "ScrollLock";
      Key2[Key2["Semicolon"] = 186] = "Semicolon";
      Key2[Key2["Equals"] = 187] = "Equals";
      Key2[Key2["Comma"] = 188] = "Comma";
      Key2[Key2["Dash"] = 189] = "Dash";
      Key2[Key2["Period"] = 190] = "Period";
      Key2[Key2["ForwardSlash"] = 191] = "ForwardSlash";
      Key2[Key2["GraveAccent"] = 192] = "GraveAccent";
      Key2[Key2["OpenBracket"] = 219] = "OpenBracket";
      Key2[Key2["BackSlash"] = 220] = "BackSlash";
      Key2[Key2["CloseBracket"] = 221] = "CloseBracket";
      Key2[Key2["SingleQuote"] = 222] = "SingleQuote";
    })(Key || (Key = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-event-listener.js
function useEventListener(eventName, handler, target, options) {
  const handlerRef = (0, import_react71.useRef)(handler);
  const optionsRef = (0, import_react71.useRef)(options);
  useIsomorphicLayoutEffect(() => {
    handlerRef.current = handler;
  }, [handler]);
  useIsomorphicLayoutEffect(() => {
    optionsRef.current = options;
  }, [options]);
  (0, import_react71.useEffect)(() => {
    if (!(typeof eventName === "string" && target !== null))
      return;
    let targetElement;
    if (typeof target === "undefined") {
      targetElement = window;
    } else if ("current" in target) {
      if (target.current === null)
        return;
      targetElement = target.current;
    } else {
      targetElement = target;
    }
    const eventOptions = optionsRef.current;
    const eventListener = (event) => handlerRef.current(event);
    targetElement.addEventListener(eventName, eventListener, eventOptions);
    return () => {
      targetElement.removeEventListener(eventName, eventListener, eventOptions);
    };
  }, [eventName, target]);
}
var import_react71;
var init_use_event_listener = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-event-listener.js"() {
    import_react71 = __toESM(require_react());
    init_use_isomorphic_layout_effect();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TextField/TextField.css.js
var styles9;
var init_TextField_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TextField/TextField.css.js"() {
    styles9 = {
      "TextField": "Polaris-TextField",
      "ClearButton": "Polaris-TextField__ClearButton",
      "Loading": "Polaris-TextField__Loading",
      "disabled": "Polaris-TextField--disabled",
      "error": "Polaris-TextField--error",
      "readOnly": "Polaris-TextField--readOnly",
      "Input": "Polaris-TextField__Input",
      "Backdrop": "Polaris-TextField__Backdrop",
      "multiline": "Polaris-TextField--multiline",
      "hasValue": "Polaris-TextField--hasValue",
      "focus": "Polaris-TextField--focus",
      "VerticalContent": "Polaris-TextField__VerticalContent",
      "InputAndSuffixWrapper": "Polaris-TextField__InputAndSuffixWrapper",
      "toneMagic": "Polaris-TextField--toneMagic",
      "Prefix": "Polaris-TextField__Prefix",
      "Suffix": "Polaris-TextField__Suffix",
      "AutoSizeWrapper": "Polaris-TextField__AutoSizeWrapper",
      "AutoSizeWrapperWithSuffix": "Polaris-TextField__AutoSizeWrapperWithSuffix",
      "suggestion": "Polaris-TextField--suggestion",
      "borderless": "Polaris-TextField--borderless",
      "slim": "Polaris-TextField--slim",
      "Input-hasClearButton": "Polaris-TextField__Input--hasClearButton",
      "Input-suffixed": "Polaris-TextField__Input--suffixed",
      "Input-alignRight": "Polaris-TextField__Input--alignRight",
      "Input-alignLeft": "Polaris-TextField__Input--alignLeft",
      "Input-alignCenter": "Polaris-TextField__Input--alignCenter",
      "Input-autoSize": "Polaris-TextField__Input--autoSize",
      "PrefixIcon": "Polaris-TextField__PrefixIcon",
      "CharacterCount": "Polaris-TextField__CharacterCount",
      "AlignFieldBottom": "Polaris-TextField__AlignFieldBottom",
      "Spinner": "Polaris-TextField__Spinner",
      "SpinnerIcon": "Polaris-TextField__SpinnerIcon",
      "Resizer": "Polaris-TextField__Resizer",
      "DummyInput": "Polaris-TextField__DummyInput",
      "Segment": "Polaris-TextField__Segment",
      "monospaced": "Polaris-TextField--monospaced"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TextField/components/Spinner/Spinner.js
var import_react72, Spinner2;
var init_Spinner2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TextField/components/Spinner/Spinner.js"() {
    import_react72 = __toESM(require_react());
    init_dist();
    init_TextField_css();
    init_Icon();
    Spinner2 = /* @__PURE__ */ import_react72.default.forwardRef(function Spinner3({
      onChange,
      onClick,
      onMouseDown,
      onMouseUp,
      onBlur
    }, ref) {
      function handleStep(step) {
        return () => onChange(step);
      }
      function handleMouseDown(onChange2) {
        return (event) => {
          if (event.button !== 0)
            return;
          onMouseDown?.(onChange2);
        };
      }
      return /* @__PURE__ */ import_react72.default.createElement("div", {
        className: styles9.Spinner,
        onClick,
        "aria-hidden": true,
        ref
      }, /* @__PURE__ */ import_react72.default.createElement("div", {
        role: "button",
        className: styles9.Segment,
        tabIndex: -1,
        onClick: handleStep(1),
        onMouseDown: handleMouseDown(handleStep(1)),
        onMouseUp,
        onBlur
      }, /* @__PURE__ */ import_react72.default.createElement("div", {
        className: styles9.SpinnerIcon
      }, /* @__PURE__ */ import_react72.default.createElement(Icon, {
        source: SvgChevronUpIcon
      }))), /* @__PURE__ */ import_react72.default.createElement("div", {
        role: "button",
        className: styles9.Segment,
        tabIndex: -1,
        onClick: handleStep(-1),
        onMouseDown: handleMouseDown(handleStep(-1)),
        onMouseUp,
        onBlur
      }, /* @__PURE__ */ import_react72.default.createElement("div", {
        className: styles9.SpinnerIcon
      }, /* @__PURE__ */ import_react72.default.createElement(Icon, {
        source: SvgChevronDownIcon
      }))));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.css.js
var styles10;
var init_Labelled_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.css.js"() {
    styles10 = {
      "hidden": "Polaris-Labelled--hidden",
      "LabelWrapper": "Polaris-Labelled__LabelWrapper",
      "disabled": "Polaris-Labelled--disabled",
      "HelpText": "Polaris-Labelled__HelpText",
      "readOnly": "Polaris-Labelled--readOnly",
      "Error": "Polaris-Labelled__Error",
      "Action": "Polaris-Labelled__Action"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.css.js
var styles11;
var init_InlineError_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.css.js"() {
    styles11 = {
      "InlineError": "Polaris-InlineError",
      "Icon": "Polaris-InlineError__Icon"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.js
function InlineError({
  message,
  fieldID
}) {
  if (!message) {
    return null;
  }
  return /* @__PURE__ */ import_react73.default.createElement("div", {
    id: errorTextID(fieldID),
    className: styles11.InlineError
  }, /* @__PURE__ */ import_react73.default.createElement("div", {
    className: styles11.Icon
  }, /* @__PURE__ */ import_react73.default.createElement(Icon, {
    source: SvgAlertCircleIcon
  })), /* @__PURE__ */ import_react73.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, message));
}
function errorTextID(id) {
  return `${id}Error`;
}
var import_react73;
var init_InlineError = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineError/InlineError.js"() {
    import_react73 = __toESM(require_react());
    init_dist();
    init_InlineError_css();
    init_Icon();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Label/Label.css.js
var styles12;
var init_Label_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Label/Label.css.js"() {
    styles12 = {
      "Label": "Polaris-Label",
      "hidden": "Polaris-Label--hidden",
      "Text": "Polaris-Label__Text",
      "RequiredIndicator": "Polaris-Label__RequiredIndicator"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Label/Label.js
function labelID(id) {
  return `${id}Label`;
}
function Label({
  children,
  id,
  hidden,
  requiredIndicator
}) {
  const className = classNames(styles12.Label, hidden && styles12.hidden);
  return /* @__PURE__ */ import_react74.default.createElement("div", {
    className
  }, /* @__PURE__ */ import_react74.default.createElement("label", {
    id: labelID(id),
    htmlFor: id,
    className: classNames(styles12.Text, requiredIndicator && styles12.RequiredIndicator)
  }, /* @__PURE__ */ import_react74.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, children)));
}
var import_react74;
var init_Label = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Label/Label.js"() {
    import_react74 = __toESM(require_react());
    init_css();
    init_Label_css();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Button/utils.js
function buttonsFrom(actions, overrides = {}) {
  if (Array.isArray(actions)) {
    return actions.map((action, index) => buttonFrom(action, overrides, index));
  } else {
    const action = actions;
    return buttonFrom(action, overrides);
  }
}
function buttonFrom({
  content,
  onAction,
  plain,
  destructive,
  ...action
}, overrides, key) {
  const plainVariant = plain ? "plain" : void 0;
  const destructiveVariant = destructive ? "primary" : void 0;
  const tone = !overrides?.tone && destructive ? "critical" : overrides?.tone;
  return /* @__PURE__ */ import_react75.default.createElement(Button, Object.assign({
    key,
    onClick: onAction,
    tone,
    variant: plainVariant || destructiveVariant
  }, action, overrides), content);
}
var import_react75;
var init_utils3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Button/utils.js"() {
    import_react75 = __toESM(require_react());
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.js
function Labelled({
  id,
  label,
  error,
  action,
  helpText,
  children,
  labelHidden,
  requiredIndicator,
  disabled,
  readOnly,
  ...rest
}) {
  const className = classNames(labelHidden && styles10.hidden, disabled && styles10.disabled, readOnly && styles10.readOnly);
  const actionMarkup = action ? /* @__PURE__ */ import_react76.default.createElement("div", {
    className: styles10.Action
  }, buttonFrom(action, {
    variant: "plain"
  })) : null;
  const helpTextMarkup = helpText ? /* @__PURE__ */ import_react76.default.createElement("div", {
    className: styles10.HelpText,
    id: helpTextID(id),
    "aria-disabled": disabled
  }, /* @__PURE__ */ import_react76.default.createElement(Text, {
    as: "span",
    tone: "subdued",
    variant: "bodyMd",
    breakWord: true
  }, helpText)) : null;
  const errorMarkup = error && typeof error !== "boolean" && /* @__PURE__ */ import_react76.default.createElement("div", {
    className: styles10.Error
  }, /* @__PURE__ */ import_react76.default.createElement(InlineError, {
    message: error,
    fieldID: id
  }));
  const labelMarkup = label ? /* @__PURE__ */ import_react76.default.createElement("div", {
    className: styles10.LabelWrapper
  }, /* @__PURE__ */ import_react76.default.createElement(Label, Object.assign({
    id,
    requiredIndicator
  }, rest, {
    hidden: false
  }), label), actionMarkup) : null;
  return /* @__PURE__ */ import_react76.default.createElement("div", {
    className
  }, labelMarkup, children, errorMarkup, helpTextMarkup);
}
function helpTextID(id) {
  return `${id}HelpText`;
}
var import_react76;
var init_Labelled = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Labelled/Labelled.js"() {
    import_react76 = __toESM(require_react());
    init_css();
    init_Labelled_css();
    init_InlineError();
    init_Label();
    init_utils3();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Connected/Connected.css.js
var styles13;
var init_Connected_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Connected/Connected.css.js"() {
    styles13 = {
      "Connected": "Polaris-Connected",
      "Item": "Polaris-Connected__Item",
      "Item-primary": "Polaris-Connected__Item--primary",
      "Item-focused": "Polaris-Connected__Item--focused"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-toggle.js
function useToggle(initialState) {
  const [value, setState] = (0, import_react77.useState)(initialState);
  return {
    value,
    toggle: (0, import_react77.useCallback)(() => setState((state) => !state), []),
    setTrue: (0, import_react77.useCallback)(() => setState(true), []),
    setFalse: (0, import_react77.useCallback)(() => setState(false), [])
  };
}
var import_react77;
var init_use_toggle = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-toggle.js"() {
    import_react77 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/components/Connected/components/Item/Item.js
function Item({
  children,
  position
}) {
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const className = classNames(styles13.Item, focused && styles13["Item-focused"], position === "primary" ? styles13["Item-primary"] : styles13["Item-connection"]);
  return /* @__PURE__ */ import_react78.default.createElement("div", {
    onBlur: forceFalseFocused,
    onFocus: forceTrueFocused,
    className
  }, children);
}
var import_react78;
var init_Item = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Connected/components/Item/Item.js"() {
    import_react78 = __toESM(require_react());
    init_css();
    init_use_toggle();
    init_Connected_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Connected/Connected.js
function Connected({
  children,
  left,
  right
}) {
  const leftConnectionMarkup = left ? /* @__PURE__ */ import_react79.default.createElement(Item, {
    position: "left"
  }, left) : null;
  const rightConnectionMarkup = right ? /* @__PURE__ */ import_react79.default.createElement(Item, {
    position: "right"
  }, right) : null;
  return /* @__PURE__ */ import_react79.default.createElement("div", {
    className: styles13.Connected
  }, leftConnectionMarkup, /* @__PURE__ */ import_react79.default.createElement(Item, {
    position: "primary"
  }, children), rightConnectionMarkup);
}
var import_react79;
var init_Connected = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Connected/Connected.js"() {
    import_react79 = __toESM(require_react());
    init_Connected_css();
    init_Item();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TextField/components/Resizer/Resizer.js
function Resizer({
  contents,
  currentHeight: currentHeightProp = null,
  minimumLines,
  onHeightChange
}) {
  const contentNode = (0, import_react80.useRef)(null);
  const minimumLinesNode = (0, import_react80.useRef)(null);
  const animationFrame = (0, import_react80.useRef)();
  const currentHeight = (0, import_react80.useRef)(currentHeightProp);
  if (currentHeightProp !== currentHeight.current) {
    currentHeight.current = currentHeightProp;
  }
  (0, import_react80.useEffect)(() => {
    return () => {
      if (animationFrame.current) {
        cancelAnimationFrame(animationFrame.current);
      }
    };
  }, []);
  const minimumLinesMarkup = minimumLines ? /* @__PURE__ */ import_react80.default.createElement("div", {
    ref: minimumLinesNode,
    className: styles9.DummyInput,
    dangerouslySetInnerHTML: {
      __html: getContentsForMinimumLines(minimumLines)
    }
  }) : null;
  const handleHeightCheck = (0, import_react80.useCallback)(() => {
    if (animationFrame.current) {
      cancelAnimationFrame(animationFrame.current);
    }
    animationFrame.current = requestAnimationFrame(() => {
      if (!contentNode.current || !minimumLinesNode.current) {
        return;
      }
      const newHeight = Math.max(contentNode.current.offsetHeight, minimumLinesNode.current.offsetHeight);
      if (newHeight !== currentHeight.current) {
        onHeightChange(newHeight);
      }
    });
  }, [onHeightChange]);
  useIsomorphicLayoutEffect(() => {
    handleHeightCheck();
  });
  return /* @__PURE__ */ import_react80.default.createElement("div", {
    "aria-hidden": true,
    className: styles9.Resizer
  }, /* @__PURE__ */ import_react80.default.createElement(EventListener, {
    event: "resize",
    handler: handleHeightCheck
  }), /* @__PURE__ */ import_react80.default.createElement("div", {
    ref: contentNode,
    className: styles9.DummyInput,
    dangerouslySetInnerHTML: {
      __html: getFinalContents(contents)
    }
  }), minimumLinesMarkup);
}
function replaceEntity(entity) {
  return ENTITIES_TO_REPLACE[entity];
}
function getContentsForMinimumLines(minimumLines) {
  let content = "";
  for (let line = 0; line < minimumLines; line++) {
    content += "<br>";
  }
  return content;
}
function getFinalContents(contents) {
  return contents ? `${contents.replace(REPLACE_REGEX2, replaceEntity)}<br>` : "<br>";
}
var import_react80, ENTITIES_TO_REPLACE, REPLACE_REGEX2;
var init_Resizer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TextField/components/Resizer/Resizer.js"() {
    import_react80 = __toESM(require_react());
    init_use_isomorphic_layout_effect();
    init_TextField_css();
    init_EventListener();
    ENTITIES_TO_REPLACE = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "\n": "<br>",
      "\r": ""
    };
    REPLACE_REGEX2 = new RegExp(`[${Object.keys(ENTITIES_TO_REPLACE).join()}]`, "g");
  }
});

// node_modules/@shopify/polaris/build/esm/components/TextField/TextField.js
function TextField({
  prefix,
  suffix,
  verticalContent,
  placeholder,
  value = "",
  helpText,
  label,
  labelAction,
  labelHidden,
  disabled,
  clearButton,
  readOnly,
  autoFocus,
  focused,
  multiline,
  error,
  connectedRight,
  connectedLeft,
  type = "text",
  name,
  id: idProp,
  role,
  step,
  largeStep,
  autoComplete,
  max,
  maxLength,
  maxHeight,
  min,
  minLength,
  pattern,
  inputMode,
  spellCheck,
  ariaOwns,
  ariaControls,
  ariaExpanded,
  ariaActiveDescendant,
  ariaAutocomplete,
  showCharacterCount,
  align,
  requiredIndicator,
  monospaced,
  selectTextOnFocus,
  suggestion,
  variant = "inherit",
  size: size2 = "medium",
  onClearButtonClick,
  onChange,
  onSpinnerChange,
  onFocus,
  onBlur,
  tone,
  autoSize,
  loading
}) {
  const i18n = useI18n();
  const [height2, setHeight] = (0, import_react81.useState)(null);
  const [focus, setFocus] = (0, import_react81.useState)(Boolean(focused));
  const isAfterInitial = useIsAfterInitialMount();
  const uniqId = (0, import_react81.useId)();
  const id = idProp ?? uniqId;
  const textFieldRef = (0, import_react81.useRef)(null);
  const inputRef = (0, import_react81.useRef)(null);
  const textAreaRef = (0, import_react81.useRef)(null);
  const prefixRef = (0, import_react81.useRef)(null);
  const suffixRef = (0, import_react81.useRef)(null);
  const loadingRef = (0, import_react81.useRef)(null);
  const verticalContentRef = (0, import_react81.useRef)(null);
  const buttonPressTimer = (0, import_react81.useRef)();
  const spinnerRef = (0, import_react81.useRef)(null);
  const getInputRef = (0, import_react81.useCallback)(() => {
    return multiline ? textAreaRef.current : inputRef.current;
  }, [multiline]);
  (0, import_react81.useEffect)(() => {
    const input2 = getInputRef();
    if (!input2 || focused === void 0)
      return;
    focused ? input2.focus() : input2.blur();
  }, [focused, verticalContent, getInputRef]);
  (0, import_react81.useEffect)(() => {
    const input2 = inputRef.current;
    const isSupportedInputType = type === "text" || type === "tel" || type === "search" || type === "url" || type === "password";
    if (!input2 || !isSupportedInputType || !suggestion) {
      return;
    }
    input2.setSelectionRange(value.length, suggestion.length);
  }, [focus, value, type, suggestion]);
  const normalizedValue = suggestion ? suggestion : value;
  const normalizedStep = step != null ? step : 1;
  const normalizedMax = max != null ? max : Infinity;
  const normalizedMin = min != null ? min : -Infinity;
  const className = classNames(styles9.TextField, Boolean(normalizedValue) && styles9.hasValue, disabled && styles9.disabled, readOnly && styles9.readOnly, error && styles9.error, tone && styles9[variationName("tone", tone)], multiline && styles9.multiline, focus && !disabled && styles9.focus, variant !== "inherit" && styles9[variant], size2 === "slim" && styles9.slim);
  const inputType = type === "currency" ? "text" : type;
  const isNumericType = type === "number" || type === "integer";
  const iconPrefix = /* @__PURE__ */ import_react81.default.isValidElement(prefix) && prefix.type === Icon;
  const prefixMarkup = prefix ? /* @__PURE__ */ import_react81.default.createElement("div", {
    className: classNames(styles9.Prefix, iconPrefix && styles9.PrefixIcon),
    id: `${id}-Prefix`,
    ref: prefixRef
  }, /* @__PURE__ */ import_react81.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, prefix)) : null;
  const suffixMarkup = suffix ? /* @__PURE__ */ import_react81.default.createElement("div", {
    className: styles9.Suffix,
    id: `${id}-Suffix`,
    ref: suffixRef
  }, /* @__PURE__ */ import_react81.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, suffix)) : null;
  const loadingMarkup = loading ? /* @__PURE__ */ import_react81.default.createElement("div", {
    className: styles9.Loading,
    id: `${id}-Loading`,
    ref: loadingRef
  }, /* @__PURE__ */ import_react81.default.createElement(Spinner, {
    size: "small"
  })) : null;
  let characterCountMarkup = null;
  if (showCharacterCount) {
    const characterCount = normalizedValue.length;
    const characterCountLabel = maxLength ? i18n.translate("Polaris.TextField.characterCountWithMaxLength", {
      count: characterCount,
      limit: maxLength
    }) : i18n.translate("Polaris.TextField.characterCount", {
      count: characterCount
    });
    const characterCountClassName = classNames(styles9.CharacterCount, multiline && styles9.AlignFieldBottom);
    const characterCountText = !maxLength ? characterCount : `${characterCount}/${maxLength}`;
    characterCountMarkup = /* @__PURE__ */ import_react81.default.createElement("div", {
      id: `${id}-CharacterCounter`,
      className: characterCountClassName,
      "aria-label": characterCountLabel,
      "aria-live": focus ? "polite" : "off",
      "aria-atomic": "true",
      onClick: handleClickChild
    }, /* @__PURE__ */ import_react81.default.createElement(Text, {
      as: "span",
      variant: "bodyMd"
    }, characterCountText));
  }
  const clearButtonVisible = normalizedValue !== "";
  const clearButtonMarkup = clearButton && clearButtonVisible ? /* @__PURE__ */ import_react81.default.createElement("button", {
    type: "button",
    className: styles9.ClearButton,
    onClick: handleClearButtonPress,
    disabled
  }, /* @__PURE__ */ import_react81.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, i18n.translate("Polaris.Common.clear")), /* @__PURE__ */ import_react81.default.createElement(Icon, {
    source: SvgXCircleIcon,
    tone: "base"
  })) : null;
  const handleNumberChange = (0, import_react81.useCallback)((steps, stepAmount = normalizedStep) => {
    if (onChange == null && onSpinnerChange == null) {
      return;
    }
    const dpl = (num) => (num.toString().split(".")[1] || []).length;
    const numericValue = value ? parseFloat(value) : 0;
    if (isNaN(numericValue)) {
      return;
    }
    const decimalPlaces = type === "integer" ? 0 : Math.max(dpl(numericValue), dpl(stepAmount));
    const newValue = Math.min(Number(normalizedMax), Math.max(numericValue + steps * stepAmount, Number(normalizedMin)));
    if (onSpinnerChange != null) {
      onSpinnerChange(String(newValue.toFixed(decimalPlaces)), id);
    } else if (onChange != null) {
      onChange(String(newValue.toFixed(decimalPlaces)), id);
    }
  }, [id, normalizedMax, normalizedMin, onChange, onSpinnerChange, normalizedStep, type, value]);
  const handleSpinnerButtonRelease = (0, import_react81.useCallback)(() => {
    clearTimeout(buttonPressTimer.current);
  }, []);
  const handleSpinnerButtonPress = (0, import_react81.useCallback)((onChange2) => {
    const minInterval = 50;
    const decrementBy = 10;
    let interval = 200;
    const onChangeInterval = () => {
      if (interval > minInterval)
        interval -= decrementBy;
      onChange2(0);
      buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);
    };
    buttonPressTimer.current = window.setTimeout(onChangeInterval, interval);
    document.addEventListener("mouseup", handleSpinnerButtonRelease, {
      once: true
    });
  }, [handleSpinnerButtonRelease]);
  const spinnerMarkup = isNumericType && step !== 0 && !disabled && !readOnly ? /* @__PURE__ */ import_react81.default.createElement(Spinner2, {
    onClick: handleClickChild,
    onChange: handleNumberChange,
    onMouseDown: handleSpinnerButtonPress,
    onMouseUp: handleSpinnerButtonRelease,
    ref: spinnerRef,
    onBlur: handleOnBlur
  }) : null;
  const style = multiline && height2 ? {
    height: height2,
    maxHeight
  } : null;
  const handleExpandingResize = (0, import_react81.useCallback)((height3) => {
    setHeight(height3);
  }, []);
  const resizer = multiline && isAfterInitial ? /* @__PURE__ */ import_react81.default.createElement(Resizer, {
    contents: normalizedValue || placeholder,
    currentHeight: height2,
    minimumLines: typeof multiline === "number" ? multiline : 1,
    onHeightChange: handleExpandingResize
  }) : null;
  const describedBy = [];
  if (error) {
    describedBy.push(`${id}Error`);
  }
  if (helpText) {
    describedBy.push(helpTextID(id));
  }
  if (showCharacterCount) {
    describedBy.push(`${id}-CharacterCounter`);
  }
  const labelledBy = [];
  if (prefix) {
    labelledBy.push(`${id}-Prefix`);
  }
  if (suffix) {
    labelledBy.push(`${id}-Suffix`);
  }
  if (verticalContent) {
    labelledBy.push(`${id}-VerticalContent`);
  }
  labelledBy.unshift(labelID(id));
  const inputClassName = classNames(styles9.Input, align && styles9[variationName("Input-align", align)], suffix && styles9["Input-suffixed"], clearButton && styles9["Input-hasClearButton"], monospaced && styles9.monospaced, suggestion && styles9.suggestion, autoSize && styles9["Input-autoSize"]);
  const handleOnFocus = (event) => {
    setFocus(true);
    if (selectTextOnFocus && !suggestion) {
      const input2 = getInputRef();
      input2?.select();
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  useEventListener("wheel", handleOnWheel, inputRef);
  function handleOnWheel(event) {
    if (document.activeElement === event.target && isNumericType) {
      event.stopPropagation();
    }
  }
  const input = /* @__PURE__ */ (0, import_react81.createElement)(multiline ? "textarea" : "input", {
    name,
    id,
    disabled,
    readOnly,
    role,
    autoFocus,
    value: normalizedValue,
    placeholder,
    style,
    autoComplete,
    className: inputClassName,
    ref: multiline ? textAreaRef : inputRef,
    min,
    max,
    step,
    minLength,
    maxLength,
    spellCheck,
    pattern,
    inputMode,
    type: inputType,
    rows: getRows(multiline),
    size: autoSize ? 1 : void 0,
    "aria-describedby": describedBy.length ? describedBy.join(" ") : void 0,
    "aria-labelledby": labelledBy.join(" "),
    "aria-invalid": Boolean(error),
    "aria-owns": ariaOwns,
    "aria-activedescendant": ariaActiveDescendant,
    "aria-autocomplete": ariaAutocomplete,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-required": requiredIndicator,
    ...normalizeAriaMultiline(multiline),
    onFocus: handleOnFocus,
    onBlur: handleOnBlur,
    onClick: handleClickChild,
    onKeyPress: handleKeyPress,
    onKeyDown: handleKeyDown5,
    onChange: !suggestion ? handleChange : void 0,
    onInput: suggestion ? handleChange : void 0,
    // 1Password disable data attribute
    "data-1p-ignore": autoComplete === "off" || void 0,
    // LastPass disable data attribute
    "data-lpignore": autoComplete === "off" || void 0,
    // Dashlane disable data attribute
    "data-form-type": autoComplete === "off" ? "other" : void 0
  });
  const inputWithVerticalContentMarkup = verticalContent ? /* @__PURE__ */ import_react81.default.createElement("div", {
    className: styles9.VerticalContent,
    id: `${id}-VerticalContent`,
    ref: verticalContentRef,
    onClick: handleClickChild
  }, verticalContent, input) : null;
  const inputMarkup = verticalContent ? inputWithVerticalContentMarkup : input;
  const backdropMarkup = /* @__PURE__ */ import_react81.default.createElement("div", {
    className: classNames(styles9.Backdrop, connectedLeft && styles9["Backdrop-connectedLeft"], connectedRight && styles9["Backdrop-connectedRight"])
  });
  const inputAndSuffixMarkup = autoSize ? /* @__PURE__ */ import_react81.default.createElement("div", {
    className: styles9.InputAndSuffixWrapper
  }, /* @__PURE__ */ import_react81.default.createElement("div", {
    className: classNames(styles9.AutoSizeWrapper, suffix && styles9.AutoSizeWrapperWithSuffix),
    "data-auto-size-value": value || placeholder
  }, inputMarkup), suffixMarkup) : /* @__PURE__ */ import_react81.default.createElement(import_react81.default.Fragment, null, inputMarkup, suffixMarkup);
  return /* @__PURE__ */ import_react81.default.createElement(Labelled, {
    label,
    id,
    error,
    action: labelAction,
    labelHidden,
    helpText,
    requiredIndicator,
    disabled,
    readOnly
  }, /* @__PURE__ */ import_react81.default.createElement(Connected, {
    left: connectedLeft,
    right: connectedRight
  }, /* @__PURE__ */ import_react81.default.createElement("div", {
    className,
    onClick: handleClick,
    ref: textFieldRef
  }, prefixMarkup, inputAndSuffixMarkup, characterCountMarkup, loadingMarkup, clearButtonMarkup, spinnerMarkup, backdropMarkup, resizer)));
  function handleChange(event) {
    onChange && onChange(event.currentTarget.value, id);
  }
  function handleClick(event) {
    const {
      target
    } = event;
    const inputRefRole = inputRef?.current?.getAttribute("role");
    if (target === inputRef.current && inputRefRole === "combobox") {
      inputRef.current?.focus();
      handleOnFocus(event);
      return;
    }
    if (isPrefixOrSuffix(target) || isVerticalContent(target) || isInput(target) || isSpinner(target) || isLoadingSpinner(target) || focus) {
      return;
    }
    getInputRef()?.focus();
  }
  function handleClickChild(event) {
    if (!isSpinner(event.target) && !isInput(event.target)) {
      event.stopPropagation();
    }
    if (isPrefixOrSuffix(event.target) || isVerticalContent(event.target) || isInput(event.target) || isLoadingSpinner(event.target) || focus) {
      return;
    }
    setFocus(true);
    getInputRef()?.focus();
  }
  function handleClearButtonPress() {
    onClearButtonClick && onClearButtonClick(id);
  }
  function handleKeyPress(event) {
    const {
      key,
      which
    } = event;
    const numbersSpec = /[\d.,eE+-]$/;
    const integerSpec = /[\deE+-]$/;
    if (!isNumericType || which === Key.Enter || type === "number" && numbersSpec.test(key) || type === "integer" && integerSpec.test(key)) {
      return;
    }
    event.preventDefault();
  }
  function handleKeyDown5(event) {
    if (!isNumericType) {
      return;
    }
    const {
      key,
      which
    } = event;
    if (type === "integer" && (key === "ArrowUp" || which === Key.UpArrow)) {
      handleNumberChange(1);
      event.preventDefault();
    }
    if (type === "integer" && (key === "ArrowDown" || which === Key.DownArrow)) {
      handleNumberChange(-1);
      event.preventDefault();
    }
    if ((which === Key.Home || key === "Home") && min !== void 0) {
      if (onSpinnerChange != null) {
        onSpinnerChange(String(min), id);
      } else if (onChange != null) {
        onChange(String(min), id);
      }
    }
    if ((which === Key.End || key === "End") && max !== void 0) {
      if (onSpinnerChange != null) {
        onSpinnerChange(String(max), id);
      } else if (onChange != null) {
        onChange(String(max), id);
      }
    }
    if ((which === Key.PageUp || key === "PageUp") && largeStep !== void 0) {
      handleNumberChange(1, largeStep);
    }
    if ((which === Key.PageDown || key === "PageDown") && largeStep !== void 0) {
      handleNumberChange(-1, largeStep);
    }
  }
  function handleOnBlur(event) {
    setFocus(false);
    if (textFieldRef.current?.contains(event?.relatedTarget)) {
      return;
    }
    if (onBlur) {
      onBlur(event);
    }
  }
  function isInput(target) {
    const input2 = getInputRef();
    return target instanceof HTMLElement && input2 && (input2.contains(target) || input2.contains(document.activeElement));
  }
  function isPrefixOrSuffix(target) {
    return target instanceof Element && (prefixRef.current && prefixRef.current.contains(target) || suffixRef.current && suffixRef.current.contains(target));
  }
  function isSpinner(target) {
    return target instanceof Element && spinnerRef.current && spinnerRef.current.contains(target);
  }
  function isLoadingSpinner(target) {
    return target instanceof Element && loadingRef.current && loadingRef.current.contains(target);
  }
  function isVerticalContent(target) {
    return target instanceof Element && verticalContentRef.current && (verticalContentRef.current.contains(target) || verticalContentRef.current.contains(document.activeElement));
  }
}
function getRows(multiline) {
  if (!multiline)
    return void 0;
  return typeof multiline === "number" ? multiline : 1;
}
function normalizeAriaMultiline(multiline) {
  if (!multiline)
    return void 0;
  return Boolean(multiline) || typeof multiline === "number" && multiline > 0 ? {
    "aria-multiline": true
  } : void 0;
}
var import_react81;
var init_TextField = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TextField/TextField.js"() {
    import_react81 = __toESM(require_react());
    init_dist();
    init_css();
    init_use_is_after_initial_mount();
    init_types();
    init_use_event_listener();
    init_TextField_css();
    init_Spinner2();
    init_Labelled();
    init_Connected();
    init_Resizer();
    init_Label();
    init_hooks2();
    init_Icon();
    init_Text();
    init_Spinner();
  }
});

// node_modules/@shopify/polaris/build/esm/components/FilterActionsProvider/FilterActionsProvider.js
function FilterActionsProvider({
  children,
  filterActions
}) {
  return /* @__PURE__ */ import_react82.default.createElement(FilterActionsContext.Provider, {
    value: filterActions
  }, children);
}
var import_react82, FilterActionsContext;
var init_FilterActionsProvider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FilterActionsProvider/FilterActionsProvider.js"() {
    import_react82 = __toESM(require_react());
    FilterActionsContext = /* @__PURE__ */ (0, import_react82.createContext)(false);
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.css.js
var styles14;
var init_ActionList_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.css.js"() {
    styles14 = {
      "Item": "Polaris-ActionList__Item",
      "default": "Polaris-ActionList--default",
      "active": "Polaris-ActionList--active",
      "destructive": "Polaris-ActionList--destructive",
      "disabled": "Polaris-ActionList--disabled",
      "Prefix": "Polaris-ActionList__Prefix",
      "Suffix": "Polaris-ActionList__Suffix",
      "indented": "Polaris-ActionList--indented",
      "menu": "Polaris-ActionList--menu",
      "Text": "Polaris-ActionList__Text"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/within-filter-context.js
var import_react83, WithinFilterContext;
var init_within_filter_context = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/within-filter-context.js"() {
    import_react83 = __toESM(require_react());
    WithinFilterContext = /* @__PURE__ */ (0, import_react83.createContext)(false);
  }
});

// node_modules/@shopify/polaris/build/esm/components/Badge/Badge.css.js
var styles15;
var init_Badge_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Badge/Badge.css.js"() {
    styles15 = {
      "Badge": "Polaris-Badge",
      "toneSuccess": "Polaris-Badge--toneSuccess",
      "toneSuccess-strong": "Polaris-Badge__toneSuccess--strong",
      "toneInfo": "Polaris-Badge--toneInfo",
      "toneInfo-strong": "Polaris-Badge__toneInfo--strong",
      "toneAttention": "Polaris-Badge--toneAttention",
      "toneAttention-strong": "Polaris-Badge__toneAttention--strong",
      "toneWarning": "Polaris-Badge--toneWarning",
      "toneWarning-strong": "Polaris-Badge__toneWarning--strong",
      "toneCritical": "Polaris-Badge--toneCritical",
      "toneCritical-strong": "Polaris-Badge__toneCritical--strong",
      "toneNew": "Polaris-Badge--toneNew",
      "toneMagic": "Polaris-Badge--toneMagic",
      "toneRead-only": "Polaris-Badge__toneRead--only",
      "toneEnabled": "Polaris-Badge--toneEnabled",
      "sizeLarge": "Polaris-Badge--sizeLarge",
      "withinFilter": "Polaris-Badge--withinFilter",
      "Icon": "Polaris-Badge__Icon",
      "PipContainer": "Polaris-Badge__PipContainer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Badge/types.js
var ToneValue, ProgressValue;
var init_types2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Badge/types.js"() {
    (function(ToneValue2) {
      ToneValue2["Info"] = "info";
      ToneValue2["Success"] = "success";
      ToneValue2["Warning"] = "warning";
      ToneValue2["Critical"] = "critical";
      ToneValue2["Attention"] = "attention";
      ToneValue2["New"] = "new";
      ToneValue2["Magic"] = "magic";
      ToneValue2["InfoStrong"] = "info-strong";
      ToneValue2["SuccessStrong"] = "success-strong";
      ToneValue2["WarningStrong"] = "warning-strong";
      ToneValue2["CriticalStrong"] = "critical-strong";
      ToneValue2["AttentionStrong"] = "attention-strong";
      ToneValue2["ReadOnly"] = "read-only";
      ToneValue2["Enabled"] = "enabled";
    })(ToneValue || (ToneValue = {}));
    (function(ProgressValue2) {
      ProgressValue2["Incomplete"] = "incomplete";
      ProgressValue2["PartiallyComplete"] = "partiallyComplete";
      ProgressValue2["Complete"] = "complete";
    })(ProgressValue || (ProgressValue = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/components/Badge/utils.js
function getDefaultAccessibilityLabel(i18n, progress, tone) {
  let progressLabel = "";
  let toneLabel = "";
  if (!progress && !tone) {
    return "";
  }
  switch (progress) {
    case ProgressValue.Incomplete:
      progressLabel = i18n.translate("Polaris.Badge.PROGRESS_LABELS.incomplete");
      break;
    case ProgressValue.PartiallyComplete:
      progressLabel = i18n.translate("Polaris.Badge.PROGRESS_LABELS.partiallyComplete");
      break;
    case ProgressValue.Complete:
      progressLabel = i18n.translate("Polaris.Badge.PROGRESS_LABELS.complete");
      break;
  }
  switch (tone) {
    case ToneValue.Info:
    case ToneValue.InfoStrong:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.info");
      break;
    case ToneValue.Success:
    case ToneValue.SuccessStrong:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.success");
      break;
    case ToneValue.Warning:
    case ToneValue.WarningStrong:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.warning");
      break;
    case ToneValue.Critical:
    case ToneValue.CriticalStrong:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.critical");
      break;
    case ToneValue.Attention:
    case ToneValue.AttentionStrong:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.attention");
      break;
    case ToneValue.New:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.new");
      break;
    case ToneValue.ReadOnly:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.readOnly");
      break;
    case ToneValue.Enabled:
      toneLabel = i18n.translate("Polaris.Badge.TONE_LABELS.enabled");
      break;
  }
  if (!tone && progress) {
    return progressLabel;
  } else if (tone && !progress) {
    return toneLabel;
  } else {
    return i18n.translate("Polaris.Badge.progressAndTone", {
      progressLabel,
      toneLabel
    });
  }
}
var init_utils4 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Badge/utils.js"() {
    init_types2();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.css.js
var styles16;
var init_Pip_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.css.js"() {
    styles16 = {
      "Pip": "Polaris-Badge-Pip",
      "toneInfo": "Polaris-Badge-Pip--toneInfo",
      "toneSuccess": "Polaris-Badge-Pip--toneSuccess",
      "toneNew": "Polaris-Badge-Pip--toneNew",
      "toneAttention": "Polaris-Badge-Pip--toneAttention",
      "toneWarning": "Polaris-Badge-Pip--toneWarning",
      "toneCritical": "Polaris-Badge-Pip--toneCritical",
      "progressIncomplete": "Polaris-Badge-Pip--progressIncomplete",
      "progressPartiallyComplete": "Polaris-Badge-Pip--progressPartiallyComplete",
      "progressComplete": "Polaris-Badge-Pip--progressComplete"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.js
function Pip({
  tone,
  progress = "complete",
  accessibilityLabelOverride
}) {
  const i18n = useI18n();
  const className = classNames(styles16.Pip, tone && styles16[variationName("tone", tone)], progress && styles16[variationName("progress", progress)]);
  const accessibilityLabel = accessibilityLabelOverride ? accessibilityLabelOverride : getDefaultAccessibilityLabel(i18n, progress, tone);
  return /* @__PURE__ */ import_react84.default.createElement("span", {
    className
  }, /* @__PURE__ */ import_react84.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel));
}
var import_react84;
var init_Pip = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Badge/components/Pip/Pip.js"() {
    import_react84 = __toESM(require_react());
    init_css();
    init_utils4();
    init_Pip_css();
    init_hooks2();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Badge/Badge.js
function Badge({
  children,
  tone,
  progress,
  icon,
  size: size2 = DEFAULT_SIZE,
  toneAndProgressLabelOverride
}) {
  const i18n = useI18n();
  const withinFilter = (0, import_react85.useContext)(WithinFilterContext);
  const className = classNames(styles15.Badge, tone && styles15[variationName("tone", tone)], size2 && size2 !== DEFAULT_SIZE && styles15[variationName("size", size2)], withinFilter && styles15.withinFilter);
  const accessibilityLabel = toneAndProgressLabelOverride ? toneAndProgressLabelOverride : getDefaultAccessibilityLabel(i18n, progress, tone);
  let accessibilityMarkup = Boolean(accessibilityLabel) && /* @__PURE__ */ import_react85.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, accessibilityLabel);
  if (progress && !icon) {
    accessibilityMarkup = /* @__PURE__ */ import_react85.default.createElement("span", {
      className: styles15.Icon
    }, /* @__PURE__ */ import_react85.default.createElement(Icon, {
      accessibilityLabel,
      source: progressIconMap[progress]
    }));
  }
  return /* @__PURE__ */ import_react85.default.createElement("span", {
    className
  }, accessibilityMarkup, icon && /* @__PURE__ */ import_react85.default.createElement("span", {
    className: styles15.Icon
  }, /* @__PURE__ */ import_react85.default.createElement(Icon, {
    source: icon
  })), children && /* @__PURE__ */ import_react85.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    fontWeight: tone === "new" ? "medium" : void 0
  }, children));
}
var import_react85, DEFAULT_SIZE, progressIconMap;
var init_Badge = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Badge/Badge.js"() {
    import_react85 = __toESM(require_react());
    init_css();
    init_within_filter_context();
    init_Badge_css();
    init_utils4();
    init_Pip();
    init_hooks2();
    init_Icon();
    init_Text();
    DEFAULT_SIZE = "medium";
    progressIconMap = {
      complete: () => /* @__PURE__ */ import_react85.default.createElement("svg", {
        viewBox: "0 0 20 20"
      }, /* @__PURE__ */ import_react85.default.createElement("path", {
        d: "M6 10c0-.93 0-1.395.102-1.776a3 3 0 0 1 2.121-2.122C8.605 6 9.07 6 10 6c.93 0 1.395 0 1.776.102a3 3 0 0 1 2.122 2.122C14 8.605 14 9.07 14 10s0 1.395-.102 1.777a3 3 0 0 1-2.122 2.12C11.395 14 10.93 14 10 14s-1.395 0-1.777-.102a3 3 0 0 1-2.12-2.121C6 11.395 6 10.93 6 10Z"
      })),
      partiallyComplete: () => /* @__PURE__ */ import_react85.default.createElement("svg", {
        viewBox: "0 0 20 20"
      }, /* @__PURE__ */ import_react85.default.createElement("path", {
        fillRule: "evenodd",
        d: "m8.888 6.014-.017-.018-.02.02c-.253.013-.45.038-.628.086a3 3 0 0 0-2.12 2.122C6 8.605 6 9.07 6 10s0 1.395.102 1.777a3 3 0 0 0 2.121 2.12C8.605 14 9.07 14 10 14c.93 0 1.395 0 1.776-.102a3 3 0 0 0 2.122-2.121C14 11.395 14 10.93 14 10c0-.93 0-1.395-.102-1.776a3 3 0 0 0-2.122-2.122C11.395 6 10.93 6 10 6c-.475 0-.829 0-1.112.014ZM8.446 7.34a1.75 1.75 0 0 0-1.041.94l4.314 4.315c.443-.2.786-.576.941-1.042L8.446 7.34Zm4.304 2.536L10.124 7.25c.908.001 1.154.013 1.329.06a1.75 1.75 0 0 1 1.237 1.237c.047.175.059.42.06 1.329ZM8.547 12.69c.182.05.442.06 1.453.06h.106L7.25 9.894V10c0 1.01.01 1.27.06 1.453a1.75 1.75 0 0 0 1.237 1.237Z"
      })),
      incomplete: () => /* @__PURE__ */ import_react85.default.createElement("svg", {
        viewBox: "0 0 20 20"
      }, /* @__PURE__ */ import_react85.default.createElement("path", {
        fillRule: "evenodd",
        d: "M8.547 12.69c.183.05.443.06 1.453.06s1.27-.01 1.453-.06a1.75 1.75 0 0 0 1.237-1.237c.05-.182.06-.443.06-1.453s-.01-1.27-.06-1.453a1.75 1.75 0 0 0-1.237-1.237c-.182-.05-.443-.06-1.453-.06s-1.27.01-1.453.06A1.75 1.75 0 0 0 7.31 8.547c-.05.183-.06.443-.06 1.453s.01 1.27.06 1.453a1.75 1.75 0 0 0 1.237 1.237ZM6.102 8.224C6 8.605 6 9.07 6 10s0 1.395.102 1.777a3 3 0 0 0 2.122 2.12C8.605 14 9.07 14 10 14s1.395 0 1.777-.102a3 3 0 0 0 2.12-2.121C14 11.395 14 10.93 14 10c0-.93 0-1.395-.102-1.776a3 3 0 0 0-2.121-2.122C11.395 6 10.93 6 10 6c-.93 0-1.395 0-1.776.102a3 3 0 0 0-2.122 2.122Z"
      }))
    };
    Badge.Pip = Pip;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.css.js
var styles17;
var init_Tooltip_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.css.js"() {
    styles17 = {
      "TooltipContainer": "Polaris-Tooltip__TooltipContainer",
      "HasUnderline": "Polaris-Tooltip__HasUnderline"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/ephemeral-presence-manager/hooks.js
function useEphemeralPresenceManager() {
  const ephemeralPresenceManager = (0, import_react86.useContext)(EphemeralPresenceManagerContext);
  if (!ephemeralPresenceManager) {
    throw new Error("No ephemeral presence manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return ephemeralPresenceManager;
}
function useReadOnlyEphemeralPresenceManager() {
  const {
    presenceList,
    presenceCounter
  } = useEphemeralPresenceManager();
  return {
    presenceList,
    presenceCounter
  };
}
var import_react86;
var init_hooks3 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/ephemeral-presence-manager/hooks.js"() {
    import_react86 = __toESM(require_react());
    init_context9();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/portals/hooks.js
function usePortalsManager() {
  const portalsManager = (0, import_react87.useContext)(PortalsManagerContext);
  if (!portalsManager) {
    throw new Error("No portals manager was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return portalsManager;
}
var import_react87;
var init_hooks4 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/portals/hooks.js"() {
    import_react87 = __toESM(require_react());
    init_context7();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ThemeProvider/ThemeProvider.css.js
var styles18;
var init_ThemeProvider_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ThemeProvider/ThemeProvider.css.js"() {
    styles18 = {
      "themeContainer": "Polaris-ThemeProvider--themeContainer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ThemeProvider/ThemeProvider.js
function ThemeProvider(props) {
  const {
    as: ThemeContainer = "div",
    children,
    className,
    theme: themeName = themeNameDefault
  } = props;
  return /* @__PURE__ */ import_react88.default.createElement(ThemeNameContext.Provider, {
    value: themeName
  }, /* @__PURE__ */ import_react88.default.createElement(ThemeContext.Provider, {
    value: getTheme(themeName)
  }, /* @__PURE__ */ import_react88.default.createElement(ThemeContainer, {
    "data-portal-id": props["data-portal-id"],
    className: classNames(createThemeClassName(themeName), styles18.themeContainer, className)
  }, children)));
}
var import_react88, themeNamesLocal, isThemeNameLocal;
var init_ThemeProvider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ThemeProvider/ThemeProvider.js"() {
    import_react88 = __toESM(require_react());
    init_build();
    init_use_theme();
    init_css();
    init_ThemeProvider_css();
    themeNamesLocal = ["light", "dark-experimental"];
    isThemeNameLocal = (name) => themeNamesLocal.includes(name);
  }
});

// node_modules/@shopify/polaris/build/esm/components/Portal/Portal.js
function Portal({
  children,
  idPrefix = "",
  onPortalCreated = noop2
}) {
  const themeName = useThemeName();
  const {
    container
  } = usePortalsManager();
  const uniqueId = (0, import_react89.useId)();
  const portalId = idPrefix !== "" ? `${idPrefix}-${uniqueId}` : uniqueId;
  (0, import_react89.useEffect)(() => {
    onPortalCreated();
  }, [onPortalCreated]);
  return container ? /* @__PURE__ */ (0, import_react_dom.createPortal)(/* @__PURE__ */ import_react89.default.createElement(ThemeProvider, {
    theme: isThemeNameLocal(themeName) ? themeName : themeNameDefault,
    "data-portal-id": portalId
  }, children), container) : null;
}
function noop2() {
}
var import_react89, import_react_dom;
var init_Portal = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Portal/Portal.js"() {
    init_build();
    import_react89 = __toESM(require_react());
    import_react_dom = __toESM(require_react_dom());
    init_use_theme();
    init_hooks4();
    init_ThemeProvider();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.css.js
var styles19;
var init_TooltipOverlay_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.css.js"() {
    styles19 = {
      "TooltipOverlay": "Polaris-Tooltip-TooltipOverlay",
      "Tail": "Polaris-Tooltip-TooltipOverlay__Tail",
      "positionedAbove": "Polaris-Tooltip-TooltipOverlay--positionedAbove",
      "measuring": "Polaris-Tooltip-TooltipOverlay--measuring",
      "measured": "Polaris-Tooltip-TooltipOverlay--measured",
      "instant": "Polaris-Tooltip-TooltipOverlay--instant",
      "Content": "Polaris-Tooltip-TooltipOverlay__Content",
      "default": "Polaris-Tooltip-TooltipOverlay--default",
      "wide": "Polaris-Tooltip-TooltipOverlay--wide"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/utilities/math.js
function calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset = 0) {
  const activatorTop = activatorRect.top;
  const activatorBottom = activatorTop + activatorRect.height;
  const spaceAbove = activatorRect.top - topBarOffset;
  const spaceBelow = containerRect.height - activatorRect.top - activatorRect.height;
  const desiredHeight = overlayRect.height;
  const verticalMargins = overlayMargins.activator + overlayMargins.container;
  const minimumSpaceToScroll = overlayMargins.container;
  const distanceToTopScroll = activatorRect.top - Math.max(scrollableContainerRect.top, 0);
  const distanceToBottomScroll = containerRect.top + Math.min(containerRect.height, scrollableContainerRect.top + scrollableContainerRect.height) - (activatorRect.top + activatorRect.height);
  const enoughSpaceFromTopScroll = distanceToTopScroll >= minimumSpaceToScroll;
  const enoughSpaceFromBottomScroll = distanceToBottomScroll >= minimumSpaceToScroll;
  const heightIfAbove = Math.min(spaceAbove, desiredHeight);
  const heightIfBelow = Math.min(spaceBelow, desiredHeight);
  const heightIfAboveCover = Math.min(spaceAbove + activatorRect.height, desiredHeight);
  const heightIfBelowCover = Math.min(spaceBelow + activatorRect.height, desiredHeight);
  const containerRectTop = fixed ? 0 : containerRect.top;
  const positionIfAbove = {
    height: heightIfAbove - verticalMargins,
    top: activatorTop + containerRectTop - heightIfAbove,
    positioning: "above"
  };
  const positionIfBelow = {
    height: heightIfBelow - verticalMargins,
    top: activatorBottom + containerRectTop,
    positioning: "below"
  };
  const positionIfCoverBelow = {
    height: heightIfBelowCover - verticalMargins,
    top: activatorTop + containerRectTop,
    positioning: "cover"
  };
  const positionIfCoverAbove = {
    height: heightIfAboveCover - verticalMargins,
    top: activatorTop + containerRectTop - heightIfAbove + activatorRect.height + verticalMargins,
    positioning: "cover"
  };
  if (preferredPosition === "above") {
    return (enoughSpaceFromTopScroll || distanceToTopScroll >= distanceToBottomScroll && !enoughSpaceFromBottomScroll) && (spaceAbove > desiredHeight || spaceAbove > spaceBelow) ? positionIfAbove : positionIfBelow;
  }
  if (preferredPosition === "below") {
    return (enoughSpaceFromBottomScroll || distanceToBottomScroll >= distanceToTopScroll && !enoughSpaceFromTopScroll) && (spaceBelow > desiredHeight || spaceBelow > spaceAbove) ? positionIfBelow : positionIfAbove;
  }
  if (preferredPosition === "cover") {
    return (enoughSpaceFromBottomScroll || distanceToBottomScroll >= distanceToTopScroll && !enoughSpaceFromTopScroll) && (spaceBelow + activatorRect.height > desiredHeight || spaceBelow > spaceAbove) ? positionIfCoverBelow : positionIfCoverAbove;
  }
  if (enoughSpaceFromTopScroll && enoughSpaceFromBottomScroll) {
    return spaceAbove > spaceBelow ? positionIfAbove : positionIfBelow;
  }
  return distanceToTopScroll > minimumSpaceToScroll ? positionIfAbove : positionIfBelow;
}
function calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment) {
  const maximum = containerRect.width - overlayRect.width;
  if (preferredAlignment === "left") {
    return Math.min(maximum, Math.max(0, activatorRect.left - overlayMargins.horizontal));
  } else if (preferredAlignment === "right") {
    const activatorRight = containerRect.width - (activatorRect.left + activatorRect.width);
    return Math.min(maximum, Math.max(0, activatorRight - overlayMargins.horizontal));
  }
  return Math.min(maximum, Math.max(0, activatorRect.center.x - overlayRect.width / 2));
}
function rectIsOutsideOfRect(inner, outer) {
  const {
    center
  } = inner;
  return center.y < outer.top || center.y > outer.top + outer.height;
}
function intersectionWithViewport(rect, viewport = windowRect()) {
  const top = Math.max(rect.top, 0);
  const left = Math.max(rect.left, 0);
  const bottom = Math.min(rect.top + rect.height, viewport.height);
  const right = Math.min(rect.left + rect.width, viewport.width);
  return new Rect({
    top,
    left,
    height: bottom - top,
    width: right - left
  });
}
function windowRect() {
  return new Rect({
    top: window.scrollY,
    left: window.scrollX,
    height: window.innerHeight,
    width: document.body.clientWidth
  });
}
var init_math = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/utilities/math.js"() {
    init_geometry();
  }
});

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.css.js
var styles20;
var init_PositionedOverlay_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.css.js"() {
    styles20 = {
      "PositionedOverlay": "Polaris-PositionedOverlay",
      "fixed": "Polaris-PositionedOverlay--fixed",
      "calculating": "Polaris-PositionedOverlay--calculating",
      "preventInteraction": "Polaris-PositionedOverlay--preventInteraction"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-lazy-ref.js
function useLazyRef(initialValue) {
  const lazyRef = (0, import_react90.useRef)(UNIQUE_IDENTIFIER);
  if (lazyRef.current === UNIQUE_IDENTIFIER) {
    lazyRef.current = initialValue();
  }
  return lazyRef;
}
var import_react90, UNIQUE_IDENTIFIER;
var init_use_lazy_ref = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-lazy-ref.js"() {
    import_react90 = __toESM(require_react());
    UNIQUE_IDENTIFIER = Symbol("unique_identifier");
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-component-did-mount.js
function useComponentDidMount(callback) {
  const isAfterInitialMount = useIsAfterInitialMount();
  const hasInvokedLifeCycle = (0, import_react91.useRef)(false);
  if (isAfterInitialMount && !hasInvokedLifeCycle.current) {
    hasInvokedLifeCycle.current = true;
    return callback();
  }
}
var import_react91;
var init_use_component_did_mount = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-component-did-mount.js"() {
    import_react91 = __toESM(require_react());
    init_use_is_after_initial_mount();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Scrollable/context.js
var import_react92, ScrollableContext;
var init_context10 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Scrollable/context.js"() {
    import_react92 = __toESM(require_react());
    ScrollableContext = /* @__PURE__ */ (0, import_react92.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.css.js
var styles21;
var init_Scrollable_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.css.js"() {
    styles21 = {
      "Scrollable": "Polaris-Scrollable",
      "hasTopShadow": "Polaris-Scrollable--hasTopShadow",
      "hasBottomShadow": "Polaris-Scrollable--hasBottomShadow",
      "horizontal": "Polaris-Scrollable--horizontal",
      "vertical": "Polaris-Scrollable--vertical",
      "scrollbarWidthThin": "Polaris-Scrollable--scrollbarWidthThin",
      "scrollbarWidthNone": "Polaris-Scrollable--scrollbarWidthNone",
      "scrollbarWidthAuto": "Polaris-Scrollable--scrollbarWidthAuto",
      "scrollbarGutterStable": "Polaris-Scrollable--scrollbarGutterStable",
      "scrollbarGutterStableboth-edges": "Polaris-Scrollable__scrollbarGutterStableboth--edges"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Scrollable/components/ScrollTo/ScrollTo.js
function ScrollTo() {
  const anchorNode = (0, import_react93.useRef)(null);
  const scrollToPosition = (0, import_react93.useContext)(ScrollableContext);
  (0, import_react93.useEffect)(() => {
    if (!scrollToPosition || !anchorNode.current) {
      return;
    }
    scrollToPosition(anchorNode.current.offsetTop);
  }, [scrollToPosition]);
  const id = (0, import_react93.useId)();
  return /* @__PURE__ */ import_react93.default.createElement("a", {
    id,
    ref: anchorNode
  });
}
var import_react93;
var init_ScrollTo = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Scrollable/components/ScrollTo/ScrollTo.js"() {
    import_react93 = __toESM(require_react());
    init_context10();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.js
function prefersReducedMotion() {
  try {
    return window.matchMedia("(prefers-reduced-motion: reduce)").matches;
  } catch (err) {
    return false;
  }
}
function performScrollHint(elem) {
  if (!elem || prefersReducedMotion()) {
    return;
  }
  const scrollableDistance = elem.scrollHeight - elem.clientHeight;
  const distanceToPeek = Math.min(MAX_SCROLL_HINT_DISTANCE, scrollableDistance) - LOW_RES_BUFFER;
  const goBackToTop = () => {
    requestAnimationFrame(() => {
      if (elem.scrollTop >= distanceToPeek) {
        elem.removeEventListener("scroll", goBackToTop);
        elem.scrollTo({
          top: 0,
          behavior: "smooth"
        });
      }
    });
  };
  elem.addEventListener("scroll", goBackToTop);
  elem.scrollTo({
    top: MAX_SCROLL_HINT_DISTANCE,
    behavior: "smooth"
  });
}
var import_react94, MAX_SCROLL_HINT_DISTANCE, LOW_RES_BUFFER, ScrollableComponent, forNode, Scrollable;
var init_Scrollable = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Scrollable/Scrollable.js"() {
    import_react94 = __toESM(require_react());
    init_debounce();
    init_css();
    init_shared();
    init_use_lazy_ref();
    init_use_component_did_mount();
    init_context10();
    init_Scrollable_css();
    init_ScrollTo();
    init_sticky_manager();
    init_context4();
    MAX_SCROLL_HINT_DISTANCE = 100;
    LOW_RES_BUFFER = 2;
    ScrollableComponent = /* @__PURE__ */ (0, import_react94.forwardRef)(({
      children,
      className,
      horizontal = true,
      vertical = true,
      shadow: shadow2,
      hint,
      focusable,
      scrollbarWidth = "thin",
      scrollbarGutter,
      onScrolledToBottom,
      ...rest
    }, forwardedRef) => {
      const [topShadow, setTopShadow] = (0, import_react94.useState)(false);
      const [bottomShadow, setBottomShadow] = (0, import_react94.useState)(false);
      const stickyManager = useLazyRef(() => new StickyManager());
      const scrollArea = (0, import_react94.useRef)(null);
      const scrollTo = (0, import_react94.useCallback)((scrollY, options = {}) => {
        const optionsBehavior = options.behavior || "smooth";
        const behavior = prefersReducedMotion() ? "auto" : optionsBehavior;
        scrollArea.current?.scrollTo({
          top: scrollY,
          behavior
        });
      }, []);
      const defaultRef = (0, import_react94.useRef)();
      (0, import_react94.useImperativeHandle)(forwardedRef || defaultRef, () => ({
        scrollTo
      }));
      const handleScroll = (0, import_react94.useCallback)(() => {
        const currentScrollArea = scrollArea.current;
        if (!currentScrollArea) {
          return;
        }
        requestAnimationFrame(() => {
          const {
            scrollTop,
            clientHeight,
            scrollHeight
          } = currentScrollArea;
          const canScroll = Boolean(scrollHeight > clientHeight);
          const isBelowTopOfScroll = Boolean(scrollTop > 0);
          const isAtBottomOfScroll = Boolean(scrollTop + clientHeight >= scrollHeight - LOW_RES_BUFFER);
          setTopShadow(isBelowTopOfScroll);
          setBottomShadow(!isAtBottomOfScroll);
          if (canScroll && isAtBottomOfScroll && onScrolledToBottom) {
            onScrolledToBottom();
          }
        });
      }, [onScrolledToBottom]);
      useComponentDidMount(() => {
        handleScroll();
        if (hint) {
          requestAnimationFrame(() => performScrollHint(scrollArea.current));
        }
      });
      (0, import_react94.useEffect)(() => {
        const currentScrollArea = scrollArea.current;
        if (!currentScrollArea) {
          return;
        }
        const handleResize = debounce(handleScroll, 50, {
          trailing: true
        });
        stickyManager.current?.setContainer(currentScrollArea);
        currentScrollArea.addEventListener("scroll", handleScroll);
        globalThis.addEventListener("resize", handleResize);
        return () => {
          currentScrollArea.removeEventListener("scroll", handleScroll);
          globalThis.removeEventListener("resize", handleResize);
        };
      }, [stickyManager, handleScroll]);
      const finalClassName = classNames(className, styles21.Scrollable, vertical && styles21.vertical, horizontal && styles21.horizontal, shadow2 && topShadow && styles21.hasTopShadow, shadow2 && bottomShadow && styles21.hasBottomShadow, scrollbarWidth && styles21[variationName("scrollbarWidth", scrollbarWidth)], scrollbarGutter && styles21[variationName("scrollbarGutter", scrollbarGutter.replace(" ", ""))]);
      return /* @__PURE__ */ import_react94.default.createElement(ScrollableContext.Provider, {
        value: scrollTo
      }, /* @__PURE__ */ import_react94.default.createElement(StickyManagerContext.Provider, {
        value: stickyManager.current
      }, /* @__PURE__ */ import_react94.default.createElement("div", Object.assign({
        className: finalClassName
      }, scrollable.props, rest, {
        ref: scrollArea,
        tabIndex: focusable ? 0 : void 0
      }), children)));
    });
    ScrollableComponent.displayName = "Scrollable";
    forNode = (node) => {
      const closestElement = node.closest(scrollable.selector);
      return closestElement instanceof HTMLElement ? closestElement : document;
    };
    Scrollable = ScrollableComponent;
    Scrollable.ScrollTo = ScrollTo;
    Scrollable.forNode = forNode;
  }
});

// node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.js
function getMarginsForNode(node) {
  const nodeStyles = window.getComputedStyle(node);
  return {
    activator: parseFloat(nodeStyles.marginTop || "0"),
    container: parseFloat(nodeStyles.marginBottom || "0"),
    horizontal: parseFloat(nodeStyles.marginLeft || "0")
  };
}
function getZIndexForLayerFromNode(node) {
  const layerNode = node.closest(layer.selector) || document.body;
  const zIndex2 = layerNode === document.body ? "auto" : parseInt(window.getComputedStyle(layerNode).zIndex || "0", 10);
  return zIndex2 === "auto" || isNaN(zIndex2) ? null : zIndex2;
}
function isDocument2(node) {
  return node === document;
}
var import_react95, OBSERVER_CONFIG, PositionedOverlay;
var init_PositionedOverlay = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PositionedOverlay/PositionedOverlay.js"() {
    import_react95 = __toESM(require_react());
    init_css();
    init_geometry();
    init_shared();
    init_math();
    init_PositionedOverlay_css();
    init_Scrollable();
    init_EventListener();
    OBSERVER_CONFIG = {
      childList: true,
      subtree: true,
      characterData: true,
      attributeFilter: ["style"]
    };
    PositionedOverlay = class extends import_react95.PureComponent {
      constructor(props) {
        super(props);
        this.state = {
          measuring: true,
          activatorRect: getRectForNode(this.props.activator),
          right: void 0,
          left: void 0,
          top: 0,
          height: 0,
          width: null,
          positioning: "below",
          zIndex: null,
          outsideScrollableContainer: false,
          lockPosition: false,
          chevronOffset: 0
        };
        this.overlay = null;
        this.scrollableContainers = [];
        this.overlayDetails = () => {
          const {
            measuring,
            left,
            right,
            positioning,
            height: height2,
            activatorRect,
            chevronOffset
          } = this.state;
          return {
            measuring,
            left,
            right,
            desiredHeight: height2,
            positioning,
            activatorRect,
            chevronOffset
          };
        };
        this.setOverlay = (node) => {
          this.overlay = node;
        };
        this.setScrollableContainers = () => {
          const containers = [];
          let scrollableContainer = Scrollable.forNode(this.props.activator);
          if (scrollableContainer) {
            containers.push(scrollableContainer);
            while (scrollableContainer?.parentElement) {
              scrollableContainer = Scrollable.forNode(scrollableContainer.parentElement);
              containers.push(scrollableContainer);
            }
          }
          this.scrollableContainers = containers;
        };
        this.registerScrollHandlers = () => {
          this.scrollableContainers.forEach((node) => {
            node.addEventListener("scroll", this.handleMeasurement);
          });
        };
        this.unregisterScrollHandlers = () => {
          this.scrollableContainers.forEach((node) => {
            node.removeEventListener("scroll", this.handleMeasurement);
          });
        };
        this.handleMeasurement = () => {
          const {
            lockPosition,
            top
          } = this.state;
          this.observer.disconnect();
          this.setState(({
            left,
            top: top2,
            right
          }) => ({
            left,
            right,
            top: top2,
            height: 0,
            positioning: "below",
            measuring: true
          }), () => {
            if (this.overlay == null || this.firstScrollableContainer == null) {
              return;
            }
            const {
              activator,
              preferredPosition = "below",
              preferredAlignment = "center",
              onScrollOut,
              fullWidth,
              fixed,
              preferInputActivator = true
            } = this.props;
            const preferredActivator = preferInputActivator ? activator.querySelector("input") || activator : activator;
            const activatorRect = getRectForNode(preferredActivator);
            const currentOverlayRect = getRectForNode(this.overlay);
            const scrollableElement = isDocument2(this.firstScrollableContainer) ? document.body : this.firstScrollableContainer;
            const scrollableContainerRect = getRectForNode(scrollableElement);
            const overlayRect = fullWidth || preferredPosition === "cover" ? new Rect({
              ...currentOverlayRect,
              width: activatorRect.width
            }) : currentOverlayRect;
            if (scrollableElement === document.body) {
              scrollableContainerRect.height = document.body.scrollHeight;
            }
            let topBarOffset = 0;
            const topBarElement = scrollableElement.querySelector(`${dataPolarisTopBar.selector}`);
            if (topBarElement) {
              topBarOffset = topBarElement.clientHeight;
            }
            const overlayMargins = this.overlay.firstElementChild && this.overlay.firstChild instanceof HTMLElement ? getMarginsForNode(this.overlay.firstElementChild) : {
              activator: 0,
              container: 0,
              horizontal: 0
            };
            const containerRect = windowRect();
            const zIndexForLayer = getZIndexForLayerFromNode(activator);
            const zIndex2 = zIndexForLayer == null ? zIndexForLayer : zIndexForLayer + 1;
            const verticalPosition = calculateVerticalPosition(activatorRect, overlayRect, overlayMargins, scrollableContainerRect, containerRect, preferredPosition, fixed, topBarOffset);
            const horizontalPosition = calculateHorizontalPosition(activatorRect, overlayRect, containerRect, overlayMargins, preferredAlignment);
            const chevronOffset = activatorRect.center.x - horizontalPosition + overlayMargins.horizontal * 2;
            this.setState({
              measuring: false,
              activatorRect: getRectForNode(activator),
              left: preferredAlignment !== "right" ? horizontalPosition : void 0,
              right: preferredAlignment === "right" ? horizontalPosition : void 0,
              top: lockPosition ? top : verticalPosition.top,
              lockPosition: Boolean(fixed),
              height: verticalPosition.height || 0,
              width: fullWidth || preferredPosition === "cover" ? overlayRect.width : null,
              positioning: verticalPosition.positioning,
              outsideScrollableContainer: onScrollOut != null && rectIsOutsideOfRect(activatorRect, intersectionWithViewport(scrollableContainerRect)),
              zIndex: zIndex2,
              chevronOffset
            }, () => {
              if (!this.overlay)
                return;
              this.observer.observe(this.overlay, OBSERVER_CONFIG);
              this.observer.observe(activator, OBSERVER_CONFIG);
            });
          });
        };
        this.observer = new MutationObserver(this.handleMeasurement);
      }
      componentDidMount() {
        this.setScrollableContainers();
        if (this.scrollableContainers.length && !this.props.fixed) {
          this.registerScrollHandlers();
        }
        this.handleMeasurement();
      }
      componentWillUnmount() {
        this.observer.disconnect();
        if (this.scrollableContainers.length && !this.props.fixed) {
          this.unregisterScrollHandlers();
        }
      }
      componentDidUpdate() {
        const {
          outsideScrollableContainer,
          top
        } = this.state;
        const {
          onScrollOut,
          active
        } = this.props;
        if (active && onScrollOut != null && top !== 0 && outsideScrollableContainer) {
          onScrollOut();
        }
      }
      render() {
        const {
          left,
          right,
          top,
          zIndex: zIndex2,
          width: width2
        } = this.state;
        const {
          render,
          fixed,
          preventInteraction,
          classNames: propClassNames,
          zIndexOverride
        } = this.props;
        const style = {
          top: top == null || isNaN(top) ? void 0 : top,
          left: left == null || isNaN(left) ? void 0 : left,
          right: right == null || isNaN(right) ? void 0 : right,
          width: width2 == null || isNaN(width2) ? void 0 : width2,
          zIndex: zIndexOverride || zIndex2 || void 0
        };
        const className = classNames(styles20.PositionedOverlay, fixed && styles20.fixed, preventInteraction && styles20.preventInteraction, propClassNames);
        return /* @__PURE__ */ import_react95.default.createElement("div", {
          className,
          style,
          ref: this.setOverlay
        }, /* @__PURE__ */ import_react95.default.createElement(EventListener, {
          event: "resize",
          handler: this.handleMeasurement
        }), render(this.overlayDetails()));
      }
      get firstScrollableContainer() {
        return this.scrollableContainers[0] ?? null;
      }
      forceUpdatePosition() {
        requestAnimationFrame(this.handleMeasurement);
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.js
function TooltipOverlay({
  active,
  activator,
  preferredPosition = "above",
  preventInteraction,
  id,
  children,
  accessibilityLabel,
  width: width2,
  padding,
  borderRadius,
  zIndexOverride,
  instant
}) {
  const i18n = useI18n();
  const markup = active ? /* @__PURE__ */ import_react96.default.createElement(PositionedOverlay, {
    active,
    activator,
    preferredPosition,
    preventInteraction,
    render: renderTooltip,
    zIndexOverride
  }) : null;
  return markup;
  function renderTooltip(overlayDetails) {
    const {
      measuring,
      desiredHeight,
      positioning,
      chevronOffset
    } = overlayDetails;
    const containerClassName = classNames(styles19.TooltipOverlay, measuring && styles19.measuring, !measuring && styles19.measured, instant && styles19.instant, positioning === "above" && styles19.positionedAbove);
    const contentClassName = classNames(styles19.Content, width2 && styles19[width2]);
    const contentStyles = measuring ? void 0 : {
      minHeight: desiredHeight
    };
    const style = {
      "--pc-tooltip-chevron-x-pos": `${chevronOffset}px`,
      "--pc-tooltip-border-radius": borderRadius ? `var(--p-border-radius-${borderRadius})` : void 0,
      "--pc-tooltip-padding": padding && padding === "default" ? "var(--p-space-100) var(--p-space-200)" : `var(--p-space-${padding})`
    };
    return /* @__PURE__ */ import_react96.default.createElement("div", Object.assign({
      style,
      className: containerClassName
    }, layer.props), /* @__PURE__ */ import_react96.default.createElement("svg", {
      className: styles19.Tail,
      width: "19",
      height: "11",
      fill: "none"
    }, positioning === "above" ? tailDownPaths : tailUpPaths), /* @__PURE__ */ import_react96.default.createElement("div", {
      id,
      role: "tooltip",
      className: contentClassName,
      style: {
        ...contentStyles,
        ...style
      },
      "aria-label": accessibilityLabel ? i18n.translate("Polaris.TooltipOverlay.accessibilityLabel", {
        label: accessibilityLabel
      }) : void 0
    }, children));
  }
}
var import_react96, tailUpPaths, tailDownPaths;
var init_TooltipOverlay = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tooltip/components/TooltipOverlay/TooltipOverlay.js"() {
    import_react96 = __toESM(require_react());
    init_css();
    init_shared();
    init_TooltipOverlay_css();
    init_PositionedOverlay();
    init_hooks2();
    tailUpPaths = /* @__PURE__ */ import_react96.default.createElement(import_react96.default.Fragment, null, /* @__PURE__ */ import_react96.default.createElement("path", {
      d: "M18.829 8.171 11.862.921A3 3 0 0 0 7.619.838L0 8.171h1.442l6.87-6.612a2 2 0 0 1 2.83.055l6.3 6.557h1.387Z",
      fill: "var(--p-color-tooltip-tail-up-border-experimental)"
    }), /* @__PURE__ */ import_react96.default.createElement("path", {
      d: "M17.442 10.171h-16v-2l6.87-6.612a2 2 0 0 1 2.83.055l6.3 6.557v2Z",
      fill: "var(--p-color-bg-surface)"
    }));
    tailDownPaths = /* @__PURE__ */ import_react96.default.createElement(import_react96.default.Fragment, null, /* @__PURE__ */ import_react96.default.createElement("path", {
      d: "m0 2 6.967 7.25a3 3 0 0 0 4.243.083L18.829 2h-1.442l-6.87 6.612a2 2 0 0 1-2.83-.055L1.387 2H0Z",
      fill: "var(--p-color-tooltip-tail-down-border-experimental)"
    }), /* @__PURE__ */ import_react96.default.createElement("path", {
      d: "M1.387 0h16v2l-6.87 6.612a2 2 0 0 1-2.83-.055L1.387 2V0Z",
      fill: "var(--p-color-bg-surface)"
    }));
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.js
function Tooltip({
  children,
  content,
  dismissOnMouseOut,
  active: originalActive,
  hoverDelay,
  preferredPosition = "above",
  activatorWrapper = "span",
  accessibilityLabel,
  width: width2 = "default",
  padding = "default",
  borderRadius: borderRadiusProp,
  zIndexOverride,
  hasUnderline,
  persistOnClick,
  onOpen,
  onClose
}) {
  const borderRadius = borderRadiusProp || "200";
  const WrapperComponent = activatorWrapper;
  const {
    value: active,
    setTrue: setActiveTrue,
    setFalse: handleBlur
  } = useToggle(Boolean(originalActive));
  const {
    value: persist,
    toggle: togglePersisting
  } = useToggle(Boolean(originalActive) && Boolean(persistOnClick));
  const [activatorNode, setActivatorNode] = (0, import_react97.useState)(null);
  const {
    presenceList,
    addPresence,
    removePresence
  } = useEphemeralPresenceManager();
  const id = (0, import_react97.useId)();
  const activatorContainer = (0, import_react97.useRef)(null);
  const mouseEntered = (0, import_react97.useRef)(false);
  const [shouldAnimate, setShouldAnimate] = (0, import_react97.useState)(Boolean(!originalActive));
  const hoverDelayTimeout = (0, import_react97.useRef)(null);
  const hoverOutTimeout = (0, import_react97.useRef)(null);
  const handleFocus = (0, import_react97.useCallback)(() => {
    if (originalActive !== false) {
      setActiveTrue();
    }
  }, [originalActive, setActiveTrue]);
  (0, import_react97.useEffect)(() => {
    const firstFocusable = activatorContainer.current ? findFirstFocusableNode(activatorContainer.current) : null;
    const accessibilityNode = firstFocusable || activatorContainer.current;
    if (!accessibilityNode)
      return;
    accessibilityNode.tabIndex = 0;
    accessibilityNode.setAttribute("aria-describedby", id);
    accessibilityNode.setAttribute("data-polaris-tooltip-activator", "true");
  }, [id, children]);
  (0, import_react97.useEffect)(() => {
    return () => {
      if (hoverDelayTimeout.current) {
        clearTimeout(hoverDelayTimeout.current);
      }
      if (hoverOutTimeout.current) {
        clearTimeout(hoverOutTimeout.current);
      }
    };
  }, []);
  const handleOpen = (0, import_react97.useCallback)(() => {
    setShouldAnimate(!presenceList.tooltip && !active);
    onOpen?.();
    addPresence("tooltip");
  }, [addPresence, presenceList.tooltip, onOpen, active]);
  const handleClose = (0, import_react97.useCallback)(() => {
    onClose?.();
    setShouldAnimate(false);
    hoverOutTimeout.current = setTimeout(() => {
      removePresence("tooltip");
    }, HOVER_OUT_TIMEOUT);
  }, [removePresence, onClose]);
  const handleKeyUp = (0, import_react97.useCallback)((event) => {
    if (event.key !== "Escape")
      return;
    handleClose?.();
    handleBlur();
    persistOnClick && togglePersisting();
  }, [handleBlur, handleClose, persistOnClick, togglePersisting]);
  (0, import_react97.useEffect)(() => {
    if (originalActive === false && active) {
      handleClose();
      handleBlur();
    }
  }, [originalActive, active, handleClose, handleBlur]);
  const portal2 = activatorNode ? /* @__PURE__ */ import_react97.default.createElement(Portal, {
    idPrefix: "tooltip"
  }, /* @__PURE__ */ import_react97.default.createElement(TooltipOverlay, {
    id,
    preferredPosition,
    activator: activatorNode,
    active,
    accessibilityLabel,
    onClose: noop3,
    preventInteraction: dismissOnMouseOut,
    width: width2,
    padding,
    borderRadius,
    zIndexOverride,
    instant: !shouldAnimate
  }, /* @__PURE__ */ import_react97.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, content))) : null;
  const wrapperClassNames = classNames(activatorWrapper === "div" && styles17.TooltipContainer, hasUnderline && styles17.HasUnderline);
  return /* @__PURE__ */ import_react97.default.createElement(WrapperComponent, {
    onFocus: () => {
      handleOpen();
      handleFocus();
    },
    onBlur: () => {
      handleClose();
      handleBlur();
      if (persistOnClick) {
        togglePersisting();
      }
    },
    onMouseLeave: handleMouseLeave,
    onMouseOver: handleMouseEnterFix,
    onMouseDown: persistOnClick ? togglePersisting : void 0,
    ref: setActivator,
    onKeyUp: handleKeyUp,
    className: wrapperClassNames
  }, children, portal2);
  function setActivator(node) {
    const activatorContainerRef = activatorContainer;
    if (node == null) {
      activatorContainerRef.current = null;
      setActivatorNode(null);
      return;
    }
    node.firstElementChild instanceof HTMLElement && setActivatorNode(node.firstElementChild);
    activatorContainerRef.current = node;
  }
  function handleMouseEnter() {
    mouseEntered.current = true;
    if (hoverDelay && !presenceList.tooltip) {
      hoverDelayTimeout.current = setTimeout(() => {
        handleOpen();
        handleFocus();
      }, hoverDelay);
    } else {
      handleOpen();
      handleFocus();
    }
  }
  function handleMouseLeave() {
    if (hoverDelayTimeout.current) {
      clearTimeout(hoverDelayTimeout.current);
      hoverDelayTimeout.current = null;
    }
    mouseEntered.current = false;
    handleClose();
    if (!persist) {
      handleBlur();
    }
  }
  function handleMouseEnterFix() {
    !mouseEntered.current && handleMouseEnter();
  }
}
function noop3() {
}
var import_react97, HOVER_OUT_TIMEOUT;
var init_Tooltip = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tooltip/Tooltip.js"() {
    import_react97 = __toESM(require_react());
    init_focus();
    init_use_toggle();
    init_css();
    init_Tooltip_css();
    init_hooks3();
    init_Portal();
    init_TooltipOverlay();
    init_Text();
    HOVER_OUT_TIMEOUT = 150;
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/Item/Item.js
function Item2({
  id,
  badge,
  content,
  accessibilityLabel,
  helpText,
  url,
  onAction,
  onMouseEnter,
  icon,
  image,
  prefix,
  suffix,
  disabled,
  external,
  destructive,
  ellipsis,
  truncate,
  active,
  role,
  variant = "default"
}) {
  const className = classNames(styles14.Item, disabled && styles14.disabled, destructive && styles14.destructive, active && styles14.active, variant === "default" && styles14.default, variant === "indented" && styles14.indented, variant === "menu" && styles14.menu);
  let prefixMarkup = null;
  if (prefix) {
    prefixMarkup = /* @__PURE__ */ import_react98.default.createElement("span", {
      className: styles14.Prefix
    }, prefix);
  } else if (icon) {
    prefixMarkup = /* @__PURE__ */ import_react98.default.createElement("span", {
      className: styles14.Prefix
    }, /* @__PURE__ */ import_react98.default.createElement(Icon, {
      source: icon
    }));
  } else if (image) {
    prefixMarkup = /* @__PURE__ */ import_react98.default.createElement("span", {
      role: "presentation",
      className: styles14.Prefix,
      style: {
        backgroundImage: `url(${image}`
      }
    });
  }
  let contentText = content || "";
  if (truncate && content) {
    contentText = /* @__PURE__ */ import_react98.default.createElement(TruncateText, null, content);
  } else if (ellipsis) {
    contentText = `${content}\u2026`;
  }
  const contentMarkup = helpText ? /* @__PURE__ */ import_react98.default.createElement(import_react98.default.Fragment, null, /* @__PURE__ */ import_react98.default.createElement(Box, null, contentText), /* @__PURE__ */ import_react98.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    tone: active || disabled ? void 0 : "subdued"
  }, helpText)) : /* @__PURE__ */ import_react98.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    fontWeight: active ? "semibold" : "regular"
  }, contentText);
  const badgeMarkup = badge && /* @__PURE__ */ import_react98.default.createElement("span", {
    className: styles14.Suffix
  }, /* @__PURE__ */ import_react98.default.createElement(Badge, {
    tone: badge.tone
  }, badge.content));
  const suffixMarkup = suffix && /* @__PURE__ */ import_react98.default.createElement(Box, null, /* @__PURE__ */ import_react98.default.createElement("span", {
    className: styles14.Suffix
  }, suffix));
  const textMarkup = /* @__PURE__ */ import_react98.default.createElement("span", {
    className: styles14.Text
  }, /* @__PURE__ */ import_react98.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    fontWeight: active ? "semibold" : "regular"
  }, contentMarkup));
  const contentElement = /* @__PURE__ */ import_react98.default.createElement(InlineStack, {
    blockAlign: "center",
    gap: "150",
    wrap: false
  }, prefixMarkup, textMarkup, badgeMarkup, suffixMarkup);
  const contentWrapper = /* @__PURE__ */ import_react98.default.createElement(Box, {
    width: "100%"
  }, contentElement);
  const scrollMarkup = active ? /* @__PURE__ */ import_react98.default.createElement(Scrollable.ScrollTo, null) : null;
  const control = url ? /* @__PURE__ */ import_react98.default.createElement(UnstyledLink, {
    id,
    url: disabled ? null : url,
    className,
    external,
    "aria-label": accessibilityLabel,
    onClick: disabled ? null : onAction,
    role
  }, contentWrapper) : /* @__PURE__ */ import_react98.default.createElement("button", {
    id,
    type: "button",
    className,
    disabled,
    "aria-label": accessibilityLabel,
    onClick: onAction,
    onMouseUp: handleMouseUpByBlurring,
    role,
    onMouseEnter
  }, contentWrapper);
  return /* @__PURE__ */ import_react98.default.createElement(import_react98.default.Fragment, null, scrollMarkup, control);
}
var import_react98, TruncateText;
var init_Item2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionList/components/Item/Item.js"() {
    import_react98 = __toESM(require_react());
    init_css();
    init_ActionList_css();
    init_focus();
    init_use_isomorphic_layout_effect();
    init_use_theme();
    init_Badge();
    init_Tooltip();
    init_Icon();
    init_Box();
    init_Text();
    init_Scrollable();
    init_UnstyledLink();
    init_InlineStack();
    TruncateText = ({
      children
    }) => {
      const theme = useTheme();
      const textRef = (0, import_react98.useRef)(null);
      const [isOverflowing, setIsOverflowing] = (0, import_react98.useState)(false);
      useIsomorphicLayoutEffect(() => {
        if (textRef.current) {
          setIsOverflowing(textRef.current.scrollWidth > textRef.current.offsetWidth);
        }
      }, [children]);
      const text2 = /* @__PURE__ */ import_react98.default.createElement(Text, {
        as: "span",
        truncate: true
      }, /* @__PURE__ */ import_react98.default.createElement(Box, {
        width: "100%",
        ref: textRef
      }, children));
      return isOverflowing ? /* @__PURE__ */ import_react98.default.createElement(Tooltip, {
        zIndexOverride: Number(theme.zIndex["z-index-11"]),
        preferredPosition: "above",
        hoverDelay: 1e3,
        content: children,
        dismissOnMouseOut: true
      }, /* @__PURE__ */ import_react98.default.createElement(Text, {
        as: "span",
        truncate: true
      }, children)) : text2;
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionList/components/Section/Section.js
function Section({
  section,
  hasMultipleSections,
  isFirst,
  actionRole,
  onActionAnyItem
}) {
  const handleAction = (itemOnAction) => {
    return () => {
      if (itemOnAction) {
        itemOnAction();
      }
      if (onActionAnyItem) {
        onActionAnyItem();
      }
    };
  };
  const actionMarkup = section.items.map(({
    content,
    helpText,
    onAction,
    ...item
  }, index) => {
    const itemMarkup = /* @__PURE__ */ import_react99.default.createElement(Item2, Object.assign({
      content,
      helpText,
      role: actionRole,
      onAction: handleAction(onAction)
    }, item));
    return /* @__PURE__ */ import_react99.default.createElement(Box, {
      as: "li",
      key: `${content}-${index}`,
      role: actionRole === "menuitem" ? "presentation" : void 0
    }, /* @__PURE__ */ import_react99.default.createElement(InlineStack, {
      wrap: false
    }, itemMarkup));
  });
  let titleMarkup = null;
  if (section.title) {
    titleMarkup = typeof section.title === "string" ? /* @__PURE__ */ import_react99.default.createElement(Box, {
      paddingBlockStart: "300",
      paddingBlockEnd: "100",
      paddingInlineStart: "300",
      paddingInlineEnd: "300"
    }, /* @__PURE__ */ import_react99.default.createElement(Text, {
      as: "p",
      variant: "headingSm"
    }, section.title)) : /* @__PURE__ */ import_react99.default.createElement(Box, {
      padding: "200",
      paddingInlineEnd: "150"
    }, section.title);
  }
  let sectionRole;
  switch (actionRole) {
    case "option":
      sectionRole = "presentation";
      break;
    case "menuitem":
      sectionRole = !hasMultipleSections ? "menu" : "presentation";
      break;
    default:
      sectionRole = void 0;
      break;
  }
  const sectionMarkup = /* @__PURE__ */ import_react99.default.createElement(import_react99.default.Fragment, null, titleMarkup, /* @__PURE__ */ import_react99.default.createElement(Box, Object.assign({
    as: "div",
    padding: "150"
  }, hasMultipleSections && {
    paddingBlockStart: "0"
  }, {
    tabIndex: !hasMultipleSections ? -1 : void 0
  }), /* @__PURE__ */ import_react99.default.createElement(BlockStack, Object.assign({
    gap: "050",
    as: "ul"
  }, sectionRole && {
    role: sectionRole
  }), actionMarkup)));
  return hasMultipleSections ? /* @__PURE__ */ import_react99.default.createElement(Box, Object.assign({
    as: "li",
    role: "presentation",
    borderColor: "border-secondary"
  }, !isFirst && {
    borderBlockStartWidth: "025"
  }, !section.title && {
    paddingBlockStart: "150"
  }), sectionMarkup) : sectionMarkup;
}
var import_react99;
var init_Section = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionList/components/Section/Section.js"() {
    import_react99 = __toESM(require_react());
    init_Item2();
    init_Box();
    init_InlineStack();
    init_Text();
    init_BlockStack();
  }
});

// node_modules/@shopify/polaris/build/esm/components/KeypressListener/KeypressListener.js
function KeypressListener({
  keyCode,
  handler,
  keyEvent = "keyup",
  options,
  useCapture
}) {
  const tracked = (0, import_react100.useRef)({
    handler,
    keyCode
  });
  useIsomorphicLayoutEffect(() => {
    tracked.current = {
      handler,
      keyCode
    };
  }, [handler, keyCode]);
  const handleKeyEvent = (0, import_react100.useCallback)((event) => {
    const {
      handler: handler2,
      keyCode: keyCode2
    } = tracked.current;
    if (event.keyCode === keyCode2) {
      handler2(event);
    }
  }, []);
  (0, import_react100.useEffect)(() => {
    document.addEventListener(keyEvent, handleKeyEvent, useCapture || options);
    return () => {
      document.removeEventListener(keyEvent, handleKeyEvent, useCapture || options);
    };
  }, [keyEvent, handleKeyEvent, useCapture, options]);
  return null;
}
var import_react100;
var init_KeypressListener = __esm({
  "node_modules/@shopify/polaris/build/esm/components/KeypressListener/KeypressListener.js"() {
    import_react100 = __toESM(require_react());
    init_use_isomorphic_layout_effect();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.js
function ActionList({
  items,
  sections = [],
  actionRole,
  allowFiltering,
  onActionAnyItem
}) {
  const i18n = useI18n();
  const filterActions = (0, import_react101.useContext)(FilterActionsContext);
  let finalSections = [];
  const actionListRef = (0, import_react101.useRef)(null);
  const [searchText, setSearchText] = (0, import_react101.useState)("");
  if (items) {
    finalSections = [{
      items
    }, ...sections];
  } else if (sections) {
    finalSections = sections;
  }
  const isFilterable = finalSections?.some((section) => section.items.some((item) => typeof item.content === "string"));
  const hasMultipleSections = finalSections.length > 1;
  const elementRole = hasMultipleSections && actionRole === "menuitem" ? "menu" : void 0;
  const elementTabIndex = hasMultipleSections && actionRole === "menuitem" ? -1 : void 0;
  const filteredSections = finalSections?.map((section) => ({
    ...section,
    items: section.items.filter(({
      content
    }) => typeof content === "string" ? content?.toLowerCase().includes(searchText.toLowerCase()) : content)
  }));
  const sectionMarkup = filteredSections.map((section, index) => {
    return section.items.length > 0 ? /* @__PURE__ */ import_react101.default.createElement(Section, {
      key: typeof section.title === "string" ? section.title : index,
      section,
      hasMultipleSections,
      actionRole,
      onActionAnyItem,
      isFirst: index === 0
    }) : null;
  });
  const handleFocusPreviousItem = (evt) => {
    evt.preventDefault();
    if (actionListRef.current && evt.target) {
      if (actionListRef.current.contains(evt.target)) {
        wrapFocusPreviousFocusableMenuItem(actionListRef.current, evt.target);
      }
    }
  };
  const handleFocusNextItem = (evt) => {
    evt.preventDefault();
    if (actionListRef.current && evt.target) {
      if (actionListRef.current.contains(evt.target)) {
        wrapFocusNextFocusableMenuItem(actionListRef.current, evt.target);
      }
    }
  };
  const listeners = actionRole === "menuitem" ? /* @__PURE__ */ import_react101.default.createElement(import_react101.default.Fragment, null, /* @__PURE__ */ import_react101.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.DownArrow,
    handler: handleFocusNextItem
  }), /* @__PURE__ */ import_react101.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.UpArrow,
    handler: handleFocusPreviousItem
  })) : null;
  const totalFilteredActions = (0, import_react101.useMemo)(() => {
    const totalSectionItems = filteredSections?.reduce((acc, section) => acc + section.items.length, 0) || 0;
    return totalSectionItems;
  }, [filteredSections]);
  const totalActions = finalSections?.reduce((acc, section) => acc + section.items.length, 0) || 0;
  const hasManyActions = totalActions >= FILTER_ACTIONS_THRESHOLD;
  return /* @__PURE__ */ import_react101.default.createElement(import_react101.default.Fragment, null, (allowFiltering || filterActions) && hasManyActions && isFilterable && /* @__PURE__ */ import_react101.default.createElement(Box, {
    padding: "200",
    paddingBlockEnd: totalFilteredActions > 0 ? "0" : "200"
  }, /* @__PURE__ */ import_react101.default.createElement(TextField, {
    clearButton: true,
    labelHidden: true,
    label: i18n.translate("Polaris.ActionList.SearchField.placeholder"),
    placeholder: i18n.translate("Polaris.ActionList.SearchField.placeholder"),
    autoComplete: "off",
    value: searchText,
    onChange: (value) => setSearchText(value),
    prefix: /* @__PURE__ */ import_react101.default.createElement(Icon, {
      source: SvgSearchIcon
    }),
    onClearButtonClick: () => setSearchText("")
  })), /* @__PURE__ */ import_react101.default.createElement(Box, {
    as: hasMultipleSections ? "ul" : "div",
    ref: actionListRef,
    role: elementRole,
    tabIndex: elementTabIndex
  }, listeners, sectionMarkup));
}
var import_react101, FILTER_ACTIONS_THRESHOLD;
var init_ActionList = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionList/ActionList.js"() {
    import_react101 = __toESM(require_react());
    init_dist();
    init_types();
    init_focus();
    init_FilterActionsProvider();
    init_Section();
    init_KeypressListener();
    init_TextField();
    init_hooks2();
    init_Box();
    init_Icon();
    init_Item2();
    FILTER_ACTIONS_THRESHOLD = 8;
    ActionList.Item = Item2;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Popover/set-activator-attributes.js
function setActivatorAttributes(activator, {
  id,
  active = false,
  ariaHaspopup,
  activatorDisabled = false
}) {
  if (!activatorDisabled) {
    activator.tabIndex = activator.tabIndex || 0;
  }
  activator.setAttribute("aria-controls", id);
  activator.setAttribute("aria-owns", id);
  activator.setAttribute("aria-expanded", String(active));
  activator.setAttribute("data-state", active ? "open" : "closed");
  if (ariaHaspopup != null) {
    activator.setAttribute("aria-haspopup", String(ariaHaspopup));
  }
}
var init_set_activator_attributes = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Popover/set-activator-attributes.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/components.js
function wrapWithComponent(element, Component7, props) {
  if (element == null) {
    return null;
  }
  return isElementOfType(element, Component7) ? element : /* @__PURE__ */ import_react102.default.createElement(Component7, props, element);
}
function isElementOfType(element, Component7) {
  if (element == null || !/* @__PURE__ */ (0, import_react102.isValidElement)(element) || typeof element.type === "string") {
    return false;
  }
  const {
    type: defaultType
  } = element;
  const overrideType = element.props?.__type__;
  const type = overrideType || defaultType;
  const Components = Array.isArray(Component7) ? Component7 : [Component7];
  return Components.some((AComponent) => typeof type !== "string" && isComponent(AComponent, type));
}
function elementChildren(children, predicate = () => true) {
  return import_react102.Children.toArray(children).filter((child) => /* @__PURE__ */ (0, import_react102.isValidElement)(child) && predicate(child));
}
function ConditionalWrapper({
  condition,
  wrapper,
  children
}) {
  return condition ? wrapper(children) : children;
}
function ConditionalRender({
  condition,
  children
}) {
  return condition ? children : null;
}
function hotReloadComponentCheck(AComponent, AnotherComponent) {
  const componentName = AComponent.name;
  const anotherComponentName = AnotherComponent.displayName;
  return AComponent === AnotherComponent || Boolean(componentName) && componentName === anotherComponentName;
}
var import_react102, isComponent;
var init_components = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/components.js"() {
    import_react102 = __toESM(require_react());
    isComponent = true ? hotReloadComponentCheck : (AComponent, AnotherComponent) => AComponent === AnotherComponent;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Popover/Popover.css.js
var styles22;
var init_Popover_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Popover/Popover.css.js"() {
    styles22 = {
      "Popover": "Polaris-Popover",
      "PopoverOverlay": "Polaris-Popover__PopoverOverlay",
      "PopoverOverlay-noAnimation": "Polaris-Popover__PopoverOverlay--noAnimation",
      "PopoverOverlay-entering": "Polaris-Popover__PopoverOverlay--entering",
      "PopoverOverlay-open": "Polaris-Popover__PopoverOverlay--open",
      "measuring": "Polaris-Popover--measuring",
      "PopoverOverlay-exiting": "Polaris-Popover__PopoverOverlay--exiting",
      "fullWidth": "Polaris-Popover--fullWidth",
      "Content": "Polaris-Popover__Content",
      "positionedAbove": "Polaris-Popover--positionedAbove",
      "positionedCover": "Polaris-Popover--positionedCover",
      "ContentContainer": "Polaris-Popover__ContentContainer",
      "Content-fullHeight": "Polaris-Popover__Content--fullHeight",
      "Content-fluidContent": "Polaris-Popover__Content--fluidContent",
      "Pane": "Polaris-Popover__Pane",
      "Pane-fixed": "Polaris-Popover__Pane--fixed",
      "Pane-subdued": "Polaris-Popover__Pane--subdued",
      "Pane-captureOverscroll": "Polaris-Popover__Pane--captureOverscroll",
      "Section": "Polaris-Popover__Section",
      "FocusTracker": "Polaris-Popover__FocusTracker",
      "PopoverOverlay-hideOnPrint": "Polaris-Popover__PopoverOverlay--hideOnPrint"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Popover/components/Section/Section.js
function Section2({
  children
}) {
  return /* @__PURE__ */ import_react103.default.createElement("div", {
    className: styles22.Section
  }, /* @__PURE__ */ import_react103.default.createElement(Box, {
    paddingInlineStart: "300",
    paddingInlineEnd: "300",
    paddingBlockStart: "200",
    paddingBlockEnd: "150"
  }, children));
}
var import_react103;
var init_Section2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Popover/components/Section/Section.js"() {
    import_react103 = __toESM(require_react());
    init_Popover_css();
    init_Box();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Popover/components/Pane/Pane.js
function Pane({
  captureOverscroll = false,
  fixed,
  sectioned,
  children,
  height: height2,
  subdued,
  onScrolledToBottom
}) {
  const className = classNames(styles22.Pane, fixed && styles22["Pane-fixed"], subdued && styles22["Pane-subdued"], captureOverscroll && styles22["Pane-captureOverscroll"]);
  const content = sectioned ? wrapWithComponent(children, Section2, {}) : children;
  const style = height2 ? {
    height: height2,
    maxHeight: height2,
    minHeight: height2
  } : void 0;
  return fixed ? /* @__PURE__ */ import_react104.default.createElement("div", {
    style,
    className
  }, content) : /* @__PURE__ */ import_react104.default.createElement(Scrollable, {
    shadow: true,
    className,
    style,
    onScrolledToBottom,
    scrollbarWidth: "thin"
  }, content);
}
var import_react104;
var init_Pane = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Popover/components/Pane/Pane.js"() {
    import_react104 = __toESM(require_react());
    init_css();
    init_components();
    init_Popover_css();
    init_Section2();
    init_Scrollable();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Popover/components/PopoverOverlay/PopoverOverlay.js
function renderPopoverContent(children, props) {
  const childrenArray = import_react105.Children.toArray(children);
  if (isElementOfType(childrenArray[0], Pane)) {
    return childrenArray;
  }
  return wrapWithComponent(childrenArray, Pane, props);
}
function nodeContainsDescendant(rootNode, descendant) {
  if (rootNode === descendant) {
    return true;
  }
  let parent = descendant.parentNode;
  while (parent != null) {
    if (parent === rootNode) {
      return true;
    }
    parent = parent.parentNode;
  }
  return false;
}
function wasContentNodeDescendant(composedPath, contentNode) {
  return contentNode.current != null && composedPath.includes(contentNode.current);
}
function wasPolarisPortalDescendant(composedPath, portalsContainerElement) {
  return composedPath.some((eventTarget) => eventTarget instanceof Node && portalsContainerElement?.contains(eventTarget));
}
var import_react105, PopoverCloseSource, TransitionStatus, PopoverOverlay;
var init_PopoverOverlay = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Popover/components/PopoverOverlay/PopoverOverlay.js"() {
    import_react105 = __toESM(require_react());
    init_build();
    init_focus();
    init_css();
    init_components();
    init_types();
    init_shared();
    init_Popover_css();
    init_Pane();
    init_context7();
    init_EventListener();
    init_KeypressListener();
    init_PositionedOverlay();
    (function(PopoverCloseSource2) {
      PopoverCloseSource2[PopoverCloseSource2["Click"] = 0] = "Click";
      PopoverCloseSource2[PopoverCloseSource2["EscapeKeypress"] = 1] = "EscapeKeypress";
      PopoverCloseSource2[PopoverCloseSource2["FocusOut"] = 2] = "FocusOut";
      PopoverCloseSource2[PopoverCloseSource2["ScrollOut"] = 3] = "ScrollOut";
    })(PopoverCloseSource || (PopoverCloseSource = {}));
    (function(TransitionStatus3) {
      TransitionStatus3["Entering"] = "entering";
      TransitionStatus3["Entered"] = "entered";
      TransitionStatus3["Exiting"] = "exiting";
      TransitionStatus3["Exited"] = "exited";
    })(TransitionStatus || (TransitionStatus = {}));
    PopoverOverlay = class extends import_react105.PureComponent {
      constructor(props) {
        super(props);
        this.state = {
          transitionStatus: this.props.active ? TransitionStatus.Entering : TransitionStatus.Exited
        };
        this.contentNode = /* @__PURE__ */ (0, import_react105.createRef)();
        this.renderPopover = (overlayDetails) => {
          const {
            measuring,
            desiredHeight,
            positioning
          } = overlayDetails;
          const {
            id,
            children,
            sectioned,
            fullWidth,
            fullHeight,
            fluidContent,
            hideOnPrint,
            autofocusTarget,
            captureOverscroll
          } = this.props;
          const isCovering = positioning === "cover";
          const className = classNames(styles22.Popover, measuring && styles22.measuring, (fullWidth || isCovering) && styles22.fullWidth, hideOnPrint && styles22["PopoverOverlay-hideOnPrint"], positioning && styles22[variationName("positioned", positioning)]);
          const contentStyles = measuring ? void 0 : {
            height: desiredHeight
          };
          const contentClassNames = classNames(styles22.Content, fullHeight && styles22["Content-fullHeight"], fluidContent && styles22["Content-fluidContent"]);
          return /* @__PURE__ */ import_react105.default.createElement("div", Object.assign({
            className
          }, overlay.props), /* @__PURE__ */ import_react105.default.createElement(EventListener, {
            event: "click",
            handler: this.handleClick
          }), /* @__PURE__ */ import_react105.default.createElement(EventListener, {
            event: "touchstart",
            handler: this.handleClick
          }), /* @__PURE__ */ import_react105.default.createElement(KeypressListener, {
            keyCode: Key.Escape,
            handler: this.handleEscape
          }), /* @__PURE__ */ import_react105.default.createElement("div", {
            className: styles22.FocusTracker,
            tabIndex: 0,
            onFocus: this.handleFocusFirstItem
          }), /* @__PURE__ */ import_react105.default.createElement("div", {
            className: styles22.ContentContainer
          }, /* @__PURE__ */ import_react105.default.createElement("div", {
            id,
            tabIndex: autofocusTarget === "none" ? void 0 : -1,
            className: contentClassNames,
            style: contentStyles,
            ref: this.contentNode
          }, renderPopoverContent(children, {
            captureOverscroll,
            sectioned
          }))), /* @__PURE__ */ import_react105.default.createElement("div", {
            className: styles22.FocusTracker,
            tabIndex: 0,
            onFocus: this.handleFocusLastItem
          }));
        };
        this.handleClick = (event) => {
          const target = event.target;
          const {
            contentNode,
            props: {
              activator,
              onClose,
              preventCloseOnChildOverlayClick
            }
          } = this;
          const composedPath = event.composedPath();
          const wasDescendant = preventCloseOnChildOverlayClick ? wasPolarisPortalDescendant(composedPath, this.context.container) : wasContentNodeDescendant(composedPath, contentNode);
          const isActivatorDescendant = nodeContainsDescendant(activator, target);
          if (wasDescendant || isActivatorDescendant || this.state.transitionStatus !== TransitionStatus.Entered) {
            return;
          }
          onClose(PopoverCloseSource.Click);
        };
        this.handleScrollOut = () => {
          this.props.onClose(PopoverCloseSource.ScrollOut);
        };
        this.handleEscape = (event) => {
          const target = event.target;
          const {
            contentNode,
            props: {
              activator
            }
          } = this;
          const composedPath = event.composedPath();
          const wasDescendant = wasContentNodeDescendant(composedPath, contentNode);
          const isActivatorDescendant = nodeContainsDescendant(activator, target);
          if (wasDescendant || isActivatorDescendant) {
            this.props.onClose(PopoverCloseSource.EscapeKeypress);
          }
        };
        this.handleFocusFirstItem = () => {
          this.props.onClose(PopoverCloseSource.FocusOut);
        };
        this.handleFocusLastItem = () => {
          this.props.onClose(PopoverCloseSource.FocusOut);
        };
        this.overlayRef = /* @__PURE__ */ (0, import_react105.createRef)();
      }
      forceUpdatePosition() {
        this.overlayRef.current?.forceUpdatePosition();
      }
      changeTransitionStatus(transitionStatus, cb) {
        this.setState({
          transitionStatus
        }, cb);
        this.contentNode.current && this.contentNode.current.getBoundingClientRect();
      }
      componentDidMount() {
        if (this.props.active) {
          this.focusContent();
          this.changeTransitionStatus(TransitionStatus.Entered);
        }
      }
      componentDidUpdate(oldProps) {
        if (this.props.active && !oldProps.active) {
          this.focusContent();
          this.changeTransitionStatus(TransitionStatus.Entering, () => {
            this.clearTransitionTimeout();
            this.enteringTimer = window.setTimeout(() => {
              this.setState({
                transitionStatus: TransitionStatus.Entered
              });
            }, parseInt(themeDefault.motion["motion-duration-100"], 10));
          });
        }
        if (!this.props.active && oldProps.active) {
          this.clearTransitionTimeout();
          this.setState({
            transitionStatus: TransitionStatus.Exited
          });
        }
      }
      componentWillUnmount() {
        this.clearTransitionTimeout();
      }
      render() {
        const {
          active,
          activator,
          fullWidth,
          preferredPosition = "below",
          preferredAlignment = "center",
          preferInputActivator = true,
          fixed,
          zIndexOverride
        } = this.props;
        const {
          transitionStatus
        } = this.state;
        if (transitionStatus === TransitionStatus.Exited && !active)
          return null;
        const className = classNames(styles22.PopoverOverlay, transitionStatus === TransitionStatus.Entering && styles22["PopoverOverlay-entering"], transitionStatus === TransitionStatus.Entered && styles22["PopoverOverlay-open"], transitionStatus === TransitionStatus.Exiting && styles22["PopoverOverlay-exiting"], preferredPosition === "cover" && styles22["PopoverOverlay-noAnimation"]);
        return /* @__PURE__ */ import_react105.default.createElement(PositionedOverlay, {
          ref: this.overlayRef,
          fullWidth,
          active,
          activator,
          preferInputActivator,
          preferredPosition,
          preferredAlignment,
          render: this.renderPopover.bind(this),
          fixed,
          onScrollOut: this.handleScrollOut,
          classNames: className,
          zIndexOverride
        });
      }
      clearTransitionTimeout() {
        if (this.enteringTimer) {
          window.clearTimeout(this.enteringTimer);
        }
      }
      focusContent() {
        const {
          autofocusTarget = "container"
        } = this.props;
        if (autofocusTarget === "none" || this.contentNode == null) {
          return;
        }
        requestAnimationFrame(() => {
          if (this.contentNode.current == null) {
            return;
          }
          const focusableChild = findFirstKeyboardFocusableNode(this.contentNode.current);
          if (focusableChild && autofocusTarget === "first-node") {
            focusableChild.focus({
              preventScroll: true
            });
          } else {
            this.contentNode.current.focus({
              preventScroll: true
            });
          }
        });
      }
      // eslint-disable-next-line @shopify/react-no-multiple-render-methods
    };
    PopoverOverlay.contextType = PortalsManagerContext;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Popover/Popover.js
function isInPortal(element) {
  let parentElement = element.parentElement;
  while (parentElement) {
    if (parentElement.matches(portal.selector))
      return false;
    parentElement = parentElement.parentElement;
  }
  return true;
}
var import_react106, PopoverComponent, Popover2;
var init_Popover = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Popover/Popover.js"() {
    import_react106 = __toESM(require_react());
    init_focus();
    init_shared();
    init_set_activator_attributes();
    init_PopoverOverlay();
    init_Pane();
    init_Section2();
    init_Portal();
    PopoverComponent = /* @__PURE__ */ (0, import_react106.forwardRef)(function Popover({
      activatorWrapper = "div",
      children,
      onClose,
      activator,
      preventFocusOnClose,
      active,
      fixed,
      ariaHaspopup,
      preferInputActivator = true,
      zIndexOverride,
      ...rest
    }, ref) {
      const [activatorNode, setActivatorNode] = (0, import_react106.useState)();
      const overlayRef = (0, import_react106.useRef)(null);
      const activatorContainer = (0, import_react106.useRef)(null);
      const WrapperComponent = activatorWrapper;
      const id = (0, import_react106.useId)();
      function forceUpdatePosition() {
        overlayRef.current?.forceUpdatePosition();
      }
      (0, import_react106.useImperativeHandle)(ref, () => {
        return {
          forceUpdatePosition
        };
      });
      const setAccessibilityAttributes = (0, import_react106.useCallback)(() => {
        if (activatorContainer.current == null) {
          return;
        }
        const firstFocusable = findFirstFocusableNodeIncludingDisabled(activatorContainer.current);
        const focusableActivator = firstFocusable || activatorContainer.current;
        const activatorDisabled = "disabled" in focusableActivator && Boolean(focusableActivator.disabled);
        setActivatorAttributes(focusableActivator, {
          id,
          active,
          ariaHaspopup,
          activatorDisabled
        });
      }, [id, active, ariaHaspopup]);
      const handleClose = (source) => {
        onClose(source);
        if (activatorContainer.current == null || preventFocusOnClose) {
          return;
        }
        if (source === PopoverCloseSource.FocusOut && activatorNode) {
          const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;
          if (!focusNextFocusableNode(focusableActivator, isInPortal)) {
            focusableActivator.focus();
          }
        } else if (source === PopoverCloseSource.EscapeKeypress && activatorNode) {
          const focusableActivator = findFirstFocusableNodeIncludingDisabled(activatorNode) || findFirstFocusableNodeIncludingDisabled(activatorContainer.current) || activatorContainer.current;
          if (focusableActivator) {
            focusableActivator.focus();
          } else {
            focusNextFocusableNode(focusableActivator, isInPortal);
          }
        }
      };
      (0, import_react106.useEffect)(() => {
        if (!activatorNode && activatorContainer.current) {
          setActivatorNode(activatorContainer.current.firstElementChild);
        } else if (activatorNode && activatorContainer.current && !activatorContainer.current.contains(activatorNode)) {
          setActivatorNode(activatorContainer.current.firstElementChild);
        }
        setAccessibilityAttributes();
      }, [activatorNode, setAccessibilityAttributes]);
      (0, import_react106.useEffect)(() => {
        if (activatorNode && activatorContainer.current) {
          setActivatorNode(activatorContainer.current.firstElementChild);
        }
        setAccessibilityAttributes();
      }, [activatorNode, setAccessibilityAttributes]);
      const portal2 = activatorNode ? /* @__PURE__ */ import_react106.default.createElement(Portal, {
        idPrefix: "popover"
      }, /* @__PURE__ */ import_react106.default.createElement(PopoverOverlay, Object.assign({
        ref: overlayRef,
        id,
        activator: activatorNode,
        preferInputActivator,
        onClose: handleClose,
        active,
        fixed,
        zIndexOverride
      }, rest), children)) : null;
      return /* @__PURE__ */ import_react106.default.createElement(WrapperComponent, {
        ref: activatorContainer
      }, import_react106.Children.only(activator), portal2);
    });
    Popover2 = Object.assign(PopoverComponent, {
      Pane,
      Section: Section2
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.css.js
var styles23;
var init_ChoiceList_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.css.js"() {
    styles23 = {
      "ChoiceChildren": "Polaris-ChoiceList__ChoiceChildren"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.css.js
var styles24;
var init_Bleed_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.css.js"() {
    styles24 = {
      "Bleed": "Polaris-Bleed"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.js
var import_react107, Bleed;
var init_Bleed = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Bleed/Bleed.js"() {
    import_react107 = __toESM(require_react());
    init_css();
    init_Bleed_css();
    Bleed = ({
      marginInline,
      marginBlock,
      marginBlockStart,
      marginBlockEnd,
      marginInlineStart,
      marginInlineEnd,
      children
    }) => {
      const getNegativeMargins = (direction) => {
        const xAxis = ["marginInlineStart", "marginInlineEnd"];
        const yAxis = ["marginBlockStart", "marginBlockEnd"];
        const directionValues = {
          marginBlockStart,
          marginBlockEnd,
          marginInlineStart,
          marginInlineEnd,
          marginInline,
          marginBlock
        };
        if (directionValues[direction]) {
          return directionValues[direction];
        } else if (xAxis.includes(direction) && marginInline) {
          return directionValues.marginInline;
        } else if (yAxis.includes(direction) && marginBlock) {
          return directionValues.marginBlock;
        }
      };
      const negativeMarginBlockStart = getNegativeMargins("marginBlockStart");
      const negativeMarginBlockEnd = getNegativeMargins("marginBlockEnd");
      const negativeMarginInlineStart = getNegativeMargins("marginInlineStart");
      const negativeMarginInlineEnd = getNegativeMargins("marginInlineEnd");
      const style = {
        ...getResponsiveProps("bleed", "margin-block-start", "space", negativeMarginBlockStart),
        ...getResponsiveProps("bleed", "margin-block-end", "space", negativeMarginBlockEnd),
        ...getResponsiveProps("bleed", "margin-inline-start", "space", negativeMarginInlineStart),
        ...getResponsiveProps("bleed", "margin-inline-end", "space", negativeMarginInlineEnd)
      };
      return /* @__PURE__ */ import_react107.default.createElement("div", {
        className: styles24.Bleed,
        style: sanitizeCustomProperties(style)
      }, children);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.css.js
var styles25;
var init_RadioButton_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.css.js"() {
    styles25 = {
      "RadioButton": "Polaris-RadioButton",
      "Input": "Polaris-RadioButton__Input",
      "Backdrop": "Polaris-RadioButton__Backdrop",
      "ChoiceLabel": "Polaris-RadioButton__ChoiceLabel",
      "toneMagic": "Polaris-RadioButton--toneMagic"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Choice/Choice.css.js
var styles26;
var init_Choice_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Choice/Choice.css.js"() {
    styles26 = {
      "Choice": "Polaris-Choice",
      "labelHidden": "Polaris-Choice--labelHidden",
      "Label": "Polaris-Choice__Label",
      "Control": "Polaris-Choice__Control",
      "disabled": "Polaris-Choice--disabled",
      "toneMagic": "Polaris-Choice--toneMagic",
      "Descriptions": "Polaris-Choice__Descriptions",
      "HelpText": "Polaris-Choice__HelpText"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Choice/Choice.js
function Choice({
  id,
  label,
  disabled,
  error,
  children,
  labelHidden,
  helpText,
  onClick,
  labelClassName,
  fill,
  bleed,
  bleedBlockStart,
  bleedBlockEnd,
  bleedInlineStart,
  bleedInlineEnd,
  tone
}) {
  const className = classNames(styles26.Choice, labelHidden && styles26.labelHidden, disabled && styles26.disabled, tone && styles26[variationName("tone", tone)], labelClassName);
  const labelStyle = {
    // Pass through overrides for bleed values if they're set by the prop
    ...getResponsiveProps("choice", "bleed-block-end", "space", bleedBlockEnd || bleed),
    ...getResponsiveProps("choice", "bleed-block-start", "space", bleedBlockStart || bleed),
    ...getResponsiveProps("choice", "bleed-inline-start", "space", bleedInlineStart || bleed),
    ...getResponsiveProps("choice", "bleed-inline-end", "space", bleedInlineEnd || bleed),
    ...Object.fromEntries(Object.entries(getResponsiveValue("choice", "fill", fill)).map(
      // Map "true" => "100%" and "false" => "auto" for use in
      // inline/block-size calc()
      ([key, value]) => [key, value ? "100%" : "auto"]
    ))
  };
  const labelMarkup = (
    // NOTE: Can't use a Box here for a few reasons:
    // - as="label" fails `Element` typecheck (even though the JS works)
    // - Can't pass hard coded values to padding (forced to tokens)
    // - Can't pass negative values to padding
    // - Can't pass margins at all
    /* @__PURE__ */ import_react108.default.createElement("label", {
      className,
      htmlFor: id,
      onClick,
      style: sanitizeCustomProperties(labelStyle)
    }, /* @__PURE__ */ import_react108.default.createElement("span", {
      className: styles26.Control
    }, children), /* @__PURE__ */ import_react108.default.createElement("span", {
      className: styles26.Label
    }, /* @__PURE__ */ import_react108.default.createElement(Text, {
      as: "span",
      variant: "bodyMd"
    }, label)))
  );
  const helpTextMarkup = helpText ? /* @__PURE__ */ import_react108.default.createElement("div", {
    className: styles26.HelpText,
    id: helpTextID2(id)
  }, /* @__PURE__ */ import_react108.default.createElement(Text, {
    as: "span",
    tone: disabled ? void 0 : "subdued"
  }, helpText)) : null;
  const errorMarkup = error && typeof error !== "boolean" && /* @__PURE__ */ import_react108.default.createElement("div", {
    className: styles26.Error
  }, /* @__PURE__ */ import_react108.default.createElement(InlineError, {
    message: error,
    fieldID: id
  }));
  const descriptionMarkup = helpTextMarkup || errorMarkup ? /* @__PURE__ */ import_react108.default.createElement("div", {
    className: styles26.Descriptions
  }, errorMarkup, helpTextMarkup) : null;
  return descriptionMarkup ? /* @__PURE__ */ import_react108.default.createElement("div", null, labelMarkup, descriptionMarkup) : labelMarkup;
}
function helpTextID2(id) {
  return `${id}HelpText`;
}
var import_react108;
var init_Choice = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Choice/Choice.js"() {
    import_react108 = __toESM(require_react());
    init_css();
    init_Choice_css();
    init_Text();
    init_InlineError();
  }
});

// node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.js
function RadioButton({
  ariaDescribedBy: ariaDescribedByProp,
  label,
  labelHidden,
  helpText,
  checked,
  disabled,
  onChange,
  onFocus,
  onBlur,
  id: idProp,
  name: nameProp,
  value,
  fill,
  bleed,
  bleedBlockStart,
  bleedBlockEnd,
  bleedInlineStart,
  bleedInlineEnd,
  tone
}) {
  const uniqId = (0, import_react109.useId)();
  const id = idProp ?? uniqId;
  const name = nameProp || id;
  const inputNode = (0, import_react109.useRef)(null);
  const handleBlur = () => {
    onBlur && onBlur();
  };
  function handleChange({
    currentTarget
  }) {
    onChange && onChange(currentTarget.checked, id);
  }
  const describedBy = [];
  if (helpText) {
    describedBy.push(helpTextID2(id));
  }
  if (ariaDescribedByProp) {
    describedBy.push(ariaDescribedByProp);
  }
  const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
  const inputClassName = classNames(styles25.Input, tone && styles25[variationName("tone", tone)]);
  const extraChoiceProps = {
    helpText,
    bleed,
    bleedBlockStart,
    bleedBlockEnd,
    bleedInlineStart,
    bleedInlineEnd
  };
  return /* @__PURE__ */ import_react109.default.createElement(Choice, Object.assign({
    label,
    labelHidden,
    disabled,
    id,
    labelClassName: styles25.ChoiceLabel,
    fill
  }, extraChoiceProps, checked ? {
    tone
  } : {}), /* @__PURE__ */ import_react109.default.createElement("span", {
    className: styles25.RadioButton
  }, /* @__PURE__ */ import_react109.default.createElement("input", {
    id,
    name,
    value,
    type: "radio",
    checked,
    disabled,
    className: inputClassName,
    onChange: handleChange,
    onFocus,
    onBlur: handleBlur,
    "aria-describedby": ariaDescribedBy,
    ref: inputNode
  }), /* @__PURE__ */ import_react109.default.createElement("span", {
    className: styles25.Backdrop
  })));
}
var import_react109;
var init_RadioButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RadioButton/RadioButton.js"() {
    import_react109 = __toESM(require_react());
    init_css();
    init_RadioButton_css();
    init_Choice();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/listbox/context.js
var import_react110, ListboxContext, WithinListboxContext, ActionContext;
var init_context11 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/listbox/context.js"() {
    import_react110 = __toESM(require_react());
    ListboxContext = /* @__PURE__ */ (0, import_react110.createContext)(void 0);
    WithinListboxContext = /* @__PURE__ */ (0, import_react110.createContext)(false);
    ActionContext = /* @__PURE__ */ (0, import_react110.createContext)(false);
  }
});

// node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.css.js
var styles27;
var init_Checkbox_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.css.js"() {
    styles27 = {
      "Checkbox": "Polaris-Checkbox",
      "ChoiceLabel": "Polaris-Checkbox__ChoiceLabel",
      "Backdrop": "Polaris-Checkbox__Backdrop",
      "Input": "Polaris-Checkbox__Input",
      "Input-indeterminate": "Polaris-Checkbox__Input--indeterminate",
      "Icon": "Polaris-Checkbox__Icon",
      "animated": "Polaris-Checkbox--animated",
      "toneMagic": "Polaris-Checkbox--toneMagic",
      "hover": "Polaris-Checkbox--hover",
      "error": "Polaris-Checkbox--error",
      "checked": "Polaris-Checkbox--checked",
      "pathAnimation": "Polaris-Checkbox--pathAnimation"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.js
function noop4() {
}
function stopPropagation(event) {
  event.stopPropagation();
}
var import_react111, Checkbox;
var init_Checkbox = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Checkbox/Checkbox.js"() {
    import_react111 = __toESM(require_react());
    init_dist();
    init_css();
    init_context11();
    init_Checkbox_css();
    init_Choice();
    init_InlineError();
    init_Icon();
    Checkbox = /* @__PURE__ */ (0, import_react111.forwardRef)(function Checkbox2({
      ariaControls,
      ariaDescribedBy: ariaDescribedByProp,
      label,
      labelHidden,
      checked = false,
      helpText,
      disabled,
      id: idProp,
      name,
      value,
      error,
      onChange,
      onFocus,
      onBlur,
      labelClassName,
      fill,
      bleed,
      bleedBlockStart,
      bleedBlockEnd,
      bleedInlineStart,
      bleedInlineEnd,
      tone
    }, ref) {
      const inputNode = (0, import_react111.useRef)(null);
      const uniqId = (0, import_react111.useId)();
      const id = idProp ?? uniqId;
      const isWithinListbox = (0, import_react111.useContext)(WithinListboxContext);
      (0, import_react111.useImperativeHandle)(ref, () => ({
        focus: () => {
          if (inputNode.current) {
            inputNode.current.focus();
          }
        }
      }));
      const handleBlur = () => {
        onBlur && onBlur();
      };
      const handleOnClick = () => {
        if (onChange == null || inputNode.current == null || disabled) {
          return;
        }
        onChange(inputNode.current.checked, id);
        inputNode.current.focus();
      };
      const describedBy = [];
      if (error && typeof error !== "boolean") {
        describedBy.push(errorTextID(id));
      }
      if (helpText) {
        describedBy.push(helpTextID2(id));
      }
      if (ariaDescribedByProp) {
        describedBy.push(ariaDescribedByProp);
      }
      const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
      const wrapperClassName = classNames(styles27.Checkbox, error && styles27.error);
      const isIndeterminate = checked === "indeterminate";
      const isChecked = !isIndeterminate && Boolean(checked);
      const indeterminateAttributes = isIndeterminate ? {
        indeterminate: "true",
        "aria-checked": "mixed"
      } : {
        "aria-checked": isChecked
      };
      const iconSource = /* @__PURE__ */ import_react111.default.createElement("svg", {
        viewBox: "0 0 16 16",
        shapeRendering: "geometricPrecision",
        textRendering: "geometricPrecision"
      }, /* @__PURE__ */ import_react111.default.createElement("path", {
        className: classNames(checked && styles27.checked),
        d: "M1.5,5.5L3.44655,8.22517C3.72862,8.62007,4.30578,8.64717,4.62362,8.28044L10.5,1.5",
        transform: "translate(2 2.980376)",
        opacity: "0",
        fill: "none",
        stroke: "currentColor",
        strokeWidth: "2",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        pathLength: "1"
      }));
      const inputClassName = classNames(styles27.Input, isIndeterminate && styles27["Input-indeterminate"], tone && styles27[variationName("tone", tone)]);
      const extraChoiceProps = {
        helpText,
        error,
        bleed,
        bleedBlockStart,
        bleedBlockEnd,
        bleedInlineStart,
        bleedInlineEnd
      };
      return /* @__PURE__ */ import_react111.default.createElement(Choice, Object.assign({
        id,
        label,
        labelHidden,
        disabled,
        labelClassName: classNames(styles27.ChoiceLabel, labelClassName),
        fill,
        tone
      }, extraChoiceProps), /* @__PURE__ */ import_react111.default.createElement("span", {
        className: wrapperClassName
      }, /* @__PURE__ */ import_react111.default.createElement("input", Object.assign({
        ref: inputNode,
        id,
        name,
        value,
        type: "checkbox",
        checked: isChecked,
        disabled,
        className: inputClassName,
        onBlur: handleBlur,
        onChange: noop4,
        onClick: handleOnClick,
        onFocus,
        "aria-invalid": error != null,
        "aria-controls": ariaControls,
        "aria-describedby": ariaDescribedBy,
        role: isWithinListbox ? "presentation" : "checkbox"
      }, indeterminateAttributes)), /* @__PURE__ */ import_react111.default.createElement("span", {
        className: styles27.Backdrop,
        onClick: stopPropagation,
        onKeyUp: stopPropagation
      }), /* @__PURE__ */ import_react111.default.createElement("span", {
        className: classNames(styles27.Icon, !isIndeterminate && styles27.animated)
      }, isIndeterminate ? /* @__PURE__ */ import_react111.default.createElement(Icon, {
        source: SvgMinusIcon
      }) : iconSource)));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.js
function ChoiceList({
  title,
  titleHidden,
  allowMultiple,
  choices,
  selected,
  onChange = noop5,
  error,
  disabled = false,
  name: nameProp,
  tone
}) {
  const ControlComponent = allowMultiple ? Checkbox : RadioButton;
  const uniqName = (0, import_react112.useId)();
  const name = nameProp ?? uniqName;
  const finalName = allowMultiple ? `${name}[]` : name;
  const titleMarkup = title ? /* @__PURE__ */ import_react112.default.createElement(Box, {
    as: "legend",
    paddingBlockEnd: {
      xs: "0",
      md: "100"
    }
  }, /* @__PURE__ */ import_react112.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    visuallyHidden: titleHidden
  }, title)) : null;
  const choicesMarkup = choices.map((choice) => {
    const {
      value,
      id,
      label,
      helpText,
      disabled: choiceDisabled,
      describedByError
    } = choice;
    function handleChange(checked) {
      onChange(updateSelectedChoices(choice, checked, selected, allowMultiple), name);
    }
    const isSelected2 = choiceIsSelected(choice, selected);
    const renderedChildren = choice.renderChildren ? choice.renderChildren(isSelected2) : null;
    const children = renderedChildren ? /* @__PURE__ */ import_react112.default.createElement("div", {
      className: styles23.ChoiceChildren
    }, /* @__PURE__ */ import_react112.default.createElement(Box, {
      paddingBlockStart: {
        xs: "400",
        md: "0"
      }
    }, renderedChildren)) : null;
    return /* @__PURE__ */ import_react112.default.createElement("li", {
      key: value
    }, /* @__PURE__ */ import_react112.default.createElement(Bleed, {
      marginBlockEnd: helpText ? {
        xs: "100",
        md: "0"
      } : {
        xs: "0"
      }
    }, /* @__PURE__ */ import_react112.default.createElement(ControlComponent, {
      name: finalName,
      value,
      id,
      label,
      disabled: choiceDisabled || disabled,
      fill: {
        xs: true,
        sm: false
      },
      checked: choiceIsSelected(choice, selected),
      helpText,
      onChange: handleChange,
      ariaDescribedBy: error && describedByError ? errorTextID(finalName) : null,
      tone
    }), children));
  });
  const errorMarkup = error && /* @__PURE__ */ import_react112.default.createElement(Box, {
    paddingBlockStart: {
      xs: "0",
      md: "100"
    },
    paddingBlockEnd: "200"
  }, /* @__PURE__ */ import_react112.default.createElement(InlineError, {
    message: error,
    fieldID: finalName
  }));
  return /* @__PURE__ */ import_react112.default.createElement(BlockStack, {
    as: "fieldset",
    gap: {
      xs: "400",
      md: "0"
    },
    "aria-invalid": error != null,
    id: finalName
  }, titleMarkup, /* @__PURE__ */ import_react112.default.createElement(BlockStack, {
    as: "ul",
    gap: {
      xs: "400",
      md: "0"
    }
  }, choicesMarkup), errorMarkup);
}
function noop5() {
}
function choiceIsSelected({
  value
}, selected) {
  return selected.includes(value);
}
function updateSelectedChoices({
  value
}, checked, selected, allowMultiple = false) {
  if (checked) {
    return allowMultiple ? [...selected, value] : [value];
  }
  return selected.filter((selectedChoice) => selectedChoice !== value);
}
var import_react112;
var init_ChoiceList = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ChoiceList/ChoiceList.js"() {
    import_react112 = __toESM(require_react());
    init_ChoiceList_css();
    init_Bleed();
    init_RadioButton();
    init_Box();
    init_InlineError();
    init_BlockStack();
    init_Checkbox();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Divider/Divider.css.js
var styles28;
var init_Divider_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Divider/Divider.css.js"() {
    styles28 = {
      "Divider": "Polaris-Divider"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Divider/Divider.js
var import_react113, Divider;
var init_Divider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Divider/Divider.js"() {
    import_react113 = __toESM(require_react());
    init_Divider_css();
    Divider = ({
      borderColor = "border-secondary",
      borderWidth = "025"
    }) => {
      const borderColorValue = borderColor === "transparent" ? borderColor : `var(--p-color-${borderColor})`;
      return /* @__PURE__ */ import_react113.default.createElement("hr", {
        className: styles28.Divider,
        style: {
          borderBlockStart: `var(--p-border-width-${borderWidth}) solid ${borderColorValue}`
        }
      });
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.css.js
var styles29;
var init_EmptyState_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.css.js"() {
    styles29 = {
      "ImageContainer": "Polaris-EmptyState__ImageContainer",
      "Image": "Polaris-EmptyState__Image",
      "loaded": "Polaris-EmptyState--loaded",
      "imageContained": "Polaris-EmptyState--imageContained",
      "SkeletonImageContainer": "Polaris-EmptyState__SkeletonImageContainer",
      "SkeletonImage": "Polaris-EmptyState__SkeletonImage"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Image/Image.js
function Image({
  alt,
  sourceSet,
  source,
  crossOrigin,
  onLoad,
  className,
  ...rest
}) {
  const finalSourceSet = sourceSet ? sourceSet.map(({
    source: subSource,
    descriptor
  }) => `${subSource} ${descriptor}`).join(",") : null;
  const handleLoad = (0, import_react114.useCallback)(() => {
    if (onLoad)
      onLoad();
  }, [onLoad]);
  return /* @__PURE__ */ import_react114.default.createElement("img", Object.assign({
    alt,
    src: source,
    crossOrigin,
    className,
    onLoad: handleLoad
  }, finalSourceSet ? {
    srcSet: finalSourceSet
  } : {}, rest));
}
var import_react114;
var init_Image = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Image/Image.js"() {
    import_react114 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.js
function EmptyState({
  children,
  heading,
  image,
  largeImage,
  imageContained,
  fullWidth = false,
  action,
  secondaryAction,
  footerContent
}) {
  const [imageLoaded, setImageLoaded] = (0, import_react115.useState)(false);
  const handleLoad = (0, import_react115.useCallback)(() => {
    setImageLoaded(true);
  }, []);
  const imageClassNames = classNames(styles29.Image, imageLoaded && styles29.loaded, imageContained && styles29.imageContained);
  const loadedImageMarkup = largeImage ? /* @__PURE__ */ import_react115.default.createElement(Image, {
    alt: "",
    role: "presentation",
    source: largeImage,
    className: imageClassNames,
    sourceSet: [{
      source: image,
      descriptor: "568w"
    }, {
      source: largeImage,
      descriptor: "1136w"
    }],
    sizes: "(max-width: 568px) 60vw",
    onLoad: handleLoad
  }) : /* @__PURE__ */ import_react115.default.createElement(Image, {
    alt: "",
    role: "presentation",
    className: imageClassNames,
    source: image,
    onLoad: handleLoad
  });
  const skeletonImageClassNames = classNames(styles29.SkeletonImage, imageLoaded && styles29.loaded);
  const imageContainerClassNames = classNames(styles29.ImageContainer, !imageLoaded && styles29.SkeletonImageContainer);
  const imageMarkup = /* @__PURE__ */ import_react115.default.createElement("div", {
    className: imageContainerClassNames
  }, loadedImageMarkup, /* @__PURE__ */ import_react115.default.createElement("div", {
    className: skeletonImageClassNames
  }));
  const secondaryActionMarkup = secondaryAction ? buttonFrom(secondaryAction, {}) : null;
  const footerContentMarkup = footerContent ? /* @__PURE__ */ import_react115.default.createElement(Box, {
    paddingBlockStart: "400"
  }, /* @__PURE__ */ import_react115.default.createElement(Text, {
    as: "span",
    alignment: "center",
    variant: "bodySm"
  }, footerContent)) : null;
  const primaryActionMarkup = action ? buttonFrom(action, {
    variant: "primary",
    size: "medium"
  }) : null;
  const headingMarkup = heading ? /* @__PURE__ */ import_react115.default.createElement(Box, {
    paddingBlockEnd: "150"
  }, /* @__PURE__ */ import_react115.default.createElement(Text, {
    variant: "headingMd",
    as: "p",
    alignment: "center"
  }, heading)) : null;
  const childrenMarkup = children ? /* @__PURE__ */ import_react115.default.createElement(Text, {
    as: "span",
    alignment: "center",
    variant: "bodySm"
  }, children) : null;
  const textContentMarkup = headingMarkup || children ? /* @__PURE__ */ import_react115.default.createElement(Box, {
    paddingBlockEnd: "400"
  }, headingMarkup, childrenMarkup) : null;
  const actionsMarkup = primaryActionMarkup || secondaryActionMarkup ? /* @__PURE__ */ import_react115.default.createElement(InlineStack, {
    align: "center",
    gap: "200"
  }, secondaryActionMarkup, primaryActionMarkup) : null;
  const detailsMarkup = textContentMarkup || actionsMarkup || footerContentMarkup ? /* @__PURE__ */ import_react115.default.createElement(Box, {
    maxWidth: fullWidth ? "100%" : "400px"
  }, /* @__PURE__ */ import_react115.default.createElement(BlockStack, {
    inlineAlign: "center"
  }, textContentMarkup, actionsMarkup, footerContentMarkup)) : null;
  return /* @__PURE__ */ import_react115.default.createElement(Box, {
    paddingInlineStart: "0",
    paddingInlineEnd: "0",
    paddingBlockStart: "500",
    paddingBlockEnd: "1600"
  }, /* @__PURE__ */ import_react115.default.createElement(BlockStack, {
    inlineAlign: "center"
  }, imageMarkup, detailsMarkup));
}
var import_react115;
var init_EmptyState = __esm({
  "node_modules/@shopify/polaris/build/esm/components/EmptyState/EmptyState.js"() {
    import_react115 = __toESM(require_react());
    init_css();
    init_EmptyState_css();
    init_utils3();
    init_Box();
    init_BlockStack();
    init_Image();
    init_Text();
    init_InlineStack();
  }
});

// node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.css.js
var styles30;
var init_FormLayout_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.css.js"() {
    styles30 = {
      "Item": "Polaris-FormLayout__Item",
      "grouped": "Polaris-FormLayout--grouped",
      "condensed": "Polaris-FormLayout--condensed"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Item/Item.js
function Item3({
  children,
  condensed = false
}) {
  const className = classNames(styles30.Item, condensed ? styles30.condensed : styles30.grouped);
  return children ? /* @__PURE__ */ import_react116.default.createElement("div", {
    className
  }, children) : null;
}
var import_react116;
var init_Item3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Item/Item.js"() {
    import_react116 = __toESM(require_react());
    init_css();
    init_FormLayout_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Group/Group.js
function Group({
  children,
  condensed,
  title,
  helpText
}) {
  const id = (0, import_react117.useId)();
  let helpTextElement = null;
  let helpTextId;
  let titleElement = null;
  let titleId;
  if (helpText) {
    helpTextId = `${id}HelpText`;
    helpTextElement = /* @__PURE__ */ import_react117.default.createElement(Box, {
      id: helpTextId,
      color: "text-secondary"
    }, helpText);
  }
  if (title) {
    titleId = `${id}Title`;
    titleElement = /* @__PURE__ */ import_react117.default.createElement(Text, {
      id: titleId,
      as: "p"
    }, title);
  }
  const itemsMarkup = import_react117.Children.map(children, (child) => wrapWithComponent(child, Item3, {
    condensed
  }));
  return /* @__PURE__ */ import_react117.default.createElement(BlockStack, {
    role: "group",
    gap: "200",
    "aria-labelledby": titleId,
    "aria-describedby": helpTextId
  }, titleElement, /* @__PURE__ */ import_react117.default.createElement(InlineStack, {
    gap: "300"
  }, itemsMarkup), helpTextElement);
}
var import_react117;
var init_Group = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FormLayout/components/Group/Group.js"() {
    import_react117 = __toESM(require_react());
    init_components();
    init_Item3();
    init_BlockStack();
    init_InlineStack();
    init_Box();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.js
function wrapChildren(child, index) {
  if (isElementOfType(child, Group)) {
    return child;
  }
  const props = {
    key: index
  };
  return wrapWithComponent(child, Item3, props);
}
var import_react118, FormLayout;
var init_FormLayout = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FormLayout/FormLayout.js"() {
    import_react118 = __toESM(require_react());
    init_components();
    init_Group();
    init_BlockStack();
    init_Item3();
    FormLayout = /* @__PURE__ */ (0, import_react118.memo)(function FormLayout2({
      children
    }) {
      return /* @__PURE__ */ import_react118.default.createElement(BlockStack, {
        gap: "400"
      }, import_react118.Children.map(children, wrapChildren));
    });
    FormLayout.Group = Group;
  }
});

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var init_extends = __esm({
  "node_modules/@babel/runtime/helpers/esm/extends.js"() {
  }
});

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var init_objectWithoutPropertiesLoose = __esm({
  "node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"() {
  }
});

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}
var init_setPrototypeOf = __esm({
  "node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"() {
  }
});

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}
var init_inheritsLoose = __esm({
  "node_modules/@babel/runtime/helpers/esm/inheritsLoose.js"() {
    init_setPrototypeOf();
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element2 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal2 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode2 = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element2;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment3;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal2;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode2;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement7, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement7(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement7(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element, className) {
  if (element.classList)
    return !!className && element.classList.contains(className);
  return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
}
var init_hasClass = __esm({
  "node_modules/dom-helpers/esm/hasClass.js"() {
  }
});

// node_modules/dom-helpers/esm/addClass.js
function addClass(element, className) {
  if (element.classList)
    element.classList.add(className);
  else if (!hasClass(element, className))
    if (typeof element.className === "string")
      element.className = element.className + " " + className;
    else
      element.setAttribute("class", (element.className && element.className.baseVal || "") + " " + className);
}
var init_addClass = __esm({
  "node_modules/dom-helpers/esm/addClass.js"() {
    init_hasClass();
  }
});

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element, className) {
  if (element.classList) {
    element.classList.remove(className);
  } else if (typeof element.className === "string") {
    element.className = replaceClassName(element.className, className);
  } else {
    element.setAttribute("class", replaceClassName(element.className && element.className.baseVal || "", className));
  }
}
var init_removeClass = __esm({
  "node_modules/dom-helpers/esm/removeClass.js"() {
  }
});

// node_modules/react-transition-group/esm/config.js
var config_default;
var init_config = __esm({
  "node_modules/react-transition-group/esm/config.js"() {
    config_default = {
      disabled: false
    };
  }
});

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types, timeoutsShape, classNamesShape;
var init_PropTypes = __esm({
  "node_modules/react-transition-group/esm/utils/PropTypes.js"() {
    import_prop_types = __toESM(require_prop_types());
    timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
      enter: import_prop_types.default.number,
      exit: import_prop_types.default.number,
      appear: import_prop_types.default.number
    }).isRequired]) : null;
    classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
      enter: import_prop_types.default.string,
      exit: import_prop_types.default.string,
      active: import_prop_types.default.string
    }), import_prop_types.default.shape({
      enter: import_prop_types.default.string,
      enterDone: import_prop_types.default.string,
      enterActive: import_prop_types.default.string,
      exit: import_prop_types.default.string,
      exitDone: import_prop_types.default.string,
      exitActive: import_prop_types.default.string
    })]) : null;
  }
});

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react119, TransitionGroupContext_default;
var init_TransitionGroupContext = __esm({
  "node_modules/react-transition-group/esm/TransitionGroupContext.js"() {
    import_react119 = __toESM(require_react());
    TransitionGroupContext_default = import_react119.default.createContext(null);
  }
});

// node_modules/react-transition-group/esm/utils/reflow.js
var forceReflow;
var init_reflow = __esm({
  "node_modules/react-transition-group/esm/utils/reflow.js"() {
    forceReflow = function forceReflow2(node) {
      return node.scrollTop;
    };
  }
});

// node_modules/react-transition-group/esm/Transition.js
function noop6() {
}
var import_prop_types2, import_react120, import_react_dom2, UNMOUNTED, EXITED, ENTERING, ENTERED, EXITING, Transition, Transition_default;
var init_Transition = __esm({
  "node_modules/react-transition-group/esm/Transition.js"() {
    init_objectWithoutPropertiesLoose();
    init_inheritsLoose();
    import_prop_types2 = __toESM(require_prop_types());
    import_react120 = __toESM(require_react());
    import_react_dom2 = __toESM(require_react_dom());
    init_config();
    init_PropTypes();
    init_TransitionGroupContext();
    init_reflow();
    UNMOUNTED = "unmounted";
    EXITED = "exited";
    ENTERING = "entering";
    ENTERED = "entered";
    EXITING = "exiting";
    Transition = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(Transition2, _React$Component);
      function Transition2(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var parentGroup = context;
        var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
        var initialStatus;
        _this.appearStatus = null;
        if (props.in) {
          if (appear) {
            initialStatus = EXITED;
            _this.appearStatus = ENTERING;
          } else {
            initialStatus = ENTERED;
          }
        } else {
          if (props.unmountOnExit || props.mountOnEnter) {
            initialStatus = UNMOUNTED;
          } else {
            initialStatus = EXITED;
          }
        }
        _this.state = {
          status: initialStatus
        };
        _this.nextCallback = null;
        return _this;
      }
      Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
        var nextIn = _ref.in;
        if (nextIn && prevState.status === UNMOUNTED) {
          return {
            status: EXITED
          };
        }
        return null;
      };
      var _proto = Transition2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.updateStatus(true, this.appearStatus);
      };
      _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
        var nextStatus = null;
        if (prevProps !== this.props) {
          var status = this.state.status;
          if (this.props.in) {
            if (status !== ENTERING && status !== ENTERED) {
              nextStatus = ENTERING;
            }
          } else {
            if (status === ENTERING || status === ENTERED) {
              nextStatus = EXITING;
            }
          }
        }
        this.updateStatus(false, nextStatus);
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.cancelNextCallback();
      };
      _proto.getTimeouts = function getTimeouts() {
        var timeout2 = this.props.timeout;
        var exit, enter, appear;
        exit = enter = appear = timeout2;
        if (timeout2 != null && typeof timeout2 !== "number") {
          exit = timeout2.exit;
          enter = timeout2.enter;
          appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
        }
        return {
          exit,
          enter,
          appear
        };
      };
      _proto.updateStatus = function updateStatus(mounting, nextStatus) {
        if (mounting === void 0) {
          mounting = false;
        }
        if (nextStatus !== null) {
          this.cancelNextCallback();
          if (nextStatus === ENTERING) {
            if (this.props.unmountOnExit || this.props.mountOnEnter) {
              var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom2.default.findDOMNode(this);
              if (node)
                forceReflow(node);
            }
            this.performEnter(mounting);
          } else {
            this.performExit();
          }
        } else if (this.props.unmountOnExit && this.state.status === EXITED) {
          this.setState({
            status: UNMOUNTED
          });
        }
      };
      _proto.performEnter = function performEnter(mounting) {
        var _this2 = this;
        var enter = this.props.enter;
        var appearing = this.context ? this.context.isMounting : mounting;
        var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom2.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
        var timeouts = this.getTimeouts();
        var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
        if (!mounting && !enter || config_default.disabled) {
          this.safeSetState({
            status: ENTERED
          }, function() {
            _this2.props.onEntered(maybeNode);
          });
          return;
        }
        this.props.onEnter(maybeNode, maybeAppearing);
        this.safeSetState({
          status: ENTERING
        }, function() {
          _this2.props.onEntering(maybeNode, maybeAppearing);
          _this2.onTransitionEnd(enterTimeout, function() {
            _this2.safeSetState({
              status: ENTERED
            }, function() {
              _this2.props.onEntered(maybeNode, maybeAppearing);
            });
          });
        });
      };
      _proto.performExit = function performExit() {
        var _this3 = this;
        var exit = this.props.exit;
        var timeouts = this.getTimeouts();
        var maybeNode = this.props.nodeRef ? void 0 : import_react_dom2.default.findDOMNode(this);
        if (!exit || config_default.disabled) {
          this.safeSetState({
            status: EXITED
          }, function() {
            _this3.props.onExited(maybeNode);
          });
          return;
        }
        this.props.onExit(maybeNode);
        this.safeSetState({
          status: EXITING
        }, function() {
          _this3.props.onExiting(maybeNode);
          _this3.onTransitionEnd(timeouts.exit, function() {
            _this3.safeSetState({
              status: EXITED
            }, function() {
              _this3.props.onExited(maybeNode);
            });
          });
        });
      };
      _proto.cancelNextCallback = function cancelNextCallback() {
        if (this.nextCallback !== null) {
          this.nextCallback.cancel();
          this.nextCallback = null;
        }
      };
      _proto.safeSetState = function safeSetState(nextState, callback) {
        callback = this.setNextCallback(callback);
        this.setState(nextState, callback);
      };
      _proto.setNextCallback = function setNextCallback(callback) {
        var _this4 = this;
        var active = true;
        this.nextCallback = function(event) {
          if (active) {
            active = false;
            _this4.nextCallback = null;
            callback(event);
          }
        };
        this.nextCallback.cancel = function() {
          active = false;
        };
        return this.nextCallback;
      };
      _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
        this.setNextCallback(handler);
        var node = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom2.default.findDOMNode(this);
        var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
        if (!node || doesNotHaveTimeoutOrListener) {
          setTimeout(this.nextCallback, 0);
          return;
        }
        if (this.props.addEndListener) {
          var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
          this.props.addEndListener(maybeNode, maybeNextCallback);
        }
        if (timeout2 != null) {
          setTimeout(this.nextCallback, timeout2);
        }
      };
      _proto.render = function render() {
        var status = this.state.status;
        if (status === UNMOUNTED) {
          return null;
        }
        var _this$props = this.props, children = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
        return (
          // allows for nested Transitions
          /* @__PURE__ */ import_react120.default.createElement(TransitionGroupContext_default.Provider, {
            value: null
          }, typeof children === "function" ? children(status, childProps) : import_react120.default.cloneElement(import_react120.default.Children.only(children), childProps))
        );
      };
      return Transition2;
    }(import_react120.default.Component);
    Transition.contextType = TransitionGroupContext_default;
    Transition.propTypes = true ? {
      /**
       * A React reference to DOM element that need to transition:
       * https://stackoverflow.com/a/51127130/4671932
       *
       *   - When `nodeRef` prop is used, `node` is not passed to callback functions
       *      (e.g. `onEnter`) because user already has direct access to the node.
       *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
       *     `nodeRef` need to be provided to `Transition` with changed `key` prop
       *     (see
       *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
       */
      nodeRef: import_prop_types2.default.shape({
        current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key, componentName, location, propFullName, secret) {
          var value = propValue[key];
          return import_prop_types2.default.instanceOf(value && "ownerDocument" in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
        }
      }),
      /**
       * A `function` child can be used instead of a React element. This function is
       * called with the current transition status (`'entering'`, `'entered'`,
       * `'exiting'`, `'exited'`), which can be used to apply context
       * specific props to a component.
       *
       * ```jsx
       * <Transition in={this.state.in} timeout={150}>
       *   {state => (
       *     <MyComponent className={`fade fade-${state}`} />
       *   )}
       * </Transition>
       * ```
       */
      children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
      /**
       * Show the component; triggers the enter or exit states
       */
      in: import_prop_types2.default.bool,
      /**
       * By default the child component is mounted immediately along with
       * the parent `Transition` component. If you want to "lazy mount" the component on the
       * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
       * mounted, even on "exited", unless you also specify `unmountOnExit`.
       */
      mountOnEnter: import_prop_types2.default.bool,
      /**
       * By default the child component stays mounted after it reaches the `'exited'` state.
       * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
       */
      unmountOnExit: import_prop_types2.default.bool,
      /**
       * By default the child component does not perform the enter transition when
       * it first mounts, regardless of the value of `in`. If you want this
       * behavior, set both `appear` and `in` to `true`.
       *
       * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
       * > only adds an additional enter transition. However, in the
       * > `<CSSTransition>` component that first enter transition does result in
       * > additional `.appear-*` classes, that way you can choose to style it
       * > differently.
       */
      appear: import_prop_types2.default.bool,
      /**
       * Enable or disable enter transitions.
       */
      enter: import_prop_types2.default.bool,
      /**
       * Enable or disable exit transitions.
       */
      exit: import_prop_types2.default.bool,
      /**
       * The duration of the transition, in milliseconds.
       * Required unless `addEndListener` is provided.
       *
       * You may specify a single timeout for all transitions:
       *
       * ```jsx
       * timeout={500}
       * ```
       *
       * or individually:
       *
       * ```jsx
       * timeout={{
       *  appear: 500,
       *  enter: 300,
       *  exit: 500,
       * }}
       * ```
       *
       * - `appear` defaults to the value of `enter`
       * - `enter` defaults to `0`
       * - `exit` defaults to `0`
       *
       * @type {number | { enter?: number, exit?: number, appear?: number }}
       */
      timeout: function timeout(props) {
        var pt = timeoutsShape;
        if (!props.addEndListener)
          pt = pt.isRequired;
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }
        return pt.apply(void 0, [props].concat(args));
      },
      /**
       * Add a custom transition end trigger. Called with the transitioning
       * DOM node and a `done` callback. Allows for more fine grained transition end
       * logic. Timeouts are still used as a fallback if provided.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * ```jsx
       * addEndListener={(node, done) => {
       *   // use the css transitionend event to mark the finish of a transition
       *   node.addEventListener('transitionend', done, false);
       * }}
       * ```
       */
      addEndListener: import_prop_types2.default.func,
      /**
       * Callback fired before the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEnter: import_prop_types2.default.func,
      /**
       * Callback fired after the "entering" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: import_prop_types2.default.func,
      /**
       * Callback fired after the "entered" status is applied. An extra parameter
       * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool) -> void
       */
      onEntered: import_prop_types2.default.func,
      /**
       * Callback fired before the "exiting" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExit: import_prop_types2.default.func,
      /**
       * Callback fired after the "exiting" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExiting: import_prop_types2.default.func,
      /**
       * Callback fired after the "exited" status is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement) -> void
       */
      onExited: import_prop_types2.default.func
    } : {};
    Transition.defaultProps = {
      in: false,
      mountOnEnter: false,
      unmountOnExit: false,
      appear: false,
      enter: true,
      exit: true,
      onEnter: noop6,
      onEntering: noop6,
      onEntered: noop6,
      onExit: noop6,
      onExiting: noop6,
      onExited: noop6
    };
    Transition.UNMOUNTED = UNMOUNTED;
    Transition.EXITED = EXITED;
    Transition.ENTERING = ENTERING;
    Transition.ENTERED = ENTERED;
    Transition.EXITING = EXITING;
    Transition_default = Transition;
  }
});

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types3, import_react121, _addClass, removeClass2, CSSTransition, CSSTransition_default;
var init_CSSTransition = __esm({
  "node_modules/react-transition-group/esm/CSSTransition.js"() {
    init_extends();
    init_objectWithoutPropertiesLoose();
    init_inheritsLoose();
    import_prop_types3 = __toESM(require_prop_types());
    init_addClass();
    init_removeClass();
    import_react121 = __toESM(require_react());
    init_Transition();
    init_PropTypes();
    init_reflow();
    _addClass = function addClass2(node, classes) {
      return node && classes && classes.split(" ").forEach(function(c) {
        return addClass(node, c);
      });
    };
    removeClass2 = function removeClass3(node, classes) {
      return node && classes && classes.split(" ").forEach(function(c) {
        return removeClass(node, c);
      });
    };
    CSSTransition = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(CSSTransition2, _React$Component);
      function CSSTransition2() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.appliedClasses = {
          appear: {},
          enter: {},
          exit: {}
        };
        _this.onEnter = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
          _this.removeClasses(node, "exit");
          _this.addClass(node, appearing ? "appear" : "enter", "base");
          if (_this.props.onEnter) {
            _this.props.onEnter(maybeNode, maybeAppearing);
          }
        };
        _this.onEntering = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
          var type = appearing ? "appear" : "enter";
          _this.addClass(node, type, "active");
          if (_this.props.onEntering) {
            _this.props.onEntering(maybeNode, maybeAppearing);
          }
        };
        _this.onEntered = function(maybeNode, maybeAppearing) {
          var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
          var type = appearing ? "appear" : "enter";
          _this.removeClasses(node, type);
          _this.addClass(node, type, "done");
          if (_this.props.onEntered) {
            _this.props.onEntered(maybeNode, maybeAppearing);
          }
        };
        _this.onExit = function(maybeNode) {
          var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
          _this.removeClasses(node, "appear");
          _this.removeClasses(node, "enter");
          _this.addClass(node, "exit", "base");
          if (_this.props.onExit) {
            _this.props.onExit(maybeNode);
          }
        };
        _this.onExiting = function(maybeNode) {
          var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
          _this.addClass(node, "exit", "active");
          if (_this.props.onExiting) {
            _this.props.onExiting(maybeNode);
          }
        };
        _this.onExited = function(maybeNode) {
          var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
          _this.removeClasses(node, "exit");
          _this.addClass(node, "exit", "done");
          if (_this.props.onExited) {
            _this.props.onExited(maybeNode);
          }
        };
        _this.resolveArguments = function(maybeNode, maybeAppearing) {
          return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
        };
        _this.getClassNames = function(type) {
          var classNames2 = _this.props.classNames;
          var isStringClassNames = typeof classNames2 === "string";
          var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
          var baseClassName = isStringClassNames ? "" + prefix + type : classNames2[type];
          var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type + "Active"];
          var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type + "Done"];
          return {
            baseClassName,
            activeClassName,
            doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition2.prototype;
      _proto.addClass = function addClass3(node, type, phase) {
        var className = this.getClassNames(type)[phase + "ClassName"];
        var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
        if (type === "appear" && phase === "done" && doneClassName) {
          className += " " + doneClassName;
        }
        if (phase === "active") {
          if (node)
            forceReflow(node);
        }
        if (className) {
          this.appliedClasses[type][phase] = className;
          _addClass(node, className);
        }
      };
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
        this.appliedClasses[type] = {};
        if (baseClassName) {
          removeClass2(node, baseClassName);
        }
        if (activeClassName) {
          removeClass2(node, activeClassName);
        }
        if (doneClassName) {
          removeClass2(node, doneClassName);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, _ = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
        return /* @__PURE__ */ import_react121.default.createElement(Transition_default, _extends({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition2;
    }(import_react121.default.Component);
    CSSTransition.defaultProps = {
      classNames: ""
    };
    CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
      /**
       * The animation classNames applied to the component as it appears, enters,
       * exits or has finished the transition. A single name can be provided, which
       * will be suffixed for each stage, e.g. `classNames="fade"` applies:
       *
       * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
       * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
       * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
       *
       * A few details to note about how these classes are applied:
       *
       * 1. They are _joined_ with the ones that are already defined on the child
       *    component, so if you want to add some base styles, you can use
       *    `className` without worrying that it will be overridden.
       *
       * 2. If the transition component mounts with `in={false}`, no classes are
       *    applied yet. You might be expecting `*-exit-done`, but if you think
       *    about it, a component cannot finish exiting if it hasn't entered yet.
       *
       * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
       *    allows you to define different behavior for when appearing is done and
       *    when regular entering is done, using selectors like
       *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
       *    an epic entrance animation when element first appears in the DOM using
       *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
       *    simply use `fade-enter-done` for defining both cases.
       *
       * Each individual classNames can also be specified independently like:
       *
       * ```js
       * classNames={{
       *  appear: 'my-appear',
       *  appearActive: 'my-active-appear',
       *  appearDone: 'my-done-appear',
       *  enter: 'my-enter',
       *  enterActive: 'my-active-enter',
       *  enterDone: 'my-done-enter',
       *  exit: 'my-exit',
       *  exitActive: 'my-active-exit',
       *  exitDone: 'my-done-exit',
       * }}
       * ```
       *
       * If you want to set these classes using CSS Modules:
       *
       * ```js
       * import styles from './styles.css';
       * ```
       *
       * you might want to use camelCase in your CSS file, that way could simply
       * spread them instead of listing them one by one:
       *
       * ```js
       * classNames={{ ...styles }}
       * ```
       *
       * @type {string | {
       *  appear?: string,
       *  appearActive?: string,
       *  appearDone?: string,
       *  enter?: string,
       *  enterActive?: string,
       *  enterDone?: string,
       *  exit?: string,
       *  exitActive?: string,
       *  exitDone?: string,
       * }}
       */
      classNames: classNamesShape,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
       * applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEnter: import_prop_types3.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter-active' or
       * 'appear-active' class is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntering: import_prop_types3.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'enter' or
       * 'appear' classes are **removed** and the `done` class is added to the DOM node.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed.
       *
       * @type Function(node: HtmlElement, isAppearing: bool)
       */
      onEntered: import_prop_types3.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' class is
       * applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExit: import_prop_types3.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExiting: import_prop_types3.default.func,
      /**
       * A `<Transition>` callback fired immediately after the 'exit' classes
       * are **removed** and the `exit-done` class is added to the DOM node.
       *
       * **Note**: when `nodeRef` prop is passed, `node` is not passed
       *
       * @type Function(node: HtmlElement)
       */
      onExited: import_prop_types3.default.func
    }) : {};
    CSSTransition_default = CSSTransition;
  }
});

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}
var init_assertThisInitialized = __esm({
  "node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"() {
  }
});

// node_modules/react-transition-group/esm/utils/ChildMapping.js
function getChildMapping(children, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react122.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children)
    import_react122.Children.map(children, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop, props) {
  return props[prop] != null ? props[prop] : child.props[prop];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react122.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children).forEach(function(key) {
    var child = children[key];
    if (!(0, import_react122.isValidElement)(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react122.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children[key] = (0, import_react122.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children[key] = (0, import_react122.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react122.isValidElement)(prevChild)) {
      children[key] = (0, import_react122.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children;
}
var import_react122;
var init_ChildMapping = __esm({
  "node_modules/react-transition-group/esm/utils/ChildMapping.js"() {
    import_react122 = __toESM(require_react());
  }
});

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types4, import_react123, values, defaultProps, TransitionGroup, TransitionGroup_default;
var init_TransitionGroup = __esm({
  "node_modules/react-transition-group/esm/TransitionGroup.js"() {
    init_objectWithoutPropertiesLoose();
    init_extends();
    init_assertThisInitialized();
    init_inheritsLoose();
    import_prop_types4 = __toESM(require_prop_types());
    import_react123 = __toESM(require_react());
    init_TransitionGroupContext();
    init_ChildMapping();
    values = Object.values || function(obj) {
      return Object.keys(obj).map(function(k) {
        return obj[k];
      });
    };
    defaultProps = {
      component: "div",
      childFactory: function childFactory(child) {
        return child;
      }
    };
    TransitionGroup = /* @__PURE__ */ function(_React$Component) {
      _inheritsLoose(TransitionGroup2, _React$Component);
      function TransitionGroup2(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
        _this.state = {
          contextValue: {
            isMounting: true
          },
          handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup2.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
          contextValue: {
            isMounting: false
          }
        });
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
          children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = getChildMapping(this.props.children);
        if (child.key in currentChildMapping)
          return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function(state) {
            var children = _extends({}, state.children);
            delete children[child.key];
            return {
              children
            };
          });
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, Component7 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
        var contextValue = this.state.contextValue;
        var children = values(this.state.children).map(childFactory2);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component7 === null) {
          return /* @__PURE__ */ import_react123.default.createElement(TransitionGroupContext_default.Provider, {
            value: contextValue
          }, children);
        }
        return /* @__PURE__ */ import_react123.default.createElement(TransitionGroupContext_default.Provider, {
          value: contextValue
        }, /* @__PURE__ */ import_react123.default.createElement(Component7, props, children));
      };
      return TransitionGroup2;
    }(import_react123.default.Component);
    TransitionGroup.propTypes = true ? {
      /**
       * `<TransitionGroup>` renders a `<div>` by default. You can change this
       * behavior by providing a `component` prop.
       * If you use React v16+ and would like to avoid a wrapping `<div>` element
       * you can pass in `component={null}`. This is useful if the wrapping div
       * borks your css styles.
       */
      component: import_prop_types4.default.any,
      /**
       * A set of `<Transition>` components, that are toggled `in` and out as they
       * leave. the `<TransitionGroup>` will inject specific transition props, so
       * remember to spread them through if you are wrapping the `<Transition>` as
       * with our `<Fade>` example.
       *
       * While this component is meant for multiple `Transition` or `CSSTransition`
       * children, sometimes you may want to have a single transition child with
       * content that you want to be transitioned out and in when you change it
       * (e.g. routes, images etc.) In that case you can change the `key` prop of
       * the transition child as you change its content, this will cause
       * `TransitionGroup` to transition the child out and back in.
       */
      children: import_prop_types4.default.node,
      /**
       * A convenience prop that enables or disables appear animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      appear: import_prop_types4.default.bool,
      /**
       * A convenience prop that enables or disables enter animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      enter: import_prop_types4.default.bool,
      /**
       * A convenience prop that enables or disables exit animations
       * for all children. Note that specifying this will override any defaults set
       * on individual children Transitions.
       */
      exit: import_prop_types4.default.bool,
      /**
       * You may need to apply reactive updates to a child as it is exiting.
       * This is generally done by using `cloneElement` however in the case of an exiting
       * child the element has already been removed and not accessible to the consumer.
       *
       * If you do need to update a child as it leaves you can provide a `childFactory`
       * to wrap every child, even the ones that are leaving.
       *
       * @type Function(child: ReactElement) -> ReactElement
       */
      childFactory: import_prop_types4.default.func
    } : {};
    TransitionGroup.defaultProps = defaultProps;
    TransitionGroup_default = TransitionGroup;
  }
});

// node_modules/react-transition-group/esm/index.js
var init_esm = __esm({
  "node_modules/react-transition-group/esm/index.js"() {
    init_CSSTransition();
    init_TransitionGroup();
    init_Transition();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/Modal.css.js
var styles31;
var init_Modal_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/Modal.css.js"() {
    styles31 = {
      "Body": "Polaris-Modal__Body",
      "NoScrollBody": "Polaris-Modal__NoScrollBody",
      "IFrame": "Polaris-Modal__IFrame"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.css.js
var styles32;
var init_Section_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.css.js"() {
    styles32 = {
      "Section": "Polaris-Modal-Section",
      "titleHidden": "Polaris-Modal-Section--titleHidden"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.js
function Section3({
  children,
  flush = false,
  subdued = false,
  titleHidden = false
}) {
  const className = classNames(styles32.Section, titleHidden && styles32.titleHidden);
  return /* @__PURE__ */ import_react124.default.createElement("div", {
    className
  }, /* @__PURE__ */ import_react124.default.createElement(Box, Object.assign({
    as: "section",
    padding: flush ? "0" : "400"
  }, titleHidden && {
    paddingInlineEnd: "0"
  }, subdued && {
    background: "bg-surface-tertiary"
  }), children));
}
var import_react124;
var init_Section3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/Section/Section.js"() {
    import_react124 = __toESM(require_react());
    init_css();
    init_Section_css();
    init_Box();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.css.js
var styles33;
var init_Dialog_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.css.js"() {
    styles33 = {
      "Container": "Polaris-Modal-Dialog__Container",
      "Dialog": "Polaris-Modal-Dialog",
      "Modal": "Polaris-Modal-Dialog__Modal",
      "limitHeight": "Polaris-Modal-Dialog--limitHeight",
      "sizeSmall": "Polaris-Modal-Dialog--sizeSmall",
      "sizeLarge": "Polaris-Modal-Dialog--sizeLarge",
      "sizeFullScreen": "Polaris-Modal-Dialog--sizeFullScreen",
      "animateFadeUp": "Polaris-Modal-Dialog--animateFadeUp",
      "entering": "Polaris-Modal-Dialog--entering",
      "exiting": "Polaris-Modal-Dialog--exiting",
      "exited": "Polaris-Modal-Dialog--exited",
      "entered": "Polaris-Modal-Dialog--entered"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/frame/context.js
var import_react125, FrameContext;
var init_context12 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/frame/context.js"() {
    import_react125 = __toESM(require_react());
    FrameContext = /* @__PURE__ */ (0, import_react125.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/focus-manager/hooks.js
function useFocusManager({
  trapping
}) {
  const focusManager = (0, import_react126.useContext)(FocusManagerContext);
  const id = (0, import_react126.useId)();
  if (!focusManager) {
    throw new MissingAppProviderError("No FocusManager was provided.");
  }
  const {
    trapFocusList,
    add: addFocusItem,
    remove: removeFocusItem
  } = focusManager;
  const canSafelyFocus = trapFocusList[0] === id;
  const value = (0, import_react126.useMemo)(() => ({
    canSafelyFocus
  }), [canSafelyFocus]);
  (0, import_react126.useEffect)(() => {
    if (!trapping)
      return;
    addFocusItem(id);
    return () => {
      removeFocusItem(id);
    };
  }, [addFocusItem, id, removeFocusItem, trapping]);
  return value;
}
var import_react126;
var init_hooks5 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/focus-manager/hooks.js"() {
    import_react126 = __toESM(require_react());
    init_errors();
    init_context8();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Focus/Focus.js
function isRef(ref) {
  return ref.current !== void 0;
}
var import_react127, Focus;
var init_Focus = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Focus/Focus.js"() {
    import_react127 = __toESM(require_react());
    init_focus();
    Focus = /* @__PURE__ */ (0, import_react127.memo)(function Focus2({
      children,
      disabled,
      root
    }) {
      (0, import_react127.useEffect)(() => {
        if (disabled || !root) {
          return;
        }
        const node = isRef(root) ? root.current : root;
        if (!node || node.querySelector("[autofocus]")) {
          return;
        }
        focusFirstFocusableNode(node, false);
      }, [disabled, root]);
      return /* @__PURE__ */ import_react127.default.createElement(import_react127.default.Fragment, null, children);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/TrapFocus/TrapFocus.js
function TrapFocus({
  trapping = true,
  children
}) {
  const {
    canSafelyFocus
  } = useFocusManager({
    trapping
  });
  const focusTrapWrapper = (0, import_react128.useRef)(null);
  const [disableFocus, setDisableFocus] = (0, import_react128.useState)(true);
  (0, import_react128.useEffect)(() => {
    const disable = canSafelyFocus && !(focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement)) ? !trapping : true;
    setDisableFocus(disable);
  }, [canSafelyFocus, trapping]);
  const handleFocusIn = (event) => {
    const containerContentsHaveFocus = focusTrapWrapper.current && focusTrapWrapper.current.contains(document.activeElement);
    if (trapping === false || !focusTrapWrapper.current || containerContentsHaveFocus || event.target instanceof Element && event.target.matches(`${portal.selector} *`)) {
      return;
    }
    if (canSafelyFocus && event.target instanceof HTMLElement && focusTrapWrapper.current !== event.target && !focusTrapWrapper.current.contains(event.target)) {
      focusFirstFocusableNode(focusTrapWrapper.current);
    }
  };
  const handleTab = (event) => {
    if (trapping === false || !focusTrapWrapper.current) {
      return;
    }
    const firstFocusableNode = findFirstKeyboardFocusableNode(focusTrapWrapper.current);
    const lastFocusableNode = findLastKeyboardFocusableNode(focusTrapWrapper.current);
    if (event.target === lastFocusableNode && !event.shiftKey) {
      event.preventDefault();
      focusFirstKeyboardFocusableNode(focusTrapWrapper.current);
    }
    if (event.target === firstFocusableNode && event.shiftKey) {
      event.preventDefault();
      focusLastKeyboardFocusableNode(focusTrapWrapper.current);
    }
  };
  return /* @__PURE__ */ import_react128.default.createElement(Focus, {
    disabled: disableFocus,
    root: focusTrapWrapper.current
  }, /* @__PURE__ */ import_react128.default.createElement("div", {
    ref: focusTrapWrapper
  }, /* @__PURE__ */ import_react128.default.createElement(EventListener, {
    event: "focusin",
    handler: handleFocusIn
  }), /* @__PURE__ */ import_react128.default.createElement(KeypressListener, {
    keyCode: Key.Tab,
    keyEvent: "keydown",
    handler: handleTab
  }), children));
}
var import_react128;
var init_TrapFocus = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TrapFocus/TrapFocus.js"() {
    import_react128 = __toESM(require_react());
    init_types();
    init_focus();
    init_shared();
    init_hooks5();
    init_Focus();
    init_EventListener();
    init_KeypressListener();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.js
function Dialog({
  instant,
  labelledBy,
  children,
  limitHeight,
  size: size2,
  onClose,
  onExited,
  onEntered,
  setClosing,
  hasToasts,
  ...props
}) {
  const theme = useTheme();
  const containerNode = (0, import_react129.useRef)(null);
  const frameContext = (0, import_react129.useContext)(FrameContext);
  let toastMessages;
  if (frameContext) {
    toastMessages = frameContext.toastMessages;
  }
  const classes = classNames(styles33.Modal, size2 && styles33[variationName("size", size2)], limitHeight && styles33.limitHeight);
  const TransitionChild = instant ? Transition_default : FadeUp;
  (0, import_react129.useEffect)(() => {
    containerNode.current && !containerNode.current.contains(document.activeElement) && focusFirstFocusableNode(containerNode.current);
  }, []);
  const handleKeyDown5 = () => {
    if (setClosing) {
      setClosing(true);
    }
  };
  const handleKeyUp = () => {
    if (setClosing) {
      setClosing(false);
    }
    onClose();
  };
  const ariaLiveAnnouncements = /* @__PURE__ */ import_react129.default.createElement("div", {
    "aria-live": "assertive"
  }, toastMessages ? toastMessages.map((toastMessage) => /* @__PURE__ */ import_react129.default.createElement(Text, {
    visuallyHidden: true,
    as: "p",
    key: toastMessage.id
  }, toastMessage.content)) : null);
  return /* @__PURE__ */ import_react129.default.createElement(TransitionChild, Object.assign({}, props, {
    nodeRef: containerNode,
    mountOnEnter: true,
    unmountOnExit: true,
    timeout: parseInt(theme.motion["motion-duration-200"], 10),
    onEntered,
    onExited
  }), /* @__PURE__ */ import_react129.default.createElement("div", {
    className: styles33.Container,
    "data-polaris-layer": true,
    "data-polaris-overlay": true,
    ref: containerNode
  }, /* @__PURE__ */ import_react129.default.createElement(TrapFocus, null, /* @__PURE__ */ import_react129.default.createElement("div", {
    role: "dialog",
    "aria-modal": true,
    "aria-label": labelledBy,
    "aria-labelledby": labelledBy,
    tabIndex: -1,
    className: styles33.Dialog
  }, /* @__PURE__ */ import_react129.default.createElement("div", {
    className: classes
  }, /* @__PURE__ */ import_react129.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    keyEvent: "keydown",
    handler: handleKeyDown5
  }), /* @__PURE__ */ import_react129.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    handler: handleKeyUp
  }), children), ariaLiveAnnouncements))));
}
function FadeUp({
  children,
  ...props
}) {
  return /* @__PURE__ */ import_react129.default.createElement(CSSTransition_default, Object.assign({}, props, {
    classNames: fadeUpClasses
  }), children);
}
var import_react129, fadeUpClasses;
var init_Dialog = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/Dialog/Dialog.js"() {
    import_react129 = __toESM(require_react());
    init_esm();
    init_css();
    init_focus();
    init_types();
    init_use_theme();
    init_Dialog_css();
    init_context12();
    init_TrapFocus();
    init_Text();
    init_KeypressListener();
    fadeUpClasses = {
      appear: classNames(styles33.animateFadeUp, styles33.entering),
      appearActive: classNames(styles33.animateFadeUp, styles33.entered),
      enter: classNames(styles33.animateFadeUp, styles33.entering),
      enterActive: classNames(styles33.animateFadeUp, styles33.entered),
      exit: classNames(styles33.animateFadeUp, styles33.exiting),
      exitActive: classNames(styles33.animateFadeUp, styles33.exited)
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/CloseButton/CloseButton.js
function CloseButton({
  pressed,
  onClick
}) {
  const i18n = useI18n();
  return /* @__PURE__ */ import_react130.default.createElement(Button, {
    variant: "tertiary",
    pressed,
    icon: SvgXIcon,
    onClick,
    accessibilityLabel: i18n.translate("Polaris.Common.close")
  });
}
var import_react130;
var init_CloseButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/CloseButton/CloseButton.js"() {
    import_react130 = __toESM(require_react());
    init_dist();
    init_hooks2();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineGrid/InlineGrid.css.js
var styles34;
var init_InlineGrid_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineGrid/InlineGrid.css.js"() {
    styles34 = {
      "InlineGrid": "Polaris-InlineGrid"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineGrid/InlineGrid.js
function InlineGrid({
  children,
  columns,
  gap,
  alignItems
}) {
  const style = {
    ...getResponsiveValue("inline-grid", "grid-template-columns", formatInlineGrid(columns)),
    ...getResponsiveProps("inline-grid", "gap", "space", gap),
    "--pc-inline-grid-align-items": alignItems
  };
  return /* @__PURE__ */ import_react131.default.createElement("div", {
    className: styles34.InlineGrid,
    style: sanitizeCustomProperties(style)
  }, children);
}
function formatInlineGrid(columns) {
  if (typeof columns === "object" && columns !== null && !Array.isArray(columns)) {
    return Object.fromEntries(Object.entries(columns).map(([breakpointAlias, breakpointInlineGrid]) => [breakpointAlias, getColumnValue(breakpointInlineGrid)]));
  }
  return getColumnValue(columns);
}
function getColumnValue(columns) {
  if (!columns)
    return void 0;
  if (typeof columns === "number" || !isNaN(Number(columns))) {
    return `repeat(${Number(columns)}, minmax(0, 1fr))`;
  }
  if (typeof columns === "string")
    return columns;
  return columns.map((column) => {
    switch (column) {
      case "oneThird":
        return "minmax(0, 1fr)";
      case "oneHalf":
        return "minmax(0, 1fr)";
      case "twoThirds":
        return "minmax(0, 2fr)";
    }
  }).join(" ");
}
var import_react131;
var init_InlineGrid = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineGrid/InlineGrid.js"() {
    import_react131 = __toESM(require_react());
    init_css();
    init_InlineGrid_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Header/Header.js
function Header({
  id,
  children,
  closing,
  titleHidden,
  onClose
}) {
  const headerPaddingInline = "400";
  const headerPaddingBlock = "400";
  if (titleHidden || !children) {
    return /* @__PURE__ */ import_react132.default.createElement(Box, {
      position: "absolute",
      insetInlineEnd: headerPaddingInline,
      insetBlockStart: headerPaddingBlock,
      zIndex: "1"
    }, /* @__PURE__ */ import_react132.default.createElement(CloseButton, {
      onClick: onClose
    }));
  }
  return /* @__PURE__ */ import_react132.default.createElement(Box, {
    paddingBlockStart: "400",
    paddingBlockEnd: "400",
    paddingInlineStart: headerPaddingInline,
    paddingInlineEnd: headerPaddingInline,
    borderBlockEndWidth: "025",
    borderColor: "border",
    background: "bg-surface-tertiary"
  }, /* @__PURE__ */ import_react132.default.createElement(InlineGrid, {
    columns: {
      xs: "1fr auto"
    },
    gap: "400"
  }, /* @__PURE__ */ import_react132.default.createElement(InlineStack, {
    gap: "400",
    blockAlign: "center"
  }, /* @__PURE__ */ import_react132.default.createElement(Text, {
    id,
    as: "h2",
    variant: "headingMd",
    breakWord: true
  }, children)), /* @__PURE__ */ import_react132.default.createElement(CloseButton, {
    pressed: closing,
    onClick: onClose
  })));
}
var import_react132;
var init_Header = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/Header/Header.js"() {
    import_react132 = __toESM(require_react());
    init_CloseButton();
    init_InlineGrid();
    init_Box();
    init_InlineStack();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.css.js
var styles35;
var init_Backdrop_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.css.js"() {
    styles35 = {
      "Backdrop": "Polaris-Backdrop",
      "transparent": "Polaris-Backdrop--transparent",
      "belowNavigation": "Polaris-Backdrop--belowNavigation"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/hooks.js
function useScrollLockManager() {
  const scrollLockManager = (0, import_react133.useContext)(ScrollLockManagerContext);
  if (!scrollLockManager) {
    throw new MissingAppProviderError("No ScrollLockManager was provided.");
  }
  return scrollLockManager;
}
var import_react133;
var init_hooks6 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/scroll-lock-manager/hooks.js"() {
    import_react133 = __toESM(require_react());
    init_errors();
    init_context3();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ScrollLock/ScrollLock.js
function ScrollLock(_) {
  const scrollLockManager = useScrollLockManager();
  (0, import_react134.useEffect)(() => {
    scrollLockManager.registerScrollLock();
    return () => {
      scrollLockManager.unregisterScrollLock();
    };
  }, [scrollLockManager]);
  return null;
}
var import_react134;
var init_ScrollLock = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ScrollLock/ScrollLock.js"() {
    import_react134 = __toESM(require_react());
    init_hooks6();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.js
function Backdrop(props) {
  const {
    onClick,
    onTouchStart,
    belowNavigation,
    transparent,
    setClosing
  } = props;
  const className = classNames(styles35.Backdrop, belowNavigation && styles35.belowNavigation, transparent && styles35.transparent);
  const handleMouseDown = () => {
    if (setClosing) {
      setClosing(true);
    }
  };
  const handleClick = () => {
    if (setClosing) {
      setClosing(false);
    }
    if (onClick) {
      onClick();
    }
  };
  return /* @__PURE__ */ import_react135.default.createElement(import_react135.default.Fragment, null, /* @__PURE__ */ import_react135.default.createElement(ScrollLock, null), /* @__PURE__ */ import_react135.default.createElement("div", {
    className,
    onClick: handleClick,
    onTouchStart,
    onMouseDown: handleMouseDown
  }));
}
var import_react135;
var init_Backdrop = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Backdrop/Backdrop.js"() {
    import_react135 = __toESM(require_react());
    init_css();
    init_Backdrop_css();
    init_ScrollLock();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/components/Footer/Footer.js
function Footer({
  primaryAction,
  secondaryActions,
  children
}) {
  const primaryActionButton = primaryAction && buttonsFrom(primaryAction, {
    variant: "primary"
  }) || null;
  const secondaryActionButtons = secondaryActions && buttonsFrom(secondaryActions) || null;
  const actions = primaryActionButton || secondaryActionButtons ? /* @__PURE__ */ import_react136.default.createElement(InlineStack, {
    gap: "200"
  }, secondaryActionButtons, primaryActionButton) : null;
  return /* @__PURE__ */ import_react136.default.createElement(InlineStack, {
    gap: "400",
    blockAlign: "center"
  }, /* @__PURE__ */ import_react136.default.createElement(Box, {
    borderColor: "border",
    borderBlockStartWidth: "025",
    padding: "400",
    width: "100%"
  }, /* @__PURE__ */ import_react136.default.createElement(InlineStack, {
    gap: "400",
    blockAlign: "center",
    align: "space-between"
  }, /* @__PURE__ */ import_react136.default.createElement(Box, null, children), actions)));
}
var import_react136;
var init_Footer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/components/Footer/Footer.js"() {
    import_react136 = __toESM(require_react());
    init_utils3();
    init_InlineStack();
    init_Box();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Modal/Modal.js
function isRef2(ref) {
  return Object.prototype.hasOwnProperty.call(ref, "current");
}
var import_react137, IFRAME_LOADING_HEIGHT, DEFAULT_IFRAME_CONTENT_HEIGHT, Modal;
var init_Modal = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Modal/Modal.js"() {
    import_react137 = __toESM(require_react());
    init_esm();
    init_focus();
    init_within_content_context();
    init_components();
    init_Modal_css();
    init_Section3();
    init_Dialog();
    init_Header();
    init_Backdrop();
    init_Footer();
    init_hooks2();
    init_Box();
    init_Scrollable();
    init_Portal();
    init_InlineStack();
    init_Spinner();
    IFRAME_LOADING_HEIGHT = 200;
    DEFAULT_IFRAME_CONTENT_HEIGHT = 400;
    Modal = function Modal2({
      children,
      title,
      titleHidden = false,
      src,
      iFrameName,
      open,
      instant,
      sectioned,
      loading,
      size: size2,
      limitHeight,
      footer,
      primaryAction,
      secondaryActions,
      onScrolledToBottom,
      activator,
      activatorWrapper = "div",
      onClose,
      onIFrameLoad,
      onTransitionEnd,
      noScroll
    }) {
      const [iframeHeight, setIframeHeight] = (0, import_react137.useState)(IFRAME_LOADING_HEIGHT);
      const [closing, setClosing] = (0, import_react137.useState)(false);
      const headerId = (0, import_react137.useId)();
      const activatorRef = (0, import_react137.useRef)(null);
      const i18n = useI18n();
      const iframeTitle = i18n.translate("Polaris.Modal.iFrameTitle");
      let dialog;
      let backdrop;
      const handleEntered = (0, import_react137.useCallback)(() => {
        if (onTransitionEnd) {
          onTransitionEnd();
        }
      }, [onTransitionEnd]);
      const handleExited = (0, import_react137.useCallback)(() => {
        setIframeHeight(IFRAME_LOADING_HEIGHT);
        const activatorElement = activator && isRef2(activator) ? activator && activator.current : activatorRef.current;
        if (activatorElement) {
          requestAnimationFrame(() => focusFirstFocusableNode(activatorElement));
        }
      }, [activator]);
      const handleIFrameLoad = (0, import_react137.useCallback)((evt) => {
        const iframe = evt.target;
        if (iframe && iframe.contentWindow) {
          try {
            setIframeHeight(iframe.contentWindow.document.body.scrollHeight);
          } catch (_error) {
            setIframeHeight(DEFAULT_IFRAME_CONTENT_HEIGHT);
          }
        }
        if (onIFrameLoad != null) {
          onIFrameLoad(evt);
        }
      }, [onIFrameLoad]);
      if (open) {
        const footerMarkup = !footer && !primaryAction && !secondaryActions ? null : /* @__PURE__ */ import_react137.default.createElement(Footer, {
          primaryAction,
          secondaryActions
        }, footer);
        const content = sectioned ? wrapWithComponent(children, Section3, {
          titleHidden
        }) : children;
        const body = loading ? /* @__PURE__ */ import_react137.default.createElement(Box, {
          padding: "400"
        }, /* @__PURE__ */ import_react137.default.createElement(InlineStack, {
          gap: "400",
          align: "center",
          blockAlign: "center"
        }, /* @__PURE__ */ import_react137.default.createElement(Spinner, null))) : content;
        const scrollContainerMarkup = noScroll ? /* @__PURE__ */ import_react137.default.createElement("div", {
          className: styles31.NoScrollBody
        }, /* @__PURE__ */ import_react137.default.createElement(Box, {
          width: "100%",
          overflowX: "hidden",
          overflowY: "hidden"
        }, body)) : /* @__PURE__ */ import_react137.default.createElement(Scrollable, {
          shadow: true,
          className: styles31.Body,
          onScrolledToBottom
        }, body);
        const bodyMarkup = src ? /* @__PURE__ */ import_react137.default.createElement("iframe", {
          name: iFrameName,
          title: iframeTitle,
          src,
          className: styles31.IFrame,
          onLoad: handleIFrameLoad,
          style: {
            height: `${iframeHeight}px`
          }
        }) : scrollContainerMarkup;
        dialog = /* @__PURE__ */ import_react137.default.createElement(Dialog, {
          instant,
          labelledBy: headerId,
          onClose,
          onEntered: handleEntered,
          onExited: handleExited,
          size: size2,
          limitHeight,
          setClosing
        }, /* @__PURE__ */ import_react137.default.createElement(Header, {
          titleHidden,
          id: headerId,
          closing,
          onClose
        }, title), bodyMarkup, footerMarkup);
        backdrop = /* @__PURE__ */ import_react137.default.createElement(Backdrop, {
          setClosing,
          onClick: onClose
        });
      }
      const animated = !instant;
      const activatorMarkup = activator && !isRef2(activator) ? /* @__PURE__ */ import_react137.default.createElement(Box, {
        ref: activatorRef,
        as: activatorWrapper
      }, activator) : null;
      return /* @__PURE__ */ import_react137.default.createElement(WithinContentContext.Provider, {
        value: true
      }, activatorMarkup, /* @__PURE__ */ import_react137.default.createElement(Portal, {
        idPrefix: "modal"
      }, /* @__PURE__ */ import_react137.default.createElement(TransitionGroup_default, {
        appear: animated,
        enter: animated,
        exit: animated
      }, dialog), backdrop));
    };
    Modal.Section = Section3;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/set-root-property.js
function setRootProperty(name, value, node) {
  if (!document)
    return;
  const element = node || document.documentElement;
  element.style.setProperty(name, value);
}
var init_set_root_property = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/set-root-property.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/Frame.css.js
var styles36;
var init_Frame_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/Frame.css.js"() {
    styles36 = {
      "Frame": "Polaris-Frame",
      "Navigation": "Polaris-Frame__Navigation",
      "hasTopBar": "Polaris-Frame--hasTopBar",
      "Navigation-enter": "Polaris-Frame__Navigation--enter",
      "Navigation-enterActive": "Polaris-Frame__Navigation--enterActive",
      "Navigation-exit": "Polaris-Frame__Navigation--exit",
      "Navigation-exitActive": "Polaris-Frame__Navigation--exitActive",
      "NavigationDismiss": "Polaris-Frame__NavigationDismiss",
      "Navigation-visible": "Polaris-Frame__Navigation--visible",
      "TopBar": "Polaris-Frame__TopBar",
      "ContextualSaveBar": "Polaris-Frame__ContextualSaveBar",
      "Main": "Polaris-Frame__Main",
      "hasNav": "Polaris-Frame--hasNav",
      "Content": "Polaris-Frame__Content",
      "hasSidebar": "Polaris-Frame--hasSidebar",
      "GlobalRibbonContainer": "Polaris-Frame__GlobalRibbonContainer",
      "LoadingBar": "Polaris-Frame__LoadingBar",
      "Skip": "Polaris-Frame__Skip",
      "focused": "Polaris-Frame--focused",
      "pressed": "Polaris-Frame--pressed"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/media-query/hooks.js
function useMediaQuery() {
  const mediaQuery = (0, import_react138.useContext)(MediaQueryContext);
  if (!mediaQuery) {
    throw new Error("No mediaQuery was provided. Your application must be wrapped in an <AppProvider> component. See https://polaris.shopify.com/components/app-provider for implementation instructions.");
  }
  return mediaQuery;
}
var import_react138;
var init_hooks7 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/media-query/hooks.js"() {
    import_react138 = __toESM(require_react());
    init_context6();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-is-mounted-ref.js
function useIsMountedRef() {
  const isMounted = (0, import_react139.useRef)(false);
  (0, import_react139.useEffect)(() => {
    isMounted.current = true;
    return () => {
      isMounted.current = false;
    };
  }, []);
  return isMounted;
}
var import_react139;
var init_use_is_mounted_ref = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-is-mounted-ref.js"() {
    import_react139 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.css.js
var styles37;
var init_Loading_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.css.js"() {
    styles37 = {
      "Loading": "Polaris-Frame-Loading",
      "Level": "Polaris-Frame-Loading__Level"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.js
function Loading() {
  const i18n = useI18n();
  const isMountedRef = useIsMountedRef();
  const [progress, setProgress] = (0, import_react140.useState)(0);
  const [animating, setAnimating] = (0, import_react140.useState)(false);
  (0, import_react140.useEffect)(() => {
    if (progress >= STUCK_THRESHOLD || animating) {
      return;
    }
    requestAnimationFrame(() => {
      if (!isMountedRef.current)
        return;
      const step = Math.max((STUCK_THRESHOLD - progress) / 10, 1);
      setAnimating(true);
      setProgress(progress + step);
    });
  }, [progress, animating, isMountedRef]);
  const customStyles = {
    transform: `scaleX(${Math.floor(progress) / 100})`
  };
  return /* @__PURE__ */ import_react140.default.createElement("div", {
    className: styles37.Loading,
    "aria-valuenow": progress,
    "aria-valuemin": 0,
    "aria-valuemax": 100,
    role: "progressbar",
    "aria-label": i18n.translate("Polaris.Loading.label")
  }, /* @__PURE__ */ import_react140.default.createElement("div", {
    className: styles37.Level,
    style: customStyles,
    onTransitionEnd: () => setAnimating(false)
  }));
}
var import_react140, STUCK_THRESHOLD;
var init_Loading = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/Loading/Loading.js"() {
    import_react140 = __toESM(require_react());
    init_use_is_mounted_ref();
    init_Loading_css();
    init_hooks2();
    STUCK_THRESHOLD = 99;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.css.js
var styles38;
var init_CSSAnimation_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.css.js"() {
    styles38 = {
      "startFade": "Polaris-Frame-CSSAnimation--startFade",
      "endFade": "Polaris-Frame-CSSAnimation--endFade"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.js
function CSSAnimation({
  in: inProp,
  className,
  type,
  children
}) {
  const [transitionStatus, setTransitionStatus] = (0, import_react141.useState)(inProp ? TransitionStatus2.Entering : TransitionStatus2.Exited);
  const isMounted = (0, import_react141.useRef)(false);
  const node = (0, import_react141.useRef)(null);
  (0, import_react141.useEffect)(() => {
    if (!isMounted.current)
      return;
    transitionStatus === TransitionStatus2.Entering && changeTransitionStatus(TransitionStatus2.Entered);
  }, [transitionStatus]);
  (0, import_react141.useEffect)(() => {
    if (!isMounted.current)
      return;
    inProp && changeTransitionStatus(TransitionStatus2.Entering);
    !inProp && changeTransitionStatus(TransitionStatus2.Exiting);
  }, [inProp]);
  (0, import_react141.useEffect)(() => {
    isMounted.current = true;
  }, []);
  const wrapperClassName = classNames(className, styles38[variationName("start", type)], inProp && styles38[variationName("end", type)]);
  const content = transitionStatus === TransitionStatus2.Exited && !inProp ? null : children;
  return /* @__PURE__ */ import_react141.default.createElement("div", {
    className: wrapperClassName,
    ref: node,
    onTransitionEnd: handleTransitionEnd
  }, content);
  function handleTransitionEnd() {
    transitionStatus === TransitionStatus2.Exiting && changeTransitionStatus(TransitionStatus2.Exited);
  }
  function changeTransitionStatus(transitionStatus2) {
    setTransitionStatus(transitionStatus2);
    if (transitionStatus2 === TransitionStatus2.Entering)
      node.current && node.current.getBoundingClientRect();
  }
}
var import_react141, TransitionStatus2;
var init_CSSAnimation = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/CSSAnimation/CSSAnimation.js"() {
    import_react141 = __toESM(require_react());
    init_css();
    init_CSSAnimation_css();
    (function(TransitionStatus3) {
      TransitionStatus3["Entering"] = "entering";
      TransitionStatus3["Entered"] = "entered";
      TransitionStatus3["Exiting"] = "exiting";
      TransitionStatus3["Exited"] = "exited";
    })(TransitionStatus2 || (TransitionStatus2 = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/pluck-deep.js
function pluckDeep(obj, key) {
  if (!obj) {
    return null;
  }
  const keys = Object.keys(obj);
  for (const currKey of keys) {
    if (currKey === key) {
      return obj[key];
    }
    if (isObject(obj[currKey])) {
      const plucked = pluckDeep(obj[currKey], key);
      if (plucked) {
        return plucked;
      }
    }
  }
  return null;
}
var init_pluck_deep = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/pluck-deep.js"() {
    init_is_object();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/get-width.js
function getWidth(value = {}, defaultWidth = 0, key = "width") {
  const width2 = typeof value === "number" ? value : pluckDeep(value, key);
  return width2 ? `${width2}px` : `${defaultWidth}px`;
}
var init_get_width = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/get-width.js"() {
    init_pluck_deep();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.css.js
var styles39;
var init_ContextualSaveBar_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.css.js"() {
    styles39 = {
      "ContextualSaveBar": "Polaris-Frame-ContextualSaveBar",
      "LogoContainer": "Polaris-Frame-ContextualSaveBar__LogoContainer",
      "ContextControl": "Polaris-Frame-ContextualSaveBar__ContextControl",
      "Contents": "Polaris-Frame-ContextualSaveBar__Contents",
      "fullWidth": "Polaris-Frame-ContextualSaveBar--fullWidth",
      "MessageContainer": "Polaris-Frame-ContextualSaveBar__MessageContainer",
      "ActionContainer": "Polaris-Frame-ContextualSaveBar__ActionContainer",
      "Action": "Polaris-Frame-ContextualSaveBar__Action"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.js
function DiscardConfirmationModal({
  open,
  onDiscard,
  onCancel
}) {
  const i18n = useI18n();
  return /* @__PURE__ */ import_react142.default.createElement(Modal, {
    title: i18n.translate("Polaris.DiscardConfirmationModal.title"),
    open,
    onClose: onCancel,
    primaryAction: {
      content: i18n.translate("Polaris.DiscardConfirmationModal.primaryAction"),
      destructive: true,
      onAction: onDiscard
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.DiscardConfirmationModal.secondaryAction"),
      onAction: onCancel
    }],
    sectioned: true
  }, i18n.translate("Polaris.DiscardConfirmationModal.message"));
}
var import_react142;
var init_DiscardConfirmationModal = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/components/DiscardConfirmationModal/DiscardConfirmationModal.js"() {
    import_react142 = __toESM(require_react());
    init_Modal();
    init_hooks2();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/frame/hooks.js
function useFrame() {
  const frame = (0, import_react143.useContext)(FrameContext);
  if (!frame) {
    throw new Error("No Frame context was provided. Your component must be wrapped in a <Frame> component. See https://polaris.shopify.com/components/internal-only/frame for implementation instructions.");
  }
  return frame;
}
var import_react143;
var init_hooks8 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/frame/hooks.js"() {
    import_react143 = __toESM(require_react());
    init_context12();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.css.js
var styles40;
var init_LegacyStack_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.css.js"() {
    styles40 = {
      "LegacyStack": "Polaris-LegacyStack",
      "Item": "Polaris-LegacyStack__Item",
      "noWrap": "Polaris-LegacyStack--noWrap",
      "spacingNone": "Polaris-LegacyStack--spacingNone",
      "spacingExtraTight": "Polaris-LegacyStack--spacingExtraTight",
      "spacingTight": "Polaris-LegacyStack--spacingTight",
      "spacingBaseTight": "Polaris-LegacyStack--spacingBaseTight",
      "spacingLoose": "Polaris-LegacyStack--spacingLoose",
      "spacingExtraLoose": "Polaris-LegacyStack--spacingExtraLoose",
      "distributionLeading": "Polaris-LegacyStack--distributionLeading",
      "distributionTrailing": "Polaris-LegacyStack--distributionTrailing",
      "distributionCenter": "Polaris-LegacyStack--distributionCenter",
      "distributionEqualSpacing": "Polaris-LegacyStack--distributionEqualSpacing",
      "distributionFill": "Polaris-LegacyStack--distributionFill",
      "distributionFillEvenly": "Polaris-LegacyStack--distributionFillEvenly",
      "alignmentLeading": "Polaris-LegacyStack--alignmentLeading",
      "alignmentTrailing": "Polaris-LegacyStack--alignmentTrailing",
      "alignmentCenter": "Polaris-LegacyStack--alignmentCenter",
      "alignmentFill": "Polaris-LegacyStack--alignmentFill",
      "alignmentBaseline": "Polaris-LegacyStack--alignmentBaseline",
      "vertical": "Polaris-LegacyStack--vertical",
      "Item-fill": "Polaris-LegacyStack__Item--fill"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/components/Item/Item.js
function Item4({
  children,
  fill
}) {
  const className = classNames(styles40.Item, fill && styles40["Item-fill"]);
  return /* @__PURE__ */ import_react144.default.createElement("div", {
    className
  }, children);
}
var import_react144;
var init_Item4 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyStack/components/Item/Item.js"() {
    import_react144 = __toESM(require_react());
    init_css();
    init_LegacyStack_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.js
var import_react145, LegacyStack;
var init_LegacyStack = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyStack/LegacyStack.js"() {
    import_react145 = __toESM(require_react());
    init_css();
    init_components();
    init_LegacyStack_css();
    init_Item4();
    LegacyStack = /* @__PURE__ */ (0, import_react145.memo)(function Stack({
      children,
      vertical,
      spacing,
      distribution,
      alignment,
      wrap
    }) {
      const className = classNames(styles40.LegacyStack, vertical && styles40.vertical, spacing && styles40[variationName("spacing", spacing)], distribution && styles40[variationName("distribution", distribution)], alignment && styles40[variationName("alignment", alignment)], wrap === false && styles40.noWrap);
      const itemMarkup = elementChildren(children).map((child, index) => {
        const props = {
          key: index
        };
        return wrapWithComponent(child, Item4, props);
      });
      return /* @__PURE__ */ import_react145.default.createElement("div", {
        className
      }, itemMarkup);
    });
    LegacyStack.Item = Item4;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.js
function ContextualSaveBar({
  alignContentFlush,
  message,
  saveAction,
  discardAction,
  fullWidth,
  contextControl,
  secondaryMenu
}) {
  const i18n = useI18n();
  const {
    logo
  } = useFrame();
  const {
    value: discardConfirmationModalVisible,
    toggle: toggleDiscardConfirmationModal,
    setFalse: closeDiscardConfirmationModal
  } = useToggle(false);
  const handleDiscardAction = (0, import_react146.useCallback)(() => {
    if (discardAction && discardAction.onAction) {
      discardAction.onAction();
    }
    closeDiscardConfirmationModal();
  }, [closeDiscardConfirmationModal, discardAction]);
  const discardActionContent = discardAction && discardAction.content ? discardAction.content : i18n.translate("Polaris.ContextualSaveBar.discard");
  let discardActionHandler;
  if (discardAction && discardAction.discardConfirmationModal) {
    discardActionHandler = toggleDiscardConfirmationModal;
  } else if (discardAction) {
    discardActionHandler = discardAction.onAction;
  }
  const discardConfirmationModalMarkup = discardAction && discardAction.onAction && discardAction.discardConfirmationModal && /* @__PURE__ */ import_react146.default.createElement(DiscardConfirmationModal, {
    open: discardConfirmationModalVisible,
    onCancel: toggleDiscardConfirmationModal,
    onDiscard: handleDiscardAction
  });
  const discardActionMarkup = discardAction && /* @__PURE__ */ import_react146.default.createElement(Button, {
    variant: "tertiary",
    size: "large",
    url: discardAction.url,
    onClick: discardActionHandler,
    loading: discardAction.loading,
    disabled: discardAction.disabled,
    accessibilityLabel: discardAction.content
  }, discardActionContent);
  const saveActionContent = saveAction && saveAction.content ? saveAction.content : i18n.translate("Polaris.ContextualSaveBar.save");
  const saveActionMarkup = saveAction && /* @__PURE__ */ import_react146.default.createElement(Button, {
    variant: "primary",
    tone: "success",
    size: "large",
    url: saveAction.url,
    onClick: saveAction.onAction,
    loading: saveAction.loading,
    disabled: saveAction.disabled,
    accessibilityLabel: saveAction.content
  }, saveActionContent);
  const width2 = getWidth(logo, 104);
  const imageMarkup = logo && /* @__PURE__ */ import_react146.default.createElement(Image, {
    style: {
      width: width2
    },
    source: logo.contextualSaveBarSource || "",
    alt: ""
  });
  const logoMarkup = alignContentFlush || contextControl ? null : /* @__PURE__ */ import_react146.default.createElement("div", {
    className: styles39.LogoContainer,
    style: {
      width: width2
    }
  }, imageMarkup);
  const contextControlMarkup = contextControl ? /* @__PURE__ */ import_react146.default.createElement("div", {
    className: styles39.ContextControl
  }, contextControl) : null;
  const contentsClassName = classNames(styles39.Contents, fullWidth && styles39.fullWidth);
  return /* @__PURE__ */ import_react146.default.createElement(import_react146.default.Fragment, null, /* @__PURE__ */ import_react146.default.createElement("div", {
    className: styles39.ContextualSaveBar
  }, contextControlMarkup, logoMarkup, /* @__PURE__ */ import_react146.default.createElement("div", {
    className: contentsClassName
  }, /* @__PURE__ */ import_react146.default.createElement("div", {
    className: styles39.MessageContainer
  }, /* @__PURE__ */ import_react146.default.createElement(Icon, {
    source: SvgAlertTriangleIcon
  }), message && /* @__PURE__ */ import_react146.default.createElement(Text, {
    as: "h2",
    variant: "headingMd",
    tone: "text-inverse",
    truncate: true
  }, message)), /* @__PURE__ */ import_react146.default.createElement("div", {
    className: styles39.ActionContainer
  }, /* @__PURE__ */ import_react146.default.createElement(LegacyStack, {
    spacing: "tight",
    wrap: false
  }, secondaryMenu, discardActionMarkup, saveActionMarkup)))), discardConfirmationModalMarkup);
}
var import_react146;
var init_ContextualSaveBar = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/ContextualSaveBar/ContextualSaveBar.js"() {
    import_react146 = __toESM(require_react());
    init_dist();
    init_css();
    init_get_width();
    init_use_toggle();
    init_ContextualSaveBar_css();
    init_DiscardConfirmationModal();
    init_hooks2();
    init_hooks8();
    init_Button();
    init_Image();
    init_Icon();
    init_Text();
    init_LegacyStack();
  }
});

// node_modules/react-fast-compare/index.js
var require_react_fast_compare = __commonJS({
  "node_modules/react-fast-compare/index.js"(exports, module) {
    var hasElementType = typeof Element !== "undefined";
    var hasMap = typeof Map === "function";
    var hasSet = typeof Set === "function";
    var hasArrayBuffer = typeof ArrayBuffer === "function" && !!ArrayBuffer.isView;
    function equal(a, b) {
      if (a === b)
        return true;
      if (a && b && typeof a == "object" && typeof b == "object") {
        if (a.constructor !== b.constructor)
          return false;
        var length, i, keys;
        if (Array.isArray(a)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (!equal(a[i], b[i]))
              return false;
          return true;
        }
        var it;
        if (hasMap && a instanceof Map && b instanceof Map) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!equal(i.value[1], b.get(i.value[0])))
              return false;
          return true;
        }
        if (hasSet && a instanceof Set && b instanceof Set) {
          if (a.size !== b.size)
            return false;
          it = a.entries();
          while (!(i = it.next()).done)
            if (!b.has(i.value[0]))
              return false;
          return true;
        }
        if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {
          length = a.length;
          if (length != b.length)
            return false;
          for (i = length; i-- !== 0; )
            if (a[i] !== b[i])
              return false;
          return true;
        }
        if (a.constructor === RegExp)
          return a.source === b.source && a.flags === b.flags;
        if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === "function" && typeof b.valueOf === "function")
          return a.valueOf() === b.valueOf();
        if (a.toString !== Object.prototype.toString && typeof a.toString === "function" && typeof b.toString === "function")
          return a.toString() === b.toString();
        keys = Object.keys(a);
        length = keys.length;
        if (length !== Object.keys(b).length)
          return false;
        for (i = length; i-- !== 0; )
          if (!Object.prototype.hasOwnProperty.call(b, keys[i]))
            return false;
        if (hasElementType && a instanceof Element)
          return false;
        for (i = length; i-- !== 0; ) {
          if ((keys[i] === "_owner" || keys[i] === "__v" || keys[i] === "__o") && a.$$typeof) {
            continue;
          }
          if (!equal(a[keys[i]], b[keys[i]]))
            return false;
        }
        return true;
      }
      return a !== a && b !== b;
    }
    module.exports = function isEqual5(a, b) {
      try {
        return equal(a, b);
      } catch (error) {
        if ((error.message || "").match(/stack|recursion/i)) {
          console.warn("react-fast-compare cannot handle circular refs");
          return false;
        }
        throw error;
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-compare-ref.js
function useDeepCompareRef(dependencies, comparator = import_react_fast_compare.default) {
  const dependencyList = (0, import_react147.useRef)(dependencies);
  if (!comparator(dependencyList.current, dependencies)) {
    dependencyList.current = dependencies;
  }
  return dependencyList.current;
}
var import_react147, import_react_fast_compare;
var init_use_deep_compare_ref = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-deep-compare-ref.js"() {
    import_react147 = __toESM(require_react());
    import_react_fast_compare = __toESM(require_react_fast_compare());
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-effect.js
function useDeepEffect(callback, dependencies, customCompare) {
  (0, import_react148.useEffect)(callback, useDeepCompareRef(dependencies, customCompare));
}
var import_react148;
var init_use_deep_effect = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-deep-effect.js"() {
    import_react148 = __toESM(require_react());
    init_use_deep_compare_ref();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-deep-callback.js
function useDeepCallback(callback, dependencies, customCompare) {
  return (0, import_react149.useCallback)(callback, useDeepCompareRef(dependencies, customCompare));
}
var import_react149;
var init_use_deep_callback = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-deep-callback.js"() {
    import_react149 = __toESM(require_react());
    init_use_deep_compare_ref();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.css.js
var styles41;
var init_ToastManager_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.css.js"() {
    styles41 = {
      "ToastManager": "Polaris-Frame-ToastManager",
      "ToastWrapper": "Polaris-Frame-ToastManager__ToastWrapper",
      "ToastWrapper-enter": "Polaris-Frame-ToastManager__ToastWrapper--enter",
      "ToastWrapper-exit": "Polaris-Frame-ToastManager__ToastWrapper--exit",
      "ToastWrapper-enter-done": "Polaris-Frame-ToastManager--toastWrapperEnterDone",
      "ToastWrapper--hoverable": "Polaris-Frame-ToastManager--toastWrapperHoverable"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.css.js
var styles42;
var init_Toast_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.css.js"() {
    styles42 = {
      "Toast": "Polaris-Frame-Toast",
      "Action": "Polaris-Frame-Toast__Action",
      "error": "Polaris-Frame-Toast--error",
      "CloseButton": "Polaris-Frame-Toast__CloseButton",
      "LeadingIcon": "Polaris-Frame-Toast__LeadingIcon",
      "toneMagic": "Polaris-Frame-Toast--toneMagic",
      "WithActionOnComponent": "Polaris-Frame-Toast__WithActionOnComponent"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.js
function Toast({
  content,
  onDismiss,
  duration,
  error,
  action,
  tone,
  onClick,
  icon,
  isHovered
}) {
  const defaultDurationWithoutAction = duration || DEFAULT_TOAST_DURATION;
  const defaultDuration = action && !duration ? DEFAULT_TOAST_DURATION_WITH_ACTION : defaultDurationWithoutAction;
  const durationRemaining = (0, import_react150.useRef)(defaultDuration);
  const timeoutStart = (0, import_react150.useRef)(null);
  const timer = (0, import_react150.useRef)(null);
  (0, import_react150.useEffect)(() => {
    function resume() {
      timeoutStart.current = Date.now();
      timer.current = setTimeout(() => {
        onDismiss();
      }, durationRemaining.current);
    }
    function pause() {
      if (timeoutStart.current) {
        durationRemaining.current -= Date.now() - timeoutStart.current;
      }
      if (timer.current) {
        clearTimeout(timer.current);
      }
      timer.current = null;
    }
    if (isHovered) {
      pause();
    } else {
      resume();
    }
    return () => {
      if (timer.current) {
        clearTimeout(timer.current);
      }
    };
  }, [isHovered, onDismiss]);
  (0, import_react150.useEffect)(() => {
    if (action && duration && duration < DEFAULT_TOAST_DURATION_WITH_ACTION) {
      console.log("Toast with action should persist for at least 10,000 milliseconds to give the merchant enough time to act on it.");
    }
  }, [action, duration]);
  const dismissMarkup = /* @__PURE__ */ import_react150.default.createElement("button", {
    type: "button",
    className: styles42.CloseButton,
    onClick: onDismiss
  }, /* @__PURE__ */ import_react150.default.createElement(Icon, {
    source: SvgXSmallIcon,
    tone: "inherit"
  }));
  const actionMarkup = action ? /* @__PURE__ */ import_react150.default.createElement("div", {
    className: styles42.Action
  }, /* @__PURE__ */ import_react150.default.createElement(Button, {
    variant: "monochromePlain",
    removeUnderline: true,
    size: "slim",
    onClick: action.onAction
  }, action.content)) : null;
  let leadingIconMarkup = null;
  if (error) {
    leadingIconMarkup = /* @__PURE__ */ import_react150.default.createElement("div", {
      className: styles42.LeadingIcon
    }, /* @__PURE__ */ import_react150.default.createElement(Icon, {
      source: SvgAlertCircleIcon,
      tone: "inherit"
    }));
  } else if (icon) {
    leadingIconMarkup = /* @__PURE__ */ import_react150.default.createElement("div", {
      className: styles42.LeadingIcon
    }, /* @__PURE__ */ import_react150.default.createElement(Icon, {
      source: icon,
      tone: "inherit"
    }));
  }
  const className = classNames(styles42.Toast, error && styles42.error, tone && styles42[variationName("tone", tone)]);
  if (!action && onClick) {
    return /* @__PURE__ */ import_react150.default.createElement("button", {
      "aria-live": "assertive",
      className: classNames(className, styles42.WithActionOnComponent),
      type: "button",
      onClick
    }, /* @__PURE__ */ import_react150.default.createElement(KeypressListener, {
      keyCode: Key.Escape,
      handler: onDismiss
    }), leadingIconMarkup, /* @__PURE__ */ import_react150.default.createElement(InlineStack, {
      gap: "400",
      blockAlign: "center"
    }, /* @__PURE__ */ import_react150.default.createElement(Text, Object.assign({
      as: "span",
      variant: "bodyMd",
      fontWeight: "medium"
    }, tone === "magic" && {
      tone: "magic"
    }), content)));
  }
  return /* @__PURE__ */ import_react150.default.createElement("div", {
    className,
    "aria-live": "assertive"
  }, /* @__PURE__ */ import_react150.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    handler: onDismiss
  }), leadingIconMarkup, /* @__PURE__ */ import_react150.default.createElement(InlineStack, {
    gap: "400",
    blockAlign: "center"
  }, /* @__PURE__ */ import_react150.default.createElement(Text, Object.assign({
    as: "span",
    variant: "bodyMd",
    fontWeight: "medium"
  }, tone === "magic" && {
    tone: "magic"
  }), content)), actionMarkup, dismissMarkup);
}
var import_react150, DEFAULT_TOAST_DURATION, DEFAULT_TOAST_DURATION_WITH_ACTION;
var init_Toast = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/Toast/Toast.js"() {
    import_react150 = __toESM(require_react());
    init_dist();
    init_css();
    init_types();
    init_Toast_css();
    init_Icon();
    init_Button();
    init_KeypressListener();
    init_InlineStack();
    init_Text();
    DEFAULT_TOAST_DURATION = 5e3;
    DEFAULT_TOAST_DURATION_WITH_ACTION = 1e4;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.js
function generateAdditionalVerticalMovement(index) {
  const getAmountToRemove = (idx) => (idx - 1) * idx / 2;
  return index * ADDITIONAL_TOAST_BASE_MOVEMENT - getAmountToRemove(index);
}
var import_react151, ADDITIONAL_TOAST_BASE_MOVEMENT, TOAST_TRANSITION_DELAY, ToastManager, toastClasses;
var init_ToastManager = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/components/ToastManager/ToastManager.js"() {
    import_react151 = __toESM(require_react());
    init_esm();
    init_css();
    init_use_deep_effect();
    init_use_deep_callback();
    init_ToastManager_css();
    init_Toast();
    init_Portal();
    init_EventListener();
    ADDITIONAL_TOAST_BASE_MOVEMENT = 10;
    TOAST_TRANSITION_DELAY = 30;
    ToastManager = /* @__PURE__ */ (0, import_react151.memo)(function ToastManager2({
      toastMessages
    }) {
      const toastNodes = [];
      const [shouldExpand, setShouldExpand] = (0, import_react151.useState)(false);
      const isFullyExpanded = (0, import_react151.useRef)(false);
      const fullyExpandedTimeout = (0, import_react151.useRef)(null);
      const firstToast = (0, import_react151.useRef)(null);
      const updateToasts = useDeepCallback(() => {
        const zeroIndexTotalMessages = toastMessages.length - 1;
        toastMessages.forEach((_, index) => {
          const reversedOrder = zeroIndexTotalMessages - index;
          const currentToast = toastNodes[index];
          if (!currentToast.current)
            return;
          const toastHeight = currentToast.current.clientHeight;
          const scale = shouldExpand ? 1 : 0.9 ** reversedOrder;
          const additionalVerticalMovement = generateAdditionalVerticalMovement(reversedOrder);
          const targetInPos = shouldExpand ? toastHeight + (toastHeight - 8) * reversedOrder : toastHeight + additionalVerticalMovement;
          currentToast.current.style.setProperty("--pc-toast-manager-translate-y-in", `-${targetInPos}px`);
          currentToast.current.style.setProperty("--pc-toast-manager-scale-in", `${scale}`);
          currentToast.current.style.setProperty("--pc-toast-manager-blur-in", shouldExpand ? "0" : `${reversedOrder * 0.5}px`);
          currentToast.current.style.setProperty("--pc-toast-manager-transition-delay-in", `${shouldExpand ? reversedOrder * TOAST_TRANSITION_DELAY : 0}ms`);
          currentToast.current.style.setProperty("--pc-toast-manager-scale-out", `${reversedOrder === 0 ? 0.85 : scale ** 2}`);
          currentToast.current.style.setProperty("--pc-toast-manager-translate-y-out", `${-targetInPos}px`);
        });
      }, [toastMessages, toastNodes, shouldExpand]);
      useDeepEffect(() => {
        updateToasts();
        if (toastMessages.length === 0) {
          setShouldExpand(false);
        }
        if (shouldExpand) {
          fullyExpandedTimeout.current = setTimeout(() => {
            isFullyExpanded.current = true;
          }, toastMessages.length * TOAST_TRANSITION_DELAY + 400);
        } else if (fullyExpandedTimeout.current) {
          clearTimeout(fullyExpandedTimeout.current);
          isFullyExpanded.current = false;
        }
      }, [toastMessages, shouldExpand]);
      const toastsMarkup = toastMessages.map((toast, index) => {
        const reverseOrderIndex = toastMessages.length - index - 1;
        const toastNode = /* @__PURE__ */ (0, import_react151.createRef)();
        toastNodes[index] = toastNode;
        function handleMouseEnter() {
          setShouldExpand(true);
        }
        function handleMouseEnterFirstToast() {
          if (isFullyExpanded.current) {
            setShouldExpand(false);
          }
        }
        return /* @__PURE__ */ import_react151.default.createElement(CSSTransition_default, {
          nodeRef: toastNodes[index],
          key: toast.id,
          timeout: {
            enter: 0,
            exit: 200
          },
          classNames: toastClasses
        }, /* @__PURE__ */ import_react151.default.createElement("div", {
          ref: toastNode,
          onMouseEnter: reverseOrderIndex > 0 ? handleMouseEnter : handleMouseEnterFirstToast
        }, /* @__PURE__ */ import_react151.default.createElement("div", {
          ref: (node) => reverseOrderIndex === 0 ? firstToast.current = node : null
        }, /* @__PURE__ */ import_react151.default.createElement(Toast, Object.assign({}, toast, {
          isHovered: shouldExpand
        })))));
      });
      return /* @__PURE__ */ import_react151.default.createElement(Portal, {
        idPrefix: "toast"
      }, /* @__PURE__ */ import_react151.default.createElement(EventListener, {
        event: "resize",
        handler: updateToasts
      }), /* @__PURE__ */ import_react151.default.createElement("div", {
        className: styles41.ToastManager,
        "aria-live": "assertive",
        onMouseEnter: function(event) {
          const target = event.target;
          const isInFirstToast = firstToast.current?.contains(target);
          setShouldExpand(!isInFirstToast);
        },
        onMouseLeave: function() {
          setShouldExpand(false);
        }
      }, /* @__PURE__ */ import_react151.default.createElement(TransitionGroup_default, {
        component: null
      }, toastsMarkup)));
    });
    toastClasses = {
      enter: classNames(styles41.ToastWrapper, styles41["ToastWrapper-enter"]),
      enterDone: classNames(styles41.ToastWrapper, styles41["ToastWrapper-enter-done"]),
      exit: classNames(styles41.ToastWrapper, styles41["ToastWrapper-exit"])
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Frame/Frame.js
function Frame(props) {
  const i18n = useI18n();
  const mediaQuery = useMediaQuery();
  return /* @__PURE__ */ import_react152.default.createElement(FrameInner, Object.assign({}, props, {
    i18n,
    mediaQuery
  }));
}
var import_react152, APP_FRAME_MAIN, APP_FRAME_NAV, APP_FRAME_TOP_BAR, APP_FRAME_LOADING_BAR, FrameInner, navTransitionClasses;
var init_Frame = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Frame/Frame.js"() {
    import_react152 = __toESM(require_react());
    init_dist();
    init_esm();
    init_css();
    init_shared();
    init_set_root_property();
    init_use_theme();
    init_Frame_css();
    init_hooks7();
    init_Loading();
    init_CSSAnimation();
    init_ContextualSaveBar();
    init_ToastManager();
    init_hooks2();
    init_Text();
    init_Backdrop();
    init_context12();
    init_EventListener();
    init_TrapFocus();
    init_Icon();
    APP_FRAME_MAIN = "AppFrameMain";
    APP_FRAME_NAV = "AppFrameNav";
    APP_FRAME_TOP_BAR = "AppFrameTopBar";
    APP_FRAME_LOADING_BAR = "AppFrameLoadingBar";
    FrameInner = class extends import_react152.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          skipFocused: false,
          globalRibbonHeight: 0,
          loadingStack: 0,
          toastMessages: [],
          showContextualSaveBar: false
        };
        this.contextualSaveBar = null;
        this.globalRibbonContainer = null;
        this.navigationNode = /* @__PURE__ */ (0, import_react152.createRef)();
        this.setGlobalRibbonHeight = () => {
          const {
            globalRibbonContainer
          } = this;
          if (globalRibbonContainer) {
            this.setState({
              globalRibbonHeight: globalRibbonContainer.offsetHeight
            }, this.setGlobalRibbonRootProperty);
          }
        };
        this.setOffset = () => {
          const {
            offset = "0px"
          } = this.props;
          setRootProperty("--pc-frame-offset", offset);
        };
        this.setGlobalRibbonRootProperty = () => {
          const {
            globalRibbonHeight
          } = this.state;
          setRootProperty("--pc-frame-global-ribbon-height", `${globalRibbonHeight}px`);
        };
        this.showToast = (toast) => {
          this.setState(({
            toastMessages
          }) => {
            const hasToastById = toastMessages.find(({
              id
            }) => id === toast.id) != null;
            return {
              toastMessages: hasToastById ? toastMessages : [...toastMessages, toast]
            };
          });
        };
        this.hideToast = ({
          id
        }) => {
          this.setState(({
            toastMessages
          }) => {
            return {
              toastMessages: toastMessages.filter(({
                id: toastId
              }) => id !== toastId)
            };
          });
        };
        this.setContextualSaveBar = (props) => {
          const {
            showContextualSaveBar
          } = this.state;
          this.contextualSaveBar = {
            ...props
          };
          if (showContextualSaveBar === true) {
            this.forceUpdate();
          } else {
            this.setState({
              showContextualSaveBar: true
            });
          }
        };
        this.removeContextualSaveBar = () => {
          this.contextualSaveBar = null;
          this.setState({
            showContextualSaveBar: false
          });
        };
        this.startLoading = () => {
          this.setState(({
            loadingStack
          }) => ({
            loadingStack: loadingStack + 1
          }));
        };
        this.stopLoading = () => {
          this.setState(({
            loadingStack
          }) => ({
            loadingStack: Math.max(0, loadingStack - 1)
          }));
        };
        this.handleResize = () => {
          if (this.props.globalRibbon) {
            this.setGlobalRibbonHeight();
          }
        };
        this.handleFocus = () => {
          this.setState({
            skipFocused: true
          });
        };
        this.handleBlur = () => {
          this.setState({
            skipFocused: false
          });
        };
        this.handleClick = (event) => {
          const {
            skipToContentTarget
          } = this.props;
          if (skipToContentTarget && skipToContentTarget.current) {
            skipToContentTarget.current.focus();
            event?.preventDefault();
          }
        };
        this.handleNavigationDismiss = () => {
          const {
            onNavigationDismiss
          } = this.props;
          if (onNavigationDismiss != null) {
            onNavigationDismiss();
          }
        };
        this.setGlobalRibbonContainer = (node) => {
          this.globalRibbonContainer = node;
        };
        this.handleNavKeydown = (event) => {
          const {
            key
          } = event;
          const {
            mediaQuery: {
              isNavigationCollapsed
            },
            showMobileNavigation
          } = this.props;
          const mobileNavShowing = isNavigationCollapsed && showMobileNavigation;
          if (mobileNavShowing && key === "Escape") {
            this.handleNavigationDismiss();
          }
        };
      }
      componentDidMount() {
        this.handleResize();
        if (this.props.globalRibbon) {
          return;
        }
        this.setGlobalRibbonRootProperty();
        this.setOffset();
      }
      componentDidUpdate(prevProps) {
        if (this.props.globalRibbon !== prevProps.globalRibbon) {
          this.setGlobalRibbonHeight();
        }
        this.setOffset();
      }
      render() {
        const {
          skipFocused,
          loadingStack,
          toastMessages,
          showContextualSaveBar
        } = this.state;
        const {
          logo,
          children,
          navigation,
          topBar,
          globalRibbon,
          showMobileNavigation = false,
          skipToContentTarget,
          i18n,
          sidebar,
          mediaQuery: {
            isNavigationCollapsed
          }
        } = this.props;
        const navClassName = classNames(styles36.Navigation, showMobileNavigation && styles36["Navigation-visible"]);
        const mobileNavHidden = isNavigationCollapsed && !showMobileNavigation;
        const mobileNavShowing = isNavigationCollapsed && showMobileNavigation;
        const tabIndex = mobileNavShowing ? 0 : -1;
        const mobileNavAttributes = {
          ...mobileNavShowing && {
            "aria-modal": true,
            role: "dialog"
          }
        };
        const navigationMarkup = navigation ? /* @__PURE__ */ import_react152.default.createElement(UseTheme, null, (theme) => /* @__PURE__ */ import_react152.default.createElement(TrapFocus, {
          trapping: mobileNavShowing
        }, /* @__PURE__ */ import_react152.default.createElement(CSSTransition_default, {
          nodeRef: this.navigationNode,
          appear: isNavigationCollapsed,
          exit: isNavigationCollapsed,
          in: showMobileNavigation,
          timeout: parseInt(theme.motion["motion-duration-300"], 10),
          classNames: navTransitionClasses
        }, /* @__PURE__ */ import_react152.default.createElement("div", Object.assign({
          key: "NavContent"
        }, mobileNavAttributes, {
          "aria-label": i18n.translate("Polaris.Frame.navigationLabel"),
          ref: this.navigationNode,
          className: navClassName,
          onKeyDown: this.handleNavKeydown,
          id: APP_FRAME_NAV,
          hidden: mobileNavHidden
        }), navigation, /* @__PURE__ */ import_react152.default.createElement("button", {
          type: "button",
          className: styles36.NavigationDismiss,
          onClick: this.handleNavigationDismiss,
          "aria-hidden": mobileNavHidden || !isNavigationCollapsed && !showMobileNavigation,
          "aria-label": i18n.translate("Polaris.Frame.Navigation.closeMobileNavigationLabel"),
          tabIndex
        }, /* @__PURE__ */ import_react152.default.createElement(Icon, {
          source: SvgXIcon
        })))))) : null;
        const loadingMarkup = loadingStack > 0 ? /* @__PURE__ */ import_react152.default.createElement("div", {
          className: styles36.LoadingBar,
          id: APP_FRAME_LOADING_BAR
        }, /* @__PURE__ */ import_react152.default.createElement(Loading, null)) : null;
        const topBarMarkup = topBar ? /* @__PURE__ */ import_react152.default.createElement("div", Object.assign({
          className: styles36.TopBar
        }, layer.props, dataPolarisTopBar.props, {
          id: APP_FRAME_TOP_BAR
        }), topBar) : null;
        const globalRibbonMarkup = globalRibbon ? /* @__PURE__ */ import_react152.default.createElement("div", {
          className: styles36.GlobalRibbonContainer,
          ref: this.setGlobalRibbonContainer
        }, globalRibbon) : null;
        const skipClassName = classNames(styles36.Skip, skipFocused && styles36.focused);
        const skipTarget = skipToContentTarget?.current ? skipToContentTarget.current.id : APP_FRAME_MAIN;
        const skipMarkup = /* @__PURE__ */ import_react152.default.createElement("div", {
          className: skipClassName
        }, /* @__PURE__ */ import_react152.default.createElement("a", {
          href: `#${skipTarget}`,
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          onClick: this.handleClick
        }, /* @__PURE__ */ import_react152.default.createElement(Text, {
          as: "span",
          variant: "bodyLg",
          fontWeight: "medium"
        }, i18n.translate("Polaris.Frame.skipToContent"))));
        const navigationAttributes = navigation ? {
          "data-has-navigation": true
        } : {};
        const frameClassName = classNames(styles36.Frame, navigation && styles36.hasNav, topBar && styles36.hasTopBar, sidebar && styles36.hasSidebar);
        const contextualSaveBarMarkup = /* @__PURE__ */ import_react152.default.createElement(CSSAnimation, {
          in: showContextualSaveBar,
          className: styles36.ContextualSaveBar,
          type: "fade"
        }, /* @__PURE__ */ import_react152.default.createElement(ContextualSaveBar, this.contextualSaveBar));
        const navigationOverlayMarkup = showMobileNavigation && isNavigationCollapsed ? /* @__PURE__ */ import_react152.default.createElement(Backdrop, {
          belowNavigation: true,
          onClick: this.handleNavigationDismiss,
          onTouchStart: this.handleNavigationDismiss
        }) : null;
        const context = {
          logo,
          showToast: this.showToast,
          hideToast: this.hideToast,
          toastMessages,
          startLoading: this.startLoading,
          stopLoading: this.stopLoading,
          setContextualSaveBar: this.setContextualSaveBar,
          removeContextualSaveBar: this.removeContextualSaveBar
        };
        return /* @__PURE__ */ import_react152.default.createElement(FrameContext.Provider, {
          value: context
        }, /* @__PURE__ */ import_react152.default.createElement("div", Object.assign({
          className: frameClassName
        }, layer.props, navigationAttributes), skipMarkup, topBarMarkup, navigationMarkup, contextualSaveBarMarkup, loadingMarkup, navigationOverlayMarkup, /* @__PURE__ */ import_react152.default.createElement("main", {
          className: styles36.Main,
          id: APP_FRAME_MAIN,
          "data-has-global-ribbon": Boolean(globalRibbon)
        }, /* @__PURE__ */ import_react152.default.createElement("div", {
          className: styles36.Content
        }, children)), /* @__PURE__ */ import_react152.default.createElement(ToastManager, {
          toastMessages
        }), globalRibbonMarkup, /* @__PURE__ */ import_react152.default.createElement(EventListener, {
          event: "resize",
          handler: this.handleResize
        })));
      }
    };
    navTransitionClasses = {
      enter: classNames(styles36["Navigation-enter"]),
      enterActive: classNames(styles36["Navigation-enterActive"]),
      enterDone: classNames(styles36["Navigation-enterActive"]),
      exit: classNames(styles36["Navigation-exit"]),
      exitActive: classNames(styles36["Navigation-exitActive"])
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.css.js
var styles43;
var init_IndexTable_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.css.js"() {
    styles43 = {
      "IndexTable": "Polaris-IndexTable",
      "IndexTableWrapper": "Polaris-IndexTable__IndexTableWrapper",
      "IndexTableWrapper-scrollBarHidden": "Polaris-IndexTable__IndexTableWrapper--scrollBarHidden",
      "IndexTableWrapperWithSelectAllActions": "Polaris-IndexTable__IndexTableWrapperWithSelectAllActions",
      "LoadingContainer-enter": "Polaris-IndexTable__LoadingContainer--enter",
      "LoadingContainer-enter-active": "Polaris-IndexTable--loadingContainerEnterActive",
      "LoadingContainer-exit": "Polaris-IndexTable__LoadingContainer--exit",
      "LoadingContainer-exit-active": "Polaris-IndexTable--loadingContainerExitActive",
      "LoadingPanel": "Polaris-IndexTable__LoadingPanel",
      "LoadingPanelRow": "Polaris-IndexTable__LoadingPanelRow",
      "LoadingPanelText": "Polaris-IndexTable__LoadingPanelText",
      "Table": "Polaris-IndexTable__Table",
      "Table-scrolling": "Polaris-IndexTable__Table--scrolling",
      "TableCell-first": "Polaris-IndexTable__TableCell--first",
      "StickyTable-scrolling": "Polaris-IndexTable__StickyTable--scrolling",
      "TableCell": "Polaris-IndexTable__TableCell",
      "TableHeading-first": "Polaris-IndexTable__TableHeading--first",
      "TableHeading-second": "Polaris-IndexTable__TableHeading--second",
      "Table-sticky": "Polaris-IndexTable__Table--sticky",
      "StickyTable": "Polaris-IndexTable__StickyTable",
      "Table-unselectable": "Polaris-IndexTable__Table--unselectable",
      "TableRow": "Polaris-IndexTable__TableRow",
      "TableRow-unclickable": "Polaris-IndexTable__TableRow--unclickable",
      "toneSuccess": "Polaris-IndexTable--toneSuccess",
      "TableRow-child": "Polaris-IndexTable__TableRow--child",
      "toneWarning": "Polaris-IndexTable--toneWarning",
      "toneCritical": "Polaris-IndexTable--toneCritical",
      "toneSubdued": "Polaris-IndexTable--toneSubdued",
      "TableRow-subheader": "Polaris-IndexTable__TableRow--subheader",
      "TableRow-selected": "Polaris-IndexTable__TableRow--selected",
      "TableRow-hovered": "Polaris-IndexTable__TableRow--hovered",
      "TableRow-disabled": "Polaris-IndexTable__TableRow--disabled",
      "ZebraStriping": "Polaris-IndexTable__ZebraStriping",
      "TableHeading": "Polaris-IndexTable__TableHeading",
      "TableHeading-flush": "Polaris-IndexTable__TableHeading--flush",
      "TableHeading-align-center": "Polaris-IndexTable--tableHeadingAlignCenter",
      "TableHeading-align-end": "Polaris-IndexTable--tableHeadingAlignEnd",
      "TableHeading-extra-padding-right": "Polaris-IndexTable--tableHeadingExtraPaddingRight",
      "TableHeading-sortable": "Polaris-IndexTable__TableHeading--sortable",
      "TableHeadingSortButton": "Polaris-IndexTable__TableHeadingSortButton",
      "TableHeadingSortIcon": "Polaris-IndexTable__TableHeadingSortIcon",
      "TableHeadingSortButton-heading-align-end": "Polaris-IndexTable--tableHeadingSortButtonHeadingAlignEnd",
      "TableHeadingSortButton-heading-align-end-currently-sorted": "Polaris-IndexTable--tableHeadingSortButtonHeadingAlignEndCurrentlySorted",
      "TableHeadingSortIcon-heading-align-end": "Polaris-IndexTable--tableHeadingSortIconHeadingAlignEnd",
      "TableHeadingSortButton-heading-align-end-previously-sorted": "Polaris-IndexTable--tableHeadingSortButtonHeadingAlignEndPreviouslySorted",
      "right-aligned-sort-button-slide-out": "Polaris-IndexTable--rightAlignedSortButtonSlideOut",
      "reveal-right-aligned-sort-button-icon": "Polaris-IndexTable--revealRightAlignedSortButtonIcon",
      "TableHeadingUnderline": "Polaris-IndexTable__TableHeadingUnderline",
      "TableHeadingTooltipUnderlinePlaceholder": "Polaris-IndexTable__TableHeadingTooltipUnderlinePlaceholder",
      "TableHeadingSortIcon-visible": "Polaris-IndexTable__TableHeadingSortIcon--visible",
      "TableHeadingSortSvg": "Polaris-IndexTable__TableHeadingSortSvg",
      "SortableTableHeadingWithCustomMarkup": "Polaris-IndexTable__SortableTableHeadingWithCustomMarkup",
      "SortableTableHeaderWrapper": "Polaris-IndexTable__SortableTableHeaderWrapper",
      "ColumnHeaderCheckboxWrapper": "Polaris-IndexTable__ColumnHeaderCheckboxWrapper",
      "FirstStickyHeaderElement": "Polaris-IndexTable__FirstStickyHeaderElement",
      "TableHeading-unselectable": "Polaris-IndexTable__TableHeading--unselectable",
      "TableCell-flush": "Polaris-IndexTable__TableCell--flush",
      "Table-sticky-scrolling": "Polaris-IndexTable--tableStickyScrolling",
      "StickyTableHeader-sticky-scrolling": "Polaris-IndexTable--stickyTableHeaderStickyScrolling",
      "TableHeading-last": "Polaris-IndexTable__TableHeading--last",
      "Table-sticky-last": "Polaris-IndexTable--tableStickyLast",
      "StickyTableHeader-sticky-last": "Polaris-IndexTable--stickyTableHeaderStickyLast",
      "Table-sortable": "Polaris-IndexTable__Table--sortable",
      "StickyTableHeader": "Polaris-IndexTable__StickyTableHeader",
      "StickyTableHeader-isSticky": "Polaris-IndexTable__StickyTableHeader--isSticky",
      "StickyTableHeadings": "Polaris-IndexTable__StickyTableHeadings",
      "StickyTableHeading-second": "Polaris-IndexTable__StickyTableHeading--second",
      "unselectable": "Polaris-IndexTable--unselectable",
      "StickyTableHeading-second-scrolling": "Polaris-IndexTable--stickyTableHeadingSecondScrolling",
      "ScrollLeft": "Polaris-IndexTable__ScrollLeft",
      "ScrollRight": "Polaris-IndexTable__ScrollRight",
      "ScrollRight-onboarding": "Polaris-IndexTable__ScrollRight--onboarding",
      "SelectAllActionsWrapper": "Polaris-IndexTable__SelectAllActionsWrapper",
      "SelectAllActionsWrapperWithPagination": "Polaris-IndexTable__SelectAllActionsWrapperWithPagination",
      "SelectAllActionsWrapperSticky": "Polaris-IndexTable__SelectAllActionsWrapperSticky",
      "SelectAllActionsWrapperAtEnd": "Polaris-IndexTable__SelectAllActionsWrapperAtEnd",
      "SelectAllActionsWrapperAtEndAppear": "Polaris-IndexTable__SelectAllActionsWrapperAtEndAppear",
      "BulkActionsWrapper": "Polaris-IndexTable__BulkActionsWrapper",
      "BulkActionsWrapperVisible": "Polaris-IndexTable__BulkActionsWrapperVisible",
      "PaginationWrapper": "Polaris-IndexTable__PaginationWrapper",
      "PaginationWrapperScrolledPastTop": "Polaris-IndexTable__PaginationWrapperScrolledPastTop",
      "ScrollBarContainer": "Polaris-IndexTable__ScrollBarContainer",
      "ScrollBarContainerWithPagination": "Polaris-IndexTable__ScrollBarContainerWithPagination",
      "ScrollBarContainerScrolledPastTop": "Polaris-IndexTable__ScrollBarContainerScrolledPastTop",
      "ScrollBarContainerWithSelectAllActions": "Polaris-IndexTable__ScrollBarContainerWithSelectAllActions",
      "ScrollBarContainerSelectAllActionsSticky": "Polaris-IndexTable__ScrollBarContainerSelectAllActionsSticky",
      "scrollBarContainerCondensed": "Polaris-IndexTable--scrollBarContainerCondensed",
      "scrollBarContainerHidden": "Polaris-IndexTable--scrollBarContainerHidden",
      "ScrollBar": "Polaris-IndexTable__ScrollBar",
      "disableTextSelection": "Polaris-IndexTable--disableTextSelection",
      "EmptySearchResultWrapper": "Polaris-IndexTable__EmptySearchResultWrapper",
      "condensedRow": "Polaris-IndexTable--condensedRow",
      "CondensedList": "Polaris-IndexTable__CondensedList",
      "HeaderWrapper": "Polaris-IndexTable__HeaderWrapper",
      "StickyTable-condensed": "Polaris-IndexTable__StickyTable--condensed",
      "StickyTableHeader-condensed": "Polaris-IndexTable__StickyTableHeader--condensed",
      "ScrollBarContent": "Polaris-IndexTable__ScrollBarContent"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/types.js
var SELECT_ALL_ITEMS, SelectionType;
var init_types3 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/index-provider/types.js"() {
    SELECT_ALL_ITEMS = "All";
    (function(SelectionType3) {
      SelectionType3["All"] = "all";
      SelectionType3["Page"] = "page";
      SelectionType3["Multi"] = "multi";
      SelectionType3["Single"] = "single";
      SelectionType3["Range"] = "range";
    })(SelectionType || (SelectionType = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/context.js
var import_react153, IndexContext, IndexSelectionChangeContext, IndexRowContext;
var init_context13 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/index-provider/context.js"() {
    import_react153 = __toESM(require_react());
    IndexContext = /* @__PURE__ */ (0, import_react153.createContext)(void 0);
    IndexSelectionChangeContext = /* @__PURE__ */ (0, import_react153.createContext)(void 0);
    IndexRowContext = /* @__PURE__ */ (0, import_react153.createContext)(void 0);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/index-provider/hooks.js
function useIndexSelectionChange() {
  const onSelectionChange = (0, import_react154.useContext)(IndexSelectionChangeContext);
  if (!onSelectionChange) {
    throw new Error(`Missing IndexProvider context`);
  }
  return onSelectionChange;
}
function useIndexRow() {
  const indexRow = (0, import_react154.useContext)(IndexRowContext);
  if (!indexRow) {
    throw new Error(`Missing IndexProvider context`);
  }
  return indexRow;
}
function useIndexValue() {
  const index = (0, import_react154.useContext)(IndexContext);
  if (!index) {
    throw new Error(`Missing IndexProvider context`);
  }
  return index;
}
function useBulkSelectionData({
  selectedItemsCount,
  itemCount,
  hasMoreItems,
  resourceName: passedResourceName,
  defaultPaginatedSelectAllText
}) {
  const i18n = useI18n();
  const selectable = Boolean(selectedItemsCount);
  const selectMode = selectedItemsCount === "All" || selectedItemsCount > 0;
  const defaultResourceName = {
    singular: i18n.translate("Polaris.IndexProvider.defaultItemSingular"),
    plural: i18n.translate("Polaris.IndexProvider.defaultItemPlural")
  };
  const resourceName = passedResourceName ? passedResourceName : defaultResourceName;
  const paginatedSelectAllText = getPaginatedSelectAllText();
  const bulkActionsLabel = getBulkActionsLabel();
  const bulkActionsAccessibilityLabel = getBulkActionsAccessibilityLabel();
  let bulkSelectState = "indeterminate";
  if (!selectedItemsCount || selectedItemsCount === 0) {
    bulkSelectState = void 0;
  } else if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount === itemCount) {
    bulkSelectState = true;
  }
  return {
    paginatedSelectAllText,
    bulkActionsLabel,
    bulkActionsAccessibilityLabel,
    resourceName,
    selectMode,
    bulkSelectState,
    selectable
  };
  function getPaginatedSelectAllText() {
    if (!selectable || !hasMoreItems) {
      return;
    }
    if (selectedItemsCount === SELECT_ALL_ITEMS) {
      if (defaultPaginatedSelectAllText) {
        return defaultPaginatedSelectAllText;
      }
      return i18n.translate("Polaris.IndexProvider.allItemsSelected", {
        itemsLength: itemCount,
        resourceNamePlural: resourceName.plural.toLocaleLowerCase()
      });
    }
  }
  function getBulkActionsLabel() {
    const selectedItemsCountLabel = selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount;
    return i18n.translate("Polaris.IndexProvider.selected", {
      selectedItemsCount: selectedItemsCountLabel
    });
  }
  function getBulkActionsAccessibilityLabel() {
    const totalItemsCount = itemCount;
    const allSelected = selectedItemsCount === totalItemsCount;
    if (totalItemsCount === 1 && allSelected) {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxDeselectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (totalItemsCount === 1) {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxSelectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (allSelected) {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxDeselectAllMultiple", {
        itemsLength: itemCount,
        resourceNamePlural: resourceName.plural
      });
    } else {
      return i18n.translate("Polaris.IndexProvider.a11yCheckboxSelectAllMultiple", {
        itemsLength: itemCount,
        resourceNamePlural: resourceName.plural
      });
    }
  }
}
function useHandleBulkSelection({
  onSelectionChange = () => {
  }
}) {
  const lastSelected = (0, import_react154.useRef)(null);
  const handleSelectionChange = (0, import_react154.useCallback)((selectionType, toggleType, selection, sortOrder) => {
    const prevSelected = lastSelected.current;
    if (SelectionType.Multi && typeof sortOrder === "number") {
      lastSelected.current = sortOrder;
    }
    if (selectionType === SelectionType.Single || selectionType === SelectionType.Multi && (typeof prevSelected !== "number" || typeof sortOrder !== "number")) {
      onSelectionChange(SelectionType.Single, toggleType, selection);
    } else if (selectionType === SelectionType.Multi) {
      const min = Math.min(prevSelected, sortOrder);
      const max = Math.max(prevSelected, sortOrder);
      onSelectionChange(selectionType, toggleType, [min, max]);
    } else if (selectionType === SelectionType.Page || selectionType === SelectionType.All) {
      onSelectionChange(selectionType, toggleType);
    } else if (selectionType === SelectionType.Range) {
      onSelectionChange(SelectionType.Range, toggleType, selection);
    }
  }, [onSelectionChange]);
  return handleSelectionChange;
}
var import_react154;
var init_hooks9 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/index-provider/hooks.js"() {
    import_react154 = __toESM(require_react());
    init_types3();
    init_context13();
    init_hooks2();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexProvider/IndexProvider.js
function IndexProvider({
  children,
  resourceName: passedResourceName,
  loading,
  onSelectionChange,
  selectedItemsCount = 0,
  itemCount,
  hasMoreItems,
  condensed,
  selectable: isSelectableIndex = true,
  paginatedSelectAllText: defaultPaginatedSelectAllText
}) {
  const {
    paginatedSelectAllText,
    bulkActionsLabel,
    bulkActionsAccessibilityLabel,
    resourceName,
    selectMode,
    bulkSelectState
  } = useBulkSelectionData({
    selectedItemsCount,
    itemCount,
    hasMoreItems,
    resourceName: passedResourceName,
    defaultPaginatedSelectAllText
  });
  const handleSelectionChange = useHandleBulkSelection({
    onSelectionChange
  });
  const contextValue = (0, import_react155.useMemo)(() => ({
    itemCount,
    selectMode: selectMode && isSelectableIndex,
    selectable: isSelectableIndex,
    resourceName,
    loading,
    paginatedSelectAllText,
    hasMoreItems,
    bulkActionsLabel,
    bulkActionsAccessibilityLabel,
    bulkSelectState,
    selectedItemsCount,
    condensed
  }), [itemCount, selectMode, isSelectableIndex, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);
  const rowContextValue = (0, import_react155.useMemo)(() => ({
    selectable: isSelectableIndex,
    selectMode: selectMode && isSelectableIndex,
    condensed
  }), [condensed, selectMode, isSelectableIndex]);
  return /* @__PURE__ */ import_react155.default.createElement(IndexContext.Provider, {
    value: contextValue
  }, /* @__PURE__ */ import_react155.default.createElement(IndexRowContext.Provider, {
    value: rowContextValue
  }, /* @__PURE__ */ import_react155.default.createElement(IndexSelectionChangeContext.Provider, {
    value: handleSelectionChange
  }, children)));
}
var import_react155;
var init_IndexProvider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexProvider/IndexProvider.js"() {
    import_react155 = __toESM(require_react());
    init_hooks9();
    init_context13();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Cell/Cell.js
var import_react156, Cell;
var init_Cell = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Cell/Cell.js"() {
    import_react156 = __toESM(require_react());
    init_css();
    init_IndexTable_css();
    Cell = /* @__PURE__ */ (0, import_react156.memo)(function Cell2({
      children,
      className: customClassName,
      flush,
      colSpan,
      headers,
      scope,
      as = "td",
      id
    }) {
      const className = classNames(customClassName, styles43.TableCell, flush && styles43["TableCell-flush"]);
      return /* @__PURE__ */ import_react156.default.createElement(as, {
        id,
        colSpan,
        headers,
        scope,
        className
      }, children);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.css.js
var styles44;
var init_Checkbox_css2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.css.js"() {
    styles44 = {
      "TableCellContentContainer": "Polaris-IndexTable-Checkbox__TableCellContentContainer",
      "Wrapper": "Polaris-IndexTable-Checkbox__Wrapper"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/index-table/context.js
var import_react157, RowContext, RowHoveredContext, scrollDefaultContext, ScrollContext;
var init_context14 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/index-table/context.js"() {
    import_react157 = __toESM(require_react());
    RowContext = /* @__PURE__ */ (0, import_react157.createContext)({});
    RowHoveredContext = /* @__PURE__ */ (0, import_react157.createContext)(void 0);
    scrollDefaultContext = {
      scrollableContainer: null,
      canScrollLeft: false,
      canScrollRight: false
    };
    ScrollContext = /* @__PURE__ */ (0, import_react157.createContext)(scrollDefaultContext);
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.js
function CheckboxWrapper({
  children
}) {
  const {
    position
  } = (0, import_react158.useContext)(RowContext);
  const checkboxNode = (0, import_react158.useRef)(null);
  const handleResize = (0, import_react158.useCallback)(debounce(() => {
    if (position !== 0 || !checkboxNode.current)
      return;
    const {
      width: width2
    } = checkboxNode.current.getBoundingClientRect();
    setRootProperty("--pc-checkbox-offset", `${width2}px`);
  }), [position]);
  (0, import_react158.useEffect)(() => {
    handleResize();
  }, [handleResize]);
  (0, import_react158.useEffect)(() => {
    if (!checkboxNode.current)
      return;
    window.addEventListener("resize", handleResize);
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, [handleResize]);
  const checkboxClassName = classNames(styles43.TableCell, styles43["TableCell-first"]);
  return /* @__PURE__ */ import_react158.default.createElement("td", {
    className: checkboxClassName,
    ref: checkboxNode
  }, children);
}
function noop7() {
}
var import_react158, Checkbox3;
var init_Checkbox2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Checkbox/Checkbox.js"() {
    import_react158 = __toESM(require_react());
    init_debounce();
    init_css();
    init_set_root_property();
    init_IndexTable_css();
    init_Checkbox_css2();
    init_hooks9();
    init_context14();
    init_hooks2();
    init_Checkbox();
    Checkbox3 = /* @__PURE__ */ (0, import_react158.memo)(function Checkbox4({
      accessibilityLabel
    }) {
      const i18n = useI18n();
      const {
        resourceName
      } = useIndexValue();
      const {
        itemId,
        selected,
        disabled,
        onInteraction
      } = (0, import_react158.useContext)(RowContext);
      const label = accessibilityLabel ? accessibilityLabel : i18n.translate("Polaris.IndexTable.selectItem", {
        resourceName: resourceName.singular
      });
      return /* @__PURE__ */ import_react158.default.createElement(CheckboxWrapper, null, /* @__PURE__ */ import_react158.default.createElement("div", {
        className: styles44.TableCellContentContainer
      }, /* @__PURE__ */ import_react158.default.createElement("div", {
        className: styles44.Wrapper,
        onClick: onInteraction,
        onKeyUp: noop7
      }, /* @__PURE__ */ import_react158.default.createElement(Checkbox, {
        id: `Select-${itemId}`,
        label,
        labelHidden: true,
        checked: selected,
        disabled
      }))));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Row/Row.js
var import_react159, Row;
var init_Row = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/components/Row/Row.js"() {
    import_react159 = __toESM(require_react());
    init_use_toggle();
    init_css();
    init_IndexTable_css();
    init_hooks9();
    init_types3();
    init_Checkbox2();
    init_context14();
    Row = /* @__PURE__ */ (0, import_react159.memo)(function Row2({
      children,
      selected,
      id,
      position,
      tone,
      disabled,
      selectionRange,
      rowType = "data",
      accessibilityLabel,
      onNavigation,
      onClick
    }) {
      const {
        selectable,
        selectMode,
        condensed
      } = useIndexRow();
      const onSelectionChange = useIndexSelectionChange();
      const {
        value: hovered,
        setTrue: setHoverIn,
        setFalse: setHoverOut
      } = useToggle(false);
      const handleInteraction = (0, import_react159.useCallback)((event) => {
        event.stopPropagation();
        let selectionType = SelectionType.Single;
        if ("key" in event && event.key !== " " || !onSelectionChange)
          return;
        if (event.nativeEvent.shiftKey) {
          selectionType = SelectionType.Multi;
        } else if (selectionRange) {
          selectionType = SelectionType.Range;
        }
        const selection = selectionRange ?? id;
        onSelectionChange(selectionType, !selected, selection, position);
      }, [id, onSelectionChange, selected, selectionRange, position]);
      const contextValue = (0, import_react159.useMemo)(() => ({
        itemId: id,
        selected,
        position,
        onInteraction: handleInteraction,
        disabled
      }), [id, selected, disabled, position, handleInteraction]);
      const primaryLinkElement = (0, import_react159.useRef)(null);
      const isNavigating = (0, import_react159.useRef)(false);
      const tableRowRef = (0, import_react159.useRef)(null);
      const tableRowCallbackRef = (0, import_react159.useCallback)((node) => {
        tableRowRef.current = node;
        const el = node?.querySelector("[data-primary-link]");
        if (el) {
          primaryLinkElement.current = el;
        }
      }, []);
      const rowClassName = classNames(styles43.TableRow, rowType === "subheader" && styles43["TableRow-subheader"], rowType === "child" && styles43["TableRow-child"], selectable && condensed && styles43.condensedRow, selected && styles43["TableRow-selected"], hovered && !condensed && styles43["TableRow-hovered"], disabled && styles43["TableRow-disabled"], tone && styles43[variationName("tone", tone)], !selectable && !onClick && !primaryLinkElement.current && styles43["TableRow-unclickable"]);
      let handleRowClick;
      if (!disabled && selectable || onClick || primaryLinkElement.current) {
        handleRowClick = (event) => {
          if (rowType === "subheader")
            return;
          if (!tableRowRef.current || isNavigating.current) {
            return;
          }
          event.stopPropagation();
          event.preventDefault();
          if (onClick) {
            onClick();
            return;
          }
          if (primaryLinkElement.current && !selectMode) {
            isNavigating.current = true;
            const {
              ctrlKey,
              metaKey
            } = event.nativeEvent;
            if (onNavigation) {
              onNavigation(id);
            }
            if ((ctrlKey || metaKey) && primaryLinkElement.current instanceof HTMLAnchorElement) {
              isNavigating.current = false;
              window.open(primaryLinkElement.current.href, "_blank");
              return;
            }
            primaryLinkElement.current.dispatchEvent(new MouseEvent(event.type, event.nativeEvent));
          } else {
            isNavigating.current = false;
            handleInteraction(event);
          }
        };
      }
      const RowWrapper = condensed ? "li" : "tr";
      const checkboxMarkup = selectable ? /* @__PURE__ */ import_react159.default.createElement(Checkbox3, {
        accessibilityLabel
      }) : null;
      return /* @__PURE__ */ import_react159.default.createElement(RowContext.Provider, {
        value: contextValue
      }, /* @__PURE__ */ import_react159.default.createElement(RowHoveredContext.Provider, {
        value: hovered
      }, /* @__PURE__ */ import_react159.default.createElement(RowWrapper, {
        key: id,
        id,
        className: rowClassName,
        onMouseEnter: setHoverIn,
        onMouseLeave: setHoverOut,
        onClick: handleRowClick,
        ref: tableRowCallbackRef
      }, checkboxMarkup, children)));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/utilities/utilities.js
function getTableHeadingsBySelector(wrapperElement, selector) {
  return wrapperElement ? Array.from(wrapperElement.querySelectorAll(selector)) : [];
}
var init_utilities = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/utilities/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/illustrations/empty-search.svg.js
var img, emptySearch;
var init_empty_search_svg = __esm({
  "node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/illustrations/empty-search.svg.js"() {
    img = "data:image/svg+xml,%3csvg width='60' height='60' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' d='M41.87 24a17.87 17.87 0 11-35.74 0 17.87 17.87 0 0135.74 0zm-3.15 18.96a24 24 0 114.24-4.24L59.04 54.8a3 3 0 11-4.24 4.24L38.72 42.96z' fill='%238C9196'/%3e%3c/svg%3e";
    emptySearch = img;
  }
});

// node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/EmptySearchResult.js
function EmptySearchResult({
  title,
  description,
  withIllustration
}) {
  const i18n = useI18n();
  const altText = i18n.translate("Polaris.EmptySearchResult.altText");
  const descriptionMarkup = description ? /* @__PURE__ */ import_react160.default.createElement("p", null, description) : null;
  const illustrationMarkup = withIllustration ? /* @__PURE__ */ import_react160.default.createElement(Image, {
    alt: altText,
    source: emptySearch,
    draggable: false
  }) : null;
  return /* @__PURE__ */ import_react160.default.createElement(LegacyStack, {
    alignment: "center",
    vertical: true
  }, illustrationMarkup, /* @__PURE__ */ import_react160.default.createElement(Text, {
    variant: "headingLg",
    as: "p"
  }, title), /* @__PURE__ */ import_react160.default.createElement(Text, {
    tone: "subdued",
    as: "span"
  }, descriptionMarkup));
}
var import_react160;
var init_EmptySearchResult = __esm({
  "node_modules/@shopify/polaris/build/esm/components/EmptySearchResult/EmptySearchResult.js"() {
    import_react160 = __toESM(require_react());
    init_empty_search_svg();
    init_hooks2();
    init_LegacyStack();
    init_Text();
    init_Image();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.css.js
var styles45;
var init_ScrollContainer_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.css.js"() {
    styles45 = {
      "ScrollContainer": "Polaris-IndexTable-ScrollContainer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.js
function ScrollContainer({
  children,
  scrollableContainerRef,
  onScroll
}) {
  (0, import_react161.useEffect)(() => {
    if (!scrollableContainerRef.current)
      return;
    scrollableContainerRef.current.dispatchEvent(new Event("scroll"));
  }, [scrollableContainerRef]);
  const [containerScroll, setContainerScroll] = (0, import_react161.useState)(scrollDefaultContext);
  const handleScroll = (0, import_react161.useCallback)(debounce(() => {
    if (!scrollableContainerRef.current) {
      return;
    }
    const availableScrollAmount = scrollableContainerRef.current.scrollWidth - scrollableContainerRef.current.offsetWidth;
    const canScrollLeft = scrollableContainerRef.current.scrollLeft > 0;
    const canScrollRight = scrollableContainerRef.current.scrollLeft < availableScrollAmount;
    onScroll(canScrollLeft, canScrollRight);
    setContainerScroll({
      scrollableContainer: scrollableContainerRef.current,
      canScrollLeft,
      canScrollRight
    });
  }, 40, {
    trailing: true,
    leading: true,
    maxWait: 40
  }), [onScroll, scrollableContainerRef]);
  return /* @__PURE__ */ import_react161.default.createElement(ScrollContext.Provider, {
    value: containerScroll
  }, /* @__PURE__ */ import_react161.default.createElement("div", {
    className: styles45.ScrollContainer,
    ref: scrollableContainerRef,
    onScroll: handleScroll
  }, children));
}
var import_react161;
var init_ScrollContainer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/components/ScrollContainer/ScrollContainer.js"() {
    import_react161 = __toESM(require_react());
    init_debounce();
    init_ScrollContainer_css();
    init_context14();
  }
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/utilities.js
function getVisibleAndHiddenActionsIndices(promotedActions = [], disclosureWidth, actionsWidths, containerWidth) {
  const sumTabWidths = actionsWidths.reduce((sum, width2) => sum + width2, 0);
  const arrayOfPromotedActionsIndices = promotedActions.map((_, index) => {
    return index;
  });
  const visiblePromotedActions = [];
  const hiddenPromotedActions = [];
  if (containerWidth > sumTabWidths) {
    visiblePromotedActions.push(...arrayOfPromotedActionsIndices);
  } else {
    let accumulatedWidth = 0;
    let hasReturned = false;
    arrayOfPromotedActionsIndices.forEach((currentPromotedActionsIndex) => {
      const currentActionsWidth = actionsWidths[currentPromotedActionsIndex];
      const notEnoughSpace = accumulatedWidth + currentActionsWidth >= containerWidth - disclosureWidth;
      if (notEnoughSpace || hasReturned) {
        hiddenPromotedActions.push(currentPromotedActionsIndex);
        hasReturned = true;
        return;
      }
      visiblePromotedActions.push(currentPromotedActionsIndex);
      accumulatedWidth += currentActionsWidth;
    });
  }
  return {
    visiblePromotedActions,
    hiddenPromotedActions
  };
}
function instanceOfBulkActionListSectionArray(actions) {
  const validList = actions.filter((action) => {
    return action.items;
  });
  return actions.length === validList.length;
}
function instanceOfBulkActionArray(actions) {
  const validList = actions.filter((action) => {
    return !action.items;
  });
  return actions.length === validList.length;
}
function instanceOfMenuGroupDescriptor(action) {
  return "title" in action && "actions" in action;
}
function instanceOfBulkActionListSection(action) {
  return "items" in action;
}
function getActionSections(actions) {
  if (!actions || actions.length === 0) {
    return;
  }
  if (instanceOfBulkActionListSectionArray(actions)) {
    return actions;
  }
  if (instanceOfBulkActionArray(actions)) {
    return [{
      items: actions
    }];
  }
}
function isNewBadgeInBadgeActions(actionSections) {
  if (!actionSections)
    return false;
  for (const action of actionSections) {
    for (const item of action.items) {
      if (item.badge?.tone === "new")
        return true;
    }
  }
  return false;
}
var init_utilities2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BulkActions/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.css.js
var styles46;
var init_BulkActions_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.css.js"() {
    styles46 = {
      "BulkActionsOuterLayout": "Polaris-BulkActions__BulkActionsOuterLayout",
      "BulkActionsSelectAllWrapper": "Polaris-BulkActions__BulkActionsSelectAllWrapper",
      "BulkActionsPromotedActionsWrapper": "Polaris-BulkActions__BulkActionsPromotedActionsWrapper",
      "BulkActionsLayout": "Polaris-BulkActions__BulkActionsLayout",
      "BulkActionsLayout--measuring": "Polaris-BulkActions--bulkActionsLayoutMeasuring",
      "BulkActionsMeasurerLayout": "Polaris-BulkActions__BulkActionsMeasurerLayout",
      "BulkActionButton": "Polaris-BulkActions__BulkActionButton",
      "disabled": "Polaris-BulkActions--disabled",
      "AllAction": "Polaris-BulkActions__AllAction"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.css.js
var styles47;
var init_Indicator_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.css.js"() {
    styles47 = {
      "Indicator": "Polaris-Indicator",
      "pulseIndicator": "Polaris-Indicator--pulseIndicator"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.js
function Indicator({
  pulse = true
}) {
  const className = classNames(styles47.Indicator, pulse && styles47.pulseIndicator);
  return /* @__PURE__ */ import_react162.default.createElement("span", {
    className
  });
}
var import_react162;
var init_Indicator = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Indicator/Indicator.js"() {
    import_react162 = __toESM(require_react());
    init_css();
    init_Indicator_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionButton/BulkActionButton.js
function BulkActionButton({
  handleMeasurement,
  url,
  external,
  onAction,
  content,
  disclosure,
  accessibilityLabel,
  disabled,
  destructive,
  indicator,
  showContentInButton,
  size: size2
}) {
  const bulkActionButton = (0, import_react163.useRef)(null);
  useComponentDidMount(() => {
    if (handleMeasurement && bulkActionButton.current) {
      const width2 = bulkActionButton.current.getBoundingClientRect().width;
      handleMeasurement(width2);
    }
  });
  const isActivatorForMoreActionsPopover = disclosure && !showContentInButton;
  const buttonContent = isActivatorForMoreActionsPopover ? void 0 : content;
  const buttonMarkup = /* @__PURE__ */ import_react163.default.createElement(Button, {
    external,
    url,
    accessibilityLabel: isActivatorForMoreActionsPopover ? content : accessibilityLabel,
    tone: destructive ? "critical" : void 0,
    disclosure: disclosure && showContentInButton,
    onClick: onAction,
    disabled,
    size: size2,
    icon: isActivatorForMoreActionsPopover ? /* @__PURE__ */ import_react163.default.createElement(Icon, {
      source: SvgMenuHorizontalIcon,
      tone: "base"
    }) : void 0
  }, buttonContent);
  return /* @__PURE__ */ import_react163.default.createElement("div", {
    className: styles46.BulkActionButton,
    ref: bulkActionButton
  }, isActivatorForMoreActionsPopover ? /* @__PURE__ */ import_react163.default.createElement(Tooltip, {
    content,
    preferredPosition: "below"
  }, buttonMarkup) : buttonMarkup, indicator && /* @__PURE__ */ import_react163.default.createElement(Indicator, null));
}
var import_react163;
var init_BulkActionButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionButton/BulkActionButton.js"() {
    import_react163 = __toESM(require_react());
    init_dist();
    init_use_component_did_mount();
    init_BulkActions_css();
    init_Indicator();
    init_Tooltip();
    init_Button();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionMenu/BulkActionMenu.js
function BulkActionMenu({
  title,
  actions,
  isNewBadgeInBadgeActions: isNewBadgeInBadgeActions2,
  size: size2
}) {
  const {
    value: isVisible,
    toggle: toggleMenuVisibility
  } = useToggle(false);
  return /* @__PURE__ */ import_react164.default.createElement(import_react164.default.Fragment, null, /* @__PURE__ */ import_react164.default.createElement(Popover2, {
    active: isVisible,
    activator: /* @__PURE__ */ import_react164.default.createElement(BulkActionButton, {
      disclosure: true,
      showContentInButton: true,
      onAction: toggleMenuVisibility,
      content: title,
      indicator: isNewBadgeInBadgeActions2,
      size: size2
    }),
    onClose: toggleMenuVisibility,
    preferInputActivator: true
  }, /* @__PURE__ */ import_react164.default.createElement(ActionList, {
    items: actions,
    onActionAnyItem: toggleMenuVisibility
  })));
}
var import_react164;
var init_BulkActionMenu = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionMenu/BulkActionMenu.js"() {
    import_react164 = __toESM(require_react());
    init_use_toggle();
    init_BulkActionButton();
    init_Popover();
    init_ActionList();
  }
});

// node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.css.js
var styles48;
var init_CheckableButton_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.css.js"() {
    styles48 = {
      "CheckableButton": "Polaris-CheckableButton",
      "Checkbox": "Polaris-CheckableButton__Checkbox",
      "Label": "Polaris-CheckableButton__Label"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js
var import_react165, CheckableButton;
var init_CheckableButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js"() {
    import_react165 = __toESM(require_react());
    init_CheckableButton_css();
    init_Checkbox();
    init_Text();
    CheckableButton = /* @__PURE__ */ (0, import_react165.forwardRef)(function CheckableButton2({
      accessibilityLabel,
      label = "",
      onToggleAll,
      selected,
      disabled,
      ariaLive
    }, ref) {
      const checkBoxRef = (0, import_react165.useRef)(null);
      function focus() {
        checkBoxRef?.current?.focus();
      }
      (0, import_react165.useImperativeHandle)(ref, () => {
        return {
          focus
        };
      });
      return /* @__PURE__ */ import_react165.default.createElement("div", {
        className: styles48.CheckableButton,
        onClick: onToggleAll
      }, /* @__PURE__ */ import_react165.default.createElement("div", {
        className: styles48.Checkbox
      }, /* @__PURE__ */ import_react165.default.createElement(Checkbox, {
        label: accessibilityLabel,
        labelHidden: true,
        checked: selected,
        disabled,
        onChange: onToggleAll,
        ref: checkBoxRef
      })), label ? /* @__PURE__ */ import_react165.default.createElement("span", {
        className: styles48.Label,
        "aria-live": ariaLive
      }, /* @__PURE__ */ import_react165.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        fontWeight: "medium"
      }, label)) : null);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionsMeasurer/BulkActionsMeasurer.js
function BulkActionsMeasurer({
  promotedActions = [],
  disabled,
  buttonSize,
  handleMeasurement: handleMeasurementProp
}) {
  const i18n = useI18n();
  const containerNode = (0, import_react166.useRef)(null);
  const activatorLabel = i18n.translate("Polaris.ResourceList.BulkActions.moreActionsActivatorLabel");
  const activator = /* @__PURE__ */ import_react166.default.createElement(BulkActionButton, {
    disclosure: true,
    content: activatorLabel
  });
  const handleMeasurement = (0, import_react166.useCallback)(() => {
    if (!containerNode.current) {
      return;
    }
    const containerWidth = containerNode.current.offsetWidth;
    const hiddenActionNodes = containerNode.current.children;
    const hiddenActionNodesArray = Array.from(hiddenActionNodes);
    const hiddenActionsWidths = hiddenActionNodesArray.map((node) => {
      const buttonWidth = Math.ceil(node.getBoundingClientRect().width);
      return buttonWidth + ACTION_SPACING;
    });
    const disclosureWidth = hiddenActionsWidths.pop() || 0;
    handleMeasurementProp({
      containerWidth,
      disclosureWidth,
      hiddenActionsWidths
    });
  }, [handleMeasurementProp]);
  (0, import_react166.useEffect)(() => {
    handleMeasurement();
  }, [handleMeasurement, promotedActions]);
  const promotedActionsMarkup = promotedActions.map((action, index) => {
    if (instanceOfMenuGroupDescriptor(action)) {
      return /* @__PURE__ */ import_react166.default.createElement(BulkActionButton, {
        key: index,
        disclosure: true,
        showContentInButton: true,
        content: action.title,
        size: buttonSize
      });
    }
    return /* @__PURE__ */ import_react166.default.createElement(BulkActionButton, Object.assign({
      key: index,
      disabled
    }, action, {
      size: buttonSize
    }));
  });
  useEventListener("resize", handleMeasurement);
  return /* @__PURE__ */ import_react166.default.createElement("div", {
    className: styles46.BulkActionsMeasurerLayout,
    ref: containerNode
  }, promotedActionsMarkup, activator);
}
var import_react166, ACTION_SPACING;
var init_BulkActionsMeasurer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BulkActions/components/BulkActionsMeasurer/BulkActionsMeasurer.js"() {
    import_react166 = __toESM(require_react());
    init_use_event_listener();
    init_BulkActions_css();
    init_utilities2();
    init_hooks2();
    init_BulkActionButton();
    ACTION_SPACING = 4;
  }
});

// node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js
var import_react167, BulkActions;
var init_BulkActions = __esm({
  "node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js"() {
    import_react167 = __toESM(require_react());
    init_css();
    init_utilities2();
    init_BulkActions_css();
    init_BulkActionMenu();
    init_CheckableButton();
    init_BulkActionsMeasurer();
    init_hooks2();
    init_UnstyledButton();
    init_Text();
    init_BulkActionButton();
    init_Popover();
    init_ActionList();
    init_InlineStack();
    BulkActions = /* @__PURE__ */ (0, import_react167.forwardRef)(function BulkActions2({
      promotedActions,
      actions,
      disabled,
      buttonSize,
      paginatedSelectAllAction,
      paginatedSelectAllText,
      label,
      accessibilityLabel,
      selected,
      onToggleAll,
      onMoreActionPopoverToggle,
      width: width2,
      selectMode
    }, ref) {
      const i18n = useI18n();
      const [popoverActive, setPopoverActive] = (0, import_react167.useState)(false);
      const [state, setState] = (0, import_react167.useReducer)((data, partialData) => {
        return {
          ...data,
          ...partialData
        };
      }, {
        disclosureWidth: 0,
        containerWidth: Infinity,
        actionsWidths: [],
        visiblePromotedActions: [],
        hiddenPromotedActions: [],
        hasMeasured: false
      });
      const {
        visiblePromotedActions,
        hiddenPromotedActions,
        containerWidth,
        disclosureWidth,
        actionsWidths,
        hasMeasured
      } = state;
      (0, import_react167.useEffect)(() => {
        if (containerWidth === 0 || !promotedActions || promotedActions.length === 0) {
          return;
        }
        const {
          visiblePromotedActions: visiblePromotedActions2,
          hiddenPromotedActions: hiddenPromotedActions2
        } = getVisibleAndHiddenActionsIndices(promotedActions, disclosureWidth, actionsWidths, containerWidth);
        setState({
          visiblePromotedActions: visiblePromotedActions2,
          hiddenPromotedActions: hiddenPromotedActions2,
          hasMeasured: containerWidth !== Infinity
        });
      }, [containerWidth, disclosureWidth, promotedActions, actionsWidths]);
      const activatorLabel = !promotedActions || promotedActions && visiblePromotedActions.length === 0 ? i18n.translate("Polaris.ResourceList.BulkActions.actionsActivatorLabel") : i18n.translate("Polaris.ResourceList.BulkActions.moreActionsActivatorLabel");
      const paginatedSelectAllMarkup = paginatedSelectAllAction ? /* @__PURE__ */ import_react167.default.createElement(UnstyledButton, {
        className: styles46.AllAction,
        onClick: paginatedSelectAllAction.onAction,
        size: "slim",
        disabled
      }, /* @__PURE__ */ import_react167.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        fontWeight: "medium"
      }, paginatedSelectAllAction.content)) : null;
      const hasTextAndAction = paginatedSelectAllText && paginatedSelectAllAction;
      const ariaLive = hasTextAndAction ? "polite" : void 0;
      const checkableButtonProps = {
        accessibilityLabel,
        label: hasTextAndAction ? paginatedSelectAllText : label,
        selected,
        onToggleAll,
        disabled,
        ariaLive,
        ref
      };
      const togglePopover = (0, import_react167.useCallback)(() => {
        onMoreActionPopoverToggle?.(popoverActive);
        setPopoverActive((popoverActive2) => !popoverActive2);
      }, [onMoreActionPopoverToggle, popoverActive]);
      const handleMeasurement = (0, import_react167.useCallback)((measurements) => {
        const {
          hiddenActionsWidths: actionsWidths2,
          containerWidth: containerWidth2,
          disclosureWidth: disclosureWidth2
        } = measurements;
        if (!promotedActions || promotedActions.length === 0) {
          return;
        }
        const {
          visiblePromotedActions: visiblePromotedActions2,
          hiddenPromotedActions: hiddenPromotedActions2
        } = getVisibleAndHiddenActionsIndices(promotedActions, disclosureWidth2, actionsWidths2, containerWidth2);
        setState({
          visiblePromotedActions: visiblePromotedActions2,
          hiddenPromotedActions: hiddenPromotedActions2,
          actionsWidths: actionsWidths2,
          containerWidth: containerWidth2,
          disclosureWidth: disclosureWidth2,
          hasMeasured: true
        });
      }, [promotedActions]);
      const actionSections = getActionSections(actions);
      const promotedActionsMarkup = promotedActions ? promotedActions.filter((_, index) => {
        if (!visiblePromotedActions.includes(index)) {
          return false;
        }
        return true;
      }).map((action, index) => {
        if (instanceOfMenuGroupDescriptor(action)) {
          return /* @__PURE__ */ import_react167.default.createElement(BulkActionMenu, Object.assign({
            key: index
          }, action, {
            isNewBadgeInBadgeActions: isNewBadgeInBadgeActions(actionSections),
            size: buttonSize
          }));
        }
        return /* @__PURE__ */ import_react167.default.createElement(BulkActionButton, Object.assign({
          key: index,
          disabled
        }, action, {
          size: buttonSize
        }));
      }) : null;
      const hiddenPromotedActionObjects = hiddenPromotedActions.map((index) => promotedActions?.[index]);
      const mergedHiddenPromotedActions = hiddenPromotedActionObjects.reduce((memo21, action) => {
        if (!action)
          return memo21;
        if (instanceOfMenuGroupDescriptor(action)) {
          return memo21.concat(action.actions);
        }
        return memo21.concat(action);
      }, []);
      const hiddenPromotedSection = {
        items: mergedHiddenPromotedActions
      };
      const allHiddenActions = (0, import_react167.useMemo)(() => {
        if (actionSections) {
          return actionSections;
        }
        if (!actions) {
          return [];
        }
        let isAFlatArray = true;
        return actions.filter((action) => action).reduce((memo21, action) => {
          if (instanceOfBulkActionListSection(action)) {
            isAFlatArray = false;
            return memo21.concat(action);
          }
          if (isAFlatArray) {
            if (memo21.length === 0) {
              return [{
                items: [action]
              }];
            }
            const lastItem = memo21[memo21.length - 1];
            memo21.splice(memo21.length - 1, 1, {
              items: [...lastItem.items, action]
            });
            return memo21;
          }
          isAFlatArray = true;
          return memo21.concat({
            items: [action]
          });
        }, []);
      }, [actions, actionSections]);
      const activator = /* @__PURE__ */ import_react167.default.createElement(BulkActionButton, {
        disclosure: true,
        showContentInButton: !promotedActionsMarkup,
        onAction: togglePopover,
        content: activatorLabel,
        disabled,
        indicator: isNewBadgeInBadgeActions(actionSections),
        size: buttonSize
      });
      const actionsMarkup = allHiddenActions.length > 0 ? /* @__PURE__ */ import_react167.default.createElement(Popover2, {
        active: popoverActive,
        activator,
        preferredAlignment: "right",
        onClose: togglePopover
      }, /* @__PURE__ */ import_react167.default.createElement(ActionList, {
        sections: hiddenPromotedSection.items.length > 0 ? [hiddenPromotedSection, ...allHiddenActions] : allHiddenActions,
        onActionAnyItem: togglePopover
      })) : null;
      const measurerMarkup = /* @__PURE__ */ import_react167.default.createElement(BulkActionsMeasurer, {
        promotedActions,
        disabled,
        buttonSize,
        handleMeasurement
      });
      return /* @__PURE__ */ import_react167.default.createElement("div", {
        className: styles46.BulkActions,
        style: width2 ? {
          width: width2
        } : void 0
      }, /* @__PURE__ */ import_react167.default.createElement(InlineStack, {
        gap: "400",
        blockAlign: "center"
      }, /* @__PURE__ */ import_react167.default.createElement("div", {
        className: styles46.BulkActionsSelectAllWrapper
      }, /* @__PURE__ */ import_react167.default.createElement(CheckableButton, checkableButtonProps), paginatedSelectAllMarkup), selectMode ? /* @__PURE__ */ import_react167.default.createElement("div", {
        className: styles46.BulkActionsPromotedActionsWrapper
      }, /* @__PURE__ */ import_react167.default.createElement(InlineStack, {
        gap: "100",
        blockAlign: "center"
      }, /* @__PURE__ */ import_react167.default.createElement("div", {
        className: styles46.BulkActionsOuterLayout
      }, measurerMarkup, /* @__PURE__ */ import_react167.default.createElement("div", {
        className: classNames(styles46.BulkActionsLayout, !hasMeasured && styles46["BulkActionsLayout--measuring"])
      }, promotedActionsMarkup)), actionsMarkup)) : null));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/AfterInitialMount/AfterInitialMount.js
function AfterInitialMount({
  children,
  onMount,
  fallback = null
}) {
  const isMounted = useIsAfterInitialMount();
  const content = isMounted ? children : fallback;
  (0, import_react168.useEffect)(() => {
    if (isMounted && onMount) {
      onMount();
    }
  }, [isMounted, onMount]);
  return /* @__PURE__ */ import_react168.default.createElement(import_react168.default.Fragment, null, content);
}
var import_react168;
var init_AfterInitialMount = __esm({
  "node_modules/@shopify/polaris/build/esm/components/AfterInitialMount/AfterInitialMount.js"() {
    import_react168 = __toESM(require_react());
    init_use_is_after_initial_mount();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/is-input-focused.js
function isInputFocused() {
  if (document == null || document.activeElement == null) {
    return false;
  }
  const {
    tagName
  } = document.activeElement;
  return tagName === EditableTarget.Input || tagName === EditableTarget.Textarea || tagName === EditableTarget.Select || document.activeElement.hasAttribute(EditableTarget.ContentEditable);
}
var EditableTarget;
var init_is_input_focused = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/is-input-focused.js"() {
    (function(EditableTarget2) {
      EditableTarget2["Input"] = "INPUT";
      EditableTarget2["Textarea"] = "TEXTAREA";
      EditableTarget2["Select"] = "SELECT";
      EditableTarget2["ContentEditable"] = "contenteditable";
    })(EditableTarget || (EditableTarget = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.css.js
var styles49;
var init_Pagination_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.css.js"() {
    styles49 = {
      "Pagination": "Polaris-Pagination",
      "table": "Polaris-Pagination--table",
      "TablePaginationActions": "Polaris-Pagination__TablePaginationActions"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.css.js
var styles50;
var init_ButtonGroup_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.css.js"() {
    styles50 = {
      "ButtonGroup": "Polaris-ButtonGroup",
      "Item": "Polaris-ButtonGroup__Item",
      "Item-plain": "Polaris-ButtonGroup__Item--plain",
      "variantSegmented": "Polaris-ButtonGroup--variantSegmented",
      "Item-focused": "Polaris-ButtonGroup__Item--focused",
      "fullWidth": "Polaris-ButtonGroup--fullWidth",
      "extraTight": "Polaris-ButtonGroup--extraTight",
      "tight": "Polaris-ButtonGroup--tight",
      "loose": "Polaris-ButtonGroup--loose",
      "noWrap": "Polaris-ButtonGroup--noWrap"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/components/Item/Item.js
function Item5({
  button
}) {
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const className = classNames(styles50.Item, focused && styles50["Item-focused"], button.props.variant === "plain" && styles50["Item-plain"]);
  return /* @__PURE__ */ import_react169.default.createElement("div", {
    className,
    onFocus: forceTrueFocused,
    onBlur: forceFalseFocused
  }, button);
}
var import_react169;
var init_Item5 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ButtonGroup/components/Item/Item.js"() {
    import_react169 = __toESM(require_react());
    init_use_toggle();
    init_css();
    init_ButtonGroup_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.js
function ButtonGroup({
  children,
  gap,
  variant,
  fullWidth,
  connectedTop,
  noWrap
}) {
  const className = classNames(styles50.ButtonGroup, gap && styles50[gap], variant && styles50[variationName("variant", variant)], fullWidth && styles50.fullWidth, noWrap && styles50.noWrap);
  const contents = elementChildren(children).map((child, index) => /* @__PURE__ */ import_react170.default.createElement(Item5, {
    button: child,
    key: index
  }));
  return /* @__PURE__ */ import_react170.default.createElement("div", {
    className,
    "data-buttongroup-variant": variant,
    "data-buttongroup-connected-top": connectedTop,
    "data-buttongroup-full-width": fullWidth,
    "data-buttongroup-no-wrap": noWrap
  }, contents);
}
var import_react170;
var init_ButtonGroup = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ButtonGroup/ButtonGroup.js"() {
    import_react170 = __toESM(require_react());
    init_css();
    init_components();
    init_ButtonGroup_css();
    init_Item5();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.js
function Pagination({
  hasNext,
  hasPrevious,
  nextURL,
  previousURL,
  onNext,
  onPrevious,
  nextTooltip,
  previousTooltip,
  nextKeys,
  previousKeys,
  accessibilityLabel,
  accessibilityLabels,
  label,
  type = "page"
}) {
  const i18n = useI18n();
  const node = /* @__PURE__ */ (0, import_react171.createRef)();
  const navLabel = accessibilityLabel || i18n.translate("Polaris.Pagination.pagination");
  const previousLabel = accessibilityLabels?.previous || i18n.translate("Polaris.Pagination.previous");
  const nextLabel = accessibilityLabels?.next || i18n.translate("Polaris.Pagination.next");
  const prev = /* @__PURE__ */ import_react171.default.createElement(Button, {
    icon: SvgChevronLeftIcon,
    accessibilityLabel: previousLabel,
    url: previousURL,
    onClick: onPrevious,
    disabled: !hasPrevious,
    id: "previousURL"
  });
  const constructedPrevious = previousTooltip && hasPrevious ? /* @__PURE__ */ import_react171.default.createElement(Tooltip, {
    activatorWrapper: "span",
    content: previousTooltip,
    preferredPosition: "below"
  }, prev) : prev;
  const next = /* @__PURE__ */ import_react171.default.createElement(Button, {
    icon: SvgChevronRightIcon,
    accessibilityLabel: nextLabel,
    url: nextURL,
    onClick: onNext,
    disabled: !hasNext,
    id: "nextURL"
  });
  const constructedNext = nextTooltip && hasNext ? /* @__PURE__ */ import_react171.default.createElement(Tooltip, {
    activatorWrapper: "span",
    content: nextTooltip,
    preferredPosition: "below"
  }, next) : next;
  const previousHandler = onPrevious || noop8;
  const previousButtonEvents = previousKeys && (previousURL || onPrevious) && hasPrevious && previousKeys.map((key) => /* @__PURE__ */ import_react171.default.createElement(KeypressListener, {
    key,
    keyCode: key,
    handler: previousURL ? handleCallback(clickPaginationLink("previousURL", node)) : handleCallback(previousHandler)
  }));
  const nextHandler = onNext || noop8;
  const nextButtonEvents = nextKeys && (nextURL || onNext) && hasNext && nextKeys.map((key) => /* @__PURE__ */ import_react171.default.createElement(KeypressListener, {
    key,
    keyCode: key,
    handler: nextURL ? handleCallback(clickPaginationLink("nextURL", node)) : handleCallback(nextHandler)
  }));
  if (type === "table") {
    const labelMarkup2 = label ? /* @__PURE__ */ import_react171.default.createElement(Box, {
      padding: "300",
      paddingBlockStart: "0",
      paddingBlockEnd: "0"
    }, /* @__PURE__ */ import_react171.default.createElement(Text, {
      as: "span",
      variant: "bodySm",
      fontWeight: "medium"
    }, label)) : null;
    return /* @__PURE__ */ import_react171.default.createElement("nav", {
      "aria-label": navLabel,
      ref: node,
      className: classNames(styles49.Pagination, styles49.table)
    }, previousButtonEvents, nextButtonEvents, /* @__PURE__ */ import_react171.default.createElement(Box, {
      background: "bg-surface-secondary",
      paddingBlockStart: "150",
      paddingBlockEnd: "150",
      paddingInlineStart: "300",
      paddingInlineEnd: "200"
    }, /* @__PURE__ */ import_react171.default.createElement(InlineStack, {
      align: "center",
      blockAlign: "center"
    }, /* @__PURE__ */ import_react171.default.createElement("div", {
      className: styles49.TablePaginationActions,
      "data-buttongroup-variant": "segmented"
    }, /* @__PURE__ */ import_react171.default.createElement("div", null, constructedPrevious), labelMarkup2, /* @__PURE__ */ import_react171.default.createElement("div", null, constructedNext)))));
  }
  const labelTextMarkup = hasNext && hasPrevious ? /* @__PURE__ */ import_react171.default.createElement("span", null, label) : /* @__PURE__ */ import_react171.default.createElement(Text, {
    tone: "subdued",
    as: "span"
  }, label);
  const labelMarkup = label ? /* @__PURE__ */ import_react171.default.createElement(Box, {
    padding: "300",
    paddingBlockStart: "0",
    paddingBlockEnd: "0"
  }, /* @__PURE__ */ import_react171.default.createElement("div", {
    "aria-live": "polite"
  }, labelTextMarkup)) : null;
  return /* @__PURE__ */ import_react171.default.createElement("nav", {
    "aria-label": navLabel,
    ref: node,
    className: styles49.Pagination
  }, previousButtonEvents, nextButtonEvents, /* @__PURE__ */ import_react171.default.createElement(ButtonGroup, {
    variant: "segmented"
  }, constructedPrevious, labelMarkup, constructedNext));
}
function clickPaginationLink(id, node) {
  return () => {
    if (node.current == null) {
      return;
    }
    const link = node.current.querySelector(`#${id}`);
    if (link) {
      link.click();
    }
  };
}
function handleCallback(fn) {
  return () => {
    if (isInputFocused()) {
      return;
    }
    fn();
  };
}
function noop8() {
}
var import_react171;
var init_Pagination = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Pagination/Pagination.js"() {
    init_dist();
    import_react171 = __toESM(require_react());
    init_is_input_focused();
    init_css();
    init_Pagination_css();
    init_hooks2();
    init_KeypressListener();
    init_Box();
    init_InlineStack();
    init_ButtonGroup();
    init_Tooltip();
    init_Text();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/hooks.js
function useStickyManager() {
  const stickyManager = (0, import_react172.useContext)(StickyManagerContext);
  if (!stickyManager) {
    throw new MissingAppProviderError("No StickyManager was provided.");
  }
  return stickyManager;
}
var import_react172;
var init_hooks10 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/sticky-manager/hooks.js"() {
    import_react172 = __toESM(require_react());
    init_errors();
    init_context4();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Sticky/Sticky.js
function isFunction(arg) {
  return typeof arg === "function";
}
function Sticky(props) {
  const stickyManager = useStickyManager();
  return /* @__PURE__ */ import_react173.default.createElement(StickyInner, Object.assign({}, props, {
    stickyManager
  }));
}
var import_react173, StickyInner;
var init_Sticky = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Sticky/Sticky.js"() {
    import_react173 = __toESM(require_react());
    init_geometry();
    init_hooks10();
    StickyInner = class extends import_react173.Component {
      constructor(...args) {
        super(...args);
        this.state = {
          isSticky: false,
          style: {}
        };
        this.placeHolderNode = null;
        this.stickyNode = null;
        this.setPlaceHolderNode = (node) => {
          this.placeHolderNode = node;
        };
        this.setStickyNode = (node) => {
          this.stickyNode = node;
        };
        this.handlePositioning = (stick, top = 0, left = 0, width2 = 0) => {
          const {
            isSticky
          } = this.state;
          if (stick && !isSticky || !stick && isSticky) {
            this.adjustPlaceHolderNode(stick);
            this.setState({
              isSticky: !isSticky
            }, () => {
              if (this.props.onStickyChange == null) {
                return null;
              }
              this.props.onStickyChange(!isSticky);
              if (this.props.boundingElement == null) {
                return null;
              }
              this.props.boundingElement.toggleAttribute("data-sticky-active");
            });
          }
          const style = stick ? {
            position: "fixed",
            top,
            left,
            width: width2
          } : {};
          this.setState({
            style
          });
        };
        this.adjustPlaceHolderNode = (add) => {
          if (this.placeHolderNode && this.stickyNode) {
            this.placeHolderNode.style.paddingBottom = add ? `${getRectForNode(this.stickyNode).height}px` : "0px";
          }
        };
      }
      componentDidMount() {
        const {
          boundingElement,
          offset = false,
          disableWhenStacked = false,
          stickyManager
        } = this.props;
        if (!this.stickyNode || !this.placeHolderNode)
          return;
        stickyManager.registerStickyItem({
          stickyNode: this.stickyNode,
          placeHolderNode: this.placeHolderNode,
          handlePositioning: this.handlePositioning,
          offset,
          boundingElement,
          disableWhenStacked
        });
      }
      componentWillUnmount() {
        const {
          stickyManager
        } = this.props;
        if (!this.stickyNode)
          return;
        stickyManager.unregisterStickyItem(this.stickyNode);
      }
      render() {
        const {
          style,
          isSticky
        } = this.state;
        const {
          children
        } = this.props;
        const childrenContent = isFunction(children) ? children(isSticky) : children;
        return /* @__PURE__ */ import_react173.default.createElement("div", null, /* @__PURE__ */ import_react173.default.createElement("div", {
          ref: this.setPlaceHolderNode
        }), /* @__PURE__ */ import_react173.default.createElement("div", {
          ref: this.setStickyNode,
          style
        }, childrenContent));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js
function IndexTableBase({
  headings,
  bulkActions = [],
  promotedBulkActions = [],
  children,
  emptyState,
  sort,
  paginatedSelectAllActionText,
  lastColumnSticky = false,
  sortable,
  sortDirection,
  defaultSortDirection = "descending",
  sortColumnIndex,
  onSort,
  sortToggleLabels,
  hasZebraStriping,
  pagination,
  ...restProps
}) {
  const theme = useTheme();
  const {
    loading,
    bulkSelectState,
    resourceName,
    bulkActionsAccessibilityLabel,
    selectMode,
    selectable = restProps.selectable,
    paginatedSelectAllText,
    itemCount,
    hasMoreItems,
    selectedItemsCount,
    condensed
  } = useIndexValue();
  const handleSelectionChange = useIndexSelectionChange();
  const i18n = useI18n();
  const {
    value: hasMoreLeftColumns,
    toggle: toggleHasMoreLeftColumns
  } = useToggle(false);
  const tablePosition = (0, import_react174.useRef)({
    top: 0,
    left: 0
  });
  const tableHeadingRects = (0, import_react174.useRef)([]);
  const scrollableContainerElement = (0, import_react174.useRef)(null);
  const tableElement = (0, import_react174.useRef)(null);
  const tableBodyElement = (0, import_react174.useRef)(null);
  const condensedListElement = (0, import_react174.useRef)(null);
  const loadingElement = (0, import_react174.useRef)(null);
  const [tableInitialized, setTableInitialized] = (0, import_react174.useState)(false);
  const [stickyWrapper, setStickyWrapper] = (0, import_react174.useState)(null);
  const [hideScrollContainer, setHideScrollContainer] = (0, import_react174.useState)(true);
  const tableHeadings = (0, import_react174.useRef)([]);
  const stickyTableHeadings = (0, import_react174.useRef)([]);
  const stickyHeaderWrapperElement = (0, import_react174.useRef)(null);
  const firstStickyHeaderElement = (0, import_react174.useRef)(null);
  const stickyHeaderElement = (0, import_react174.useRef)(null);
  const scrollBarElement = (0, import_react174.useRef)(null);
  const scrollContainerElement = (0, import_react174.useRef)(null);
  const scrollingWithBar = (0, import_react174.useRef)(false);
  const scrollingContainer = (0, import_react174.useRef)(false);
  const lastSortedColumnIndex = (0, import_react174.useRef)(sortColumnIndex);
  const renderAfterSelectEvent = (0, import_react174.useRef)(false);
  const lastSelectedItemsCount = (0, import_react174.useRef)(0);
  const hasSelected = (0, import_react174.useRef)(false);
  if (selectedItemsCount !== lastSelectedItemsCount.current) {
    renderAfterSelectEvent.current = true;
    lastSelectedItemsCount.current = selectedItemsCount;
  }
  if (!hasSelected.current && selectedItemsCount !== 0) {
    hasSelected.current = true;
  }
  const tableBodyRef = (0, import_react174.useCallback)((node) => {
    if (node !== null && !tableInitialized) {
      setTableInitialized(true);
    }
    tableBodyElement.current = node;
  }, [tableInitialized]);
  const handleSelectAllItemsInStore = (0, import_react174.useCallback)(() => {
    handleSelectionChange(selectedItemsCount === SELECT_ALL_ITEMS ? SelectionType.Page : SelectionType.All, true);
  }, [handleSelectionChange, selectedItemsCount]);
  const resizeTableHeadings = (0, import_react174.useMemo)(() => debounce(() => {
    if (!tableElement.current || !scrollableContainerElement.current) {
      return;
    }
    const boundingRect = scrollableContainerElement.current.getBoundingClientRect();
    tablePosition.current = {
      top: boundingRect.top,
      left: boundingRect.left
    };
    tableHeadingRects.current = tableHeadings.current.map((heading) => ({
      offsetWidth: heading.offsetWidth || 0,
      offsetLeft: heading.offsetLeft || 0
    }));
    if (tableHeadings.current.length === 0) {
      return;
    }
    if (selectable && tableHeadings.current.length > 1) {
      tableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;
      if (stickyTableHeadings.current?.length) {
        stickyTableHeadings.current[1].style.left = `${tableHeadingRects.current[0].offsetWidth}px`;
      }
    }
    if (stickyTableHeadings.current?.length) {
      stickyTableHeadings.current.forEach((heading, index) => {
        heading.style.minWidth = `${tableHeadingRects.current[index]?.offsetWidth || 0}px`;
      });
    }
  }), [selectable]);
  const resizeTableScrollBar = (0, import_react174.useCallback)(() => {
    if (scrollBarElement.current && tableElement.current && tableInitialized) {
      scrollBarElement.current.style.setProperty("--pc-index-table-scroll-bar-content-width", `${tableElement.current.offsetWidth - SCROLL_BAR_PADDING}px`);
      setHideScrollContainer(scrollContainerElement.current?.offsetWidth === tableElement.current?.offsetWidth);
    }
  }, [tableInitialized]);
  const debounceResizeTableScrollbar = (0, import_react174.useCallback)(debounce(resizeTableScrollBar, SCROLL_BAR_DEBOUNCE_PERIOD, {
    trailing: true
  }), [resizeTableScrollBar]);
  const [canScrollRight, setCanScrollRight] = (0, import_react174.useState)(true);
  const handleCanScrollRight = (0, import_react174.useCallback)(debounce(() => {
    if (!lastColumnSticky || !tableElement.current || !scrollableContainerElement.current) {
      return;
    }
    const tableRect = tableElement.current.getBoundingClientRect();
    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();
    setCanScrollRight(tableRect.width > scrollableRect.width);
  }), [lastColumnSticky]);
  (0, import_react174.useEffect)(() => {
    handleCanScrollRight();
  }, [handleCanScrollRight]);
  const [canFitStickyColumn, setCanFitStickyColumn] = (0, import_react174.useState)(true);
  const handleCanFitStickyColumn = (0, import_react174.useCallback)(() => {
    if (!scrollableContainerElement.current || !tableHeadings.current.length) {
      return;
    }
    const scrollableRect = scrollableContainerElement.current.getBoundingClientRect();
    const checkboxColumnWidth = selectable ? tableHeadings.current[0].getBoundingClientRect().width : 0;
    const firstStickyColumnWidth = tableHeadings.current[selectable ? 1 : 0].getBoundingClientRect().width;
    const lastColumnIsNotTheFirst = selectable ? tableHeadings.current.length > 2 : 1;
    const lastStickyColumnWidth = lastColumnSticky && lastColumnIsNotTheFirst ? tableHeadings.current[tableHeadings.current.length - 1].getBoundingClientRect().width : 0;
    const restOfContentMinWidth = 100;
    setCanFitStickyColumn(scrollableRect.width > firstStickyColumnWidth + checkboxColumnWidth + lastStickyColumnWidth + restOfContentMinWidth);
  }, [lastColumnSticky, selectable]);
  (0, import_react174.useEffect)(() => {
    if (tableInitialized) {
      handleCanFitStickyColumn();
    }
  }, [handleCanFitStickyColumn, tableInitialized]);
  const handleResize = (0, import_react174.useCallback)(() => {
    scrollBarElement.current?.style.setProperty("--pc-index-table-scroll-bar-content-width", `0px`);
    resizeTableHeadings();
    debounceResizeTableScrollbar();
    handleCanScrollRight();
    handleCanFitStickyColumn();
  }, [resizeTableHeadings, debounceResizeTableScrollbar, handleCanScrollRight, handleCanFitStickyColumn]);
  const handleScrollContainerScroll = (0, import_react174.useCallback)((canScrollLeft, canScrollRight2) => {
    if (!scrollableContainerElement.current || !scrollBarElement.current) {
      return;
    }
    if (!scrollingWithBar.current) {
      scrollingContainer.current = true;
      scrollBarElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;
    }
    scrollingWithBar.current = false;
    if (stickyHeaderElement.current) {
      stickyHeaderElement.current.scrollLeft = scrollableContainerElement.current.scrollLeft;
    }
    if (canScrollLeft && !hasMoreLeftColumns || !canScrollLeft && hasMoreLeftColumns) {
      toggleHasMoreLeftColumns();
    }
    setCanScrollRight(canScrollRight2);
  }, [hasMoreLeftColumns, toggleHasMoreLeftColumns]);
  const handleScrollBarScroll = (0, import_react174.useCallback)(() => {
    if (!scrollableContainerElement.current || !scrollBarElement.current) {
      return;
    }
    if (!scrollingContainer.current) {
      scrollingWithBar.current = true;
      scrollableContainerElement.current.scrollLeft = scrollBarElement.current.scrollLeft;
    }
    scrollingContainer.current = false;
  }, []);
  (0, import_react174.useLayoutEffect)(() => {
    tableHeadings.current = getTableHeadingsBySelector(tableElement.current, "[data-index-table-heading]");
    stickyTableHeadings.current = getTableHeadingsBySelector(stickyHeaderWrapperElement.current, "[data-index-table-sticky-heading]");
    resizeTableHeadings();
  }, [headings, resizeTableHeadings, firstStickyHeaderElement, tableInitialized]);
  (0, import_react174.useEffect)(() => {
    resizeTableScrollBar();
    setStickyWrapper(condensed ? condensedListElement.current : tableElement.current);
  }, [tableInitialized, resizeTableScrollBar, condensed]);
  const headingsMarkup = headings.map((heading, index) => renderHeading(heading, index, "th", {
    "data-index-table-heading": true
  }, heading.id));
  const stickyHeadingsMarkup = headings.map((heading, index) => (
    // NOTE: No id since it would be a duplicate of the non-sticky header's id
    renderHeading(heading, index, "div", {
      "data-index-table-sticky-heading": true
    })
  ));
  const [selectedItemsCountValue, setSelectedItemsCountValue] = (0, import_react174.useState)(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);
  (0, import_react174.useEffect)(() => {
    if (selectedItemsCount === SELECT_ALL_ITEMS || selectedItemsCount > 0) {
      setSelectedItemsCountValue(selectedItemsCount === SELECT_ALL_ITEMS ? `${itemCount}+` : selectedItemsCount);
    }
  }, [selectedItemsCount, itemCount]);
  const selectAllActionsLabel = i18n.translate("Polaris.IndexTable.selected", {
    selectedItemsCount: selectedItemsCountValue
  });
  const handleTogglePage = (0, import_react174.useCallback)(() => {
    handleSelectionChange(SelectionType.Page, Boolean(!bulkSelectState || bulkSelectState === "indeterminate"));
  }, [bulkSelectState, handleSelectionChange]);
  const paginatedSelectAllAction = getPaginatedSelectAllAction();
  const loadingTransitionClassNames = {
    enter: styles43["LoadingContainer-enter"],
    enterActive: styles43["LoadingContainer-enter-active"],
    exit: styles43["LoadingContainer-exit"],
    exitActive: styles43["LoadingContainer-exit-active"]
  };
  const loadingMarkup = /* @__PURE__ */ import_react174.default.createElement(CSSTransition_default, {
    in: loading,
    classNames: loadingTransitionClassNames,
    timeout: parseInt(theme.motion["motion-duration-100"], 10),
    nodeRef: loadingElement,
    appear: true,
    unmountOnExit: true
  }, /* @__PURE__ */ import_react174.default.createElement("div", {
    className: styles43.LoadingPanel,
    ref: loadingElement
  }, /* @__PURE__ */ import_react174.default.createElement("div", {
    className: styles43.LoadingPanelRow
  }, /* @__PURE__ */ import_react174.default.createElement(Spinner, {
    size: "small"
  }), /* @__PURE__ */ import_react174.default.createElement("span", {
    className: styles43.LoadingPanelText
  }, i18n.translate("Polaris.IndexTable.resourceLoadingAccessibilityLabel", {
    resourceNamePlural: resourceName.plural.toLocaleLowerCase()
  })))));
  const stickyTableClassNames = classNames(styles43.StickyTable, hasMoreLeftColumns && styles43["StickyTable-scrolling"], condensed && styles43["StickyTable-condensed"]);
  const shouldShowActions = !condensed || selectedItemsCount;
  const promotedActions = shouldShowActions ? promotedBulkActions : [];
  const actions = shouldShowActions ? bulkActions : [];
  const stickyHeaderMarkup = /* @__PURE__ */ import_react174.default.createElement("div", {
    className: stickyTableClassNames,
    role: "presentation"
  }, /* @__PURE__ */ import_react174.default.createElement(Sticky, {
    boundingElement: stickyWrapper
  }, (isSticky) => {
    const stickyHeaderClassNames = classNames(
      styles43.StickyTableHeader,
      isSticky && styles43["StickyTableHeader-isSticky"],
      // Has a sticky left column enabled
      canFitStickyColumn && styles43["StickyTableHeader-sticky"],
      // ie; is scrolled to the right
      hasMoreLeftColumns && styles43["StickyTableHeader-scrolling"],
      // Has a sticky right column enabled
      canFitStickyColumn && lastColumnSticky && styles43["StickyTableHeader-sticky-last"],
      // ie; is scrolled to the left
      canFitStickyColumn && lastColumnSticky && canScrollRight && styles43["StickyTableHeader-sticky-scrolling"]
    );
    const bulkActionsClassName = classNames(styles43.BulkActionsWrapper, selectMode && styles43.BulkActionsWrapperVisible, condensed && styles43["StickyTableHeader-condensed"], isSticky && styles43["StickyTableHeader-isSticky"]);
    const bulkActionsMarkup = shouldShowActions && !condensed ? /* @__PURE__ */ import_react174.default.createElement("div", {
      className: bulkActionsClassName
    }, /* @__PURE__ */ import_react174.default.createElement(BulkActions, {
      selectMode,
      onToggleAll: handleTogglePage,
      paginatedSelectAllText,
      paginatedSelectAllAction,
      accessibilityLabel: bulkActionsAccessibilityLabel,
      selected: bulkSelectState,
      promotedActions,
      actions,
      onSelectModeToggle: condensed ? handleSelectModeToggle : void 0,
      label: selectAllActionsLabel,
      buttonSize: "micro"
    })) : null;
    const headerMarkup = condensed ? /* @__PURE__ */ import_react174.default.createElement("div", {
      className: classNames(styles43.HeaderWrapper, (!selectable || condensed) && styles43.unselectable)
    }, loadingMarkup, sort) : /* @__PURE__ */ import_react174.default.createElement("div", {
      className: stickyHeaderClassNames,
      ref: stickyHeaderWrapperElement
    }, loadingMarkup, /* @__PURE__ */ import_react174.default.createElement("div", {
      className: styles43.StickyTableHeadings,
      ref: stickyHeaderElement
    }, stickyHeadingsMarkup));
    return /* @__PURE__ */ import_react174.default.createElement(import_react174.default.Fragment, null, headerMarkup, bulkActionsMarkup);
  }));
  const scrollBarWrapperClassNames = classNames(styles43.ScrollBarContainer, pagination && styles43.ScrollBarContainerWithPagination, condensed && styles43.scrollBarContainerCondensed, hideScrollContainer && styles43.scrollBarContainerHidden);
  const scrollBarClassNames = classNames(tableElement.current && tableInitialized && styles43.ScrollBarContent);
  const scrollBarMarkup = itemCount > 0 ? /* @__PURE__ */ import_react174.default.createElement(AfterInitialMount, {
    onMount: resizeTableScrollBar
  }, /* @__PURE__ */ import_react174.default.createElement("div", {
    className: scrollBarWrapperClassNames,
    ref: scrollContainerElement
  }, /* @__PURE__ */ import_react174.default.createElement("div", {
    onScroll: handleScrollBarScroll,
    className: styles43.ScrollBar,
    ref: scrollBarElement
  }, /* @__PURE__ */ import_react174.default.createElement("div", {
    className: scrollBarClassNames
  })))) : null;
  const isSortable = sortable?.some((value) => value);
  const tableClassNames = classNames(styles43.Table, hasMoreLeftColumns && styles43["Table-scrolling"], selectMode && styles43.disableTextSelection, !selectable && styles43["Table-unselectable"], canFitStickyColumn && styles43["Table-sticky"], isSortable && styles43["Table-sortable"], canFitStickyColumn && lastColumnSticky && styles43["Table-sticky-last"], canFitStickyColumn && lastColumnSticky && canScrollRight && styles43["Table-sticky-scrolling"], hasZebraStriping && styles43.ZebraStriping);
  const emptyStateMarkup = emptyState ? emptyState : /* @__PURE__ */ import_react174.default.createElement(EmptySearchResult, {
    title: i18n.translate("Polaris.IndexTable.emptySearchTitle", {
      resourceNamePlural: resourceName.plural
    }),
    description: i18n.translate("Polaris.IndexTable.emptySearchDescription"),
    withIllustration: true
  });
  const sharedMarkup = /* @__PURE__ */ import_react174.default.createElement(import_react174.default.Fragment, null, /* @__PURE__ */ import_react174.default.createElement(EventListener, {
    event: "resize",
    handler: handleResize
  }), stickyHeaderMarkup);
  const condensedClassNames = classNames(styles43.CondensedList, hasZebraStriping && styles43.ZebraStriping);
  const bodyMarkup = condensed ? /* @__PURE__ */ import_react174.default.createElement(import_react174.default.Fragment, null, sharedMarkup, /* @__PURE__ */ import_react174.default.createElement("ul", {
    "data-selectmode": Boolean(selectMode),
    className: condensedClassNames,
    ref: condensedListElement
  }, children)) : /* @__PURE__ */ import_react174.default.createElement(import_react174.default.Fragment, null, sharedMarkup, /* @__PURE__ */ import_react174.default.createElement(ScrollContainer, {
    scrollableContainerRef: scrollableContainerElement,
    onScroll: handleScrollContainerScroll
  }, /* @__PURE__ */ import_react174.default.createElement("table", {
    ref: tableElement,
    className: tableClassNames
  }, /* @__PURE__ */ import_react174.default.createElement("thead", null, /* @__PURE__ */ import_react174.default.createElement("tr", {
    className: styles43.HeadingRow
  }, headingsMarkup)), /* @__PURE__ */ import_react174.default.createElement("tbody", {
    ref: tableBodyRef
  }, children))));
  const tableContentMarkup = itemCount > 0 ? bodyMarkup : /* @__PURE__ */ import_react174.default.createElement("div", {
    className: styles43.EmptySearchResultWrapper
  }, emptyStateMarkup);
  const paginationMarkup = pagination ? /* @__PURE__ */ import_react174.default.createElement("div", {
    className: styles43.PaginationWrapper
  }, /* @__PURE__ */ import_react174.default.createElement(Pagination, Object.assign({
    type: "table"
  }, pagination))) : null;
  return /* @__PURE__ */ import_react174.default.createElement(import_react174.default.Fragment, null, /* @__PURE__ */ import_react174.default.createElement("div", {
    className: styles43.IndexTable
  }, /* @__PURE__ */ import_react174.default.createElement("div", {
    className: styles43.IndexTableWrapper
  }, !condensed && loadingMarkup, tableContentMarkup, scrollBarMarkup, paginationMarkup)));
  function renderHeading(heading, index, Tag2, tagProps, id) {
    const isSecond = index === 0;
    const isLast = index === headings.length - 1;
    const hasSortable = sortable?.some((value) => value === true);
    const headingAlignment = heading.alignment || "start";
    const headingContentClassName = classNames(styles43.TableHeading, headingAlignment === "center" && styles43["TableHeading-align-center"], headingAlignment === "end" && styles43["TableHeading-align-end"], hasSortable && styles43["TableHeading-sortable"], isSecond && styles43["TableHeading-second"], isLast && !heading.hidden && styles43["TableHeading-last"], !selectable && styles43["TableHeading-unselectable"], heading.flush && styles43["TableHeading-flush"]);
    const stickyPositioningStyle = selectable !== false && isSecond && tableHeadingRects.current && tableHeadingRects.current.length > 0 ? {
      left: tableHeadingRects.current[0].offsetWidth
    } : void 0;
    const headingContent = /* @__PURE__ */ import_react174.default.createElement(Tag2, Object.assign({
      id,
      className: headingContentClassName,
      key: getHeadingKey(heading),
      style: stickyPositioningStyle
    }, tagProps), renderHeadingContent(heading, index));
    if (index !== 0 || !selectable) {
      return headingContent;
    }
    const checkboxClassName = classNames(styles43.TableHeading, hasSortable && styles43["TableHeading-sortable"], index === 0 && styles43["TableHeading-first"]);
    const checkboxContent = /* @__PURE__ */ import_react174.default.createElement(Tag2, Object.assign({
      className: checkboxClassName,
      key: `${heading}-${index}`
    }, tagProps), renderCheckboxContent());
    return [checkboxContent, headingContent];
  }
  function renderCheckboxContent() {
    return /* @__PURE__ */ import_react174.default.createElement("div", {
      className: styles43.ColumnHeaderCheckboxWrapper
    }, /* @__PURE__ */ import_react174.default.createElement(Checkbox, {
      label: i18n.translate("Polaris.IndexTable.selectAllLabel", {
        resourceNamePlural: resourceName.plural
      }),
      labelHidden: true,
      onChange: handleSelectPage,
      checked: bulkSelectState
    }));
  }
  function handleSortHeadingClick(index, direction) {
    renderAfterSelectEvent.current = false;
    hasSelected.current = false;
    lastSortedColumnIndex.current = sortColumnIndex;
    onSort?.(index, direction);
  }
  function renderHeadingContent(heading, index) {
    let headingContent;
    const defaultTooltipProps = {
      width: heading.tooltipWidth ?? "default",
      activatorWrapper: "div",
      dismissOnMouseOut: true,
      persistOnClick: heading.tooltipPersistsOnClick
    };
    const defaultHeaderTooltipProps = {
      ...defaultTooltipProps,
      padding: "400",
      borderRadius: "200",
      content: heading.tooltipContent,
      preferredPosition: "above"
    };
    const headingTitle = /* @__PURE__ */ import_react174.default.createElement(Text, {
      as: "span",
      variant: "bodySm",
      fontWeight: "medium",
      visuallyHidden: heading.hidden
    }, heading.title);
    if (heading.new) {
      headingContent = /* @__PURE__ */ import_react174.default.createElement(LegacyStack, {
        wrap: false,
        alignment: "center"
      }, headingTitle, /* @__PURE__ */ import_react174.default.createElement(Badge, {
        tone: "new"
      }, i18n.translate("Polaris.IndexTable.onboardingBadgeText")));
    } else {
      headingContent = headingTitle;
    }
    const style = {
      "--pc-index-table-heading-extra-padding-right": heading.paddingBlockEnd ? `var(--p-space-${heading.paddingBlockEnd})` : "0"
    };
    if (sortable?.[index]) {
      const isCurrentlySorted = index === sortColumnIndex;
      const isPreviouslySorted = !isCurrentlySorted && index === lastSortedColumnIndex.current;
      const isRenderAfterSelectEvent = renderAfterSelectEvent.current || !hasSelected.current && selectedItemsCount !== 0;
      const isAscending = sortDirection === "ascending";
      let newDirection = heading.defaultSortDirection ?? defaultSortDirection;
      let SourceComponent = newDirection === "ascending" ? SvgSortAscendingIcon : SvgSortDescendingIcon;
      if (isCurrentlySorted) {
        newDirection = isAscending ? "descending" : "ascending";
        SourceComponent = sortDirection === "ascending" ? SvgSortAscendingIcon : SvgSortDescendingIcon;
      }
      const iconMarkup = /* @__PURE__ */ import_react174.default.createElement("span", {
        className: classNames(styles43.TableHeadingSortIcon, heading?.alignment === "end" && styles43["TableHeadingSortIcon-heading-align-end"], isCurrentlySorted && styles43["TableHeadingSortIcon-visible"])
      }, /* @__PURE__ */ import_react174.default.createElement(SourceComponent, {
        focusable: "false",
        "aria-hidden": "true",
        className: styles43.TableHeadingSortSvg
      }));
      const defaultSortButtonProps = {
        onClick: () => handleSortHeadingClick(index, newDirection),
        className: classNames(styles43.TableHeadingSortButton, !isCurrentlySorted && heading?.alignment === "end" && styles43["TableHeadingSortButton-heading-align-end"], isCurrentlySorted && heading?.alignment === "end" && styles43["TableHeadingSortButton-heading-align-end-currently-sorted"], isPreviouslySorted && !isRenderAfterSelectEvent && heading?.alignment === "end" && styles43["TableHeadingSortButton-heading-align-end-previously-sorted"]),
        tabIndex: selectMode ? -1 : 0
      };
      const sortMarkup = /* @__PURE__ */ import_react174.default.createElement(UnstyledButton, defaultSortButtonProps, iconMarkup, /* @__PURE__ */ import_react174.default.createElement("span", {
        className: classNames(sortToggleLabels && selectMode && heading.tooltipContent && styles43.TableHeadingTooltipUnderlinePlaceholder)
      }, headingContent));
      if (!sortToggleLabels || selectMode) {
        return /* @__PURE__ */ import_react174.default.createElement("div", {
          className: styles43.SortableTableHeadingWithCustomMarkup
        }, sortMarkup);
      }
      const tooltipDirection = isCurrentlySorted ? sortDirection : newDirection;
      const sortTooltipContent = sortToggleLabels[index][tooltipDirection];
      if (!heading.tooltipContent) {
        return (
          // Regular header with sort icon and sort direction tooltip
          /* @__PURE__ */ import_react174.default.createElement("div", {
            style,
            className: classNames(heading.paddingBlockEnd && styles43["TableHeading-extra-padding-right"])
          }, /* @__PURE__ */ import_react174.default.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {
            content: sortTooltipContent,
            preferredPosition: "above"
          }), sortMarkup))
        );
      }
      if (heading.tooltipContent) {
        return (
          // Header text and sort icon have separate tooltips
          /* @__PURE__ */ import_react174.default.createElement("div", {
            className: classNames(styles43.SortableTableHeadingWithCustomMarkup, heading.paddingBlockEnd && styles43["TableHeading-extra-padding-right"]),
            style
          }, /* @__PURE__ */ import_react174.default.createElement(UnstyledButton, defaultSortButtonProps, /* @__PURE__ */ import_react174.default.createElement(Tooltip, defaultHeaderTooltipProps, /* @__PURE__ */ import_react174.default.createElement("span", {
            className: styles43.TableHeadingUnderline
          }, headingContent)), /* @__PURE__ */ import_react174.default.createElement(Tooltip, Object.assign({}, defaultTooltipProps, {
            content: sortTooltipContent,
            preferredPosition: "above"
          }), iconMarkup)))
        );
      }
    }
    if (heading.tooltipContent) {
      return (
        // Non-sortable header with tooltip
        /* @__PURE__ */ import_react174.default.createElement("div", {
          style,
          className: classNames(heading.paddingBlockEnd && styles43["TableHeading-extra-padding-right"])
        }, /* @__PURE__ */ import_react174.default.createElement(Tooltip, Object.assign({}, defaultHeaderTooltipProps, {
          activatorWrapper: "span"
        }), /* @__PURE__ */ import_react174.default.createElement("span", {
          className: classNames(styles43.TableHeadingUnderline, styles43.SortableTableHeaderWrapper)
        }, headingContent)))
      );
    }
    return /* @__PURE__ */ import_react174.default.createElement("div", {
      style,
      className: classNames(heading.paddingBlockEnd && styles43["TableHeading-extra-padding-right"])
    }, headingContent);
  }
  function handleSelectPage(checked) {
    handleSelectionChange(SelectionType.Page, checked);
  }
  function getPaginatedSelectAllAction() {
    if (!selectable || !hasMoreItems) {
      return;
    }
    const customActionText = paginatedSelectAllActionText ?? i18n.translate("Polaris.IndexTable.selectAllItems", {
      itemsLength: itemCount,
      resourceNamePlural: resourceName.plural.toLocaleLowerCase()
    });
    const actionText = selectedItemsCount === SELECT_ALL_ITEMS ? i18n.translate("Polaris.IndexTable.undo") : customActionText;
    return {
      content: actionText,
      onAction: handleSelectAllItemsInStore
    };
  }
  function handleSelectModeToggle() {
    handleSelectionChange(SelectionType.All, false);
  }
}
function getHeadingKey(heading) {
  if (heading.id) {
    return heading.id;
  } else if (typeof heading.title === "string") {
    return heading.title;
  }
  return "";
}
function IndexTable({
  children,
  selectable = true,
  itemCount,
  selectedItemsCount = 0,
  resourceName: passedResourceName,
  loading,
  hasMoreItems,
  condensed,
  onSelectionChange,
  paginatedSelectAllText,
  ...indexTableBaseProps
}) {
  return /* @__PURE__ */ import_react174.default.createElement(import_react174.default.Fragment, null, /* @__PURE__ */ import_react174.default.createElement(IndexProvider, {
    selectable: selectable && !condensed,
    itemCount,
    selectedItemsCount,
    resourceName: passedResourceName,
    loading,
    hasMoreItems,
    condensed,
    onSelectionChange,
    paginatedSelectAllText
  }, /* @__PURE__ */ import_react174.default.createElement(IndexTableBase, indexTableBaseProps, children)));
}
var import_react174, SCROLL_BAR_PADDING, SCROLL_BAR_DEBOUNCE_PERIOD;
var init_IndexTable = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexTable/IndexTable.js"() {
    import_react174 = __toESM(require_react());
    init_dist();
    init_esm();
    init_debounce();
    init_use_toggle();
    init_css();
    init_use_theme();
    init_IndexTable_css();
    init_IndexProvider();
    init_Cell();
    init_Row();
    init_types3();
    init_utilities();
    init_EmptySearchResult();
    init_ScrollContainer();
    init_BulkActions();
    init_hooks9();
    init_hooks2();
    init_Spinner();
    init_AfterInitialMount();
    init_EventListener();
    init_Pagination();
    init_Checkbox();
    init_Text();
    init_LegacyStack();
    init_Badge();
    init_UnstyledButton();
    init_Tooltip();
    init_Sticky();
    SCROLL_BAR_PADDING = 16;
    SCROLL_BAR_DEBOUNCE_PERIOD = 300;
    IndexTable.Cell = Cell;
    IndexTable.Row = Row;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Layout/Layout.css.js
var styles51;
var init_Layout_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Layout/Layout.css.js"() {
    styles51 = {
      "Layout": "Polaris-Layout",
      "Section": "Polaris-Layout__Section",
      "Section-fullWidth": "Polaris-Layout__Section--fullWidth",
      "Section-oneHalf": "Polaris-Layout__Section--oneHalf",
      "Section-oneThird": "Polaris-Layout__Section--oneThird",
      "AnnotatedSection": "Polaris-Layout__AnnotatedSection",
      "AnnotationWrapper": "Polaris-Layout__AnnotationWrapper",
      "AnnotationContent": "Polaris-Layout__AnnotationContent",
      "Annotation": "Polaris-Layout__Annotation"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.css.js
var styles52;
var init_TextContainer_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.css.js"() {
    styles52 = {
      "TextContainer": "Polaris-TextContainer",
      "spacingTight": "Polaris-TextContainer--spacingTight",
      "spacingLoose": "Polaris-TextContainer--spacingLoose"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.js
function TextContainer({
  spacing,
  children
}) {
  const className = classNames(styles52.TextContainer, spacing && styles52[variationName("spacing", spacing)]);
  return /* @__PURE__ */ import_react175.default.createElement("div", {
    className
  }, children);
}
var import_react175;
var init_TextContainer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TextContainer/TextContainer.js"() {
    import_react175 = __toESM(require_react());
    init_css();
    init_TextContainer_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Layout/components/AnnotatedSection/AnnotatedSection.js
function AnnotatedSection({
  children,
  title,
  description,
  id
}) {
  const descriptionMarkup = typeof description === "string" ? /* @__PURE__ */ import_react176.default.createElement(Text, {
    as: "p",
    variant: "bodyMd"
  }, description) : description;
  return /* @__PURE__ */ import_react176.default.createElement("div", {
    className: styles51.AnnotatedSection
  }, /* @__PURE__ */ import_react176.default.createElement("div", {
    className: styles51.AnnotationWrapper
  }, /* @__PURE__ */ import_react176.default.createElement("div", {
    className: styles51.Annotation
  }, /* @__PURE__ */ import_react176.default.createElement(TextContainer, {
    spacing: "tight"
  }, /* @__PURE__ */ import_react176.default.createElement(Text, {
    id,
    variant: "headingMd",
    as: "h2"
  }, title), descriptionMarkup && /* @__PURE__ */ import_react176.default.createElement(Box, {
    color: "text-secondary"
  }, descriptionMarkup))), /* @__PURE__ */ import_react176.default.createElement("div", {
    className: styles51.AnnotationContent
  }, children)));
}
var import_react176;
var init_AnnotatedSection = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Layout/components/AnnotatedSection/AnnotatedSection.js"() {
    import_react176 = __toESM(require_react());
    init_Layout_css();
    init_TextContainer();
    init_Text();
    init_Box();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Layout/components/Section/Section.js
function Section4({
  children,
  variant
}) {
  const className = classNames(styles51.Section, styles51[`Section-${variant}`]);
  return /* @__PURE__ */ import_react177.default.createElement("div", {
    className
  }, children);
}
var import_react177;
var init_Section4 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Layout/components/Section/Section.js"() {
    import_react177 = __toESM(require_react());
    init_css();
    init_Layout_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Layout/Layout.js
var import_react178, Layout;
var init_Layout = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Layout/Layout.js"() {
    import_react178 = __toESM(require_react());
    init_Layout_css();
    init_AnnotatedSection();
    init_Section4();
    Layout = function Layout2({
      sectioned,
      children
    }) {
      const content = sectioned ? /* @__PURE__ */ import_react178.default.createElement(Section4, null, children) : children;
      return /* @__PURE__ */ import_react178.default.createElement("div", {
        className: styles51.Layout
      }, content);
    };
    Layout.AnnotatedSection = AnnotatedSection;
    Layout.Section = Section4;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/banner-context.js
var import_react179, BannerContext;
var init_banner_context = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/banner-context.js"() {
    import_react179 = __toESM(require_react());
    BannerContext = /* @__PURE__ */ (0, import_react179.createContext)(false);
  }
});

// node_modules/@shopify/polaris/build/esm/components/Link/Link.css.js
var styles53;
var init_Link_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Link/Link.css.js"() {
    styles53 = {
      "Link": "Polaris-Link",
      "monochrome": "Polaris-Link--monochrome",
      "removeUnderline": "Polaris-Link--removeUnderline"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Link/Link.js
function Link({
  url,
  children,
  onClick,
  external,
  target,
  id,
  monochrome,
  removeUnderline,
  accessibilityLabel,
  dataPrimaryLink
}) {
  return /* @__PURE__ */ import_react180.default.createElement(BannerContext.Consumer, null, (BannerContext2) => {
    const shouldBeMonochrome = monochrome || BannerContext2;
    const className = classNames(styles53.Link, shouldBeMonochrome && styles53.monochrome, removeUnderline && styles53.removeUnderline);
    return url ? /* @__PURE__ */ import_react180.default.createElement(UnstyledLink, {
      onClick,
      className,
      url,
      external,
      target,
      id,
      "aria-label": accessibilityLabel,
      "data-primary-link": dataPrimaryLink
    }, children) : /* @__PURE__ */ import_react180.default.createElement("button", {
      type: "button",
      onClick,
      className,
      id,
      "aria-label": accessibilityLabel,
      "data-primary-link": dataPrimaryLink
    }, children);
  });
}
var import_react180;
var init_Link = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Link/Link.js"() {
    import_react180 = __toESM(require_react());
    init_banner_context();
    init_css();
    init_Link_css();
    init_UnstyledLink();
  }
});

// node_modules/@shopify/polaris/build/esm/components/List/List.css.js
var styles54;
var init_List_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/List/List.css.js"() {
    styles54 = {
      "List": "Polaris-List",
      "typeNumber": "Polaris-List--typeNumber",
      "Item": "Polaris-List__Item",
      "spacingLoose": "Polaris-List--spacingLoose"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/List/components/Item/Item.js
function Item6({
  children
}) {
  return /* @__PURE__ */ import_react181.default.createElement("li", {
    className: styles54.Item
  }, children);
}
var import_react181;
var init_Item6 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/List/components/Item/Item.js"() {
    import_react181 = __toESM(require_react());
    init_List_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/List/List.js
var import_react182, List;
var init_List = __esm({
  "node_modules/@shopify/polaris/build/esm/components/List/List.js"() {
    import_react182 = __toESM(require_react());
    init_css();
    init_List_css();
    init_Item6();
    List = function List2({
      children,
      gap = "loose",
      type = "bullet"
    }) {
      const className = classNames(styles54.List, gap && styles54[variationName("spacing", gap)], type && styles54[variationName("type", type)]);
      const ListElement = type === "bullet" ? "ul" : "ol";
      return /* @__PURE__ */ import_react182.default.createElement(ListElement, {
        className
      }, children);
    };
    List.Item = Item6;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/is-interface.js
function isInterface(x) {
  return !/* @__PURE__ */ (0, import_react183.isValidElement)(x) && x !== void 0;
}
var import_react183;
var init_is_interface = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/is-interface.js"() {
    import_react183 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/is-react-element.js
function isReactElement(x) {
  return /* @__PURE__ */ (0, import_react184.isValidElement)(x) && x !== void 0;
}
var import_react184;
var init_is_react_element = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/is-react-element.js"() {
    import_react184 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/components/Page/Page.css.js
var styles55;
var init_Page_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Page/Page.css.js"() {
    styles55 = {
      "Page": "Polaris-Page",
      "fullWidth": "Polaris-Page--fullWidth",
      "narrowWidth": "Polaris-Page--narrowWidth",
      "Content": "Polaris-Page__Content"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.css.js
var styles56;
var init_Header_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.css.js"() {
    styles56 = {
      "TitleWrapper": "Polaris-Page-Header__TitleWrapper",
      "TitleWrapperExpand": "Polaris-Page-Header__TitleWrapperExpand",
      "BreadcrumbWrapper": "Polaris-Page-Header__BreadcrumbWrapper",
      "PaginationWrapper": "Polaris-Page-Header__PaginationWrapper",
      "PrimaryActionWrapper": "Polaris-Page-Header__PrimaryActionWrapper",
      "Row": "Polaris-Page-Header__Row",
      "mobileView": "Polaris-Page-Header--mobileView",
      "RightAlign": "Polaris-Page-Header__RightAlign",
      "noBreadcrumbs": "Polaris-Page-Header--noBreadcrumbs",
      "AdditionalMetaData": "Polaris-Page-Header__AdditionalMetaData",
      "Actions": "Polaris-Page-Header__Actions",
      "longTitle": "Polaris-Page-Header--longTitle",
      "mediumTitle": "Polaris-Page-Header--mediumTitle",
      "isSingleRow": "Polaris-Page-Header--isSingleRow"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Breadcrumbs/Breadcrumbs.js
function Breadcrumbs({
  backAction
}) {
  const {
    content
  } = backAction;
  return /* @__PURE__ */ import_react185.default.createElement(Button, {
    key: content,
    url: "url" in backAction ? backAction.url : void 0,
    onClick: "onAction" in backAction ? backAction.onAction : void 0,
    onPointerDown: handleMouseUpByBlurring,
    icon: SvgArrowLeftIcon,
    accessibilityLabel: backAction.accessibilityLabel ?? content
  });
}
var import_react185;
var init_Breadcrumbs = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Breadcrumbs/Breadcrumbs.js"() {
    import_react185 = __toESM(require_react());
    init_dist();
    init_focus();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.css.js
var styles57;
var init_Title_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.css.js"() {
    styles57 = {
      "Title": "Polaris-Header-Title",
      "TitleWithSubtitle": "Polaris-Header-Title__TitleWithSubtitle",
      "TitleWrapper": "Polaris-Header-Title__TitleWrapper",
      "SubTitle": "Polaris-Header-Title__SubTitle",
      "SubtitleCompact": "Polaris-Header-Title__SubtitleCompact",
      "SubtitleMaxWidth": "Polaris-Header-Title__SubtitleMaxWidth"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.js
function Title({
  title,
  subtitle,
  titleMetadata,
  compactTitle,
  hasSubtitleMaxWidth
}) {
  const className = classNames(styles57.Title, subtitle && styles57.TitleWithSubtitle);
  const titleMarkup = title ? /* @__PURE__ */ import_react186.default.createElement("h1", {
    className
  }, /* @__PURE__ */ import_react186.default.createElement(Text, {
    as: "span",
    variant: "headingLg",
    fontWeight: "bold"
  }, title)) : null;
  const titleMetadataMarkup = titleMetadata ? /* @__PURE__ */ import_react186.default.createElement(Bleed, {
    marginBlock: "100"
  }, titleMetadata) : null;
  const wrappedTitleMarkup = /* @__PURE__ */ import_react186.default.createElement("div", {
    className: styles57.TitleWrapper
  }, titleMarkup, titleMetadataMarkup);
  const subtitleMarkup = subtitle ? /* @__PURE__ */ import_react186.default.createElement("div", {
    className: classNames(styles57.SubTitle, compactTitle && styles57.SubtitleCompact, hasSubtitleMaxWidth && styles57.SubtitleMaxWidth)
  }, /* @__PURE__ */ import_react186.default.createElement(Text, {
    as: "p",
    variant: "bodySm",
    tone: "subdued"
  }, subtitle)) : null;
  return /* @__PURE__ */ import_react186.default.createElement(import_react186.default.Fragment, null, wrappedTitleMarkup, subtitleMarkup);
}
var import_react186;
var init_Title = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Page/components/Header/components/Title/Title.js"() {
    import_react186 = __toESM(require_react());
    init_css();
    init_Title_css();
    init_Text();
    init_Bleed();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.css.js
var styles58;
var init_ActionMenu_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.css.js"() {
    styles58 = {
      "ActionMenu": "Polaris-ActionMenu"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.css.js
var styles59;
var init_RollupActions_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.css.js"() {
    styles59 = {
      "RollupActivator": "Polaris-ActionMenu-RollupActions__RollupActivator"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.js
function RollupActions({
  accessibilityLabel,
  items = [],
  sections = []
}) {
  const i18n = useI18n();
  const {
    value: rollupOpen,
    toggle: toggleRollupOpen
  } = useToggle(false);
  if (items.length === 0 && sections.length === 0) {
    return null;
  }
  const activatorMarkup = /* @__PURE__ */ import_react187.default.createElement("div", {
    className: styles59.RollupActivator
  }, /* @__PURE__ */ import_react187.default.createElement(Button, {
    icon: SvgMenuHorizontalIcon,
    accessibilityLabel: accessibilityLabel || i18n.translate("Polaris.ActionMenu.RollupActions.rollupButton"),
    onClick: toggleRollupOpen
  }));
  return /* @__PURE__ */ import_react187.default.createElement(Popover2, {
    active: rollupOpen,
    activator: activatorMarkup,
    preferredAlignment: "right",
    onClose: toggleRollupOpen,
    hideOnPrint: true
  }, /* @__PURE__ */ import_react187.default.createElement(ActionList, {
    items,
    sections,
    onActionAnyItem: toggleRollupOpen
  }));
}
var import_react187;
var init_RollupActions = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/RollupActions/RollupActions.js"() {
    import_react187 = __toESM(require_react());
    init_dist();
    init_use_toggle();
    init_RollupActions_css();
    init_hooks2();
    init_Button();
    init_Popover();
    init_ActionList();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.css.js
var styles60;
var init_Actions_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.css.js"() {
    styles60 = {
      "ActionsLayoutOuter": "Polaris-ActionMenu-Actions__ActionsLayoutOuter",
      "ActionsLayout": "Polaris-ActionMenu-Actions__ActionsLayout",
      "ActionsLayout--measuring": "Polaris-ActionMenu-Actions--actionsLayoutMeasuring",
      "ActionsLayoutMeasurer": "Polaris-ActionMenu-Actions__ActionsLayoutMeasurer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/utilities.js
function getVisibleAndHiddenActionsIndices2(actions = [], groups = [], disclosureWidth, actionsWidths, containerWidth) {
  const sumTabWidths = actionsWidths.reduce((sum, width2) => sum + width2, 0);
  const arrayOfActionsIndices = actions.map((_, index) => {
    return index;
  });
  const arrayOfGroupsIndices = groups.map((_, index) => {
    return index;
  });
  const visibleActions = [];
  const hiddenActions = [];
  const visibleGroups = [];
  const hiddenGroups = [];
  if (containerWidth > sumTabWidths) {
    visibleActions.push(...arrayOfActionsIndices);
    visibleGroups.push(...arrayOfGroupsIndices);
  } else {
    let accumulatedWidth = 0;
    arrayOfActionsIndices.forEach((currentActionsIndex) => {
      const currentActionsWidth = actionsWidths[currentActionsIndex];
      if (accumulatedWidth + currentActionsWidth >= containerWidth - disclosureWidth) {
        hiddenActions.push(currentActionsIndex);
        return;
      }
      visibleActions.push(currentActionsIndex);
      accumulatedWidth += currentActionsWidth;
    });
    arrayOfGroupsIndices.forEach((currentGroupsIndex) => {
      const currentActionsWidth = actionsWidths[currentGroupsIndex + actions.length];
      if (accumulatedWidth + currentActionsWidth >= containerWidth - disclosureWidth) {
        hiddenGroups.push(currentGroupsIndex);
        return;
      }
      visibleGroups.push(currentGroupsIndex);
      accumulatedWidth += currentActionsWidth;
    });
  }
  return {
    visibleActions,
    hiddenActions,
    visibleGroups,
    hiddenGroups
  };
}
var init_utilities3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.css.js
var styles61;
var init_MenuGroup_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.css.js"() {
    styles61 = {
      "Details": "Polaris-ActionMenu-MenuGroup__Details"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.css.js
var styles62;
var init_SecondaryAction_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.css.js"() {
    styles62 = {
      "SecondaryAction": "Polaris-ActionMenu-SecondaryAction",
      "critical": "Polaris-ActionMenu-SecondaryAction--critical"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.js
function SecondaryAction({
  children,
  tone,
  helpText,
  onAction,
  destructive,
  ...rest
}) {
  const buttonMarkup = /* @__PURE__ */ import_react188.default.createElement(Button, Object.assign({
    onClick: onAction,
    tone: destructive ? "critical" : void 0
  }, rest), children);
  const actionMarkup = helpText ? /* @__PURE__ */ import_react188.default.createElement(Tooltip, {
    preferredPosition: "below",
    content: helpText
  }, buttonMarkup) : buttonMarkup;
  return /* @__PURE__ */ import_react188.default.createElement("div", {
    className: classNames(styles62.SecondaryAction, tone === "critical" && styles62.critical)
  }, actionMarkup);
}
var import_react188;
var init_SecondaryAction = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/SecondaryAction/SecondaryAction.js"() {
    import_react188 = __toESM(require_react());
    init_css();
    init_SecondaryAction_css();
    init_Button();
    init_Tooltip();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.js
function MenuGroup({
  accessibilityLabel,
  active,
  actions,
  details,
  title,
  icon,
  disabled,
  onClick,
  onClose,
  onOpen,
  sections
}) {
  const handleClose = (0, import_react189.useCallback)(() => {
    onClose(title);
  }, [onClose, title]);
  const handleOpen = (0, import_react189.useCallback)(() => {
    onOpen(title);
  }, [onOpen, title]);
  const handleClick = (0, import_react189.useCallback)(() => {
    if (onClick) {
      onClick(handleOpen);
    } else {
      handleOpen();
    }
  }, [onClick, handleOpen]);
  const popoverActivator = /* @__PURE__ */ import_react189.default.createElement(SecondaryAction, {
    disclosure: true,
    disabled,
    icon,
    accessibilityLabel,
    onClick: handleClick
  }, title);
  return /* @__PURE__ */ import_react189.default.createElement(Popover2, {
    active: Boolean(active),
    activator: popoverActivator,
    preferredAlignment: "left",
    onClose: handleClose,
    hideOnPrint: true
  }, /* @__PURE__ */ import_react189.default.createElement(ActionList, {
    items: actions,
    sections,
    onActionAnyItem: handleClose
  }), details && /* @__PURE__ */ import_react189.default.createElement("div", {
    className: styles61.Details
  }, details));
}
var import_react189;
var init_MenuGroup = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/MenuGroup/MenuGroup.js"() {
    import_react189 = __toESM(require_react());
    init_MenuGroup_css();
    init_Popover();
    init_ActionList();
    init_SecondaryAction();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/components/ActionsMeasurer/ActionsMeasurer.js
function ActionsMeasurer({
  actions = [],
  groups = [],
  handleMeasurement: handleMeasurementProp
}) {
  const i18n = useI18n();
  const containerNode = (0, import_react190.useRef)(null);
  const defaultRollupGroup = {
    title: i18n.translate("Polaris.ActionMenu.Actions.moreActions"),
    actions: []
  };
  const activator = /* @__PURE__ */ import_react190.default.createElement(SecondaryAction, {
    disclosure: true
  }, defaultRollupGroup.title);
  const handleMeasurement = (0, import_react190.useCallback)(() => {
    if (!containerNode.current) {
      return;
    }
    const containerWidth = containerNode.current.offsetWidth;
    const hiddenActionNodes = containerNode.current.children;
    const hiddenActionNodesArray = Array.from(hiddenActionNodes);
    const hiddenActionsWidths = hiddenActionNodesArray.map((node) => {
      const buttonWidth = Math.ceil(node.getBoundingClientRect().width);
      return buttonWidth + ACTION_SPACING2;
    });
    const disclosureWidth = hiddenActionsWidths.pop() || 0;
    handleMeasurementProp({
      containerWidth,
      disclosureWidth,
      hiddenActionsWidths
    });
  }, [handleMeasurementProp]);
  (0, import_react190.useEffect)(() => {
    handleMeasurement();
  }, [handleMeasurement, actions, groups]);
  const actionsMarkup = actions.map((action) => {
    const {
      content,
      onAction,
      ...rest
    } = action;
    return /* @__PURE__ */ import_react190.default.createElement(SecondaryAction, Object.assign({
      key: content,
      onClick: onAction
    }, rest), content);
  });
  const groupsMarkup = groups.map((group) => {
    const {
      title,
      icon
    } = group;
    return /* @__PURE__ */ import_react190.default.createElement(SecondaryAction, {
      key: title,
      disclosure: true,
      icon
    }, title);
  });
  useEventListener("resize", handleMeasurement);
  return /* @__PURE__ */ import_react190.default.createElement("div", {
    className: styles60.ActionsLayoutMeasurer,
    ref: containerNode
  }, actionsMarkup, groupsMarkup, activator);
}
var import_react190, ACTION_SPACING2;
var init_ActionsMeasurer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/components/ActionsMeasurer/ActionsMeasurer.js"() {
    import_react190 = __toESM(require_react());
    init_use_event_listener();
    init_Actions_css();
    init_hooks2();
    init_SecondaryAction();
    ACTION_SPACING2 = 8;
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js
function Actions({
  actions,
  groups,
  onActionRollup
}) {
  const i18n = useI18n();
  const rollupActiveRef = (0, import_react191.useRef)(null);
  const [activeMenuGroup, setActiveMenuGroup] = (0, import_react191.useState)(void 0);
  const [state, setState] = (0, import_react191.useReducer)((data, partialData) => {
    return {
      ...data,
      ...partialData
    };
  }, {
    disclosureWidth: 0,
    containerWidth: Infinity,
    actionsWidths: [],
    visibleActions: [],
    hiddenActions: [],
    visibleGroups: [],
    hiddenGroups: [],
    hasMeasured: false
  });
  const {
    visibleActions,
    hiddenActions,
    visibleGroups,
    hiddenGroups,
    containerWidth,
    disclosureWidth,
    actionsWidths,
    hasMeasured
  } = state;
  const defaultRollupGroup = {
    title: i18n.translate("Polaris.ActionMenu.Actions.moreActions"),
    actions: []
  };
  const handleMenuGroupToggle = (0, import_react191.useCallback)((group) => setActiveMenuGroup(activeMenuGroup ? void 0 : group), [activeMenuGroup]);
  const handleMenuGroupClose = (0, import_react191.useCallback)(() => setActiveMenuGroup(void 0), []);
  (0, import_react191.useEffect)(() => {
    if (containerWidth === 0) {
      return;
    }
    const {
      visibleActions: visibleActions2,
      visibleGroups: visibleGroups2,
      hiddenActions: hiddenActions2,
      hiddenGroups: hiddenGroups2
    } = getVisibleAndHiddenActionsIndices2(actions, groups, disclosureWidth, actionsWidths, containerWidth);
    setState({
      visibleActions: visibleActions2,
      visibleGroups: visibleGroups2,
      hiddenActions: hiddenActions2,
      hiddenGroups: hiddenGroups2,
      hasMeasured: containerWidth !== Infinity
    });
  }, [containerWidth, disclosureWidth, actions, groups, actionsWidths, setState]);
  const actionsOrDefault = (0, import_react191.useMemo)(() => actions ?? [], [actions]);
  const groupsOrDefault = (0, import_react191.useMemo)(() => groups ?? [], [groups]);
  const actionsMarkup = actionsOrDefault.filter((_, index) => {
    if (!visibleActions.includes(index)) {
      return false;
    }
    return true;
  }).map((action) => {
    const {
      content,
      onAction,
      ...rest
    } = action;
    return /* @__PURE__ */ import_react191.default.createElement(SecondaryAction, Object.assign({
      key: content,
      onClick: onAction
    }, rest), content);
  });
  const groupsToFilter = hiddenGroups.length > 0 || hiddenActions.length > 0 ? [...groupsOrDefault, defaultRollupGroup] : [...groupsOrDefault];
  const filteredGroups = groupsToFilter.filter((group, index) => {
    const hasNoGroupsProp = groupsOrDefault.length === 0;
    const isVisibleGroup = visibleGroups.includes(index);
    const isDefaultGroup = group === defaultRollupGroup;
    if (hasNoGroupsProp) {
      return hiddenActions.length > 0;
    }
    if (isDefaultGroup) {
      return true;
    }
    return isVisibleGroup;
  });
  const hiddenActionObjects = hiddenActions.map((index) => actionsOrDefault[index]).filter((action) => action != null);
  const hiddenGroupObjects = hiddenGroups.map((index) => groupsOrDefault[index]).filter((group) => group != null);
  const groupsMarkup = filteredGroups.map((group) => {
    const {
      title,
      actions: groupActions,
      ...rest
    } = group;
    const isDefaultGroup = group === defaultRollupGroup;
    const allHiddenItems = [...hiddenActionObjects, ...hiddenGroupObjects];
    const [finalRolledUpActions, finalRolledUpSectionGroups] = allHiddenItems.reduce(([actions2, sections], action) => {
      if (isMenuGroup(action)) {
        sections.push({
          title: action.title,
          items: action.actions.map((sectionAction) => ({
            ...sectionAction,
            disabled: action.disabled || sectionAction.disabled
          }))
        });
      } else {
        actions2.push(action);
      }
      return [actions2, sections];
    }, [[], []]);
    if (!isDefaultGroup) {
      return /* @__PURE__ */ import_react191.default.createElement(MenuGroup, Object.assign({
        key: title,
        title,
        active: title === activeMenuGroup,
        actions: groupActions
      }, rest, {
        onOpen: handleMenuGroupToggle,
        onClose: handleMenuGroupClose
      }));
    }
    return /* @__PURE__ */ import_react191.default.createElement(MenuGroup, Object.assign({
      key: title,
      title,
      active: title === activeMenuGroup,
      actions: [...finalRolledUpActions, ...groupActions],
      sections: finalRolledUpSectionGroups
    }, rest, {
      onOpen: handleMenuGroupToggle,
      onClose: handleMenuGroupClose
    }));
  });
  const handleMeasurement = (0, import_react191.useCallback)((measurements) => {
    const {
      hiddenActionsWidths: actionsWidths2,
      containerWidth: containerWidth2,
      disclosureWidth: disclosureWidth2
    } = measurements;
    const {
      visibleActions: visibleActions2,
      hiddenActions: hiddenActions2,
      visibleGroups: visibleGroups2,
      hiddenGroups: hiddenGroups2
    } = getVisibleAndHiddenActionsIndices2(actionsOrDefault, groupsOrDefault, disclosureWidth2, actionsWidths2, containerWidth2);
    if (onActionRollup) {
      const isRollupActive = hiddenActions2.length > 0 || hiddenGroups2.length > 0;
      if (rollupActiveRef.current !== isRollupActive) {
        onActionRollup(isRollupActive);
        rollupActiveRef.current = isRollupActive;
      }
    }
    setState({
      visibleActions: visibleActions2,
      hiddenActions: hiddenActions2,
      visibleGroups: visibleGroups2,
      hiddenGroups: hiddenGroups2,
      actionsWidths: actionsWidths2,
      containerWidth: containerWidth2,
      disclosureWidth: disclosureWidth2,
      hasMeasured: true
    });
  }, [actionsOrDefault, groupsOrDefault, onActionRollup]);
  const actionsMeasurer = /* @__PURE__ */ import_react191.default.createElement(ActionsMeasurer, {
    actions,
    groups,
    handleMeasurement
  });
  return /* @__PURE__ */ import_react191.default.createElement("div", {
    className: styles60.ActionsLayoutOuter
  }, actionsMeasurer, /* @__PURE__ */ import_react191.default.createElement("div", {
    className: classNames(styles60.ActionsLayout, !hasMeasured && styles60["ActionsLayout--measuring"])
  }, actionsMarkup, groupsMarkup));
}
function isMenuGroup(actionOrMenuGroup) {
  return "title" in actionOrMenuGroup;
}
var import_react191;
var init_Actions = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js"() {
    import_react191 = __toESM(require_react());
    init_css();
    init_Actions_css();
    init_utilities3();
    init_MenuGroup();
    init_ActionsMeasurer();
    init_hooks2();
    init_SecondaryAction();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.js
function ActionMenu({
  actions = [],
  groups = [],
  rollup,
  rollupActionsLabel,
  onActionRollup
}) {
  if (actions.length === 0 && groups.length === 0) {
    return null;
  }
  const actionMenuClassNames = classNames(styles58.ActionMenu, rollup && styles58.rollup);
  const rollupSections = groups.map((group) => convertGroupToSection(group));
  return /* @__PURE__ */ import_react192.default.createElement("div", {
    className: actionMenuClassNames
  }, rollup ? /* @__PURE__ */ import_react192.default.createElement(RollupActions, {
    accessibilityLabel: rollupActionsLabel,
    items: actions,
    sections: rollupSections
  }) : /* @__PURE__ */ import_react192.default.createElement(Actions, {
    actions,
    groups,
    onActionRollup
  }));
}
function hasGroupsWithActions(groups = []) {
  return groups.length === 0 ? false : groups.some((group) => group.actions.length > 0);
}
function convertGroupToSection({
  title,
  actions,
  disabled
}) {
  return {
    title,
    items: actions.map((action) => ({
      ...action,
      disabled: disabled || action.disabled
    }))
  };
}
var import_react192;
var init_ActionMenu = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ActionMenu/ActionMenu.js"() {
    import_react192 = __toESM(require_react());
    init_css();
    init_ActionMenu_css();
    init_RollupActions();
    init_Actions();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.js
function Header2({
  title,
  subtitle,
  pageReadyAccessibilityLabel,
  titleMetadata,
  additionalMetadata,
  titleHidden = false,
  primaryAction,
  pagination,
  filterActions,
  backAction,
  secondaryActions = [],
  actionGroups = [],
  compactTitle = false,
  onActionRollup
}) {
  const i18n = useI18n();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const isSingleRow = !primaryAction && !pagination && (isInterface(secondaryActions) && !secondaryActions.length || isReactElement(secondaryActions)) && !actionGroups.length;
  const hasActionGroupsOrSecondaryActions = actionGroups.length > 0 || isInterface(secondaryActions) && secondaryActions.length > 0 || isReactElement(secondaryActions);
  const breadcrumbMarkup = backAction ? /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.BreadcrumbWrapper
  }, /* @__PURE__ */ import_react193.default.createElement(Box, {
    maxWidth: "100%",
    paddingInlineEnd: "100",
    printHidden: true
  }, /* @__PURE__ */ import_react193.default.createElement(Breadcrumbs, {
    backAction
  }))) : null;
  const paginationMarkup = pagination && !isNavigationCollapsed ? /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.PaginationWrapper
  }, /* @__PURE__ */ import_react193.default.createElement(Box, {
    printHidden: true
  }, /* @__PURE__ */ import_react193.default.createElement(Pagination, Object.assign({}, pagination, {
    hasPrevious: pagination.hasPrevious,
    hasNext: pagination.hasNext
  })))) : null;
  const pageTitleMarkup = /* @__PURE__ */ import_react193.default.createElement("div", {
    className: classNames(styles56.TitleWrapper, !hasActionGroupsOrSecondaryActions && styles56.TitleWrapperExpand)
  }, /* @__PURE__ */ import_react193.default.createElement(Title, {
    title,
    subtitle,
    titleMetadata,
    compactTitle,
    hasSubtitleMaxWidth: hasActionGroupsOrSecondaryActions
  }));
  const labelForPageReadyAccessibilityLabel = pageReadyAccessibilityLabel || title;
  const pageReadyAccessibilityLabelMarkup = labelForPageReadyAccessibilityLabel ? /* @__PURE__ */ import_react193.default.createElement("div", {
    role: "status"
  }, /* @__PURE__ */ import_react193.default.createElement(Text, {
    visuallyHidden: true,
    as: "p"
  }, i18n.translate("Polaris.Page.Header.pageReadyAccessibilityLabel", {
    title: labelForPageReadyAccessibilityLabel
  }))) : void 0;
  const primaryActionMarkup = primaryAction ? /* @__PURE__ */ import_react193.default.createElement(PrimaryActionMarkup, {
    primaryAction
  }) : null;
  let actionMenuMarkup = null;
  if (isInterface(secondaryActions) && (secondaryActions.length > 0 || hasGroupsWithActions(actionGroups))) {
    actionMenuMarkup = /* @__PURE__ */ import_react193.default.createElement(ActionMenu, {
      actions: secondaryActions,
      groups: actionGroups,
      rollup: isNavigationCollapsed,
      rollupActionsLabel: title ? i18n.translate("Polaris.Page.Header.rollupActionsLabel", {
        title
      }) : void 0,
      onActionRollup
    });
  } else if (isReactElement(secondaryActions)) {
    actionMenuMarkup = /* @__PURE__ */ import_react193.default.createElement(import_react193.default.Fragment, null, secondaryActions);
  }
  const navigationMarkup = breadcrumbMarkup || paginationMarkup ? /* @__PURE__ */ import_react193.default.createElement(Box, {
    printHidden: true,
    paddingBlockEnd: "100",
    paddingInlineEnd: actionMenuMarkup && isNavigationCollapsed ? "1000" : void 0
  }, /* @__PURE__ */ import_react193.default.createElement(InlineStack, {
    gap: "400",
    align: "space-between",
    blockAlign: "center"
  }, breadcrumbMarkup, paginationMarkup)) : null;
  const additionalMetadataMarkup = additionalMetadata ? /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.AdditionalMetaData
  }, /* @__PURE__ */ import_react193.default.createElement(Text, {
    tone: "subdued",
    as: "span",
    variant: "bodySm"
  }, additionalMetadata)) : null;
  const headerClassNames = classNames(isSingleRow && styles56.isSingleRow, navigationMarkup && styles56.hasNavigation, actionMenuMarkup && styles56.hasActionMenu, isNavigationCollapsed && styles56.mobileView, !backAction && styles56.noBreadcrumbs, title && title.length < LONG_TITLE && styles56.mediumTitle, title && title.length > LONG_TITLE && styles56.longTitle);
  const {
    slot1,
    slot2,
    slot3,
    slot4,
    slot5
  } = determineLayout({
    actionMenuMarkup,
    additionalMetadataMarkup,
    breadcrumbMarkup,
    isNavigationCollapsed,
    pageTitleMarkup,
    paginationMarkup,
    primaryActionMarkup,
    title
  });
  return /* @__PURE__ */ import_react193.default.createElement(Box, {
    position: "relative",
    paddingBlockStart: {
      xs: "400",
      md: "600"
    },
    paddingBlockEnd: {
      xs: "400",
      md: "600"
    },
    paddingInlineStart: {
      xs: "400",
      sm: "0"
    },
    paddingInlineEnd: {
      xs: "400",
      sm: "0"
    },
    visuallyHidden: titleHidden
  }, pageReadyAccessibilityLabelMarkup, /* @__PURE__ */ import_react193.default.createElement("div", {
    className: headerClassNames
  }, /* @__PURE__ */ import_react193.default.createElement(FilterActionsProvider, {
    filterActions: Boolean(filterActions)
  }, /* @__PURE__ */ import_react193.default.createElement(ConditionalRender, {
    condition: [slot1, slot2, slot3, slot4].some(notNull)
  }, /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.Row
  }, slot1, slot2, /* @__PURE__ */ import_react193.default.createElement(ConditionalRender, {
    condition: [slot3, slot4].some(notNull)
  }, /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.RightAlign
  }, /* @__PURE__ */ import_react193.default.createElement(ConditionalWrapper, {
    condition: [slot3, slot4].every(notNull),
    wrapper: (children) => /* @__PURE__ */ import_react193.default.createElement("div", {
      className: styles56.Actions
    }, children)
  }, slot3, slot4))))), /* @__PURE__ */ import_react193.default.createElement(ConditionalRender, {
    condition: [slot5].some(notNull)
  }, /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.Row
  }, /* @__PURE__ */ import_react193.default.createElement(InlineStack, {
    gap: "400"
  }, slot5))))));
}
function PrimaryActionMarkup({
  primaryAction
}) {
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  let actionMarkup;
  if (isInterface(primaryAction)) {
    const {
      primary: isPrimary,
      helpText
    } = primaryAction;
    const primary = isPrimary === void 0 ? true : isPrimary;
    const content = buttonFrom(shouldShowIconOnly(isNavigationCollapsed, primaryAction), {
      variant: primary ? "primary" : void 0
    });
    actionMarkup = helpText ? /* @__PURE__ */ import_react193.default.createElement(Tooltip, {
      content: helpText
    }, content) : content;
  } else {
    actionMarkup = primaryAction;
  }
  return /* @__PURE__ */ import_react193.default.createElement("div", {
    className: styles56.PrimaryActionWrapper
  }, /* @__PURE__ */ import_react193.default.createElement(Box, {
    printHidden: true
  }, actionMarkup));
}
function shouldShowIconOnly(isMobile, action) {
  let {
    content,
    accessibilityLabel
  } = action;
  const {
    icon
  } = action;
  if (icon == null)
    return {
      ...action,
      icon: void 0
    };
  if (isMobile) {
    accessibilityLabel = accessibilityLabel || content;
    content = void 0;
  }
  return {
    ...action,
    content,
    accessibilityLabel,
    icon
  };
}
function notNull(value) {
  return value != null;
}
function determineLayout({
  actionMenuMarkup,
  additionalMetadataMarkup,
  breadcrumbMarkup,
  isNavigationCollapsed,
  pageTitleMarkup,
  paginationMarkup,
  primaryActionMarkup,
  title
}) {
  const layouts = {
    mobileCompact: {
      slots: {
        slot1: null,
        slot2: pageTitleMarkup,
        slot3: actionMenuMarkup,
        slot4: primaryActionMarkup,
        slot5: additionalMetadataMarkup
      },
      condition: isNavigationCollapsed && breadcrumbMarkup == null && title != null && title.length <= REALLY_SHORT_TITLE
    },
    mobileDefault: {
      slots: {
        slot1: breadcrumbMarkup,
        slot2: pageTitleMarkup,
        slot3: actionMenuMarkup,
        slot4: primaryActionMarkup,
        slot5: additionalMetadataMarkup
      },
      condition: isNavigationCollapsed
    },
    desktopCompact: {
      slots: {
        slot1: breadcrumbMarkup,
        slot2: pageTitleMarkup,
        slot3: actionMenuMarkup,
        slot4: primaryActionMarkup,
        slot5: additionalMetadataMarkup
      },
      condition: !isNavigationCollapsed && paginationMarkup == null && actionMenuMarkup == null && title != null && title.length <= SHORT_TITLE
    },
    desktopDefault: {
      slots: {
        slot1: breadcrumbMarkup,
        slot2: pageTitleMarkup,
        slot3: /* @__PURE__ */ import_react193.default.createElement(import_react193.default.Fragment, null, actionMenuMarkup, primaryActionMarkup),
        slot4: paginationMarkup,
        slot5: additionalMetadataMarkup
      },
      condition: !isNavigationCollapsed
    }
  };
  const layout = Object.values(layouts).find((layout2) => layout2.condition) || layouts.desktopDefault;
  return layout.slots;
}
var import_react193, SHORT_TITLE, REALLY_SHORT_TITLE, LONG_TITLE;
var init_Header2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Page/components/Header/Header.js"() {
    import_react193 = __toESM(require_react());
    init_css();
    init_components();
    init_is_interface();
    init_is_react_element();
    init_Header_css();
    init_Breadcrumbs();
    init_Title();
    init_ActionMenu();
    init_FilterActionsProvider();
    init_hooks2();
    init_hooks7();
    init_Box();
    init_Pagination();
    init_Text();
    init_InlineStack();
    init_utils3();
    init_Tooltip();
    SHORT_TITLE = 20;
    REALLY_SHORT_TITLE = 8;
    LONG_TITLE = 34;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Page/Page.js
function Page({
  children,
  fullWidth,
  narrowWidth,
  ...rest
}) {
  const pageClassName = classNames(styles55.Page, fullWidth && styles55.fullWidth, narrowWidth && styles55.narrowWidth);
  const hasHeaderContent = rest.title != null && rest.title !== "" || rest.subtitle != null && rest.subtitle !== "" || rest.primaryAction != null || rest.secondaryActions != null && (isInterface(rest.secondaryActions) && rest.secondaryActions.length > 0 || isReactElement(rest.secondaryActions)) || rest.actionGroups != null && rest.actionGroups.length > 0 || rest.backAction != null;
  const contentClassName = classNames(!hasHeaderContent && styles55.Content);
  const headerMarkup = hasHeaderContent ? /* @__PURE__ */ import_react194.default.createElement(Header2, Object.assign({
    filterActions: true
  }, rest)) : null;
  return /* @__PURE__ */ import_react194.default.createElement("div", {
    className: pageClassName
  }, headerMarkup, /* @__PURE__ */ import_react194.default.createElement("div", {
    className: contentClassName
  }, children));
}
var import_react194;
var init_Page = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Page/Page.js"() {
    import_react194 = __toESM(require_react());
    init_css();
    init_is_interface();
    init_is_react_element();
    init_Page_css();
    init_Header2();
  }
});

// node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.css.js
var styles63;
var init_PageActions_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.css.js"() {
    styles63 = {
      "PageActions": "Polaris-PageActions"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.js
function PageActions({
  primaryAction,
  secondaryActions
}) {
  let primaryActionMarkup = null;
  if (isReactElement(primaryAction)) {
    primaryActionMarkup = /* @__PURE__ */ import_react195.default.createElement(import_react195.default.Fragment, null, primaryAction);
  } else if (primaryAction) {
    primaryActionMarkup = buttonsFrom(primaryAction, {
      variant: "primary"
    });
  }
  let secondaryActionsMarkup = null;
  if (isInterface(secondaryActions) && secondaryActions.length > 0) {
    secondaryActionsMarkup = /* @__PURE__ */ import_react195.default.createElement(ButtonGroup, null, buttonsFrom(secondaryActions));
  } else if (isReactElement(secondaryActions)) {
    secondaryActionsMarkup = /* @__PURE__ */ import_react195.default.createElement(import_react195.default.Fragment, null, secondaryActions);
  }
  return /* @__PURE__ */ import_react195.default.createElement("div", {
    className: styles63.PageActions
  }, /* @__PURE__ */ import_react195.default.createElement(LegacyStack, {
    distribution: "trailing",
    spacing: "tight"
  }, secondaryActionsMarkup, primaryActionMarkup));
}
var import_react195;
var init_PageActions = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PageActions/PageActions.js"() {
    import_react195 = __toESM(require_react());
    init_is_interface();
    init_is_react_element();
    init_PageActions_css();
    init_utils3();
    init_ButtonGroup();
    init_LegacyStack();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.css.js
var styles64;
var init_ResourceItem_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.css.js"() {
    styles64 = {
      "ResourceItem": "Polaris-ResourceItem",
      "Actions": "Polaris-ResourceItem__Actions",
      "ItemWrapper": "Polaris-ResourceItem__ItemWrapper",
      "CheckboxWrapper": "Polaris-ResourceItem__CheckboxWrapper",
      "focusedInner": "Polaris-ResourceItem--focusedInner",
      "focused": "Polaris-ResourceItem--focused",
      "selected": "Polaris-ResourceItem--selected",
      "Link": "Polaris-ResourceItem__Link",
      "Button": "Polaris-ResourceItem__Button",
      "selectable": "Polaris-ResourceItem--selectable",
      "disabled": "Polaris-ResourceItem--disabled",
      "ListItem": "Polaris-ResourceItem__ListItem",
      "hasBulkActions": "Polaris-ResourceItem--hasBulkActions"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/resource-list/types.js
var SELECT_ALL_ITEMS2;
var init_types4 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/resource-list/types.js"() {
    SELECT_ALL_ITEMS2 = "All";
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/resource-list/context.js
var import_react196, ResourceListContext;
var init_context15 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/resource-list/context.js"() {
    import_react196 = __toESM(require_react());
    ResourceListContext = /* @__PURE__ */ (0, import_react196.createContext)({});
  }
});

// node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.js
function noop9() {
}
function stopPropagation2(event) {
  event.stopPropagation();
}
function isSelected(id, selectedItems) {
  return Boolean(selectedItems && (Array.isArray(selectedItems) && selectedItems.includes(id) || selectedItems === SELECT_ALL_ITEMS2));
}
function ResourceItem(props) {
  const breakpoints2 = useBreakpoints();
  return /* @__PURE__ */ import_react197.default.createElement(BaseResourceItem, Object.assign({}, props, {
    breakpoints: breakpoints2,
    context: (0, import_react197.useContext)(ResourceListContext),
    i18n: useI18n()
  }));
}
function getAlignment(alignment) {
  switch (alignment) {
    case "leading":
      return "start";
    case "trailing":
      return "end";
    case "center":
      return "center";
    case "fill":
      return "stretch";
    case "baseline":
      return "baseline";
    default:
      return "start";
  }
}
function UseId(props) {
  const id = (0, import_react197.useId)();
  return props.children(id);
}
var import_react197, import_react_fast_compare2, BaseResourceItem;
var init_ResourceItem = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ResourceItem/ResourceItem.js"() {
    import_react197 = __toESM(require_react());
    init_dist();
    import_react_fast_compare2 = __toESM(require_react_fast_compare());
    init_breakpoints2();
    init_css();
    init_ResourceItem_css();
    init_types4();
    init_context15();
    init_hooks2();
    init_Checkbox();
    init_ButtonGroup();
    init_utils3();
    init_Popover();
    init_Button();
    init_ActionList();
    init_Box();
    init_InlineGrid();
    init_InlineStack();
    init_UnstyledLink();
    BaseResourceItem = class extends import_react197.Component {
      constructor(...args) {
        super(...args);
        this.state = {
          actionsMenuVisible: false,
          focused: false,
          focusedInner: false,
          selected: isSelected(this.props.id, this.props.context.selectedItems)
        };
        this.node = null;
        this.overlayRef = /* @__PURE__ */ (0, import_react197.createRef)();
        this.buttonOverlay = /* @__PURE__ */ (0, import_react197.createRef)();
        this.setNode = (node) => {
          this.node = node;
        };
        this.handleFocus = (event) => {
          if (event.target === this.buttonOverlay.current || this.node && event.target === this.overlayRef.current) {
            this.setState({
              focused: true,
              focusedInner: false
            });
          } else if (this.node && this.node.contains(event.target)) {
            this.setState({
              focused: true,
              focusedInner: true
            });
          }
        };
        this.handleBlur = ({
          relatedTarget
        }) => {
          if (this.node && relatedTarget instanceof Element && this.node.contains(relatedTarget)) {
            return;
          }
          this.setState({
            focused: false,
            focusedInner: false
          });
        };
        this.handleMouseOut = () => {
          this.state.focused && this.setState({
            focused: false,
            focusedInner: false
          });
          if (this.props.onMouseOut) {
            this.props.onMouseOut();
          }
        };
        this.handleLargerSelectionArea = (event) => {
          stopPropagation2(event);
          this.handleSelection(!this.state.selected, event.nativeEvent.shiftKey);
        };
        this.handleSelection = (value, shiftKey) => {
          const {
            id,
            sortOrder,
            context: {
              onSelectionChange
            }
          } = this.props;
          if (id == null || onSelectionChange == null) {
            return;
          }
          this.setState({
            focused: value,
            focusedInner: value
          });
          onSelectionChange(value, id, sortOrder, shiftKey);
        };
        this.handleClick = (event) => {
          stopPropagation2(event);
          const {
            id,
            onClick,
            url,
            context: {
              selectMode
            }
          } = this.props;
          const {
            ctrlKey,
            metaKey
          } = event.nativeEvent;
          const anchor = this.node && this.node.querySelector("a");
          if (selectMode) {
            this.handleLargerSelectionArea(event);
            return;
          }
          if (anchor === event.target) {
            return;
          }
          if (onClick) {
            onClick(id);
          }
          if (url && (ctrlKey || metaKey)) {
            window.open(url, "_blank");
            return;
          }
          if (url && anchor) {
            anchor.click();
          }
        };
        this.handleKeyUp = (event) => {
          const {
            disabled,
            onClick = noop9,
            context: {
              selectMode
            }
          } = this.props;
          const {
            key
          } = event;
          if (key === "Enter" && this.props.url && !selectMode && !disabled) {
            onClick();
          }
        };
        this.handleActionsClick = () => {
          this.setState(({
            actionsMenuVisible
          }) => ({
            actionsMenuVisible: !actionsMenuVisible
          }));
        };
        this.handleCloseRequest = () => {
          this.setState({
            actionsMenuVisible: false
          });
        };
      }
      static getDerivedStateFromProps(nextProps, prevState) {
        const selected = isSelected(nextProps.id, nextProps.context.selectedItems);
        if (prevState.selected === selected) {
          return null;
        }
        return {
          selected
        };
      }
      shouldComponentUpdate(nextProps, nextState) {
        const {
          children: nextChildren,
          context: {
            selectedItems: nextSelectedItems,
            ...restNextContext
          },
          ...restNextProps
        } = nextProps;
        const {
          children,
          context: {
            selectedItems,
            ...restContext
          },
          ...restProps
        } = this.props;
        const nextSelectMode = nextProps.context.selectMode;
        return !(0, import_react_fast_compare2.default)(this.state, nextState) || this.props.context.selectMode !== nextSelectMode || !nextProps.context.selectMode && (!(0, import_react_fast_compare2.default)(restProps, restNextProps) || !(0, import_react_fast_compare2.default)(restContext, restNextContext));
      }
      render() {
        const {
          children,
          url,
          external,
          media,
          shortcutActions,
          ariaControls,
          ariaExpanded,
          persistActions = false,
          accessibilityLabel,
          name,
          context: {
            selectable,
            selectMode,
            hasBulkActions,
            loading,
            resourceName
          },
          i18n,
          verticalAlignment,
          dataHref,
          breakpoints: breakpoints2,
          onMouseOver,
          disabled
        } = this.props;
        const {
          actionsMenuVisible,
          focused,
          focusedInner,
          selected
        } = this.state;
        let ownedMarkup = null;
        let handleMarkup = null;
        if (selectable) {
          const checkboxAccessibilityLabel = name || accessibilityLabel || i18n.translate("Polaris.Common.checkbox");
          handleMarkup = /* @__PURE__ */ import_react197.default.createElement("div", {
            className: styles64.CheckboxWrapper,
            onClick: stopPropagation2,
            onChange: this.handleLargerSelectionArea
          }, /* @__PURE__ */ import_react197.default.createElement(UseId, null, (id) => /* @__PURE__ */ import_react197.default.createElement(Checkbox, {
            id,
            label: checkboxAccessibilityLabel,
            labelHidden: true,
            checked: selected,
            disabled: loading || disabled,
            bleedInlineStart: "300",
            bleedInlineEnd: "300",
            bleedBlockStart: "300",
            bleedBlockEnd: "300",
            fill: true,
            labelClassName: styles64.CheckboxLabel
          })));
        }
        if (media || selectable) {
          ownedMarkup = /* @__PURE__ */ import_react197.default.createElement(InlineStack, {
            gap: "300",
            blockAlign: media && selectable ? "center" : getAlignment(verticalAlignment)
          }, handleMarkup, media);
        }
        const className = classNames(styles64.ResourceItem, focused && styles64.focused, selectable && styles64.selectable, selected && styles64.selected, selectMode && styles64.selectMode, persistActions && styles64.persistActions, focusedInner && styles64.focusedInner, disabled && styles64.disabled);
        const listItemClassName = classNames(styles64.ListItem, focused && !focusedInner && styles64.focused, hasBulkActions && styles64.hasBulkActions, selected && styles64.selected, selectable && styles64.selectable);
        let actionsMarkup = null;
        let disclosureMarkup = null;
        if (shortcutActions && !loading) {
          if (persistActions) {
            actionsMarkup = breakpoints2?.lgUp ? /* @__PURE__ */ import_react197.default.createElement("div", {
              className: styles64.Actions,
              onClick: stopPropagation2
            }, /* @__PURE__ */ import_react197.default.createElement(ButtonGroup, null, buttonsFrom(shortcutActions, {
              variant: "tertiary"
            }))) : null;
            const disclosureAccessibilityLabel = name ? i18n.translate("Polaris.ResourceList.Item.actionsDropdownLabel", {
              accessibilityLabel: name
            }) : i18n.translate("Polaris.ResourceList.Item.actionsDropdown");
            disclosureMarkup = !selectMode && breakpoints2?.lgDown ? /* @__PURE__ */ import_react197.default.createElement("div", {
              onClick: stopPropagation2
            }, /* @__PURE__ */ import_react197.default.createElement(Popover2, {
              activator: /* @__PURE__ */ import_react197.default.createElement(Button, {
                accessibilityLabel: disclosureAccessibilityLabel,
                onClick: this.handleActionsClick,
                variant: "tertiary",
                icon: SvgMenuHorizontalIcon
              }),
              onClose: this.handleCloseRequest,
              active: actionsMenuVisible
            }, /* @__PURE__ */ import_react197.default.createElement(ActionList, {
              items: shortcutActions
            }))) : null;
          } else if (breakpoints2?.lgUp) {
            actionsMarkup = /* @__PURE__ */ import_react197.default.createElement("div", {
              className: styles64.Actions,
              onClick: stopPropagation2
            }, /* @__PURE__ */ import_react197.default.createElement(Box, {
              position: "absolute",
              insetBlockStart: "400",
              insetInlineEnd: "500"
            }, /* @__PURE__ */ import_react197.default.createElement(ButtonGroup, {
              variant: "segmented"
            }, buttonsFrom(shortcutActions, {
              size: "slim"
            }))));
          }
        }
        const containerMarkup = /* @__PURE__ */ import_react197.default.createElement(Box, {
          id: this.props.id,
          position: "relative",
          paddingInlineStart: "300",
          paddingInlineEnd: "300",
          paddingBlockStart: "300",
          paddingBlockEnd: "300",
          zIndex: "var(--pc-resource-item-content-stacking-order)"
        }, /* @__PURE__ */ import_react197.default.createElement(InlineGrid, {
          columns: {
            xs: "1fr auto"
          }
        }, /* @__PURE__ */ import_react197.default.createElement(InlineGrid, {
          columns: {
            xs: media || selectable ? "auto 1fr" : "1fr"
          },
          gap: "300"
        }, ownedMarkup, /* @__PURE__ */ import_react197.default.createElement(InlineStack, {
          blockAlign: getAlignment(verticalAlignment)
        }, /* @__PURE__ */ import_react197.default.createElement(Box, {
          width: "100%",
          padding: "0"
        }, children))), actionsMarkup, disclosureMarkup));
        const tabIndex = loading ? -1 : 0;
        const ariaLabel = accessibilityLabel || i18n.translate("Polaris.ResourceList.Item.viewItem", {
          itemName: name || resourceName && resourceName.singular || ""
        });
        const accessibleMarkup = url ? /* @__PURE__ */ import_react197.default.createElement(UseId, null, (id) => /* @__PURE__ */ import_react197.default.createElement(UnstyledLink, {
          "aria-describedby": this.props.id,
          "aria-label": ariaLabel,
          className: styles64.Link,
          url,
          external,
          tabIndex,
          id,
          ref: this.overlayRef
        })) : /* @__PURE__ */ import_react197.default.createElement("button", {
          className: styles64.Button,
          "aria-label": ariaLabel,
          "aria-controls": ariaControls,
          "aria-expanded": ariaExpanded,
          onClick: this.handleClick,
          tabIndex,
          ref: this.buttonOverlay
        });
        return /* @__PURE__ */ import_react197.default.createElement("li", {
          className: listItemClassName,
          "data-href": dataHref
        }, /* @__PURE__ */ import_react197.default.createElement("div", {
          className: styles64.ItemWrapper
        }, /* @__PURE__ */ import_react197.default.createElement("div", {
          ref: this.setNode,
          className,
          onClick: disabled ? () => {
          } : this.handleClick,
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          onKeyUp: this.handleKeyUp,
          onMouseOver,
          onMouseOut: this.handleMouseOut,
          "data-href": url
        }, disabled ? null : accessibleMarkup, containerMarkup)));
      }
      // This fires onClick when there is a URL on the item
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Select/Select.css.js
var styles65;
var init_Select_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Select/Select.css.js"() {
    styles65 = {
      "Select": "Polaris-Select",
      "disabled": "Polaris-Select--disabled",
      "error": "Polaris-Select--error",
      "Backdrop": "Polaris-Select__Backdrop",
      "Input": "Polaris-Select__Input",
      "Content": "Polaris-Select__Content",
      "InlineLabel": "Polaris-Select__InlineLabel",
      "Icon": "Polaris-Select__Icon",
      "SelectedOption": "Polaris-Select__SelectedOption",
      "Prefix": "Polaris-Select__Prefix",
      "hover": "Polaris-Select--hover",
      "toneMagic": "Polaris-Select--toneMagic"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Select/Select.js
function Select({
  options: optionsProp,
  label,
  labelAction,
  labelHidden: labelHiddenProp,
  labelInline,
  disabled,
  helpText,
  placeholder,
  id: idProp,
  name,
  value = PLACEHOLDER_VALUE,
  error,
  onChange,
  onFocus,
  onBlur,
  requiredIndicator,
  tone
}) {
  const {
    value: focused,
    toggle: toggleFocused
  } = useToggle(false);
  const uniqId = (0, import_react198.useId)();
  const id = idProp ?? uniqId;
  const labelHidden = labelInline ? true : labelHiddenProp;
  const className = classNames(styles65.Select, error && styles65.error, tone && styles65[variationName("tone", tone)], disabled && styles65.disabled);
  const handleFocus = (0, import_react198.useCallback)((event) => {
    toggleFocused();
    onFocus?.(event);
  }, [onFocus, toggleFocused]);
  const handleBlur = (0, import_react198.useCallback)((event) => {
    toggleFocused();
    onBlur?.(event);
  }, [onBlur, toggleFocused]);
  const handleChange = onChange ? (event) => onChange(event.currentTarget.value, id) : void 0;
  const describedBy = [];
  if (helpText) {
    describedBy.push(helpTextID(id));
  }
  if (error) {
    describedBy.push(`${id}Error`);
  }
  const options = optionsProp || [];
  let normalizedOptions = options.map(normalizeOption);
  if (placeholder) {
    normalizedOptions = [{
      label: placeholder,
      value: PLACEHOLDER_VALUE,
      disabled: true
    }, ...normalizedOptions];
  }
  const inlineLabelMarkup = labelInline && /* @__PURE__ */ import_react198.default.createElement(Box, {
    paddingInlineEnd: "100"
  }, /* @__PURE__ */ import_react198.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    tone: tone && tone === "magic" && !focused ? "magic-subdued" : "subdued",
    truncate: true
  }, label));
  const selectedOption = getSelectedOption(normalizedOptions, value);
  const prefixMarkup = selectedOption.prefix && /* @__PURE__ */ import_react198.default.createElement("div", {
    className: styles65.Prefix
  }, selectedOption.prefix);
  const contentMarkup = /* @__PURE__ */ import_react198.default.createElement("div", {
    className: styles65.Content,
    "aria-hidden": true,
    "aria-disabled": disabled
  }, inlineLabelMarkup, prefixMarkup, /* @__PURE__ */ import_react198.default.createElement("span", {
    className: styles65.SelectedOption
  }, selectedOption.label), /* @__PURE__ */ import_react198.default.createElement("span", {
    className: styles65.Icon
  }, /* @__PURE__ */ import_react198.default.createElement(Icon, {
    source: SvgSelectIcon
  })));
  const optionsMarkup = normalizedOptions.map(renderOption);
  return /* @__PURE__ */ import_react198.default.createElement(Labelled, {
    id,
    label,
    error,
    action: labelAction,
    labelHidden,
    helpText,
    requiredIndicator,
    disabled
  }, /* @__PURE__ */ import_react198.default.createElement("div", {
    className
  }, /* @__PURE__ */ import_react198.default.createElement("select", {
    id,
    name,
    value,
    className: styles65.Input,
    disabled,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onChange: handleChange,
    "aria-invalid": Boolean(error),
    "aria-describedby": describedBy.length ? describedBy.join(" ") : void 0,
    "aria-required": requiredIndicator
  }, optionsMarkup), contentMarkup, /* @__PURE__ */ import_react198.default.createElement("div", {
    className: styles65.Backdrop
  })));
}
function isString(option) {
  return typeof option === "string";
}
function isGroup(option) {
  return typeof option === "object" && "options" in option && option.options != null;
}
function normalizeStringOption(option) {
  return {
    label: option,
    value: option
  };
}
function normalizeOption(option) {
  if (isString(option)) {
    return normalizeStringOption(option);
  } else if (isGroup(option)) {
    const {
      title,
      options
    } = option;
    return {
      title,
      options: options.map((option2) => {
        return isString(option2) ? normalizeStringOption(option2) : option2;
      })
    };
  }
  return option;
}
function getSelectedOption(options, value) {
  const flatOptions = flattenOptions(options);
  let selectedOption = flatOptions.find((option) => value === option.value);
  if (selectedOption === void 0) {
    selectedOption = flatOptions.find((option) => !option.hidden);
  }
  return selectedOption || {
    value: "",
    label: ""
  };
}
function flattenOptions(options) {
  let flatOptions = [];
  options.forEach((optionOrGroup) => {
    if (isGroup(optionOrGroup)) {
      flatOptions = flatOptions.concat(optionOrGroup.options);
    } else {
      flatOptions.push(optionOrGroup);
    }
  });
  return flatOptions;
}
function renderSingleOption(option) {
  const {
    value,
    label,
    prefix: _prefix,
    key,
    ...rest
  } = option;
  return /* @__PURE__ */ import_react198.default.createElement("option", Object.assign({
    key: key ?? value,
    value
  }, rest), label);
}
function renderOption(optionOrGroup) {
  if (isGroup(optionOrGroup)) {
    const {
      title,
      options
    } = optionOrGroup;
    return /* @__PURE__ */ import_react198.default.createElement("optgroup", {
      label: title,
      key: title
    }, options.map(renderSingleOption));
  }
  return renderSingleOption(optionOrGroup);
}
var import_react198, PLACEHOLDER_VALUE;
var init_Select = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Select/Select.js"() {
    import_react198 = __toESM(require_react());
    init_dist();
    init_css();
    init_use_toggle();
    init_Select_css();
    init_Icon();
    init_Labelled();
    init_Box();
    init_Text();
    PLACEHOLDER_VALUE = "";
  }
});

// node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.css.js
var styles66;
var init_ResourceList_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.css.js"() {
    styles66 = {
      "FiltersWrapper": "Polaris-ResourceList__FiltersWrapper",
      "ResourceListWrapper": "Polaris-ResourceList__ResourceListWrapper",
      "ResourceList": "Polaris-ResourceList",
      "HeaderOuterWrapper": "Polaris-ResourceList__HeaderOuterWrapper",
      "BulkActionsWrapper": "Polaris-ResourceList__BulkActionsWrapper",
      "HeaderWrapper-disabled": "Polaris-ResourceList__HeaderWrapper--disabled",
      "HeaderWrapper-overlay": "Polaris-ResourceList__HeaderWrapper--overlay",
      "HeaderWrapper": "Polaris-ResourceList__HeaderWrapper",
      "HeaderWrapper-isSticky": "Polaris-ResourceList__HeaderWrapper--isSticky",
      "HeaderContentWrapper": "Polaris-ResourceList__HeaderContentWrapper",
      "HeaderWrapper-inSelectMode": "Polaris-ResourceList__HeaderWrapper--inSelectMode",
      "SortWrapper": "Polaris-ResourceList__SortWrapper",
      "AlternateToolWrapper": "Polaris-ResourceList__AlternateToolWrapper",
      "HeaderWrapper-hasSelect": "Polaris-ResourceList__HeaderWrapper--hasSelect",
      "HeaderWrapper-hasAlternateTool": "Polaris-ResourceList__HeaderWrapper--hasAlternateTool",
      "HeaderWrapper-hasSort": "Polaris-ResourceList__HeaderWrapper--hasSort",
      "HeaderTitleWrapper": "Polaris-ResourceList__HeaderTitleWrapper",
      "SelectAllActionsWrapper": "Polaris-ResourceList__SelectAllActionsWrapper",
      "SelectAllActionsWrapperSticky": "Polaris-ResourceList__SelectAllActionsWrapperSticky",
      "SelectAllActionsWrapperAtEnd": "Polaris-ResourceList__SelectAllActionsWrapperAtEnd",
      "SelectAllActionsWrapperAtEndAppear": "Polaris-ResourceList__SelectAllActionsWrapperAtEndAppear",
      "BulkActionsWrapperVisible": "Polaris-ResourceList__BulkActionsWrapperVisible",
      "PaginationWrapper": "Polaris-ResourceList__PaginationWrapper",
      "CheckableButtonWrapper": "Polaris-ResourceList__CheckableButtonWrapper",
      "SelectButtonWrapper": "Polaris-ResourceList__SelectButtonWrapper",
      "EmptySearchResultWrapper": "Polaris-ResourceList__EmptySearchResultWrapper",
      "ItemWrapper": "Polaris-ResourceList__ItemWrapper",
      "ItemWrapper-isLoading": "Polaris-ResourceList__ItemWrapper--isLoading",
      "SpinnerContainer": "Polaris-ResourceList__SpinnerContainer",
      "LoadingOverlay": "Polaris-ResourceList__LoadingOverlay",
      "DisabledPointerEvents": "Polaris-ResourceList__DisabledPointerEvents",
      "disableTextSelection": "Polaris-ResourceList--disableTextSelection"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.js
function getAllItemsOnPage(items, idForItem) {
  return items.map((item, index) => {
    return idForItem(item, index);
  });
}
function defaultIdForItem(item, index) {
  return Object.prototype.hasOwnProperty.call(item, "id") ? item.id : index.toString();
}
function ResourceList({
  items,
  filterControl,
  flushFilters,
  emptyState,
  emptySearchState,
  resourceName: resourceNameProp,
  promotedBulkActions,
  bulkActions,
  selectedItems = [],
  isFiltered,
  selectable,
  hasMoreItems,
  loading,
  headerContent,
  showHeader,
  totalItemsCount,
  sortValue,
  sortOptions,
  alternateTool,
  onSortChange,
  onSelectionChange,
  renderItem,
  idForItem = defaultIdForItem,
  resolveItemId,
  pagination
}) {
  const i18n = useI18n();
  const [selectMode, setSelectMode] = (0, import_react199.useState)(Boolean(selectedItems && selectedItems.length > 0));
  const [loadingPosition, setLoadingPositionState] = (0, import_react199.useState)(0);
  const [lastSelected, setLastSelected] = (0, import_react199.useState)();
  const [smallScreen, setSmallScreen] = (0, import_react199.useState)(isBreakpointsXS());
  const forceUpdate = (0, import_react199.useReducer)((x = 0) => x + 1, 0)[1];
  const checkableButtonRef = (0, import_react199.useRef)(null);
  const defaultResourceName = useLazyRef(() => ({
    singular: i18n.translate("Polaris.ResourceList.defaultItemSingular"),
    plural: i18n.translate("Polaris.ResourceList.defaultItemPlural")
  }));
  const listRef = (0, import_react199.useRef)(null);
  const handleSelectMode = (selectMode2) => {
    setSelectMode(selectMode2);
    if (!selectMode2 && onSelectionChange) {
      onSelectionChange([]);
    }
  };
  const handleResize = debounce(() => {
    const newSmallScreen = isBreakpointsXS();
    if (selectedItems && selectedItems.length === 0 && selectMode && !newSmallScreen) {
      handleSelectMode(false);
    }
    if (smallScreen !== newSmallScreen) {
      setSmallScreen(newSmallScreen);
    }
  }, 50, {
    leading: true,
    trailing: true,
    maxWait: 50
  });
  useEventListener("resize", handleResize);
  const isSelectable = Boolean(promotedBulkActions && promotedBulkActions.length > 0 || bulkActions && bulkActions.length > 0 || selectable) && !smallScreen;
  const selectAllSelectState = (0, import_react199.useMemo)(() => {
    let selectState = "indeterminate";
    if (!selectedItems || Array.isArray(selectedItems) && selectedItems.length === 0) {
      selectState = false;
    } else if (selectedItems === SELECT_ALL_ITEMS2 || Array.isArray(selectedItems) && selectedItems.length === items.length) {
      selectState = true;
    }
    return selectState;
  }, [items.length, selectedItems]);
  const resourceName = resourceNameProp ? resourceNameProp : defaultResourceName.current;
  const headerTitle = () => {
    const itemsCount = items.length;
    const resource = !loading && (!totalItemsCount && itemsCount === 1 || totalItemsCount === 1) ? resourceName.singular : resourceName.plural;
    if (loading) {
      return i18n.translate("Polaris.ResourceList.loading", {
        resource
      });
    } else if (totalItemsCount) {
      return i18n.translate("Polaris.ResourceList.showingTotalCount", {
        itemsCount,
        totalItemsCount,
        resource
      });
    } else if (headerContent) {
      return headerContent;
    } else {
      return i18n.translate("Polaris.ResourceList.showing", {
        itemsCount,
        resource
      });
    }
  };
  const [selectedItemsCount, setSelectedItemsCount] = (0, import_react199.useState)(selectedItems === SELECT_ALL_ITEMS2 ? `${items.length}+` : selectedItems.length);
  (0, import_react199.useEffect)(() => {
    if (selectedItems === SELECT_ALL_ITEMS2 || selectedItems.length > 0) {
      setSelectedItemsCount(selectedItems === SELECT_ALL_ITEMS2 ? `${items.length}+` : selectedItems.length);
    }
  }, [selectedItems, items.length]);
  const selectAllActionsLabel = i18n.translate("Polaris.ResourceList.selected", {
    selectedItemsCount
  });
  const bulkActionsAccessibilityLabel = (0, import_react199.useMemo)(() => {
    const selectedItemsCount2 = selectedItems.length;
    const totalItemsCount2 = items.length;
    const allSelected = selectedItemsCount2 === totalItemsCount2;
    if (totalItemsCount2 === 1 && allSelected) {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxDeselectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (totalItemsCount2 === 1) {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxSelectAllSingle", {
        resourceNameSingular: resourceName.singular
      });
    } else if (allSelected) {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxDeselectAllMultiple", {
        itemsLength: items.length,
        resourceNamePlural: resourceName.plural
      });
    } else {
      return i18n.translate("Polaris.ResourceList.a11yCheckboxSelectAllMultiple", {
        itemsLength: items.length,
        resourceNamePlural: resourceName.plural
      });
    }
  }, [i18n, items.length, resourceName.singular, resourceName.plural, selectedItems.length]);
  const paginatedSelectAllText = (0, import_react199.useMemo)(() => {
    if (!isSelectable || !hasMoreItems) {
      return;
    }
    if (selectedItems === SELECT_ALL_ITEMS2) {
      return i18n.translate(isFiltered ? "Polaris.ResourceList.allFilteredItemsSelected" : "Polaris.ResourceList.allItemsSelected", {
        itemsLength: items.length,
        resourceNamePlural: resourceName.plural
      });
    }
  }, [hasMoreItems, i18n, isFiltered, isSelectable, items, resourceName.plural, selectedItems]);
  const handleSelectAllItemsInStore = (0, import_react199.useCallback)(() => {
    const newlySelectedItems = selectedItems === SELECT_ALL_ITEMS2 ? getAllItemsOnPage(items, idForItem) : SELECT_ALL_ITEMS2;
    if (onSelectionChange) {
      onSelectionChange(newlySelectedItems);
    }
  }, [idForItem, items, onSelectionChange, selectedItems]);
  const paginatedSelectAllAction = (0, import_react199.useMemo)(() => {
    if (!isSelectable || !hasMoreItems) {
      return;
    }
    const actionText = selectedItems === SELECT_ALL_ITEMS2 ? i18n.translate("Polaris.Common.undo") : i18n.translate(isFiltered ? "Polaris.ResourceList.selectAllFilteredItems" : "Polaris.ResourceList.selectAllItems", {
      itemsLength: items.length,
      resourceNamePlural: resourceName.plural
    });
    return {
      content: actionText,
      onAction: handleSelectAllItemsInStore
    };
  }, [handleSelectAllItemsInStore, hasMoreItems, i18n, isFiltered, isSelectable, items.length, resourceName.plural, selectedItems]);
  const emptySearchResultText = {
    title: i18n.translate("Polaris.ResourceList.emptySearchResultTitle", {
      resourceNamePlural: resourceName.plural
    }),
    description: i18n.translate("Polaris.ResourceList.emptySearchResultDescription")
  };
  const setLoadingPosition = (0, import_react199.useCallback)(() => {
    if (listRef.current != null) {
      if (typeof window === "undefined") {
        return;
      }
      const overlay2 = listRef.current.getBoundingClientRect();
      const viewportHeight = Math.max(document.documentElement ? document.documentElement.clientHeight : 0, window.innerHeight || 0);
      const overflow = viewportHeight - overlay2.height;
      const spinnerHeight = items.length === 1 ? SMALL_SPINNER_HEIGHT : LARGE_SPINNER_HEIGHT;
      const spinnerPosition = overflow > 0 ? (overlay2.height - spinnerHeight) / 2 : (viewportHeight - overlay2.top - spinnerHeight) / 2;
      setLoadingPositionState(spinnerPosition);
    }
  }, [listRef, items.length]);
  const itemsExist = items.length > 0;
  (0, import_react199.useEffect)(() => {
    if (loading) {
      setLoadingPosition();
    }
  }, [loading, setLoadingPosition]);
  (0, import_react199.useEffect)(() => {
    if (selectedItems && selectedItems.length > 0 && !selectMode) {
      setSelectMode(true);
    }
    if ((!selectedItems || selectedItems.length === 0) && !isBreakpointsXS()) {
      setSelectMode(false);
    }
  }, [selectedItems, selectMode]);
  (0, import_react199.useEffect)(() => {
    forceUpdate();
  }, [forceUpdate, items]);
  const renderItemWithId = (item, index) => {
    const id = idForItem(item, index);
    const itemContent = renderItem(item, id, index);
    if (!isElementOfType(itemContent, ResourceItem)) {
      console.warn("<ResourceList /> renderItem function should return a <ResourceItem />.");
    }
    return itemContent;
  };
  const handleMultiSelectionChange = (lastSelected2, currentSelected, resolveItemId2) => {
    const min = Math.min(lastSelected2, currentSelected);
    const max = Math.max(lastSelected2, currentSelected);
    return items.slice(min, max + 1).map(resolveItemId2);
  };
  const handleSelectionChange = (selected, id, sortOrder, shiftKey) => {
    if (selectedItems == null || onSelectionChange == null) {
      return;
    }
    let newlySelectedItems = selectedItems === SELECT_ALL_ITEMS2 ? getAllItemsOnPage(items, idForItem) : [...selectedItems];
    if (sortOrder !== void 0) {
      setLastSelected(sortOrder);
    }
    const lastSelectedFromState = lastSelected;
    let selectedIds = [id];
    if (shiftKey && lastSelectedFromState != null && sortOrder !== void 0 && resolveItemId) {
      selectedIds = handleMultiSelectionChange(lastSelectedFromState, sortOrder, resolveItemId);
    }
    newlySelectedItems = [.../* @__PURE__ */ new Set([...newlySelectedItems, ...selectedIds])];
    if (!selected) {
      for (const selectedId of selectedIds) {
        newlySelectedItems.splice(newlySelectedItems.indexOf(selectedId), 1);
      }
    }
    if (newlySelectedItems.length === 0 && !isBreakpointsXS()) {
      handleSelectMode(false);
    } else if (newlySelectedItems.length > 0) {
      handleSelectMode(true);
    }
    if (onSelectionChange) {
      onSelectionChange(newlySelectedItems);
    }
  };
  const handleToggleAll = () => {
    let newlySelectedItems;
    if (Array.isArray(selectedItems) && selectedItems.length === items.length || selectedItems === SELECT_ALL_ITEMS2) {
      newlySelectedItems = [];
    } else {
      newlySelectedItems = items.map((item, index) => {
        return idForItem(item, index);
      });
    }
    if (newlySelectedItems.length === 0 && !isBreakpointsXS()) {
      handleSelectMode(false);
    } else if (newlySelectedItems.length > 0) {
      handleSelectMode(true);
    }
    if (onSelectionChange) {
      onSelectionChange(newlySelectedItems);
    }
    setTimeout(() => {
      checkableButtonRef?.current?.focus();
    }, 0);
  };
  const bulkActionClassNames = classNames(styles66.BulkActionsWrapper, selectMode && styles66.BulkActionsWrapperVisible);
  const bulkActionsMarkup = isSelectable ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: bulkActionClassNames
  }, /* @__PURE__ */ import_react199.default.createElement(BulkActions, {
    selectMode,
    onSelectModeToggle: handleSelectMode,
    label: selectAllActionsLabel,
    paginatedSelectAllAction,
    paginatedSelectAllText,
    promotedActions: promotedBulkActions,
    actions: bulkActions,
    disabled: loading,
    accessibilityLabel: bulkActionsAccessibilityLabel,
    selected: selectAllSelectState,
    onToggleAll: handleToggleAll,
    ref: checkableButtonRef,
    buttonSize: "medium"
  })) : null;
  const filterControlMarkup = filterControl ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: classNames(!flushFilters && styles66.FiltersWrapper)
  }, filterControl) : null;
  const sortingSelectMarkup = sortOptions && sortOptions.length > 0 && !alternateTool ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.SortWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(Select, {
    label: i18n.translate("Polaris.ResourceList.sortingLabel"),
    labelInline: !smallScreen,
    labelHidden: smallScreen,
    options: sortOptions,
    onChange: onSortChange,
    value: sortValue,
    disabled: selectMode
  })) : null;
  const alternateToolMarkup = alternateTool && !sortingSelectMarkup ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.AlternateToolWrapper
  }, alternateTool) : null;
  const headerTitleMarkup = /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.HeaderTitleWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, headerTitle()));
  const selectButtonMarkup = isSelectable ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.SelectButtonWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(Button, {
    disabled: selectMode,
    icon: SvgCheckboxIcon,
    onClick: () => handleSelectMode(true)
  }, i18n.translate("Polaris.ResourceList.selectButtonText"))) : null;
  const checkableButtonMarkup = isSelectable ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.CheckableButtonWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(CheckableButton, {
    accessibilityLabel: bulkActionsAccessibilityLabel,
    label: headerTitle(),
    onToggleAll: handleToggleAll,
    disabled: loading,
    ref: checkableButtonRef,
    selected: selectAllSelectState
  })) : null;
  const needsHeader = isSelectable || sortOptions && sortOptions.length > 0 || alternateTool;
  const headerWrapperOverlay = loading ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66["HeaderWrapper-overlay"]
  }) : null;
  const showEmptyState = emptyState && !itemsExist && !loading;
  const showEmptySearchState = !showEmptyState && filterControl && !itemsExist && !loading;
  const headerMarkup = !showEmptyState && showHeader !== false && !showEmptySearchState && (showHeader || needsHeader) && listRef.current && /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.HeaderOuterWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(Sticky, {
    boundingElement: listRef.current
  }, (isSticky) => {
    const headerClassName = classNames(styles66.HeaderWrapper, sortOptions && sortOptions.length > 0 && !alternateTool && styles66["HeaderWrapper-hasSort"], alternateTool && styles66["HeaderWrapper-hasAlternateTool"], isSelectable && styles66["HeaderWrapper-hasSelect"], loading && styles66["HeaderWrapper-disabled"], isSelectable && selectMode && bulkActionsMarkup && styles66["HeaderWrapper-inSelectMode"], isSticky && styles66["HeaderWrapper-isSticky"]);
    return /* @__PURE__ */ import_react199.default.createElement("div", {
      className: headerClassName
    }, headerWrapperOverlay, /* @__PURE__ */ import_react199.default.createElement("div", {
      className: styles66.HeaderContentWrapper
    }, headerTitleMarkup, checkableButtonMarkup, alternateToolMarkup, sortingSelectMarkup, selectButtonMarkup), bulkActionsMarkup);
  }));
  const emptySearchStateMarkup = showEmptySearchState ? emptySearchState || /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.EmptySearchResultWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(EmptySearchResult, Object.assign({}, emptySearchResultText, {
    withIllustration: true
  }))) : null;
  const emptyStateMarkup = showEmptyState ? emptyState : null;
  const defaultTopPadding = 8;
  const topPadding = loadingPosition > 0 ? loadingPosition : defaultTopPadding;
  const spinnerStyle = {
    paddingTop: `${topPadding}px`
  };
  const spinnerSize = items.length < 2 ? "small" : "large";
  const loadingOverlay = loading ? /* @__PURE__ */ import_react199.default.createElement(import_react199.default.Fragment, null, /* @__PURE__ */ import_react199.default.createElement("li", {
    className: styles66.SpinnerContainer,
    style: spinnerStyle
  }, /* @__PURE__ */ import_react199.default.createElement(Spinner, {
    size: spinnerSize,
    accessibilityLabel: "Items are loading"
  })), /* @__PURE__ */ import_react199.default.createElement("li", {
    className: styles66.LoadingOverlay
  })) : null;
  const className = classNames(styles66.ItemWrapper, loading && styles66["ItemWrapper-isLoading"]);
  const loadingWithoutItemsMarkup = loading && !itemsExist ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className,
    tabIndex: -1
  }, loadingOverlay) : null;
  const resourceListClassName = classNames(styles66.ResourceList, loading && styles66.disabledPointerEvents, selectMode && styles66.disableTextSelection);
  const listMarkup = itemsExist ? /* @__PURE__ */ import_react199.default.createElement("ul", {
    className: resourceListClassName,
    ref: listRef,
    "aria-live": "polite",
    "aria-busy": loading
  }, loadingOverlay, import_react199.Children.toArray(items.map(renderItemWithId))) : null;
  const paginationMarkup = pagination ? /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.PaginationWrapper
  }, /* @__PURE__ */ import_react199.default.createElement(Pagination, Object.assign({
    type: "table"
  }, pagination))) : null;
  const context = {
    selectable: isSelectable,
    selectedItems,
    selectMode,
    hasBulkActions: Boolean(bulkActions),
    resourceName,
    loading,
    onSelectionChange: handleSelectionChange
  };
  return /* @__PURE__ */ import_react199.default.createElement(ResourceListContext.Provider, {
    value: context
  }, filterControlMarkup, /* @__PURE__ */ import_react199.default.createElement("div", {
    className: styles66.ResourceListWrapper
  }, headerMarkup, listMarkup, emptySearchStateMarkup, emptyStateMarkup, loadingWithoutItemsMarkup, paginationMarkup));
}
var import_react199, SMALL_SPINNER_HEIGHT, LARGE_SPINNER_HEIGHT, isBreakpointsXS;
var init_ResourceList = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ResourceList/ResourceList.js"() {
    import_react199 = __toESM(require_react());
    init_dist();
    init_build();
    init_debounce();
    init_css();
    init_components();
    init_use_lazy_ref();
    init_use_event_listener();
    init_ResourceList_css();
    init_types4();
    init_Select();
    init_ResourceItem();
    init_hooks2();
    init_Text();
    init_Button();
    init_CheckableButton();
    init_Sticky();
    init_EmptySearchResult();
    init_Spinner();
    init_Pagination();
    init_context15();
    init_BulkActions();
    SMALL_SPINNER_HEIGHT = 28;
    LARGE_SPINNER_HEIGHT = 45;
    isBreakpointsXS = () => {
      return typeof window === "undefined" ? false : window.innerWidth < parseFloat(toPx(themeDefault.breakpoints["breakpoints-sm"]) ?? "");
    };
    ResourceList.Item = ResourceItem;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.css.js
var styles67;
var init_Thumbnail_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.css.js"() {
    styles67 = {
      "Thumbnail": "Polaris-Thumbnail",
      "sizeExtraSmall": "Polaris-Thumbnail--sizeExtraSmall",
      "sizeSmall": "Polaris-Thumbnail--sizeSmall",
      "sizeMedium": "Polaris-Thumbnail--sizeMedium",
      "sizeLarge": "Polaris-Thumbnail--sizeLarge",
      "transparent": "Polaris-Thumbnail--transparent"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.js
function Thumbnail({
  source,
  alt,
  size: size2 = "medium",
  transparent
}) {
  const className = classNames(styles67.Thumbnail, size2 && styles67[variationName("size", size2)], transparent && styles67.transparent);
  const content = typeof source === "string" ? /* @__PURE__ */ import_react200.default.createElement(Image, {
    alt,
    source
  }) : /* @__PURE__ */ import_react200.default.createElement(Icon, {
    accessibilityLabel: alt,
    source
  });
  return /* @__PURE__ */ import_react200.default.createElement("span", {
    className
  }, content);
}
var import_react200;
var init_Thumbnail = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Thumbnail/Thumbnail.js"() {
    import_react200 = __toESM(require_react());
    init_css();
    init_Thumbnail_css();
    init_Image();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Toast/Toast.js
var import_react201, Toast2;
var init_Toast2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Toast/Toast.js"() {
    import_react201 = __toESM(require_react());
    init_use_deep_effect();
    init_hooks8();
    Toast2 = /* @__PURE__ */ (0, import_react201.memo)(function Toast3(props) {
      const id = (0, import_react201.useId)();
      const {
        showToast,
        hideToast
      } = useFrame();
      useDeepEffect(() => {
        showToast({
          id,
          ...props
        });
        return () => {
          hideToast({
            id
          });
        };
      }, [props]);
      return null;
    });
  }
});

// node_modules/@shopify/polaris/build/esm/configure.js
var DEFAULT_LOCALE, SUPPORTED_LOCALES;
var init_configure = __esm({
  "node_modules/@shopify/polaris/build/esm/configure.js"() {
    DEFAULT_LOCALE = "en";
    SUPPORTED_LOCALES = ["cs", "da", "de", "en", "es", "fi", "fr", "it", "ja", "ko", "nb", "nl", "pl", "pt-BR", "pt-PT", "sv", "th", "tr", "vi", "zh-CN", "zh-TW"];
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/clamp.js
function clamp(number, min, max) {
  if (number < min)
    return min;
  if (number > max)
    return max;
  return number;
}
var init_clamp = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/clamp.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/roundNumberToDecimalPlaces.js
function roundNumberToDecimalPlaces(value, decimals) {
  const exponent = Number(`${value}e${decimals}`);
  const roundedExponent = Math.round(exponent);
  const numberWithDecimalPlaces = Number(`${roundedExponent}e-${decimals}`);
  return numberWithDecimalPlaces;
}
var init_roundNumberToDecimalPlaces = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/roundNumberToDecimalPlaces.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/color-transformers.js
function rgbString(color2) {
  const {
    red: red2,
    green: green2,
    blue: blue2
  } = color2;
  if ("alpha" in color2) {
    return `rgba(${red2}, ${green2}, ${blue2}, ${color2.alpha})`;
  } else {
    return `rgb(${red2}, ${green2}, ${blue2})`;
  }
}
function rgbToHex({
  red: red2,
  green: green2,
  blue: blue2
}) {
  return `#${componentToHex(red2)}${componentToHex(green2)}${componentToHex(blue2)}`;
}
function componentToHex(component) {
  const hex = component.toString(16);
  return hex.length === 1 ? `0${hex}` : hex;
}
function hsbToHex(color2) {
  return rgbToHex(hsbToRgb(color2));
}
function rgbFromHueAndChroma(hue, chroma) {
  const huePrime = hue / 60;
  const hueDelta = 1 - Math.abs(huePrime % 2 - 1);
  const intermediateValue = chroma * hueDelta;
  let red2 = 0;
  let green2 = 0;
  let blue2 = 0;
  if (huePrime >= 0 && huePrime <= 1) {
    red2 = chroma;
    green2 = intermediateValue;
    blue2 = 0;
  }
  if (huePrime >= 1 && huePrime <= 2) {
    red2 = intermediateValue;
    green2 = chroma;
    blue2 = 0;
  }
  if (huePrime >= 2 && huePrime <= 3) {
    red2 = 0;
    green2 = chroma;
    blue2 = intermediateValue;
  }
  if (huePrime >= 3 && huePrime <= 4) {
    red2 = 0;
    green2 = intermediateValue;
    blue2 = chroma;
  }
  if (huePrime >= 4 && huePrime <= 5) {
    red2 = intermediateValue;
    green2 = 0;
    blue2 = chroma;
  }
  if (huePrime >= 5 && huePrime <= 6) {
    red2 = chroma;
    green2 = 0;
    blue2 = intermediateValue;
  }
  return {
    red: red2,
    green: green2,
    blue: blue2
  };
}
function hsbToRgb(color2) {
  const {
    hue,
    saturation,
    brightness,
    alpha = 1
  } = color2;
  const chroma = brightness * saturation;
  let {
    red: red2,
    green: green2,
    blue: blue2
  } = rgbFromHueAndChroma(hue, chroma);
  const chromaBrightnessDelta = brightness - chroma;
  red2 += chromaBrightnessDelta;
  green2 += chromaBrightnessDelta;
  blue2 += chromaBrightnessDelta;
  return {
    red: Math.round(red2 * 255),
    green: Math.round(green2 * 255),
    blue: Math.round(blue2 * 255),
    alpha
  };
}
function hslToRgb(color2) {
  const {
    hue,
    saturation,
    lightness,
    alpha = 1
  } = color2;
  const chroma = (1 - Math.abs(2 * (lightness / 100) - 1)) * (saturation / 100);
  let {
    red: red2,
    green: green2,
    blue: blue2
  } = rgbFromHueAndChroma(hue, chroma);
  const lightnessVal = lightness / 100 - chroma / 2;
  red2 += lightnessVal;
  green2 += lightnessVal;
  blue2 += lightnessVal;
  return {
    red: Math.round(red2 * 255),
    green: Math.round(green2 * 255),
    blue: Math.round(blue2 * 255),
    alpha
  };
}
function rgbToHsbl(color2, type = "b") {
  const {
    alpha = 1
  } = color2;
  const red2 = color2.red / 255;
  const green2 = color2.green / 255;
  const blue2 = color2.blue / 255;
  const largestComponent = Math.max(red2, green2, blue2);
  const smallestComponent = Math.min(red2, green2, blue2);
  const delta = largestComponent - smallestComponent;
  const lightness = (largestComponent + smallestComponent) / 2;
  let saturation = 0;
  if (largestComponent === 0) {
    saturation = 0;
  } else if (type === "b") {
    saturation = delta / largestComponent;
  } else if (type === "l") {
    const baseSaturation = lightness > 0.5 ? delta / (2 - largestComponent - smallestComponent) : delta / (largestComponent + smallestComponent);
    saturation = isNaN(baseSaturation) ? 0 : baseSaturation;
  }
  let huePercentage = 0;
  switch (largestComponent) {
    case red2:
      huePercentage = (green2 - blue2) / delta + (green2 < blue2 ? 6 : 0);
      break;
    case green2:
      huePercentage = (blue2 - red2) / delta + 2;
      break;
    case blue2:
      huePercentage = (red2 - green2) / delta + 4;
  }
  const hue = huePercentage / 6 * 360;
  const clampedHue = clamp(hue, 0, 360);
  return {
    hue: clampedHue ? roundNumberToDecimalPlaces(clampedHue, 2) : 0,
    saturation: roundNumberToDecimalPlaces(clamp(saturation, 0, 1), 4),
    brightness: roundNumberToDecimalPlaces(clamp(largestComponent, 0, 1), 4),
    lightness: roundNumberToDecimalPlaces(lightness, 4),
    alpha: roundNumberToDecimalPlaces(alpha, 4)
  };
}
function rgbToHsb(color2) {
  const {
    hue,
    saturation,
    brightness,
    alpha = 1
  } = rgbToHsbl(color2, "b");
  return {
    hue,
    saturation,
    brightness,
    alpha
  };
}
function rgbToHsl(color2) {
  const {
    hue,
    saturation: rawSaturation,
    lightness: rawLightness,
    alpha = 1
  } = rgbToHsbl(color2, "l");
  const saturation = roundNumberToDecimalPlaces(rawSaturation * 100, 2);
  const lightness = roundNumberToDecimalPlaces(rawLightness * 100, 2);
  return {
    hue,
    saturation,
    lightness,
    alpha
  };
}
function hexToRgb(color2) {
  if (color2.length === 4) {
    const repeatHex = (hex1, hex2) => color2.slice(hex1, hex2).repeat(2);
    const red3 = parseInt(repeatHex(1, 2), 16);
    const green3 = parseInt(repeatHex(2, 3), 16);
    const blue3 = parseInt(repeatHex(3, 4), 16);
    return {
      red: red3,
      green: green3,
      blue: blue3
    };
  }
  const red2 = parseInt(color2.slice(1, 3), 16);
  const green2 = parseInt(color2.slice(3, 5), 16);
  const blue2 = parseInt(color2.slice(5, 7), 16);
  return {
    red: red2,
    green: green2,
    blue: blue2
  };
}
var rgbaString;
var init_color_transformers = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/color-transformers.js"() {
    init_clamp();
    init_roundNumberToDecimalPlaces();
    rgbaString = rgbString;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-copy-to-clipboard.js
function useCopyToClipboard(options = {}) {
  const {
    defaultValue = "",
    timeout: timeout2 = 1500
  } = options;
  const [status, setStatus] = (0, import_react202.useState)("inactive");
  const copy = (0, import_react202.useCallback)((value) => {
    navigator.clipboard.writeText(typeof value === "string" ? value : defaultValue).then(() => setStatus("copied"), () => setStatus("failed")).catch((error) => {
      throw error;
    });
  }, [defaultValue]);
  (0, import_react202.useEffect)(() => {
    if (status === "inactive")
      return;
    const timeoutId = setTimeout(() => setStatus("inactive"), timeout2);
    return () => clearTimeout(timeoutId);
  }, [status, timeout2]);
  return [copy, status];
}
var import_react202;
var init_use_copy_to_clipboard = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-copy-to-clipboard.js"() {
    import_react202 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-focus.js
function useFocus(ref) {
  const [isFocused, setIsFocused] = (0, import_react203.useState)(false);
  const handleFocus = (0, import_react203.useCallback)(() => setIsFocused(true), []);
  const handleBlur = (0, import_react203.useCallback)(() => setIsFocused(false), []);
  useEventListener("focus", handleFocus, ref);
  useEventListener("blur", handleBlur, ref);
  return isFocused;
}
function useFocusIn(ref) {
  const [isFocusedIn, setIsFocusedIn] = (0, import_react203.useState)(false);
  const deferredFocusOut = (0, import_react203.useRef)(null);
  const handleFocusIn = (0, import_react203.useCallback)(() => {
    if (deferredFocusOut.current) {
      clearTimeout(deferredFocusOut.current);
      deferredFocusOut.current = null;
    }
    setIsFocusedIn(true);
  }, []);
  const handleFocusOut = (0, import_react203.useCallback)(() => {
    deferredFocusOut.current = setTimeout(() => {
      setIsFocusedIn(false);
    }, 0);
  }, []);
  useEventListener("focusin", handleFocusIn, ref);
  useEventListener("focusout", handleFocusOut, ref);
  (0, import_react203.useEffect)(() => () => {
    if (deferredFocusOut.current)
      clearTimeout(deferredFocusOut.current);
  }, []);
  return isFocusedIn;
}
var import_react203;
var init_use_focus = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-focus.js"() {
    import_react203 = __toESM(require_react());
    init_use_event_listener();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-hover.js
function useHover(ref) {
  const [isHovered, setIsHovered] = (0, import_react204.useState)(false);
  const handleMouseEnter = (0, import_react204.useCallback)(() => setIsHovered(true), []);
  const handleMouseLeave = (0, import_react204.useCallback)(() => setIsHovered(false), []);
  useEventListener("mouseenter", handleMouseEnter, ref);
  useEventListener("mouseleave", handleMouseLeave, ref);
  return isHovered;
}
var import_react204;
var init_use_hover = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-hover.js"() {
    import_react204 = __toESM(require_react());
    init_use_event_listener();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-media-query.js
function useMediaQuery2(queryOrAlias, options = {}) {
  const {
    defaultValue = false,
    initializeWithValue = false
  } = options;
  const query = isQueryAlias(queryOrAlias) ? queryAliases[queryOrAlias] : queryOrAlias;
  const getMatches2 = (0, import_react205.useCallback)((query2) => {
    if (isServer)
      return defaultValue;
    return window.matchMedia(query2).matches;
  }, [defaultValue]);
  const [matches2, setMatches] = (0, import_react205.useState)(() => {
    if (initializeWithValue)
      return getMatches2(query);
    return defaultValue;
  });
  const handleChange = (0, import_react205.useCallback)(() => {
    setMatches(getMatches2(query));
  }, [getMatches2, query]);
  useIsomorphicLayoutEffect(() => {
    const mediaQueryList = window.matchMedia(query);
    handleChange();
    if (mediaQueryList.addListener) {
      mediaQueryList.addListener(handleChange);
    } else {
      mediaQueryList.addEventListener("change", handleChange);
    }
    return () => {
      if (mediaQueryList.removeListener) {
        mediaQueryList.removeListener(handleChange);
      } else {
        mediaQueryList.removeEventListener("change", handleChange);
      }
    };
  }, [query]);
  return matches2;
}
var import_react205, queryAliases, isQueryAlias;
var init_use_media_query = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-media-query.js"() {
    import_react205 = __toESM(require_react());
    init_target();
    init_use_isomorphic_layout_effect();
    queryAliases = {
      touch: "(hover: none) and (pointer: coarse)",
      stylus: "(hover: none) and (pointer: fine)",
      pointer: "(hover) and (pointer: coarse)",
      mouse: "(hover) and (pointer: fine)"
    };
    isQueryAlias = (queryOrAlias) => Object.prototype.hasOwnProperty.call(queryAliases, queryOrAlias);
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-index-resource-state.js
function defaultResourceIDResolver(resource) {
  if ("id" in resource) {
    return resource.id;
  }
  throw new Error("Your resource does not directly contain an `id`. Pass a `resourceIDResolver` to `useIndexResourceState`");
}
function useIndexResourceState(resources, {
  selectedResources: initSelectedResources = [],
  allResourcesSelected: initAllResourcesSelected = false,
  resourceIDResolver = defaultResourceIDResolver,
  resourceFilter = void 0
} = {
  selectedResources: [],
  allResourcesSelected: false,
  resourceIDResolver: defaultResourceIDResolver,
  resourceFilter: void 0
}) {
  const [selectedResources, setSelectedResources] = (0, import_react206.useState)(initSelectedResources);
  const [allResourcesSelected, setAllResourcesSelected] = (0, import_react206.useState)(initAllResourcesSelected);
  const handleSelectionChange = (0, import_react206.useCallback)((selectionType, isSelecting, selection, _position) => {
    if (selectionType === SelectionType2.All) {
      setAllResourcesSelected(isSelecting);
    } else if (allResourcesSelected) {
      setAllResourcesSelected(false);
    }
    switch (selectionType) {
      case SelectionType2.Single:
        setSelectedResources((newSelectedResources) => isSelecting ? [...newSelectedResources, selection] : newSelectedResources.filter((id) => id !== selection));
        break;
      case SelectionType2.All:
      case SelectionType2.Page:
        if (resourceFilter) {
          const filteredResources = resources.filter(resourceFilter);
          setSelectedResources(isSelecting && selectedResources.length < filteredResources.length ? filteredResources.map(resourceIDResolver) : []);
        } else {
          setSelectedResources(isSelecting ? resources.map(resourceIDResolver) : []);
        }
        break;
      case SelectionType2.Multi:
        if (!selection)
          break;
        setSelectedResources((currentSelectedResources) => {
          const ids = [];
          const filteredResources = resourceFilter ? resources.filter(resourceFilter) : resources;
          for (let i = selection[0]; i <= selection[1]; i++) {
            if (filteredResources.includes(resources[i])) {
              const id = resourceIDResolver(resources[i]);
              if (isSelecting && !currentSelectedResources.includes(id) || !isSelecting && currentSelectedResources.includes(id)) {
                ids.push(id);
              }
            }
          }
          return isSelecting ? [...currentSelectedResources, ...ids] : currentSelectedResources.filter((id) => !ids.includes(id));
        });
        break;
      case SelectionType2.Range:
        if (!selection)
          break;
        setSelectedResources((currentSelectedResources) => {
          const filteredResources = resourceFilter ? resources.filter(resourceFilter) : resources;
          const resourceIds = filteredResources.map(resourceIDResolver);
          const selectedIds = resourceIds.slice(Number(selection[0]), Number(selection[1]) + 1);
          const isIndeterminate = selectedIds.some((id) => {
            return selectedResources.includes(id);
          });
          const isChecked = selectedIds.every((id) => {
            return selectedResources.includes(id);
          });
          const isSelectingAllInRange = !isChecked && (isSelecting || isIndeterminate);
          const nextSelectedResources = isSelectingAllInRange ? [...(/* @__PURE__ */ new Set([...currentSelectedResources, ...selectedIds])).values()] : currentSelectedResources.filter((id) => !selectedIds.includes(id));
          return nextSelectedResources;
        });
        break;
    }
  }, [allResourcesSelected, resourceFilter, selectedResources, resources, resourceIDResolver]);
  const clearSelection = (0, import_react206.useCallback)(() => {
    setSelectedResources([]);
    setAllResourcesSelected(false);
  }, []);
  const removeSelectedResources = (0, import_react206.useCallback)((removeResources) => {
    const selectedResourcesCopy = [...selectedResources];
    const newSelectedResources = selectedResourcesCopy.filter((resource) => !removeResources.includes(resource));
    setSelectedResources(newSelectedResources);
    if (newSelectedResources.length === 0) {
      setAllResourcesSelected(false);
    }
  }, [selectedResources]);
  return {
    selectedResources,
    allResourcesSelected,
    handleSelectionChange,
    clearSelection,
    removeSelectedResources
  };
}
var import_react206, SelectionType2;
var init_use_index_resource_state = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-index-resource-state.js"() {
    import_react206 = __toESM(require_react());
    (function(SelectionType3) {
      SelectionType3["All"] = "all";
      SelectionType3["Page"] = "page";
      SelectionType3["Multi"] = "multi";
      SelectionType3["Single"] = "single";
      SelectionType3["Range"] = "range";
    })(SelectionType2 || (SelectionType2 = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.css.js
var styles68;
var init_SettingAction_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.css.js"() {
    styles68 = {
      "SettingAction": "Polaris-SettingAction",
      "Setting": "Polaris-SettingAction__Setting",
      "Action": "Polaris-SettingAction__Action"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.js
function SettingAction({
  action,
  children
}) {
  return /* @__PURE__ */ import_react207.default.createElement("div", {
    className: styles68.SettingAction
  }, /* @__PURE__ */ import_react207.default.createElement("div", {
    className: styles68.Setting
  }, children), /* @__PURE__ */ import_react207.default.createElement("div", {
    className: styles68.Action
  }, action));
}
var import_react207;
var init_SettingAction = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SettingAction/SettingAction.js"() {
    import_react207 = __toESM(require_react());
    init_SettingAction_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.css.js
var styles69;
var init_Avatar_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.css.js"() {
    styles69 = {
      "Avatar": "Polaris-Avatar",
      "imageHasLoaded": "Polaris-Avatar--imageHasLoaded",
      "Text": "Polaris-Avatar__Text",
      "long": "Polaris-Avatar--long",
      "hidden": "Polaris-Avatar--hidden",
      "sizeXs": "Polaris-Avatar--sizeXs",
      "sizeSm": "Polaris-Avatar--sizeSm",
      "sizeMd": "Polaris-Avatar--sizeMd",
      "sizeLg": "Polaris-Avatar--sizeLg",
      "sizeXl": "Polaris-Avatar--sizeXl",
      "styleOne": "Polaris-Avatar--styleOne",
      "styleTwo": "Polaris-Avatar--styleTwo",
      "styleThree": "Polaris-Avatar--styleThree",
      "styleFour": "Polaris-Avatar--styleFour",
      "styleFive": "Polaris-Avatar--styleFive",
      "styleSix": "Polaris-Avatar--styleSix",
      "styleSeven": "Polaris-Avatar--styleSeven",
      "Image": "Polaris-Avatar__Image",
      "Initials": "Polaris-Avatar__Initials",
      "Svg": "Polaris-Avatar__Svg"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.js
function xorHash(str) {
  let hash = 0;
  for (const char of str) {
    hash ^= char.charCodeAt(0);
  }
  return hash;
}
function styleClass(name) {
  return name ? STYLE_CLASSES[xorHash(name) % STYLE_CLASSES.length] : STYLE_CLASSES[0];
}
function Avatar({
  name,
  source,
  onError,
  initials,
  customer,
  size: size2 = "md",
  accessibilityLabel
}) {
  const i18n = useI18n();
  const isAfterInitialMount = useIsAfterInitialMount();
  const [status, setStatus] = (0, import_react208.useState)(Status.Pending);
  (0, import_react208.useEffect)(() => {
    setStatus(Status.Pending);
  }, [source]);
  const handleError = (0, import_react208.useCallback)(() => {
    setStatus(Status.Errored);
    if (onError) {
      onError();
    }
  }, [onError]);
  const handleLoad = (0, import_react208.useCallback)(() => {
    setStatus(Status.Loaded);
  }, []);
  const hasImage = source && status !== Status.Errored;
  const nameString = name || initials;
  let label;
  if (accessibilityLabel) {
    label = accessibilityLabel;
  } else if (name) {
    label = name;
  } else if (initials) {
    const splitInitials = initials.split("").join(" ");
    label = i18n.translate("Polaris.Avatar.labelWithInitials", {
      initials: splitInitials
    });
  }
  const className = classNames(styles69.Avatar, size2 && styles69[variationName("size", size2)], hasImage && status === Status.Loaded && styles69.imageHasLoaded, !customer && !hasImage && styles69[variationName("style", styleClass(nameString))]);
  const textClassName = classNames(styles69.Text, (initials?.length || 0) > 2 && styles69.long);
  const imageClassName = classNames(styles69.Image, status !== Status.Loaded && styles69.hidden);
  const imageMarkUp = source && isAfterInitialMount && status !== Status.Errored ? /* @__PURE__ */ import_react208.default.createElement(Image, {
    className: imageClassName,
    source,
    alt: "",
    role: "presentation",
    onLoad: handleLoad,
    onError: handleError
  }) : null;
  const verticalOffset = "0.35em";
  const avatarPath = /* @__PURE__ */ import_react208.default.createElement(import_react208.default.Fragment, null, /* @__PURE__ */ import_react208.default.createElement("path", {
    fill: "none",
    d: "M25.5 13.5C25.5 16.5376 23.0376 19 20 19C16.9624 19 14.5 16.5376 14.5 13.5C14.5 10.4624 16.9624 8 20 8C23.0376 8 25.5 10.4624 25.5 13.5Z",
    stroke: "currentColor",
    strokeWidth: avatarStrokeWidth[size2]
  }), /* @__PURE__ */ import_react208.default.createElement("path", {
    fill: "none",
    d: "M10.3433 29.682L9.47 31.254C9.03481 32.0373 9.60125 33 10.4974 33H29.5026C30.3988 33 30.9652 32.0373 30.53 31.254L29.6567 29.682C27.7084 26.175 24.0119 24 20 24C15.9882 24 12.2916 26.175 10.3433 29.682Z",
    stroke: "currentColor",
    strokeWidth: avatarStrokeWidth[size2],
    strokeLinecap: "round",
    strokeLinejoin: "round"
  }));
  const avatarBody = customer || !initials ? avatarPath : /* @__PURE__ */ import_react208.default.createElement("text", {
    className: textClassName,
    x: "50%",
    y: "50%",
    dy: verticalOffset,
    fill: "currentColor",
    textAnchor: "middle"
  }, initials);
  const svgMarkup = hasImage ? null : /* @__PURE__ */ import_react208.default.createElement("span", {
    className: styles69.Initials
  }, /* @__PURE__ */ import_react208.default.createElement("svg", {
    className: styles69.Svg,
    viewBox: "0 0 40 40"
  }, avatarBody));
  return /* @__PURE__ */ import_react208.default.createElement("span", {
    "aria-label": label,
    role: label ? "img" : "presentation",
    className
  }, svgMarkup, imageMarkUp);
}
var import_react208, Status, STYLE_CLASSES, avatarStrokeWidth;
var init_Avatar = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Avatar/Avatar.js"() {
    import_react208 = __toESM(require_react());
    init_css();
    init_use_is_after_initial_mount();
    init_Avatar_css();
    init_hooks2();
    init_Image();
    (function(Status2) {
      Status2["Pending"] = "PENDING";
      Status2["Loaded"] = "LOADED";
      Status2["Errored"] = "ERRORED";
    })(Status || (Status = {}));
    STYLE_CLASSES = ["one", "two", "three", "four", "five", "six", "seven"];
    avatarStrokeWidth = {
      xs: "3",
      sm: "2.5",
      md: "2.5",
      lg: "2.5",
      xl: "2"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/AccountConnection/AccountConnection.js
function AccountConnection({
  connected = false,
  action,
  avatarUrl,
  accountName = "",
  title,
  details,
  termsOfService
}) {
  const breakpoints2 = useBreakpoints();
  const initials = accountName ? accountName.split(/\s+/).map((name) => name[0]).join("") : void 0;
  const avatarMarkup = connected ? /* @__PURE__ */ import_react209.default.createElement("span", null, /* @__PURE__ */ import_react209.default.createElement(Avatar, {
    accessibilityLabel: "",
    name: accountName,
    initials,
    source: avatarUrl
  })) : null;
  const titleContent = title ? title : accountName;
  const titleMarkup = /* @__PURE__ */ import_react209.default.createElement(Text, {
    as: "h2",
    variant: "headingSm"
  }, titleContent);
  const detailsMarkup = details ? /* @__PURE__ */ import_react209.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    tone: "subdued"
  }, details) : null;
  const termsOfServiceMarkup = termsOfService ? /* @__PURE__ */ import_react209.default.createElement(Box, {
    paddingBlockStart: breakpoints2.mdUp ? "400" : "500"
  }, /* @__PURE__ */ import_react209.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, termsOfService)) : null;
  const actionElement = action ? buttonFrom(action, {
    variant: connected ? void 0 : "primary"
  }) : null;
  return /* @__PURE__ */ import_react209.default.createElement(Card, null, /* @__PURE__ */ import_react209.default.createElement(SettingAction, {
    action: actionElement
  }, /* @__PURE__ */ import_react209.default.createElement(InlineStack, {
    gap: "400"
  }, avatarMarkup, /* @__PURE__ */ import_react209.default.createElement(BlockStack, {
    gap: "100"
  }, titleMarkup, detailsMarkup))), termsOfServiceMarkup);
}
var import_react209;
var init_AccountConnection = __esm({
  "node_modules/@shopify/polaris/build/esm/components/AccountConnection/AccountConnection.js"() {
    import_react209 = __toESM(require_react());
    init_breakpoints2();
    init_utils3();
    init_Card();
    init_SettingAction();
    init_InlineStack();
    init_BlockStack();
    init_Avatar();
    init_Box();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/options.js
function isSection(arr) {
  return typeof arr[0] === "object" && Object.prototype.hasOwnProperty.call(arr[0], "options");
}
var init_options = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/options.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.css.js
var styles70;
var init_Autocomplete_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.css.js"() {
    styles70 = {
      "Loading": "Polaris-Autocomplete__Loading",
      "SectionWrapper": "Polaris-Autocomplete__SectionWrapper"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.css.js
var styles71;
var init_MappedOption_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.css.js"() {
    styles71 = {
      "Content": "Polaris-Autocomplete-MappedOption__Content",
      "Media": "Polaris-Autocomplete-MappedOption__Media",
      "singleSelectionMedia": "Polaris-Autocomplete-MappedOption--singleSelectionMedia",
      "disabledMedia": "Polaris-Autocomplete-MappedOption--disabledMedia"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.css.js
var styles72;
var init_Listbox_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.css.js"() {
    styles72 = {
      "Listbox": "Polaris-Listbox"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/combobox/context.js
var import_react210, ComboboxTextFieldContext, ComboboxListboxContext, ComboboxListboxOptionContext;
var init_context16 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/combobox/context.js"() {
    import_react210 = __toESM(require_react());
    ComboboxTextFieldContext = /* @__PURE__ */ (0, import_react210.createContext)(void 0);
    ComboboxListboxContext = /* @__PURE__ */ (0, import_react210.createContext)({});
    ComboboxListboxOptionContext = /* @__PURE__ */ (0, import_react210.createContext)({});
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/combobox/hooks.js
function useComboboxTextField() {
  const context = (0, import_react211.useContext)(ComboboxTextFieldContext);
  if (!context) {
    throw new Error("No Combobox was provided. Your component must be wrapped in a <Combobox> component.");
  }
  return context;
}
function useComboboxListbox() {
  const context = (0, import_react211.useContext)(ComboboxListboxContext);
  return context;
}
var import_react211;
var init_hooks11 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/combobox/hooks.js"() {
    import_react211 = __toESM(require_react());
    init_context16();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/listbox/utilities.js
function scrollOptionIntoView(option, scrollable2) {
  const listTop = scrollable2.scrollTop;
  const listBottom = listTop + scrollable2.clientHeight;
  const {
    offsetHeight: optionHeight
  } = option;
  const {
    offsetTop: optionTop
  } = option;
  const optionBottom = optionTop + optionHeight;
  const isVisible = optionTop > listTop && optionBottom < listBottom;
  if (!isVisible) {
    let top = 0;
    if (optionBottom > listBottom) {
      top = optionBottom + optionHeight * 0.85 - listBottom;
    } else if (optionTop < listTop) {
      top = optionTop - optionHeight * 0.15 - listTop;
    }
    requestAnimationFrame(() => {
      scrollable2.scrollBy({
        top,
        behavior: "auto"
      });
    });
  }
}
var init_utilities4 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/listbox/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.css.js
var styles73;
var init_TextOption_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.css.js"() {
    styles73 = {
      "TextOption": "Polaris-Listbox-TextOption",
      "allowMultiple": "Polaris-Listbox-TextOption--allowMultiple",
      "isAction": "Polaris-Listbox-TextOption--isAction",
      "disabled": "Polaris-Listbox-TextOption--disabled",
      "selected": "Polaris-Listbox-TextOption--selected",
      "Content": "Polaris-Listbox-TextOption__Content",
      "Checkbox": "Polaris-Listbox-TextOption__Checkbox"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.js
var import_react212, TextOption;
var init_TextOption = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/TextOption/TextOption.js"() {
    import_react212 = __toESM(require_react());
    init_dist();
    init_css();
    init_context16();
    init_context11();
    init_TextOption_css();
    init_Checkbox();
    init_Box();
    init_InlineStack();
    init_Icon();
    TextOption = /* @__PURE__ */ (0, import_react212.memo)(function TextOption2({
      children,
      selected,
      disabled
    }) {
      const {
        allowMultiple
      } = (0, import_react212.useContext)(ComboboxListboxOptionContext);
      const isAction = (0, import_react212.useContext)(ActionContext);
      const textOptionClassName = classNames(styles73.TextOption, selected && !allowMultiple && styles73.selected, disabled && styles73.disabled, allowMultiple && styles73.allowMultiple, isAction && styles73.isAction);
      const optionMarkup = selected ? /* @__PURE__ */ import_react212.default.createElement(Box, {
        width: "100%"
      }, /* @__PURE__ */ import_react212.default.createElement(InlineStack, {
        wrap: false,
        align: "space-between",
        gap: "200"
      }, children, /* @__PURE__ */ import_react212.default.createElement(InlineStack, {
        align: "end"
      }, /* @__PURE__ */ import_react212.default.createElement(Icon, {
        source: SvgCheckIcon
      })))) : /* @__PURE__ */ import_react212.default.createElement(import_react212.default.Fragment, null, children);
      return /* @__PURE__ */ import_react212.default.createElement("div", {
        className: textOptionClassName
      }, /* @__PURE__ */ import_react212.default.createElement("div", {
        className: styles73.Content
      }, allowMultiple && !isAction ? /* @__PURE__ */ import_react212.default.createElement("div", {
        className: styles73.Checkbox
      }, /* @__PURE__ */ import_react212.default.createElement(Checkbox, {
        disabled,
        checked: selected,
        label: children
      })) : optionMarkup));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.css.js
var styles74;
var init_Loading_css2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.css.js"() {
    styles74 = {
      "ListItem": "Polaris-Listbox-Loading__ListItem",
      "Loading": "Polaris-Listbox-Loading"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/listbox/hooks.js
function useListbox() {
  const listbox = (0, import_react213.useContext)(ListboxContext);
  if (!listbox) {
    throw new Error("No Listbox was provided. Listbox components must be wrapped in a Listbox");
  }
  return listbox;
}
var import_react213;
var init_hooks12 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/listbox/hooks.js"() {
    import_react213 = __toESM(require_react());
    init_context11();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.js
var import_react214, Loading2;
var init_Loading2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Loading/Loading.js"() {
    import_react214 = __toESM(require_react());
    init_Loading_css2();
    init_hooks12();
    init_Spinner();
    Loading2 = /* @__PURE__ */ (0, import_react214.memo)(function LoadingOption({
      children,
      accessibilityLabel: label
    }) {
      const {
        setLoading
      } = useListbox();
      (0, import_react214.useEffect)(() => {
        setLoading(label);
        return () => {
          setLoading(void 0);
        };
      }, [label, setLoading]);
      return /* @__PURE__ */ import_react214.default.createElement("li", {
        className: styles74.ListItem,
        role: "presentation"
      }, children ? children : /* @__PURE__ */ import_react214.default.createElement("div", {
        className: styles74.Loading
      }, /* @__PURE__ */ import_react214.default.createElement(Spinner, {
        size: "small",
        accessibilityLabel: label
      })));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/selectors.js
var listboxSectionDataSelector, listboxWithinSectionDataSelector;
var init_selectors = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/selectors.js"() {
    listboxSectionDataSelector = {
      props: {
        "data-polaris-listbox-section-item": true
      },
      selector: "[data-polaris-listbox-section-item]"
    };
    listboxWithinSectionDataSelector = {
      attribute: "data-polaris-listbox-within-section-item"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/context.js
var import_react215, SectionContext;
var init_context17 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/context.js"() {
    import_react215 = __toESM(require_react());
    SectionContext = /* @__PURE__ */ (0, import_react215.createContext)(null);
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.css.js
var styles75;
var init_Section_css2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.css.js"() {
    styles75 = {
      "SectionGroup": "Polaris-Listbox-Section__SectionGroup",
      "noDivider": "Polaris-Listbox-Section--noDivider"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.js
function Section5({
  children,
  divider = true,
  title
}) {
  const id = (0, import_react216.useId)();
  return /* @__PURE__ */ import_react216.default.createElement(SectionContext.Provider, {
    value: id
  }, /* @__PURE__ */ import_react216.default.createElement("li", Object.assign({
    role: "presentation"
  }, listboxSectionDataSelector.props), title, /* @__PURE__ */ import_react216.default.createElement("ul", {
    role: "group",
    "aria-labelledby": id,
    className: classNames(styles75.SectionGroup, !divider && styles75.noDivider)
  }, children)));
}
var import_react216;
var init_Section5 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/Section.js"() {
    import_react216 = __toESM(require_react());
    init_css();
    init_selectors();
    init_context17();
    init_Section_css2();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/hooks.js
function useSection() {
  const context = (0, import_react217.useContext)(SectionContext);
  return context;
}
var import_react217;
var init_hooks13 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Section/hooks.js"() {
    import_react217 = __toESM(require_react());
    init_context17();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Header/Header.js
function Header3({
  children
}) {
  const sectionId = useSection() || "";
  const content = typeof children === "string" ? /* @__PURE__ */ import_react218.default.createElement(Box, {
    paddingBlockStart: "200",
    paddingInlineStart: "400",
    paddingBlockEnd: "200",
    paddingInlineEnd: "400"
  }, /* @__PURE__ */ import_react218.default.createElement(Text, {
    as: "span",
    variant: "headingSm",
    tone: "subdued"
  }, children)) : children;
  return /* @__PURE__ */ import_react218.default.createElement("div", {
    "aria-hidden": true,
    id: sectionId
  }, content);
}
var import_react218;
var init_Header3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Header/Header.js"() {
    import_react218 = __toESM(require_react());
    init_hooks13();
    init_Box();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.css.js
var styles76;
var init_Action_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.css.js"() {
    styles76 = {
      "Action": "Polaris-Listbox-Action",
      "ActionDivider": "Polaris-Listbox-Action__ActionDivider",
      "Icon": "Polaris-Listbox-Action__Icon"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.css.js
var styles77;
var init_Option_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.css.js"() {
    styles77 = {
      "Option": "Polaris-Listbox-Option",
      "divider": "Polaris-Listbox-Option--divider"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/autocomplete/context.js
var import_react219, MappedActionContext;
var init_context18 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/autocomplete/context.js"() {
    import_react219 = __toESM(require_react());
    MappedActionContext = /* @__PURE__ */ (0, import_react219.createContext)({});
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.js
var import_react220, Option;
var init_Option = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Option/Option.js"() {
    import_react220 = __toESM(require_react());
    init_css();
    init_context11();
    init_Option_css();
    init_hooks12();
    init_context18();
    init_hooks13();
    init_selectors();
    init_TextOption();
    init_UnstyledLink();
    Option = /* @__PURE__ */ (0, import_react220.memo)(function Option2({
      value,
      children,
      selected,
      disabled = false,
      accessibilityLabel,
      divider
    }) {
      const {
        onOptionSelect
      } = useListbox();
      const isAction = (0, import_react220.useContext)(ActionContext);
      const {
        role,
        url,
        external,
        onAction,
        destructive
      } = (0, import_react220.useContext)(MappedActionContext);
      const listItemRef = (0, import_react220.useRef)(null);
      const domId = (0, import_react220.useId)();
      const sectionId = useSection();
      const isWithinSection = Boolean(sectionId);
      const handleOptionSelect = (0, import_react220.useCallback)((event) => {
        event.preventDefault();
        event.stopPropagation();
        onAction && onAction();
        if (listItemRef.current && !onAction) {
          onOptionSelect({
            domId,
            value,
            element: listItemRef.current,
            disabled
          });
        }
      }, [domId, onOptionSelect, value, disabled, onAction]);
      const handleMouseDown = (event) => {
        event.preventDefault();
      };
      const content = typeof children === "string" ? /* @__PURE__ */ import_react220.default.createElement(TextOption, {
        selected,
        disabled
      }, children) : children;
      const sectionAttributes = {
        [listboxWithinSectionDataSelector.attribute]: isWithinSection
      };
      const legacyRoleSupport = role || "option";
      const contentMarkup = url ? /* @__PURE__ */ import_react220.default.createElement(UnstyledLink, {
        url,
        external
      }, content) : content;
      return /* @__PURE__ */ import_react220.default.createElement("li", Object.assign({}, sectionAttributes, {
        "data-listbox-option": true,
        "data-listbox-option-action": isAction,
        "data-listbox-option-value": value,
        "data-listbox-option-destructive": destructive,
        "data-within-section": isWithinSection,
        className: classNames(styles77.Option, divider && styles77.divider),
        id: domId,
        ref: listItemRef,
        tabIndex: -1,
        role: legacyRoleSupport,
        "aria-label": accessibilityLabel,
        "aria-selected": selected,
        "aria-disabled": disabled,
        onClick: disabled ? void 0 : handleOptionSelect,
        onKeyDown: disabled ? void 0 : handleOptionSelect,
        onMouseDown: handleMouseDown
      }), contentMarkup);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.js
function Action(props) {
  const {
    selected,
    disabled,
    children,
    icon,
    divider
  } = props;
  const iconMarkup = icon && /* @__PURE__ */ import_react221.default.createElement("div", {
    className: styles76.Icon
  }, /* @__PURE__ */ import_react221.default.createElement(Icon, {
    tone: "subdued",
    source: icon
  }));
  const className = classNames(styles76.Action, divider && styles76.ActionDivider);
  return /* @__PURE__ */ import_react221.default.createElement(ActionContext.Provider, {
    value: true
  }, /* @__PURE__ */ import_react221.default.createElement(Option, props, /* @__PURE__ */ import_react221.default.createElement("div", {
    className
  }, /* @__PURE__ */ import_react221.default.createElement(TextOption, {
    selected,
    disabled
  }, iconMarkup, children))));
}
var import_react221;
var init_Action = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/components/Action/Action.js"() {
    import_react221 = __toESM(require_react());
    init_css();
    init_context11();
    init_Action_css();
    init_Option();
    init_TextOption();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.js
function Listbox({
  children,
  autoSelection = AutoSelection.FirstSelected,
  enableKeyboardControl,
  accessibilityLabel,
  customListId,
  onSelect,
  onActiveOptionChange
}) {
  const [loading, setLoading] = (0, import_react222.useState)();
  const [activeOption, setActiveOption] = (0, import_react222.useState)();
  const [lazyLoading, setLazyLoading] = (0, import_react222.useState)(false);
  const [currentOptions, setCurrentOptions] = (0, import_react222.useState)([]);
  const {
    value: keyboardEventsEnabled,
    setTrue: enableKeyboardEvents,
    setFalse: disableKeyboardEvents
  } = useToggle(Boolean(enableKeyboardControl));
  const uniqueId = (0, import_react222.useId)();
  const listId = customListId || uniqueId;
  const scrollableRef = (0, import_react222.useRef)(null);
  const listboxRef = (0, import_react222.useRef)(null);
  const {
    listboxId,
    textFieldLabelId,
    textFieldFocused,
    willLoadMoreOptions,
    setActiveOptionId,
    setListboxId,
    onOptionSelected,
    onKeyToBottom
  } = useComboboxListbox();
  const inCombobox = Boolean(setActiveOptionId);
  (0, import_react222.useEffect)(() => {
    if (setListboxId && !listboxId) {
      setListboxId(listId);
    }
  }, [setListboxId, listboxId, listId]);
  const getNavigableOptions = (0, import_react222.useCallback)(() => {
    if (!listboxRef.current) {
      return [];
    }
    return [...new Set(listboxRef.current.querySelectorAll(OPTION_SELECTOR))];
  }, []);
  const getFirstNavigableOption = (0, import_react222.useCallback)((currentOptions2) => {
    const hasSelectedOptions = currentOptions2.some((option) => option.getAttribute("aria-selected") === "true");
    let elementIndex = 0;
    const element = currentOptions2.find((option, index) => {
      const isInteractable = option.getAttribute("aria-disabled") !== "true";
      let isFirstNavigableOption;
      if (hasSelectedOptions && autoSelection === AutoSelection.FirstSelected) {
        const isSelected2 = option.getAttribute("aria-selected") === "true";
        isFirstNavigableOption = isSelected2 && isInteractable;
      } else {
        isFirstNavigableOption = isInteractable;
      }
      if (isFirstNavigableOption)
        elementIndex = index;
      return isFirstNavigableOption;
    });
    if (!element)
      return;
    return {
      element,
      index: elementIndex
    };
  }, [autoSelection]);
  const handleScrollIntoView = (0, import_react222.useCallback)((option) => {
    const {
      current: scrollable2
    } = scrollableRef;
    if (scrollable2) {
      scrollOptionIntoView(option.element, scrollable2);
    }
  }, []);
  const handleScrollIntoViewDebounced = debounce(handleScrollIntoView, 50);
  const handleKeyToBottom = (0, import_react222.useCallback)(() => {
    if (onKeyToBottom) {
      setLazyLoading(true);
      return Promise.resolve(onKeyToBottom());
    }
  }, [onKeyToBottom]);
  const handleChangeActiveOption = (0, import_react222.useCallback)((nextOption) => {
    if (!nextOption)
      return setActiveOption(void 0);
    activeOption?.element.removeAttribute(OPTION_FOCUS_ATTRIBUTE);
    nextOption.element.setAttribute(OPTION_FOCUS_ATTRIBUTE, "true");
    handleScrollIntoViewDebounced(nextOption);
    setActiveOption(nextOption);
    setActiveOptionId?.(nextOption.domId);
    onActiveOptionChange?.(nextOption.value, nextOption.domId);
  }, [activeOption, setActiveOptionId, onActiveOptionChange, handleScrollIntoViewDebounced]);
  const getFormattedOption = (0, import_react222.useCallback)((element, index) => {
    return {
      element,
      index,
      domId: element.id,
      value: element.getAttribute(OPTION_VALUE_ATTRIBUTE) || "",
      disabled: element.getAttribute("aria-disabled") === "true",
      isAction: element.getAttribute(OPTION_ACTION_ATTRIBUTE) === "true"
    };
  }, []);
  const resetActiveOption = (0, import_react222.useCallback)(() => {
    let nextOption;
    const nextOptions = getNavigableOptions();
    const nextActiveOption = getFirstNavigableOption(nextOptions);
    if (nextOptions.length === 0 && currentOptions.length > 0) {
      setCurrentOptions(nextOptions);
      handleChangeActiveOption();
      return;
    }
    if (nextActiveOption) {
      const {
        element,
        index
      } = nextActiveOption;
      nextOption = getFormattedOption(element, index);
    }
    const optionIsAlreadyActive = activeOption !== void 0 && nextOption?.domId === activeOption?.domId;
    const actionContentHasUpdated = activeOption?.isAction && nextOption?.isAction && nextOption?.value !== activeOption?.value;
    const currentValues = currentOptions.map((option) => option.getAttribute(OPTION_VALUE_ATTRIBUTE));
    const nextValues = nextOptions.map((option) => option.getAttribute(OPTION_VALUE_ATTRIBUTE));
    const listIsUnchanged = nextValues.length === currentValues.length && nextValues.every((value, index) => {
      return currentValues[index] === value;
    });
    const listIsAppended = currentValues.length !== 0 && nextValues.length > currentValues.length && currentValues.every((value, index) => {
      return nextValues[index] === value;
    });
    if (listIsUnchanged) {
      if (optionIsAlreadyActive && actionContentHasUpdated) {
        setCurrentOptions(nextOptions);
        handleChangeActiveOption(nextOption);
      }
      return;
    }
    if (listIsAppended) {
      setCurrentOptions(nextOptions);
      return;
    }
    setCurrentOptions(nextOptions);
    if (lazyLoading) {
      setLazyLoading(false);
      return;
    }
    handleChangeActiveOption(nextOption);
  }, [lazyLoading, currentOptions, activeOption, getFirstNavigableOption, getNavigableOptions, getFormattedOption, handleChangeActiveOption]);
  (0, import_react222.useEffect)(() => {
    if (autoSelection !== AutoSelection.None && !loading && children && import_react222.Children.count(children) > 0) {
      resetActiveOption();
    }
  }, [children, autoSelection, activeOption, loading, resetActiveOption]);
  (0, import_react222.useEffect)(() => {
    if (listboxRef.current) {
      scrollableRef.current = listboxRef.current.closest(scrollable.selector);
    }
  }, []);
  (0, import_react222.useEffect)(() => {
    if (enableKeyboardControl && !keyboardEventsEnabled) {
      enableKeyboardEvents();
    }
  }, [enableKeyboardControl, keyboardEventsEnabled, enableKeyboardEvents]);
  const onOptionSelect = (0, import_react222.useCallback)((option) => {
    handleChangeActiveOption(option);
    if (onOptionSelected)
      onOptionSelected();
    if (onSelect)
      onSelect(option.value);
  }, [handleChangeActiveOption, onSelect, onOptionSelected]);
  const getNextIndex = (0, import_react222.useCallback)((currentIndex, lastIndex, direction) => {
    let nextIndex;
    if (direction === "down") {
      if (currentIndex === lastIndex) {
        nextIndex = willLoadMoreOptions ? currentIndex + 1 : 0;
      } else {
        nextIndex = currentIndex + 1;
      }
    } else {
      nextIndex = currentIndex === 0 ? lastIndex : currentIndex - 1;
    }
    return nextIndex;
  }, [willLoadMoreOptions]);
  const getNextValidOption = (0, import_react222.useCallback)(async (key) => {
    const lastIndex = currentOptions.length - 1;
    let currentIndex = activeOption?.index || 0;
    let nextIndex = 0;
    let element = activeOption?.element;
    let totalOptions = -1;
    if (!activeOption && autoSelection === AutoSelection.None) {
      const nextOptions = getNavigableOptions();
      const nextActiveOption = getFirstNavigableOption(nextOptions);
      setCurrentOptions(nextOptions);
      return {
        element: nextActiveOption?.element,
        nextIndex: nextActiveOption?.index || 0
      };
    }
    while (totalOptions++ < lastIndex) {
      nextIndex = getNextIndex(currentIndex, lastIndex, key);
      element = currentOptions[nextIndex];
      const triggerLazyLoad = nextIndex >= lastIndex;
      const isDisabled = element?.getAttribute("aria-disabled") === "true";
      if (triggerLazyLoad && willLoadMoreOptions) {
        await handleKeyToBottom();
      }
      if (isDisabled) {
        currentIndex = nextIndex;
        element = void 0;
        continue;
      }
      break;
    }
    return {
      element,
      nextIndex
    };
  }, [autoSelection, currentOptions, activeOption, willLoadMoreOptions, getNextIndex, handleKeyToBottom, getFirstNavigableOption, getNavigableOptions]);
  const handleArrow = (0, import_react222.useCallback)(async (type, event) => {
    event.preventDefault();
    const {
      element,
      nextIndex
    } = await getNextValidOption(type);
    if (!element)
      return;
    const nextOption = getFormattedOption(element, nextIndex);
    handleChangeActiveOption(nextOption);
  }, [getFormattedOption, getNextValidOption, handleChangeActiveOption]);
  const handleDownArrow = (0, import_react222.useCallback)((event) => {
    handleArrow("down", event);
  }, [handleArrow]);
  const handleUpArrow = (0, import_react222.useCallback)((event) => {
    handleArrow("up", event);
  }, [handleArrow]);
  const handleEnter = (0, import_react222.useCallback)((event) => {
    event.preventDefault();
    event.stopPropagation();
    if (activeOption) {
      onOptionSelect(activeOption);
    }
  }, [activeOption, onOptionSelect]);
  const handleFocus = (0, import_react222.useCallback)(() => {
    if (enableKeyboardControl)
      return;
    enableKeyboardEvents();
  }, [enableKeyboardControl, enableKeyboardEvents]);
  const handleBlur = (0, import_react222.useCallback)((event) => {
    event.stopPropagation();
    if (keyboardEventsEnabled) {
      const nextActiveOption = getFirstNavigableOption(currentOptions);
      if (nextActiveOption) {
        const {
          element,
          index
        } = nextActiveOption;
        const nextOption = getFormattedOption(element, index);
        handleChangeActiveOption(nextOption);
      }
    }
    if (enableKeyboardControl)
      return;
    disableKeyboardEvents();
  }, [enableKeyboardControl, currentOptions, keyboardEventsEnabled, disableKeyboardEvents, getFirstNavigableOption, getFormattedOption, handleChangeActiveOption]);
  const listeners = keyboardEventsEnabled || textFieldFocused ? /* @__PURE__ */ import_react222.default.createElement(import_react222.default.Fragment, null, /* @__PURE__ */ import_react222.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.DownArrow,
    handler: handleDownArrow
  }), /* @__PURE__ */ import_react222.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.UpArrow,
    handler: handleUpArrow
  }), /* @__PURE__ */ import_react222.default.createElement(KeypressListener, {
    keyEvent: "keydown",
    keyCode: Key.Enter,
    handler: handleEnter
  })) : null;
  const listboxContext = (0, import_react222.useMemo)(() => ({
    onOptionSelect,
    setLoading
  }), [onOptionSelect]);
  return /* @__PURE__ */ import_react222.default.createElement(import_react222.default.Fragment, null, listeners, /* @__PURE__ */ import_react222.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, /* @__PURE__ */ import_react222.default.createElement("div", {
    "aria-live": "polite"
  }, loading ? loading : null)), /* @__PURE__ */ import_react222.default.createElement(ListboxContext.Provider, {
    value: listboxContext
  }, /* @__PURE__ */ import_react222.default.createElement(WithinListboxContext.Provider, {
    value: true
  }, children ? /* @__PURE__ */ import_react222.default.createElement("ul", {
    tabIndex: 0,
    role: "listbox",
    className: styles72.Listbox,
    "aria-label": inCombobox ? void 0 : accessibilityLabel,
    "aria-labelledby": textFieldLabelId,
    "aria-busy": Boolean(loading),
    "aria-activedescendant": activeOption && activeOption.domId,
    id: listId,
    onFocus: inCombobox ? void 0 : handleFocus,
    onBlur: inCombobox ? void 0 : handleBlur,
    ref: listboxRef
  }, children) : null)));
}
var import_react222, AutoSelection, OPTION_SELECTOR, OPTION_VALUE_ATTRIBUTE, OPTION_ACTION_ATTRIBUTE, OPTION_FOCUS_ATTRIBUTE;
var init_Listbox = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.js"() {
    import_react222 = __toESM(require_react());
    init_debounce();
    init_use_toggle();
    init_types();
    init_shared();
    init_Listbox_css();
    init_hooks11();
    init_utilities4();
    init_context11();
    init_TextOption();
    init_Loading2();
    init_Section5();
    init_Header3();
    init_Action();
    init_KeypressListener();
    init_Text();
    init_Option();
    (function(AutoSelection2) {
      AutoSelection2["FirstSelected"] = "FIRST_SELECTED";
      AutoSelection2["First"] = "FIRST";
      AutoSelection2["None"] = "NONE";
    })(AutoSelection || (AutoSelection = {}));
    OPTION_SELECTOR = "[data-listbox-option]";
    OPTION_VALUE_ATTRIBUTE = "data-listbox-option-value";
    OPTION_ACTION_ATTRIBUTE = "data-listbox-option-action";
    OPTION_FOCUS_ATTRIBUTE = "data-focused";
    Listbox.Option = Option;
    Listbox.TextOption = TextOption;
    Listbox.Loading = Loading2;
    Listbox.Section = Section5;
    Listbox.Header = Header3;
    Listbox.Action = Action;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.js
var import_react223, MappedOption;
var init_MappedOption = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedOption/MappedOption.js"() {
    import_react223 = __toESM(require_react());
    init_css();
    init_MappedOption_css();
    init_Listbox();
    MappedOption = /* @__PURE__ */ (0, import_react223.memo)(function MappedOption2({
      label,
      value,
      disabled,
      media,
      selected,
      singleSelection
    }) {
      const mediaClassNames = classNames(styles71.Media, disabled && styles71.disabledMedia, singleSelection && styles71.singleSelectionMedia);
      const mediaMarkup = media ? /* @__PURE__ */ import_react223.default.createElement("div", {
        className: mediaClassNames
      }, media) : null;
      const accessibilityLabel = typeof label === "string" ? label : void 0;
      return /* @__PURE__ */ import_react223.default.createElement(Listbox.Option, {
        accessibilityLabel,
        key: value,
        selected,
        value,
        disabled
      }, /* @__PURE__ */ import_react223.default.createElement(Listbox.TextOption, {
        selected,
        disabled
      }, /* @__PURE__ */ import_react223.default.createElement("div", {
        className: styles71.Content
      }, mediaMarkup, label)));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.css.js
var styles78;
var init_Combobox_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.css.js"() {
    styles78 = {
      "Listbox": "Polaris-Combobox__Listbox"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Combobox/components/TextField/TextField.js
function TextField2({
  value,
  id: idProp,
  type = "text",
  ariaAutocomplete = "list",
  onFocus,
  onBlur,
  onChange,
  ...rest
}) {
  const comboboxTextFieldContext = useComboboxTextField();
  const {
    activeOptionId,
    listboxId,
    expanded,
    setTextFieldFocused,
    setTextFieldLabelId,
    onTextFieldFocus,
    onTextFieldChange,
    onTextFieldBlur
  } = comboboxTextFieldContext;
  const uniqueId = (0, import_react224.useId)();
  const textFieldId = (0, import_react224.useMemo)(() => idProp || uniqueId, [uniqueId, idProp]);
  const labelId = (0, import_react224.useMemo)(() => labelID(idProp || uniqueId), [uniqueId, idProp]);
  (0, import_react224.useEffect)(() => {
    if (setTextFieldLabelId)
      setTextFieldLabelId(labelId);
  }, [labelId, setTextFieldLabelId]);
  const handleFocus = (0, import_react224.useCallback)((event) => {
    if (onFocus)
      onFocus(event);
    if (onTextFieldFocus)
      onTextFieldFocus();
    if (setTextFieldFocused)
      setTextFieldFocused(true);
  }, [onFocus, onTextFieldFocus, setTextFieldFocused]);
  const handleBlur = (0, import_react224.useCallback)((event) => {
    if (onBlur)
      onBlur(event);
    if (onTextFieldBlur)
      onTextFieldBlur();
    if (setTextFieldFocused)
      setTextFieldFocused(false);
  }, [onBlur, onTextFieldBlur, setTextFieldFocused]);
  const handleChange = (0, import_react224.useCallback)((value2, id) => {
    if (onChange)
      onChange(value2, id);
    if (onTextFieldChange)
      onTextFieldChange(value2);
  }, [onChange, onTextFieldChange]);
  return /* @__PURE__ */ import_react224.default.createElement(TextField, Object.assign({}, rest, {
    value,
    id: textFieldId,
    type,
    ariaAutocomplete,
    "aria-haspopup": "listbox",
    ariaActiveDescendant: activeOptionId,
    ariaControls: listboxId,
    role: "combobox",
    ariaExpanded: expanded,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onChange: handleChange
  }));
}
var import_react224;
var init_TextField2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Combobox/components/TextField/TextField.js"() {
    import_react224 = __toESM(require_react());
    init_hooks11();
    init_Label();
    init_TextField();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.js
function Combobox({
  activator,
  allowMultiple,
  children,
  preferredPosition = "below",
  willLoadMoreOptions,
  height: height2,
  onScrolledToBottom,
  onClose
}) {
  const [popoverActive, setPopoverActive] = (0, import_react225.useState)(false);
  const [activeOptionId, setActiveOptionId] = (0, import_react225.useState)();
  const [textFieldLabelId, setTextFieldLabelId] = (0, import_react225.useState)();
  const [listboxId, setListboxId] = (0, import_react225.useState)();
  const [textFieldFocused, setTextFieldFocused] = (0, import_react225.useState)(false);
  const shouldOpen = !popoverActive;
  const popoverActiveWithChildren = popoverActive && import_react225.Children.count(children) > 0;
  const ref = (0, import_react225.useRef)(null);
  const handleClose = (0, import_react225.useCallback)(() => {
    setPopoverActive(false);
    onClose?.();
    setActiveOptionId(void 0);
  }, [onClose]);
  const handleOpen = (0, import_react225.useCallback)(() => {
    setPopoverActive(true);
    setActiveOptionId(void 0);
  }, []);
  const onOptionSelected = (0, import_react225.useCallback)(() => {
    if (!allowMultiple) {
      handleClose();
      setActiveOptionId(void 0);
      return;
    }
    ref.current?.forceUpdatePosition();
  }, [allowMultiple, handleClose]);
  const handleFocus = (0, import_react225.useCallback)(() => {
    if (shouldOpen) {
      handleOpen();
    }
  }, [shouldOpen, handleOpen]);
  const handleChange = (0, import_react225.useCallback)(() => {
    if (shouldOpen) {
      handleOpen();
    }
  }, [shouldOpen, handleOpen]);
  const handleBlur = (0, import_react225.useCallback)(() => {
    if (popoverActive) {
      handleClose();
    }
  }, [popoverActive, handleClose]);
  const textFieldContextValue = (0, import_react225.useMemo)(() => ({
    activeOptionId,
    expanded: popoverActive,
    listboxId,
    setTextFieldFocused,
    setTextFieldLabelId,
    onTextFieldFocus: handleFocus,
    onTextFieldChange: handleChange,
    onTextFieldBlur: handleBlur
  }), [activeOptionId, popoverActive, listboxId, setTextFieldFocused, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);
  const listboxOptionContextValue = (0, import_react225.useMemo)(() => ({
    allowMultiple
  }), [allowMultiple]);
  const listboxContextValue = (0, import_react225.useMemo)(() => ({
    listboxId,
    textFieldLabelId,
    textFieldFocused,
    willLoadMoreOptions,
    onOptionSelected,
    setActiveOptionId,
    setListboxId,
    onKeyToBottom: onScrolledToBottom
  }), [listboxId, textFieldLabelId, textFieldFocused, willLoadMoreOptions, onOptionSelected, setActiveOptionId, setListboxId, onScrolledToBottom]);
  return /* @__PURE__ */ import_react225.default.createElement(Popover2, {
    ref,
    active: popoverActiveWithChildren,
    activator: /* @__PURE__ */ import_react225.default.createElement(ComboboxTextFieldContext.Provider, {
      value: textFieldContextValue
    }, activator),
    autofocusTarget: "none",
    preventFocusOnClose: true,
    fullWidth: true,
    preferInputActivator: false,
    preferredPosition,
    onClose: handleClose
  }, import_react225.Children.count(children) > 0 ? /* @__PURE__ */ import_react225.default.createElement(Popover2.Pane, {
    onScrolledToBottom,
    height: height2
  }, /* @__PURE__ */ import_react225.default.createElement(ComboboxListboxContext.Provider, {
    value: listboxContextValue
  }, /* @__PURE__ */ import_react225.default.createElement(ComboboxListboxOptionContext.Provider, {
    value: listboxOptionContextValue
  }, /* @__PURE__ */ import_react225.default.createElement("div", {
    className: styles78.Listbox
  }, children)))) : null);
}
var import_react225;
var init_Combobox = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Combobox/Combobox.js"() {
    import_react225 = __toESM(require_react());
    init_Combobox_css();
    init_context16();
    init_TextField2();
    init_Popover();
    Combobox.TextField = TextField2;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.css.js
var styles79;
var init_MappedAction_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.css.js"() {
    styles79 = {
      "ActionContainer": "Polaris-Autocomplete-MappedAction__ActionContainer",
      "Action": "Polaris-Autocomplete-MappedAction__Action",
      "destructive": "Polaris-Autocomplete-MappedAction--destructive",
      "selected": "Polaris-Autocomplete-MappedAction--selected",
      "disabled": "Polaris-Autocomplete-MappedAction--disabled",
      "Prefix": "Polaris-Autocomplete-MappedAction__Prefix",
      "Suffix": "Polaris-Autocomplete-MappedAction__Suffix",
      "Content": "Polaris-Autocomplete-MappedAction__Content",
      "Text": "Polaris-Autocomplete-MappedAction__Text"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.js
function MappedAction({
  active,
  content,
  disabled,
  icon,
  image,
  prefix,
  suffix,
  ellipsis,
  role,
  url,
  external,
  onAction,
  destructive,
  badge,
  helpText,
  wrapOverflow = false
}) {
  const i18n = useI18n();
  let prefixMarkup = null;
  if (prefix) {
    prefixMarkup = /* @__PURE__ */ import_react226.default.createElement("div", {
      className: styles79.Prefix
    }, prefix);
  } else if (icon) {
    prefixMarkup = /* @__PURE__ */ import_react226.default.createElement("div", {
      className: styles79.Prefix
    }, /* @__PURE__ */ import_react226.default.createElement(Icon, {
      source: icon
    }));
  } else if (image) {
    prefixMarkup = /* @__PURE__ */ import_react226.default.createElement("div", {
      role: "presentation",
      className: styles79.Prefix,
      style: {
        backgroundImage: `url(${image}`
      }
    });
  }
  const badgeMarkup = badge && /* @__PURE__ */ import_react226.default.createElement("span", {
    className: styles79.Suffix
  }, /* @__PURE__ */ import_react226.default.createElement(Badge, {
    tone: badge.tone
  }, badge.content));
  const suffixMarkup = suffix && /* @__PURE__ */ import_react226.default.createElement("span", {
    className: styles79.Suffix
  }, suffix);
  const contentText = ellipsis && content ? i18n.translate("Polaris.Autocomplete.ellipsis", {
    content
  }) : content;
  const contentMarkup = /* @__PURE__ */ import_react226.default.createElement("div", {
    className: styles79.Text
  }, /* @__PURE__ */ import_react226.default.createElement(Text, {
    as: "p",
    variant: "bodyMd",
    breakWord: wrapOverflow
  }, contentText), helpText ? /* @__PURE__ */ import_react226.default.createElement(Text, {
    as: "p",
    variant: "bodyMd",
    tone: "subdued"
  }, helpText) : null);
  const context = (0, import_react226.useMemo)(() => ({
    role,
    url,
    external,
    onAction,
    destructive
  }), [role, url, external, onAction, destructive]);
  const actionClassNames = classNames(styles79.Action, disabled && styles79.disabled, destructive && styles79.destructive, active && styles79.selected);
  return /* @__PURE__ */ import_react226.default.createElement(MappedActionContext.Provider, {
    value: context
  }, /* @__PURE__ */ import_react226.default.createElement("div", {
    className: styles79.ActionContainer
  }, /* @__PURE__ */ import_react226.default.createElement(Listbox.Action, {
    selected: active,
    disabled,
    value: content || ""
  }, /* @__PURE__ */ import_react226.default.createElement("div", {
    className: actionClassNames
  }, /* @__PURE__ */ import_react226.default.createElement("div", {
    className: styles79.Content
  }, prefixMarkup, contentMarkup, badgeMarkup, suffixMarkup)))));
}
var import_react226;
var init_MappedAction = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Autocomplete/components/MappedAction/MappedAction.js"() {
    import_react226 = __toESM(require_react());
    init_css();
    init_MappedAction_css();
    init_hooks2();
    init_Icon();
    init_Badge();
    init_Text();
    init_context18();
    init_Listbox();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.js
var import_react227, Autocomplete;
var init_Autocomplete = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Autocomplete/Autocomplete.js"() {
    import_react227 = __toESM(require_react());
    init_options();
    init_Autocomplete_css();
    init_MappedOption();
    init_Listbox();
    init_Combobox();
    init_MappedAction();
    init_hooks2();
    Autocomplete = function Autocomplete2({
      options,
      selected,
      textField,
      preferredPosition,
      listTitle,
      allowMultiple,
      loading,
      actionBefore,
      willLoadMoreResults,
      emptyState,
      onSelect,
      onLoadMoreResults
    }) {
      const i18n = useI18n();
      const buildMappedOptionFromOption = (0, import_react227.useCallback)((options2) => {
        return options2.map((option) => /* @__PURE__ */ import_react227.default.createElement(MappedOption, Object.assign({
          key: option.id || option.value
        }, option, {
          selected: selected.includes(option.value),
          singleSelection: !allowMultiple
        })));
      }, [selected, allowMultiple]);
      const optionsMarkup = (0, import_react227.useMemo)(() => {
        const conditionalOptions = loading && !willLoadMoreResults ? [] : options;
        if (isSection(conditionalOptions)) {
          const noOptionsAvailable = conditionalOptions.every(({
            options: options2
          }) => options2.length === 0);
          if (noOptionsAvailable) {
            return null;
          }
          const optionsMarkup2 = conditionalOptions.map(({
            options: options2,
            title
          }) => {
            if (options2.length === 0) {
              return null;
            }
            const optionMarkup = buildMappedOptionFromOption(options2);
            return /* @__PURE__ */ import_react227.default.createElement(Listbox.Section, {
              divider: false,
              title: /* @__PURE__ */ import_react227.default.createElement(Listbox.Header, null, title),
              key: title
            }, optionMarkup);
          });
          return /* @__PURE__ */ import_react227.default.createElement("div", {
            className: styles70.SectionWrapper
          }, optionsMarkup2);
        }
        const optionList = conditionalOptions.length > 0 ? buildMappedOptionFromOption(conditionalOptions) : null;
        if (listTitle) {
          return /* @__PURE__ */ import_react227.default.createElement(Listbox.Section, {
            divider: false,
            title: /* @__PURE__ */ import_react227.default.createElement(Listbox.Header, null, listTitle)
          }, optionList);
        }
        return optionList;
      }, [listTitle, loading, options, willLoadMoreResults, buildMappedOptionFromOption]);
      const loadingMarkup = loading ? /* @__PURE__ */ import_react227.default.createElement(Listbox.Loading, {
        accessibilityLabel: i18n.translate("Polaris.Autocomplete.spinnerAccessibilityLabel")
      }) : null;
      const updateSelection = (0, import_react227.useCallback)((newSelection) => {
        if (actionBefore && newSelection === actionBefore.content) {
          actionBefore.onAction && actionBefore.onAction();
          return;
        }
        if (allowMultiple) {
          if (selected.includes(newSelection)) {
            onSelect(selected.filter((option) => option !== newSelection));
          } else {
            onSelect([...selected, newSelection]);
          }
        } else {
          onSelect([newSelection]);
        }
      }, [allowMultiple, onSelect, selected, actionBefore]);
      const actionMarkup = actionBefore && /* @__PURE__ */ import_react227.default.createElement(MappedAction, actionBefore);
      const emptyStateMarkup = emptyState && options.length < 1 && !loading && /* @__PURE__ */ import_react227.default.createElement("div", {
        role: "status"
      }, emptyState);
      const autoSelection = actionBefore ? AutoSelection.First : void 0;
      return /* @__PURE__ */ import_react227.default.createElement(Combobox, {
        activator: textField,
        allowMultiple,
        onScrolledToBottom: onLoadMoreResults,
        preferredPosition,
        willLoadMoreOptions: willLoadMoreResults
      }, actionMarkup || optionsMarkup || loadingMarkup || emptyStateMarkup ? /* @__PURE__ */ import_react227.default.createElement(Listbox, {
        autoSelection,
        onSelect: updateSelection
      }, actionMarkup, optionsMarkup && (!loading || willLoadMoreResults) ? optionsMarkup : null, loadingMarkup, emptyStateMarkup) : null);
    };
    Autocomplete.TextField = Combobox.TextField;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Banner/Banner.css.js
var styles80;
var init_Banner_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Banner/Banner.css.js"() {
    styles80 = {
      "Banner": "Polaris-Banner",
      "keyFocused": "Polaris-Banner--keyFocused",
      "withinContentContainer": "Polaris-Banner--withinContentContainer",
      "withinPage": "Polaris-Banner--withinPage",
      "DismissIcon": "Polaris-Banner__DismissIcon",
      "text-success-on-bg-fill": "Polaris-Banner--textSuccessOnBgFill",
      "text-success": "Polaris-Banner__text--success",
      "text-warning-on-bg-fill": "Polaris-Banner--textWarningOnBgFill",
      "text-warning": "Polaris-Banner__text--warning",
      "text-critical-on-bg-fill": "Polaris-Banner--textCriticalOnBgFill",
      "text-critical": "Polaris-Banner__text--critical",
      "text-info-on-bg-fill": "Polaris-Banner--textInfoOnBgFill",
      "text-info": "Polaris-Banner__text--info",
      "icon-secondary": "Polaris-Banner__icon--secondary"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Banner/utilities.js
function useBannerFocus(bannerRef) {
  const wrapperRef = (0, import_react228.useRef)(null);
  const [shouldShowFocus, setShouldShowFocus] = (0, import_react228.useState)(false);
  (0, import_react228.useImperativeHandle)(bannerRef, () => ({
    focus: () => {
      wrapperRef.current?.focus();
      setShouldShowFocus(true);
    }
  }), []);
  const handleKeyUp = (event) => {
    if (event.target === wrapperRef.current) {
      setShouldShowFocus(true);
    }
  };
  const handleBlur = () => setShouldShowFocus(false);
  const handleMouseUp = (event) => {
    event.currentTarget.blur();
    setShouldShowFocus(false);
  };
  return {
    wrapperRef,
    handleKeyUp,
    handleBlur,
    handleMouseUp,
    shouldShowFocus
  };
}
var import_react228, bannerAttributes;
var init_utilities5 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Banner/utilities.js"() {
    init_dist();
    import_react228 = __toESM(require_react());
    bannerAttributes = {
      success: {
        withinPage: {
          background: "bg-fill-success",
          text: "text-success-on-bg-fill",
          icon: "text-success-on-bg-fill"
        },
        withinContentContainer: {
          background: "bg-surface-success",
          text: "text-success",
          icon: "text-success"
        },
        icon: SvgCheckIcon
      },
      warning: {
        withinPage: {
          background: "bg-fill-warning",
          text: "text-warning-on-bg-fill",
          icon: "text-warning-on-bg-fill"
        },
        withinContentContainer: {
          background: "bg-surface-warning",
          text: "text-warning",
          icon: "text-warning"
        },
        icon: SvgAlertTriangleIcon
      },
      critical: {
        withinPage: {
          background: "bg-fill-critical",
          text: "text-critical-on-bg-fill",
          icon: "text-critical-on-bg-fill"
        },
        withinContentContainer: {
          background: "bg-surface-critical",
          text: "text-critical",
          icon: "text-critical"
        },
        icon: SvgAlertDiamondIcon
      },
      info: {
        withinPage: {
          background: "bg-fill-info",
          text: "text-info-on-bg-fill",
          icon: "text-info-on-bg-fill"
        },
        withinContentContainer: {
          background: "bg-surface-info",
          text: "text-info",
          icon: "text-info"
        },
        icon: SvgInfoIcon
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Banner/Banner.js
function BannerLayout({
  tone = "info",
  icon,
  hideIcon,
  onDismiss,
  action,
  secondaryAction,
  title,
  children
}) {
  const i18n = useI18n();
  const withinContentContainer = (0, import_react229.useContext)(WithinContentContext);
  const isInlineIconBanner = !title && !withinContentContainer;
  const bannerTone = Object.keys(bannerAttributes).includes(tone) ? tone : "info";
  const bannerColors = bannerAttributes[bannerTone][withinContentContainer ? "withinContentContainer" : "withinPage"];
  const sharedBannerProps = {
    backgroundColor: bannerColors.background,
    textColor: bannerColors.text,
    bannerTitle: title ? /* @__PURE__ */ import_react229.default.createElement(Text, {
      as: "h2",
      variant: "headingSm",
      breakWord: true
    }, title) : null,
    bannerIcon: hideIcon ? null : /* @__PURE__ */ import_react229.default.createElement("span", {
      className: styles80[bannerColors.icon]
    }, /* @__PURE__ */ import_react229.default.createElement(Icon, {
      source: icon ?? bannerAttributes[bannerTone].icon
    })),
    actionButtons: action || secondaryAction ? /* @__PURE__ */ import_react229.default.createElement(ButtonGroup, null, action && /* @__PURE__ */ import_react229.default.createElement(Button, Object.assign({
      onClick: action.onAction
    }, action), action.content), secondaryAction && /* @__PURE__ */ import_react229.default.createElement(Button, Object.assign({
      onClick: secondaryAction.onAction
    }, secondaryAction), secondaryAction.content)) : null,
    dismissButton: onDismiss ? /* @__PURE__ */ import_react229.default.createElement(Button, {
      variant: "tertiary",
      icon: /* @__PURE__ */ import_react229.default.createElement("span", {
        className: styles80[isInlineIconBanner ? "icon-secondary" : bannerColors.icon]
      }, /* @__PURE__ */ import_react229.default.createElement(Icon, {
        source: SvgXIcon
      })),
      onClick: onDismiss,
      accessibilityLabel: i18n.translate("Polaris.Banner.dismissButton")
    }) : null
  };
  const childrenMarkup = children ? /* @__PURE__ */ import_react229.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, children) : null;
  if (withinContentContainer) {
    return /* @__PURE__ */ import_react229.default.createElement(WithinContentContainerBanner, sharedBannerProps, childrenMarkup);
  }
  if (isInlineIconBanner) {
    return /* @__PURE__ */ import_react229.default.createElement(InlineIconBanner, sharedBannerProps, childrenMarkup);
  }
  return /* @__PURE__ */ import_react229.default.createElement(DefaultBanner, sharedBannerProps, childrenMarkup);
}
function DefaultBanner({
  backgroundColor,
  textColor,
  bannerTitle,
  bannerIcon,
  actionButtons,
  dismissButton,
  children
}) {
  const {
    smUp
  } = useBreakpoints();
  const hasContent = children || actionButtons;
  return /* @__PURE__ */ import_react229.default.createElement(Box, {
    width: "100%"
  }, /* @__PURE__ */ import_react229.default.createElement(BlockStack, {
    align: "space-between"
  }, /* @__PURE__ */ import_react229.default.createElement(Box, {
    background: backgroundColor,
    color: textColor,
    borderStartStartRadius: smUp ? "300" : void 0,
    borderStartEndRadius: smUp ? "300" : void 0,
    borderEndStartRadius: !hasContent && smUp ? "300" : void 0,
    borderEndEndRadius: !hasContent && smUp ? "300" : void 0,
    padding: "300"
  }, /* @__PURE__ */ import_react229.default.createElement(InlineStack, {
    align: "space-between",
    blockAlign: "center",
    gap: "200",
    wrap: false
  }, /* @__PURE__ */ import_react229.default.createElement(InlineStack, {
    gap: "100",
    wrap: false
  }, bannerIcon, bannerTitle), dismissButton)), hasContent && /* @__PURE__ */ import_react229.default.createElement(Box, {
    padding: {
      xs: "300",
      md: "400"
    },
    paddingBlockStart: "300"
  }, /* @__PURE__ */ import_react229.default.createElement(BlockStack, {
    gap: "200"
  }, /* @__PURE__ */ import_react229.default.createElement("div", null, children), actionButtons))));
}
function InlineIconBanner({
  backgroundColor,
  bannerIcon,
  actionButtons,
  dismissButton,
  children
}) {
  const [blockAlign, setBlockAlign] = (0, import_react229.useState)("center");
  const contentNode = (0, import_react229.useRef)(null);
  const iconNode = (0, import_react229.useRef)(null);
  const dismissIconNode = (0, import_react229.useRef)(null);
  const handleResize = (0, import_react229.useCallback)(() => {
    const contentHeight = contentNode.current?.offsetHeight;
    const iconBoxHeight = iconNode.current?.offsetHeight || dismissIconNode.current?.offsetHeight;
    if (!contentHeight || !iconBoxHeight)
      return;
    contentHeight > iconBoxHeight ? setBlockAlign("start") : setBlockAlign("center");
  }, []);
  (0, import_react229.useEffect)(() => handleResize(), [handleResize]);
  useEventListener("resize", handleResize);
  return /* @__PURE__ */ import_react229.default.createElement(Box, {
    width: "100%",
    padding: "300",
    borderRadius: "300"
  }, /* @__PURE__ */ import_react229.default.createElement(InlineStack, {
    align: "space-between",
    blockAlign,
    wrap: false
  }, /* @__PURE__ */ import_react229.default.createElement(Box, {
    width: "100%"
  }, /* @__PURE__ */ import_react229.default.createElement(InlineStack, {
    gap: "200",
    wrap: false,
    blockAlign
  }, bannerIcon ? /* @__PURE__ */ import_react229.default.createElement("div", {
    ref: iconNode
  }, /* @__PURE__ */ import_react229.default.createElement(Box, {
    background: backgroundColor,
    borderRadius: "200",
    padding: "100"
  }, bannerIcon)) : null, /* @__PURE__ */ import_react229.default.createElement(Box, {
    ref: contentNode,
    width: "100%"
  }, /* @__PURE__ */ import_react229.default.createElement(BlockStack, {
    gap: "200"
  }, /* @__PURE__ */ import_react229.default.createElement("div", null, children), actionButtons)))), /* @__PURE__ */ import_react229.default.createElement("div", {
    ref: dismissIconNode,
    className: styles80.DismissIcon
  }, dismissButton)));
}
function WithinContentContainerBanner({
  backgroundColor,
  textColor,
  bannerTitle,
  bannerIcon,
  actionButtons,
  dismissButton,
  children
}) {
  return /* @__PURE__ */ import_react229.default.createElement(Box, {
    width: "100%",
    background: backgroundColor,
    padding: "200",
    borderRadius: "200",
    color: textColor
  }, /* @__PURE__ */ import_react229.default.createElement(InlineStack, {
    align: "space-between",
    blockAlign: "start",
    wrap: false,
    gap: "200"
  }, /* @__PURE__ */ import_react229.default.createElement(InlineStack, {
    gap: "150",
    wrap: false
  }, bannerIcon, /* @__PURE__ */ import_react229.default.createElement(Box, {
    width: "100%"
  }, /* @__PURE__ */ import_react229.default.createElement(BlockStack, {
    gap: "200"
  }, /* @__PURE__ */ import_react229.default.createElement(BlockStack, {
    gap: "050"
  }, bannerTitle, /* @__PURE__ */ import_react229.default.createElement("div", null, children)), actionButtons))), dismissButton));
}
var import_react229, Banner;
var init_Banner = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Banner/Banner.js"() {
    import_react229 = __toESM(require_react());
    init_dist();
    init_banner_context();
    init_within_content_context();
    init_css();
    init_breakpoints2();
    init_use_event_listener();
    init_Banner_css();
    init_utilities5();
    init_ButtonGroup();
    init_hooks2();
    init_Text();
    init_Icon();
    init_Button();
    init_Box();
    init_BlockStack();
    init_InlineStack();
    Banner = /* @__PURE__ */ (0, import_react229.forwardRef)(function Banner2(props, bannerRef) {
      const {
        tone,
        stopAnnouncements
      } = props;
      const withinContentContainer = (0, import_react229.useContext)(WithinContentContext);
      const {
        wrapperRef,
        handleKeyUp,
        handleBlur,
        handleMouseUp,
        shouldShowFocus
      } = useBannerFocus(bannerRef);
      const className = classNames(styles80.Banner, shouldShowFocus && styles80.keyFocused, withinContentContainer ? styles80.withinContentContainer : styles80.withinPage);
      return /* @__PURE__ */ import_react229.default.createElement(BannerContext.Provider, {
        value: true
      }, /* @__PURE__ */ import_react229.default.createElement("div", {
        className,
        tabIndex: 0,
        ref: wrapperRef,
        role: tone === "warning" || tone === "critical" ? "alert" : "status",
        "aria-live": stopAnnouncements ? "off" : "polite",
        onMouseUp: handleMouseUp,
        onKeyUp: handleKeyUp,
        onBlur: handleBlur
      }, /* @__PURE__ */ import_react229.default.createElement(BannerLayout, props)));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.css.js
var styles81;
var init_CalloutCard_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.css.js"() {
    styles81 = {
      "CalloutCard": "Polaris-CalloutCard",
      "Image": "Polaris-CalloutCard__Image",
      "DismissImage": "Polaris-CalloutCard__DismissImage",
      "Content": "Polaris-CalloutCard__Content",
      "Title": "Polaris-CalloutCard__Title",
      "Buttons": "Polaris-CalloutCard__Buttons",
      "Container": "Polaris-CalloutCard__Container",
      "Dismiss": "Polaris-CalloutCard__Dismiss",
      "hasDismiss": "Polaris-CalloutCard--hasDismiss"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.css.js
var styles82;
var init_LegacyCard_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.css.js"() {
    styles82 = {
      "LegacyCard": "Polaris-LegacyCard",
      "Section": "Polaris-LegacyCard__Section",
      "subdued": "Polaris-LegacyCard--subdued",
      "Section-hideOnPrint": "Polaris-LegacyCard__Section--hideOnPrint",
      "hideOnPrint": "Polaris-LegacyCard--hideOnPrint",
      "Header": "Polaris-LegacyCard__Header",
      "Section-fullWidth": "Polaris-LegacyCard__Section--fullWidth",
      "Section-flush": "Polaris-LegacyCard__Section--flush",
      "Section-subdued": "Polaris-LegacyCard__Section--subdued",
      "SectionHeader": "Polaris-LegacyCard__SectionHeader",
      "Subsection": "Polaris-LegacyCard__Subsection",
      "Footer": "Polaris-LegacyCard__Footer",
      "LeftJustified": "Polaris-LegacyCard__LeftJustified",
      "FirstSectionPadding": "Polaris-LegacyCard__FirstSectionPadding",
      "LastSectionPadding": "Polaris-LegacyCard__LastSectionPadding"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Header/Header.js
function Header4({
  children,
  title,
  actions
}) {
  const actionMarkup = actions ? /* @__PURE__ */ import_react230.default.createElement(ButtonGroup, null, buttonsFrom(actions, {
    variant: "plain"
  })) : null;
  const titleMarkup = /* @__PURE__ */ (0, import_react230.isValidElement)(title) ? title : /* @__PURE__ */ import_react230.default.createElement(Text, {
    variant: "headingSm",
    as: "h2"
  }, title);
  const headingMarkup = actionMarkup || children ? /* @__PURE__ */ import_react230.default.createElement(InlineStack, {
    wrap: false,
    gap: "200",
    align: "space-between",
    blockAlign: "center"
  }, titleMarkup, /* @__PURE__ */ import_react230.default.createElement(InlineStack, {
    wrap: false,
    gap: "400",
    blockAlign: "center"
  }, actionMarkup, children)) : titleMarkup;
  return /* @__PURE__ */ import_react230.default.createElement("div", {
    className: styles82.Header
  }, headingMarkup);
}
var import_react230;
var init_Header4 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Header/Header.js"() {
    import_react230 = __toESM(require_react());
    init_LegacyCard_css();
    init_utils3();
    init_ButtonGroup();
    init_InlineStack();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Section/Section.js
function Section6({
  children,
  title,
  subdued,
  flush,
  fullWidth,
  actions,
  hideOnPrint
}) {
  const className = classNames(styles82.Section, flush && styles82["Section-flush"], subdued && styles82["Section-subdued"], fullWidth && styles82["Section-fullWidth"], hideOnPrint && styles82["Section-hideOnPrint"]);
  const actionMarkup = actions ? /* @__PURE__ */ import_react231.default.createElement(ButtonGroup, null, buttonsFrom(actions, {
    variant: "plain"
  })) : null;
  const titleMarkup = typeof title === "string" ? /* @__PURE__ */ import_react231.default.createElement(Text, {
    variant: "headingSm",
    as: "h3",
    fontWeight: "medium"
  }, title) : title;
  const titleAreaMarkup = titleMarkup || actionMarkup ? /* @__PURE__ */ import_react231.default.createElement("div", {
    className: styles82.SectionHeader
  }, actionMarkup ? /* @__PURE__ */ import_react231.default.createElement(LegacyStack, {
    alignment: "baseline"
  }, /* @__PURE__ */ import_react231.default.createElement(LegacyStack.Item, {
    fill: true
  }, titleMarkup), actionMarkup) : titleMarkup) : null;
  return /* @__PURE__ */ import_react231.default.createElement("div", {
    className
  }, titleAreaMarkup, children);
}
var import_react231;
var init_Section6 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Section/Section.js"() {
    import_react231 = __toESM(require_react());
    init_css();
    init_LegacyCard_css();
    init_LegacyStack();
    init_ButtonGroup();
    init_utils3();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Subsection/Subsection.js
function Subsection({
  children
}) {
  return /* @__PURE__ */ import_react232.default.createElement("div", {
    className: styles82.Subsection
  }, children);
}
var import_react232;
var init_Subsection = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyCard/components/Subsection/Subsection.js"() {
    import_react232 = __toESM(require_react());
    init_LegacyCard_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.js
function useLegacyCardPaddingObserverRef() {
  const legacyCard = (0, import_react233.useRef)(null);
  (0, import_react233.useEffect)(() => {
    const legacyCardNode = legacyCard.current;
    let firstSection;
    let lastSection;
    if (legacyCardNode) {
      const updateFirstAndLastSectionPadding = () => {
        updatePadding(firstSection, "top", false);
        updatePadding(lastSection, "bottom", false);
        const currentElements = legacyCardNode.querySelectorAll(`.${styles82.Section}, .${styles82.Header}, .${styles82.Footer}`);
        if (!currentElements?.length)
          return;
        const firstElement = currentElements[0];
        const lastElement = getMostSeniorLastElement(currentElements);
        if (legacyCardNode.firstChild?.contains(firstElement)) {
          firstSection = firstElement;
          updatePadding(firstSection, "top", true);
        }
        if (legacyCardNode.lastChild?.contains(lastElement)) {
          lastSection = lastElement;
          updatePadding(lastSection, "bottom", true);
        }
      };
      updateFirstAndLastSectionPadding();
      const observer = new MutationObserver(updateFirstAndLastSectionPadding);
      observer.observe(legacyCardNode, {
        childList: true,
        subtree: true
      });
      return () => {
        updatePadding(firstSection, "top", false);
        updatePadding(lastSection, "bottom", false);
        observer.disconnect();
      };
    }
  }, []);
  return legacyCard;
}
function updatePadding(element, area, add) {
  if (!element || element.className.includes(styles82["Section-flush"]))
    return;
  switch (area) {
    case "top":
      element.classList.toggle(styles82.FirstSectionPadding, add);
      return;
    case "bottom":
      element.classList.toggle(styles82.LastSectionPadding, add);
  }
}
function getMostSeniorLastElement(elements) {
  let lastElement = elements[0];
  elements.forEach((element) => {
    if (!lastElement.contains(element)) {
      lastElement = element;
    }
  });
  return lastElement;
}
var import_react233, LegacyCard;
var init_LegacyCard = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyCard/LegacyCard.js"() {
    import_react233 = __toESM(require_react());
    init_css();
    init_use_toggle();
    init_within_content_context();
    init_LegacyCard_css();
    init_Header4();
    init_Section6();
    init_Subsection();
    init_hooks2();
    init_utils3();
    init_Popover();
    init_Button();
    init_ActionList();
    init_ButtonGroup();
    LegacyCard = function LegacyCard2({
      children,
      hideOnPrint,
      title,
      subdued,
      sectioned,
      actions,
      primaryFooterAction,
      secondaryFooterActions,
      secondaryFooterActionsDisclosureText,
      footerActionAlignment = "right"
    }) {
      const i18n = useI18n();
      const {
        value: secondaryActionsPopoverOpen,
        toggle: toggleSecondaryActionsPopoverOpen
      } = useToggle(false);
      const legacyCard = useLegacyCardPaddingObserverRef();
      const className = classNames(styles82.LegacyCard, subdued && styles82.subdued, hideOnPrint && styles82.hideOnPrint);
      const headerMarkup = title || actions ? /* @__PURE__ */ import_react233.default.createElement(Header4, {
        actions,
        title
      }) : null;
      const content = sectioned ? /* @__PURE__ */ import_react233.default.createElement(Section6, null, children) : children;
      const primaryFooterActionMarkup = primaryFooterAction ? buttonFrom(primaryFooterAction, {
        variant: "primary"
      }) : null;
      let secondaryFooterActionsMarkup = null;
      if (secondaryFooterActions && secondaryFooterActions.length) {
        if (secondaryFooterActions.length === 1) {
          secondaryFooterActionsMarkup = buttonFrom(secondaryFooterActions[0]);
        } else {
          secondaryFooterActionsMarkup = /* @__PURE__ */ import_react233.default.createElement(import_react233.default.Fragment, null, /* @__PURE__ */ import_react233.default.createElement(Popover2, {
            active: secondaryActionsPopoverOpen,
            activator: /* @__PURE__ */ import_react233.default.createElement(Button, {
              disclosure: true,
              onClick: toggleSecondaryActionsPopoverOpen
            }, secondaryFooterActionsDisclosureText || i18n.translate("Polaris.Common.more")),
            onClose: toggleSecondaryActionsPopoverOpen
          }, /* @__PURE__ */ import_react233.default.createElement(ActionList, {
            items: secondaryFooterActions
          })));
        }
      }
      const footerMarkup = primaryFooterActionMarkup || secondaryFooterActionsMarkup ? /* @__PURE__ */ import_react233.default.createElement("div", {
        className: classNames(styles82.Footer, footerActionAlignment === "left" && styles82.LeftJustified)
      }, footerActionAlignment === "right" ? /* @__PURE__ */ import_react233.default.createElement(ButtonGroup, null, secondaryFooterActionsMarkup, primaryFooterActionMarkup) : /* @__PURE__ */ import_react233.default.createElement(ButtonGroup, null, primaryFooterActionMarkup, secondaryFooterActionsMarkup)) : null;
      return /* @__PURE__ */ import_react233.default.createElement(WithinContentContext.Provider, {
        value: true
      }, /* @__PURE__ */ import_react233.default.createElement("div", {
        className,
        ref: legacyCard
      }, headerMarkup, content, footerMarkup));
    };
    LegacyCard.Header = Header4;
    LegacyCard.Section = Section6;
    LegacyCard.Subsection = Subsection;
  }
});

// node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.js
function CalloutCard({
  title,
  children,
  illustration,
  primaryAction,
  secondaryAction,
  onDismiss
}) {
  const primaryActionMarkup = buttonFrom(primaryAction);
  const secondaryActionMarkup = secondaryAction ? buttonFrom(secondaryAction, {
    variant: secondaryAction.variant ?? "tertiary"
  }) : null;
  const buttonMarkup = secondaryActionMarkup ? /* @__PURE__ */ import_react234.default.createElement(ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup) : primaryActionMarkup;
  const dismissButton = onDismiss ? /* @__PURE__ */ import_react234.default.createElement("div", {
    className: styles81.Dismiss
  }, /* @__PURE__ */ import_react234.default.createElement(Button, {
    variant: "plain",
    icon: SvgXSmallIcon,
    onClick: onDismiss,
    accessibilityLabel: "Dismiss card"
  })) : null;
  const imageClassName = classNames(styles81.Image, onDismiss && styles81.DismissImage);
  const containerClassName = classNames(styles81.Container, onDismiss && styles81.hasDismiss);
  return /* @__PURE__ */ import_react234.default.createElement(LegacyCard, null, /* @__PURE__ */ import_react234.default.createElement("div", {
    className: containerClassName
  }, dismissButton, /* @__PURE__ */ import_react234.default.createElement(LegacyCard.Section, null, /* @__PURE__ */ import_react234.default.createElement("div", {
    className: styles81.CalloutCard
  }, /* @__PURE__ */ import_react234.default.createElement("div", {
    className: styles81.Content
  }, /* @__PURE__ */ import_react234.default.createElement("div", {
    className: styles81.Title
  }, /* @__PURE__ */ import_react234.default.createElement(Text, {
    variant: "headingSm",
    as: "h2"
  }, title)), /* @__PURE__ */ import_react234.default.createElement(Text, {
    as: "span",
    variant: "bodyMd"
  }, /* @__PURE__ */ import_react234.default.createElement(BlockStack, null, children)), /* @__PURE__ */ import_react234.default.createElement("div", {
    className: styles81.Buttons
  }, buttonMarkup)), /* @__PURE__ */ import_react234.default.createElement(Image, {
    alt: "",
    className: imageClassName,
    source: illustration
  })))));
}
var import_react234;
var init_CalloutCard = __esm({
  "node_modules/@shopify/polaris/build/esm/components/CalloutCard/CalloutCard.js"() {
    import_react234 = __toESM(require_react());
    init_dist();
    init_css();
    init_CalloutCard_css();
    init_LegacyCard();
    init_utils3();
    init_Button();
    init_Text();
    init_BlockStack();
    init_Image();
    init_ButtonGroup();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.css.js
var styles83;
var init_Collapsible_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.css.js"() {
    styles83 = {
      "Collapsible": "Polaris-Collapsible",
      "isFullyClosed": "Polaris-Collapsible--isFullyClosed",
      "expandOnPrint": "Polaris-Collapsible--expandOnPrint"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.js
function Collapsible({
  id,
  expandOnPrint,
  open,
  transition = true,
  children,
  onAnimationEnd
}) {
  const [height2, setHeight] = (0, import_react235.useState)(0);
  const [isOpen, setIsOpen] = (0, import_react235.useState)(open);
  const [animationState, setAnimationState] = (0, import_react235.useState)("idle");
  const collapsibleContainer = (0, import_react235.useRef)(null);
  const isFullyOpen = animationState === "idle" && open && isOpen;
  const isFullyClosed = animationState === "idle" && !open && !isOpen;
  const content = expandOnPrint || !isFullyClosed ? children : null;
  const wrapperClassName = classNames(styles83.Collapsible, isFullyClosed && styles83.isFullyClosed, expandOnPrint && styles83.expandOnPrint);
  const transitionDisabled = isTransitionDisabled(transition);
  const transitionStyles3 = typeof transition === "object" && {
    transitionDuration: transition.duration,
    transitionTimingFunction: transition.timingFunction
  };
  const collapsibleStyles = {
    ...transitionStyles3,
    ...{
      maxHeight: isFullyOpen ? "none" : `${height2}px`,
      overflow: isFullyOpen ? "visible" : "hidden"
    }
  };
  const handleCompleteAnimation = (0, import_react235.useCallback)(({
    target
  }) => {
    if (target === collapsibleContainer.current) {
      setAnimationState("idle");
      setIsOpen(open);
      onAnimationEnd && onAnimationEnd();
    }
  }, [onAnimationEnd, open]);
  const startAnimation = (0, import_react235.useCallback)(() => {
    if (transitionDisabled) {
      setIsOpen(open);
      setAnimationState("idle");
      if (open && collapsibleContainer.current) {
        setHeight(collapsibleContainer.current.scrollHeight);
      } else {
        setHeight(0);
      }
    } else {
      setAnimationState("measuring");
    }
  }, [open, transitionDisabled]);
  (0, import_react235.useEffect)(() => {
    if (open !== isOpen) {
      startAnimation();
    }
  }, [open, isOpen]);
  (0, import_react235.useEffect)(() => {
    if (!open || !collapsibleContainer.current)
      return;
    setHeight(collapsibleContainer.current.scrollHeight);
  }, []);
  (0, import_react235.useEffect)(() => {
    if (!collapsibleContainer.current)
      return;
    switch (animationState) {
      case "idle":
        break;
      case "measuring":
        setHeight(collapsibleContainer.current.scrollHeight);
        setAnimationState("animating");
        break;
      case "animating":
        setHeight(open ? collapsibleContainer.current.scrollHeight : 0);
    }
  }, [animationState, open, isOpen]);
  return /* @__PURE__ */ import_react235.default.createElement("div", {
    id,
    style: collapsibleStyles,
    ref: collapsibleContainer,
    className: wrapperClassName,
    onTransitionEnd: handleCompleteAnimation,
    "aria-hidden": !open
  }, content);
}
function isTransitionDisabled(transitionProp) {
  if (typeof transitionProp === "boolean") {
    return !transitionProp;
  }
  const {
    duration
  } = transitionProp;
  if (duration && zeroDurationRegex.test(duration.trim())) {
    return true;
  }
  return false;
}
var import_react235, zeroDurationRegex;
var init_Collapsible = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Collapsible/Collapsible.js"() {
    import_react235 = __toESM(require_react());
    init_css();
    init_Collapsible_css();
    zeroDurationRegex = /^0(ms|s)$/;
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.css.js
var styles84;
var init_ColorPicker_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.css.js"() {
    styles84 = {
      "ColorPicker": "Polaris-ColorPicker",
      "MainColor": "Polaris-ColorPicker__MainColor",
      "fullWidth": "Polaris-ColorPicker--fullWidth",
      "Dragger": "Polaris-ColorPicker__Dragger",
      "ColorLayer": "Polaris-ColorPicker__ColorLayer",
      "HuePicker": "Polaris-ColorPicker__HuePicker",
      "AlphaPicker": "Polaris-ColorPicker__AlphaPicker",
      "Slidable": "Polaris-ColorPicker__Slidable"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/utilities.js
function calculateDraggerY(alpha, sliderHeight, draggerHeight) {
  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);
  return clamp(offset, 0, sliderHeight);
}
function alphaForDraggerY(y, sliderHeight) {
  const offsetY = clamp(y, 0, sliderHeight);
  return alphaForOffset(offsetY, sliderHeight);
}
function alphaForOffset(offset, sliderHeight) {
  const selectionHeight = offset - VERTICAL_PADDING;
  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;
  return clamp(1 - selectionHeight / slidableArea, 0, 1);
}
function offsetForAlpha(alpha, sliderHeight, draggerHeight) {
  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);
  return clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);
}
var VERTICAL_PADDING;
var init_utilities6 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/utilities.js"() {
    init_clamp();
    VERTICAL_PADDING = 13;
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/Slidable/Slidable.js
function isMouseMoveEvent(event) {
  return event.type === "mousemove";
}
function isMouseDownEvent(event) {
  return event.type === "mousedown";
}
var import_react236, isDragging, Slidable;
var init_Slidable = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/Slidable/Slidable.js"() {
    import_react236 = __toESM(require_react());
    init_target();
    init_ColorPicker_css();
    init_EventListener();
    isDragging = false;
    if (!isServer) {
      window.addEventListener("touchmove", (event) => {
        if (!isDragging) {
          return;
        }
        event.preventDefault();
      }, {
        passive: false
      });
    }
    Slidable = class extends import_react236.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          dragging: false
        };
        this.node = null;
        this.draggerNode = null;
        this.setDraggerNode = (node) => {
          this.draggerNode = node;
        };
        this.setNode = (node) => {
          this.node = node;
        };
        this.startDrag = (event) => {
          if (isMouseDownEvent(event)) {
            this.handleDraggerMove(event.clientX, event.clientY);
          }
          isDragging = true;
          this.setState({
            dragging: true
          });
        };
        this.handleDragEnd = () => {
          isDragging = false;
          this.setState({
            dragging: false
          });
        };
        this.handleMove = (event) => {
          event.stopImmediatePropagation();
          event.stopPropagation();
          if (event.cancelable) {
            event.preventDefault();
          }
          if (isMouseMoveEvent(event)) {
            this.handleDraggerMove(event.clientX, event.clientY);
            return;
          }
          this.handleDraggerMove(event.touches[0].clientX, event.touches[0].clientY);
        };
        this.handleDraggerMove = (x, y) => {
          if (this.node == null) {
            return;
          }
          const {
            onChange
          } = this.props;
          const rect = this.node.getBoundingClientRect();
          const offsetX = x - rect.left;
          const offsetY = y - rect.top;
          onChange({
            x: offsetX,
            y: offsetY
          });
        };
      }
      componentDidMount() {
        const {
          onDraggerHeight
        } = this.props;
        if (onDraggerHeight == null) {
          return;
        }
        const {
          draggerNode
        } = this;
        if (draggerNode == null) {
          return;
        }
        onDraggerHeight(draggerNode.clientWidth);
        if (true) {
          setTimeout(() => {
            onDraggerHeight(draggerNode.clientWidth);
          }, 0);
        }
      }
      render() {
        const {
          dragging
        } = this.state;
        const {
          draggerX = 0,
          draggerY = 0
        } = this.props;
        const draggerPositioning = {
          transform: `translate3d(${draggerX}px, ${draggerY}px, 0)`
        };
        const moveListener = dragging ? /* @__PURE__ */ import_react236.default.createElement(EventListener, {
          event: "mousemove",
          handler: this.handleMove,
          passive: false
        }) : null;
        const touchMoveListener = dragging ? /* @__PURE__ */ import_react236.default.createElement(EventListener, {
          event: "touchmove",
          handler: this.handleMove,
          passive: false
        }) : null;
        const endDragListener = dragging ? /* @__PURE__ */ import_react236.default.createElement(EventListener, {
          event: "mouseup",
          handler: this.handleDragEnd
        }) : null;
        const touchEndListener = dragging ? /* @__PURE__ */ import_react236.default.createElement(EventListener, {
          event: "touchend",
          handler: this.handleDragEnd
        }) : null;
        const touchCancelListener = dragging ? /* @__PURE__ */ import_react236.default.createElement(EventListener, {
          event: "touchcancel",
          handler: this.handleDragEnd
        }) : null;
        return /* @__PURE__ */ import_react236.default.createElement("div", {
          ref: this.setNode,
          className: styles84.Slidable,
          onMouseDown: this.startDrag,
          onTouchStart: this.startDrag
        }, endDragListener, moveListener, touchMoveListener, touchEndListener, touchCancelListener, /* @__PURE__ */ import_react236.default.createElement("div", {
          style: draggerPositioning,
          className: styles84.Dragger,
          ref: this.setDraggerNode
        }));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/AlphaPicker.js
function alphaGradientForColor(color2) {
  const {
    red: red2,
    green: green2,
    blue: blue2
  } = hsbToRgb(color2);
  const rgb = `${red2}, ${green2}, ${blue2}`;
  return `linear-gradient(to top, rgba(${rgb}, 0) 18px, rgba(${rgb}, 1) calc(100% - 18px))`;
}
var import_react237, AlphaPicker;
var init_AlphaPicker = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/AlphaPicker.js"() {
    import_react237 = __toESM(require_react());
    init_color_transformers();
    init_ColorPicker_css();
    init_utilities6();
    init_Slidable();
    AlphaPicker = class extends import_react237.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          sliderHeight: 0,
          draggerHeight: 0
        };
        this.setSliderHeight = (node) => {
          if (node == null) {
            return;
          }
          this.setState({
            sliderHeight: node.clientHeight
          });
          if (true) {
            setTimeout(() => {
              this.setState({
                sliderHeight: node.clientHeight
              });
            }, 0);
          }
        };
        this.setDraggerHeight = (height2) => {
          this.setState({
            draggerHeight: height2
          });
        };
        this.handleChange = ({
          y
        }) => {
          const {
            onChange
          } = this.props;
          const {
            sliderHeight
          } = this.state;
          const alpha = alphaForDraggerY(y, sliderHeight);
          onChange(alpha);
        };
      }
      render() {
        const {
          color: color2,
          alpha
        } = this.props;
        const {
          sliderHeight,
          draggerHeight
        } = this.state;
        const draggerY = calculateDraggerY(alpha, sliderHeight, draggerHeight);
        const background = alphaGradientForColor(color2);
        return /* @__PURE__ */ import_react237.default.createElement("div", {
          className: styles84.AlphaPicker,
          ref: this.setSliderHeight
        }, /* @__PURE__ */ import_react237.default.createElement("div", {
          className: styles84.ColorLayer,
          style: {
            background
          }
        }), /* @__PURE__ */ import_react237.default.createElement(Slidable, {
          draggerY,
          draggerX: 0,
          onChange: this.handleChange,
          onDraggerHeight: this.setDraggerHeight
        }));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/utilities.js
function calculateDraggerY2(hue, sliderHeight, draggerHeight) {
  const offset = offsetForHue(hue, sliderHeight, draggerHeight);
  return clamp(offset, 0, sliderHeight);
}
function hueForDraggerY(y, sliderHeight) {
  const offsetY = clamp(y, 0, sliderHeight);
  return hueForOffset(offsetY, sliderHeight);
}
function hueForOffset(offset, sliderHeight) {
  const selectionHeight = offset - VERTICAL_PADDING2;
  const slidableArea = sliderHeight - VERTICAL_PADDING2 * 2;
  return clamp(selectionHeight / slidableArea * 360, 0, 360);
}
function offsetForHue(hue, sliderHeight, draggerHeight) {
  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING2);
  return clamp(hue / 360 * slidableArea + VERTICAL_PADDING2, 0, sliderHeight - draggerHeight);
}
var VERTICAL_PADDING2;
var init_utilities7 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/utilities.js"() {
    init_clamp();
    VERTICAL_PADDING2 = 13;
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/HuePicker.js
var import_react238, HuePicker;
var init_HuePicker = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/HuePicker/HuePicker.js"() {
    import_react238 = __toESM(require_react());
    init_ColorPicker_css();
    init_utilities7();
    init_Slidable();
    HuePicker = class extends import_react238.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          sliderHeight: 0,
          draggerHeight: 0
        };
        this.setSliderHeight = (node) => {
          if (node == null) {
            return;
          }
          this.setState({
            sliderHeight: node.clientHeight
          });
          if (true) {
            setTimeout(() => {
              this.setState({
                sliderHeight: node.clientHeight
              });
            }, 0);
          }
        };
        this.setDraggerHeight = (height2) => {
          this.setState({
            draggerHeight: height2
          });
        };
        this.handleChange = ({
          y
        }) => {
          const {
            onChange
          } = this.props;
          const {
            sliderHeight
          } = this.state;
          const hue = hueForDraggerY(y, sliderHeight);
          onChange(hue);
        };
      }
      render() {
        const {
          hue
        } = this.props;
        const {
          sliderHeight,
          draggerHeight
        } = this.state;
        const draggerY = calculateDraggerY2(hue, sliderHeight, draggerHeight);
        return /* @__PURE__ */ import_react238.default.createElement("div", {
          className: styles84.HuePicker,
          ref: this.setSliderHeight
        }, /* @__PURE__ */ import_react238.default.createElement(Slidable, {
          draggerY,
          draggerX: 0,
          onChange: this.handleChange,
          onDraggerHeight: this.setDraggerHeight
        }));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.js
var import_react239, RESIZE_DEBOUNCE_TIME_MS, ColorPicker;
var init_ColorPicker = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ColorPicker/ColorPicker.js"() {
    import_react239 = __toESM(require_react());
    init_debounce();
    init_clamp();
    init_css();
    init_color_transformers();
    init_ColorPicker_css();
    init_AlphaPicker();
    init_HuePicker();
    init_Slidable();
    init_EventListener();
    RESIZE_DEBOUNCE_TIME_MS = 200;
    ColorPicker = class extends import_react239.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          pickerSize: {
            width: 0,
            height: 0
          }
        };
        this.colorNode = null;
        this.handleResize = debounce(() => {
          const {
            colorNode
          } = this;
          if (colorNode == null) {
            return;
          }
          this.setState({
            pickerSize: {
              width: colorNode.clientWidth,
              height: colorNode.clientHeight
            }
          });
        }, RESIZE_DEBOUNCE_TIME_MS, {
          leading: true,
          trailing: true,
          maxWait: RESIZE_DEBOUNCE_TIME_MS
        });
        this.setColorNode = (node) => {
          this.colorNode = node;
        };
        this.handleHueChange = (hue) => {
          const {
            color: {
              brightness,
              saturation,
              alpha = 1
            },
            onChange
          } = this.props;
          onChange({
            hue,
            brightness,
            saturation,
            alpha
          });
        };
        this.handleAlphaChange = (alpha) => {
          const {
            color: {
              hue,
              brightness,
              saturation
            },
            onChange
          } = this.props;
          onChange({
            hue,
            brightness,
            saturation,
            alpha
          });
        };
        this.handleDraggerMove = ({
          x,
          y
        }) => {
          const {
            pickerSize
          } = this.state;
          const {
            color: {
              hue,
              alpha = 1
            },
            onChange
          } = this.props;
          const saturation = clamp(x / pickerSize.width, 0, 1);
          const brightness = clamp(1 - y / pickerSize.height, 0, 1);
          onChange({
            hue,
            saturation,
            brightness,
            alpha
          });
        };
        this.handlePickerDrag = (event) => {
          event.preventDefault();
        };
      }
      componentDidMount() {
        const {
          colorNode
        } = this;
        if (colorNode == null) {
          return;
        }
        this.setState({
          pickerSize: {
            width: colorNode.clientWidth,
            height: colorNode.clientHeight
          }
        });
        if (true) {
          setTimeout(() => {
            this.setState({
              pickerSize: {
                width: colorNode.clientWidth,
                height: colorNode.clientHeight
              }
            });
          }, 0);
        }
      }
      render() {
        const {
          id,
          color: color2,
          allowAlpha,
          fullWidth
        } = this.props;
        const {
          hue,
          saturation,
          brightness,
          alpha: providedAlpha
        } = color2;
        const {
          pickerSize
        } = this.state;
        const alpha = providedAlpha != null && allowAlpha ? providedAlpha : 1;
        const {
          red: red2,
          green: green2,
          blue: blue2
        } = hsbToRgb({
          hue,
          saturation: 1,
          brightness: 1
        });
        const colorString = `rgba(${red2}, ${green2}, ${blue2}, ${alpha})`;
        const draggerX = clamp(saturation * pickerSize.width, 0, pickerSize.width);
        const draggerY = clamp(pickerSize.height - brightness * pickerSize.height, 0, pickerSize.height);
        const alphaSliderMarkup = allowAlpha ? /* @__PURE__ */ import_react239.default.createElement(AlphaPicker, {
          alpha,
          color: color2,
          onChange: this.handleAlphaChange
        }) : null;
        const className = classNames(styles84.ColorPicker, fullWidth && styles84.fullWidth);
        return /* @__PURE__ */ import_react239.default.createElement("div", {
          className,
          id,
          onMouseDown: this.handlePickerDrag
        }, /* @__PURE__ */ import_react239.default.createElement("div", {
          ref: this.setColorNode,
          className: styles84.MainColor
        }, /* @__PURE__ */ import_react239.default.createElement("div", {
          className: styles84.ColorLayer,
          style: {
            backgroundColor: colorString
          }
        }), /* @__PURE__ */ import_react239.default.createElement(Slidable, {
          onChange: this.handleDraggerMove,
          draggerX,
          draggerY
        })), /* @__PURE__ */ import_react239.default.createElement(HuePicker, {
          hue,
          onChange: this.handleHueChange
        }), alphaSliderMarkup, /* @__PURE__ */ import_react239.default.createElement(EventListener, {
          event: "resize",
          handler: this.handleResize
        }));
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ContextualSaveBar/ContextualSaveBar.js
var import_react240, ContextualSaveBar2;
var init_ContextualSaveBar2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ContextualSaveBar/ContextualSaveBar.js"() {
    import_react240 = __toESM(require_react());
    init_hooks8();
    ContextualSaveBar2 = /* @__PURE__ */ (0, import_react240.memo)(function ContextualSaveBar3({
      message,
      saveAction,
      discardAction,
      alignContentFlush,
      fullWidth,
      contextControl,
      secondaryMenu
    }) {
      const {
        setContextualSaveBar,
        removeContextualSaveBar
      } = useFrame();
      (0, import_react240.useEffect)(() => {
        setContextualSaveBar({
          message,
          saveAction,
          discardAction,
          alignContentFlush,
          fullWidth,
          contextControl,
          secondaryMenu
        });
      }, [message, saveAction, discardAction, alignContentFlush, setContextualSaveBar, fullWidth, contextControl, secondaryMenu]);
      (0, import_react240.useEffect)(() => {
        return removeContextualSaveBar;
      }, [removeContextualSaveBar]);
      return null;
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/DataTable/utilities.js
function measureColumn(tableData) {
  return function(column, index) {
    const {
      firstVisibleColumnIndex,
      tableLeftVisibleEdge: tableStart,
      tableRightVisibleEdge: tableEnd
    } = tableData;
    const leftEdge = column.offsetLeft;
    const rightEdge = leftEdge + column.offsetWidth;
    const isVisibleLeft = isEdgeVisible(leftEdge, tableStart, tableEnd, "left");
    const isVisibleRight = isEdgeVisible(rightEdge, tableStart, tableEnd, "right");
    const isVisible = isVisibleLeft || isVisibleRight;
    const width2 = column.offsetWidth;
    if (isVisible) {
      tableData.firstVisibleColumnIndex = Math.min(firstVisibleColumnIndex, index);
    }
    return {
      leftEdge,
      rightEdge,
      isVisible,
      width: width2,
      index
    };
  };
}
function isEdgeVisible(position, start, end, edgeType) {
  const minVisiblePixels = 30;
  return position >= start + (edgeType === "left" ? 0 : minVisiblePixels) && position <= end - minVisiblePixels;
}
function getPrevAndCurrentColumns(tableData, columnData) {
  const {
    firstVisibleColumnIndex
  } = tableData;
  const previousColumnIndex = Math.max(firstVisibleColumnIndex - 1, 0);
  const previousColumn = columnData[previousColumnIndex];
  const currentColumn = columnData[firstVisibleColumnIndex];
  return {
    previousColumn,
    currentColumn
  };
}
var init_utilities8 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DataTable/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.css.js
var styles85;
var init_DataTable_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.css.js"() {
    styles85 = {
      "DataTable": "Polaris-DataTable",
      "condensed": "Polaris-DataTable--condensed",
      "Navigation": "Polaris-DataTable__Navigation",
      "Pip": "Polaris-DataTable__Pip",
      "Pip-visible": "Polaris-DataTable__Pip--visible",
      "ScrollContainer": "Polaris-DataTable__ScrollContainer",
      "Table": "Polaris-DataTable__Table",
      "TableRow": "Polaris-DataTable__TableRow",
      "Cell": "Polaris-DataTable__Cell",
      "IncreasedTableDensity": "Polaris-DataTable__IncreasedTableDensity",
      "ZebraStripingOnData": "Polaris-DataTable__ZebraStripingOnData",
      "RowCountIsEven": "Polaris-DataTable__RowCountIsEven",
      "ShowTotalsInFooter": "Polaris-DataTable__ShowTotalsInFooter",
      "Cell-separate": "Polaris-DataTable__Cell--separate",
      "Cell-firstColumn": "Polaris-DataTable__Cell--firstColumn",
      "Cell-numeric": "Polaris-DataTable__Cell--numeric",
      "Cell-truncated": "Polaris-DataTable__Cell--truncated",
      "Cell-header": "Polaris-DataTable__Cell--header",
      "Cell-sortable": "Polaris-DataTable__Cell--sortable",
      "Heading-left": "Polaris-DataTable__Heading--left",
      "Cell-verticalAlignTop": "Polaris-DataTable__Cell--verticalAlignTop",
      "Cell-verticalAlignBottom": "Polaris-DataTable__Cell--verticalAlignBottom",
      "Cell-verticalAlignMiddle": "Polaris-DataTable__Cell--verticalAlignMiddle",
      "Cell-verticalAlignBaseline": "Polaris-DataTable__Cell--verticalAlignBaseline",
      "hoverable": "Polaris-DataTable--hoverable",
      "Cell-hovered": "Polaris-DataTable__Cell--hovered",
      "Icon": "Polaris-DataTable__Icon",
      "Heading": "Polaris-DataTable__Heading",
      "StickyHeaderEnabled": "Polaris-DataTable__StickyHeaderEnabled",
      "StickyHeaderWrapper": "Polaris-DataTable__StickyHeaderWrapper",
      "Cell-sorted": "Polaris-DataTable__Cell--sorted",
      "Cell-total": "Polaris-DataTable__Cell--total",
      "ShowTotals": "Polaris-DataTable__ShowTotals",
      "Cell-total-footer": "Polaris-DataTable--cellTotalFooter",
      "Footer": "Polaris-DataTable__Footer",
      "StickyHeaderInner": "Polaris-DataTable__StickyHeaderInner",
      "StickyHeaderInner-isSticky": "Polaris-DataTable__StickyHeaderInner--isSticky",
      "StickyHeaderTable": "Polaris-DataTable__StickyHeaderTable",
      "FixedFirstColumn": "Polaris-DataTable__FixedFirstColumn",
      "StickyTableHeadingsRow": "Polaris-DataTable__StickyTableHeadingsRow",
      "TooltipContent": "Polaris-DataTable__TooltipContent"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/DataTable/components/Cell/Cell.js
function Cell3({
  content,
  contentType,
  nthColumn,
  firstColumn,
  truncate,
  header,
  total,
  totalInFooter,
  sorted,
  sortable,
  sortDirection,
  inFixedNthColumn,
  verticalAlign = "top",
  defaultSortDirection = "ascending",
  onSort,
  colSpan,
  setRef = () => {
  },
  stickyHeadingCell = false,
  stickyCellWidth,
  hovered = false,
  handleFocus = () => {
  },
  hasFixedNthColumn = false,
  fixedCellVisible = false,
  firstColumnMinWidth,
  style,
  lastFixedFirstColumn
}) {
  const i18n = useI18n();
  const numeric = contentType === "numeric";
  const className = classNames(styles85.Cell, styles85[`Cell-${variationName("verticalAlign", verticalAlign)}`], firstColumn && styles85["Cell-firstColumn"], truncate && styles85["Cell-truncated"], header && styles85["Cell-header"], total && styles85["Cell-total"], totalInFooter && styles85["Cell-total-footer"], numeric && styles85["Cell-numeric"], sortable && styles85["Cell-sortable"], sorted && styles85["Cell-sorted"], stickyHeadingCell && styles85.StickyHeaderCell, hovered && styles85["Cell-hovered"], lastFixedFirstColumn && inFixedNthColumn && fixedCellVisible && styles85["Cell-separate"], nthColumn && inFixedNthColumn && stickyHeadingCell && styles85.FixedFirstColumn);
  const headerClassName = classNames(header && styles85.Heading, header && contentType === "text" && styles85["Heading-left"]);
  const iconClassName = classNames(sortable && styles85.Icon);
  const direction = sorted && sortDirection ? sortDirection : defaultSortDirection;
  const source = direction === "descending" ? SvgSortDescendingIcon : SvgSortAscendingIcon;
  const oppositeDirection = sortDirection === "ascending" ? "descending" : "ascending";
  const sortAccessibilityLabel = i18n.translate("Polaris.DataTable.sortAccessibilityLabel", {
    direction: sorted ? oppositeDirection : direction
  });
  const iconMarkup = /* @__PURE__ */ import_react241.default.createElement("span", {
    className: iconClassName
  }, /* @__PURE__ */ import_react241.default.createElement(Icon, {
    source,
    accessibilityLabel: sortAccessibilityLabel
  }));
  const focusable = !(stickyHeadingCell && hasFixedNthColumn && nthColumn && !inFixedNthColumn);
  const sortableHeadingContent = /* @__PURE__ */ import_react241.default.createElement("button", {
    className: headerClassName,
    onClick: onSort,
    onFocus: handleFocus,
    tabIndex: focusable ? 0 : -1
  }, iconMarkup, content);
  const columnHeadingContent = sortable ? sortableHeadingContent : content;
  const colSpanProp = colSpan && colSpan > 1 ? {
    colSpan
  } : {};
  const minWidthStyles = nthColumn && firstColumnMinWidth ? {
    minWidth: firstColumnMinWidth
  } : {
    minWidth: stickyCellWidth
  };
  const stickyHeading = /* @__PURE__ */ import_react241.default.createElement("th", Object.assign({
    ref: setRef
  }, headerCell.props, colSpanProp, {
    className,
    "aria-sort": sortDirection,
    style: {
      ...style,
      ...minWidthStyles
    },
    "data-index-table-sticky-heading": true
  }), columnHeadingContent);
  const headingMarkup = header ? /* @__PURE__ */ import_react241.default.createElement("th", Object.assign({}, headerCell.props, {
    "aria-sort": sortDirection
  }, colSpanProp, {
    ref: setRef,
    className,
    scope: "col",
    style: {
      ...minWidthStyles
    }
  }), columnHeadingContent) : /* @__PURE__ */ import_react241.default.createElement("th", Object.assign({}, colSpanProp, {
    ref: setRef,
    className,
    scope: "row",
    style: {
      ...minWidthStyles
    }
  }), truncate ? /* @__PURE__ */ import_react241.default.createElement(TruncatedText, {
    className: styles85.TooltipContent
  }, content) : content);
  const cellMarkup = header || firstColumn || nthColumn ? headingMarkup : /* @__PURE__ */ import_react241.default.createElement("td", Object.assign({
    className
  }, colSpanProp), content);
  return stickyHeadingCell ? stickyHeading : cellMarkup;
}
var import_react241, TruncatedText;
var init_Cell2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DataTable/components/Cell/Cell.js"() {
    import_react241 = __toESM(require_react());
    init_dist();
    init_css();
    init_shared();
    init_DataTable_css();
    init_hooks2();
    init_Tooltip();
    init_Icon();
    TruncatedText = ({
      children,
      className = ""
    }) => {
      const textRef = (0, import_react241.useRef)(null);
      const {
        current
      } = textRef;
      const text2 = /* @__PURE__ */ import_react241.default.createElement("span", {
        ref: textRef,
        className
      }, children);
      return current?.scrollWidth > current?.offsetWidth ? /* @__PURE__ */ import_react241.default.createElement(Tooltip, {
        content: textRef.current.innerText
      }, text2) : text2;
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/DataTable/components/Navigation/Navigation.js
function Navigation({
  columnVisibilityData,
  isScrolledFarthestLeft,
  isScrolledFarthestRight,
  navigateTableLeft,
  navigateTableRight,
  fixedFirstColumns,
  setRef = () => {
  }
}) {
  const i18n = useI18n();
  const pipMarkup = columnVisibilityData.map((column, index) => {
    if (index < fixedFirstColumns)
      return;
    const className = classNames(styles85.Pip, column.isVisible && styles85["Pip-visible"]);
    return /* @__PURE__ */ import_react242.default.createElement("div", {
      className,
      key: `pip-${index}`
    });
  });
  const leftA11yLabel = i18n.translate("Polaris.DataTable.navAccessibilityLabel", {
    direction: "left"
  });
  const rightA11yLabel = i18n.translate("Polaris.DataTable.navAccessibilityLabel", {
    direction: "right"
  });
  return /* @__PURE__ */ import_react242.default.createElement("div", {
    className: styles85.Navigation,
    ref: setRef
  }, /* @__PURE__ */ import_react242.default.createElement(Button, {
    variant: "tertiary",
    icon: SvgChevronLeftIcon,
    disabled: isScrolledFarthestLeft,
    accessibilityLabel: leftA11yLabel,
    onClick: navigateTableLeft
  }), pipMarkup, /* @__PURE__ */ import_react242.default.createElement(Button, {
    variant: "tertiary",
    icon: SvgChevronRightIcon,
    disabled: isScrolledFarthestRight,
    accessibilityLabel: rightA11yLabel,
    onClick: navigateTableRight
  }));
}
var import_react242;
var init_Navigation = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DataTable/components/Navigation/Navigation.js"() {
    import_react242 = __toESM(require_react());
    init_dist();
    init_css();
    init_DataTable_css();
    init_hooks2();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js
function DataTable(props) {
  const i18n = useI18n();
  return /* @__PURE__ */ import_react243.default.createElement(DataTableInner, Object.assign({}, props, {
    i18n
  }));
}
var import_react243, import_react_fast_compare3, getRowClientHeights, DataTableInner;
var init_DataTable = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js"() {
    import_react243 = __toESM(require_react());
    import_react_fast_compare3 = __toESM(require_react_fast_compare());
    init_debounce();
    init_css();
    init_shared();
    init_utilities8();
    init_DataTable_css();
    init_Cell2();
    init_Pagination();
    init_AfterInitialMount();
    init_Sticky();
    init_Navigation();
    init_hooks2();
    init_EventListener();
    getRowClientHeights = (rows) => {
      const heights = [];
      if (!rows) {
        return heights;
      }
      rows.forEach((row) => {
        heights.push(row.clientHeight);
      });
      return heights;
    };
    DataTableInner = class extends import_react243.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          condensed: false,
          columnVisibilityData: [],
          isScrolledFarthestLeft: true,
          isScrolledFarthestRight: false,
          rowHovered: void 0
        };
        this.dataTable = /* @__PURE__ */ (0, import_react243.createRef)();
        this.scrollContainer = /* @__PURE__ */ (0, import_react243.createRef)();
        this.table = /* @__PURE__ */ (0, import_react243.createRef)();
        this.stickyTable = /* @__PURE__ */ (0, import_react243.createRef)();
        this.stickyNav = null;
        this.headerNav = null;
        this.tableHeadings = [];
        this.stickyHeadings = [];
        this.tableHeadingWidths = [];
        this.stickyHeaderActive = false;
        this.scrollStopTimer = null;
        this.handleResize = debounce(() => {
          const {
            table: {
              current: table
            },
            scrollContainer: {
              current: scrollContainer
            }
          } = this;
          let condensed = false;
          if (table && scrollContainer) {
            condensed = table.scrollWidth > scrollContainer.clientWidth + 1;
          }
          this.setState({
            condensed,
            ...this.calculateColumnVisibilityData(condensed)
          });
        });
        this.setCellRef = ({
          ref,
          index,
          inStickyHeader
        }) => {
          if (ref == null) {
            return;
          }
          if (inStickyHeader) {
            this.stickyHeadings[index] = ref;
            const button = ref.querySelector("button");
            if (button == null) {
              return;
            }
            button.addEventListener("focus", this.handleHeaderButtonFocus);
          } else {
            this.tableHeadings[index] = ref;
            this.tableHeadingWidths[index] = ref.clientWidth;
          }
        };
        this.changeHeadingFocus = () => {
          const {
            tableHeadings,
            stickyHeadings,
            stickyNav,
            headerNav
          } = this;
          const stickyFocusedItemIndex = stickyHeadings.findIndex((item) => item === document.activeElement?.parentElement);
          const tableFocusedItemIndex = tableHeadings.findIndex((item) => item === document.activeElement?.parentElement);
          const arrowsInStickyNav = stickyNav?.querySelectorAll("button");
          const arrowsInHeaderNav = headerNav?.querySelectorAll("button");
          let stickyFocusedNavIndex = -1;
          arrowsInStickyNav?.forEach((item, index) => {
            if (item === document.activeElement) {
              stickyFocusedNavIndex = index;
            }
          });
          let headerFocusedNavIndex = -1;
          arrowsInHeaderNav?.forEach((item, index) => {
            if (item === document.activeElement) {
              headerFocusedNavIndex = index;
            }
          });
          if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {
            return null;
          }
          let button;
          if (stickyFocusedItemIndex >= 0) {
            button = tableHeadings[stickyFocusedItemIndex].querySelector("button");
          } else if (tableFocusedItemIndex >= 0) {
            button = stickyHeadings[tableFocusedItemIndex].querySelector("button");
          }
          if (stickyFocusedNavIndex >= 0) {
            button = arrowsInHeaderNav?.[stickyFocusedNavIndex];
          } else if (headerFocusedNavIndex >= 0) {
            button = arrowsInStickyNav?.[headerFocusedNavIndex];
          }
          if (button == null) {
            return null;
          }
          button.style.visibility = "visible";
          button.focus();
          button.style.removeProperty("visibility");
        };
        this.calculateColumnVisibilityData = (condensed) => {
          const fixedFirstColumns = this.fixedFirstColumns();
          const {
            table: {
              current: table
            },
            scrollContainer: {
              current: scrollContainer
            },
            dataTable: {
              current: dataTable
            }
          } = this;
          const {
            stickyHeader
          } = this.props;
          if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {
            const headerCells = table.querySelectorAll(headerCell.selector);
            const rightMostHeader = headerCells[fixedFirstColumns - 1];
            const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;
            if (headerCells.length > 0) {
              const firstVisibleColumnIndex = headerCells.length - 1;
              const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;
              const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;
              const tableData = {
                firstVisibleColumnIndex,
                tableLeftVisibleEdge,
                tableRightVisibleEdge
              };
              const columnVisibilityData = [...headerCells].map(measureColumn(tableData));
              const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];
              const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;
              return {
                columnVisibilityData,
                ...getPrevAndCurrentColumns(tableData, columnVisibilityData),
                isScrolledFarthestLeft,
                isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge
              };
            }
          }
          return {
            columnVisibilityData: [],
            previousColumn: void 0,
            currentColumn: void 0
          };
        };
        this.handleHeaderButtonFocus = (event) => {
          const fixedFirstColumns = this.fixedFirstColumns();
          if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {
            return;
          }
          const target = event.target;
          const currentCell = target.parentNode;
          const tableScrollLeft = this.scrollContainer.current.scrollLeft;
          const tableViewableWidth = this.scrollContainer.current.offsetWidth;
          const tableRightEdge = tableScrollLeft + tableViewableWidth;
          const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? this.state.columnVisibilityData[fixedFirstColumns]?.rightEdge : 0;
          const currentColumnLeftEdge = currentCell.offsetLeft;
          const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;
          if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {
            this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;
          }
          if (currentColumnRightEdge > tableRightEdge) {
            this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;
          }
        };
        this.stickyHeaderScrolling = () => {
          const {
            current: stickyTable
          } = this.stickyTable;
          const {
            current: scrollContainer
          } = this.scrollContainer;
          if (stickyTable == null || scrollContainer == null) {
            return;
          }
          stickyTable.scrollLeft = scrollContainer.scrollLeft;
        };
        this.scrollListener = () => {
          if (this.scrollStopTimer) {
            clearTimeout(this.scrollStopTimer);
          }
          this.scrollStopTimer = setTimeout(() => {
            this.setState((prevState) => ({
              ...this.calculateColumnVisibilityData(prevState.condensed)
            }));
          }, 100);
          this.setState({
            isScrolledFarthestLeft: this.scrollContainer.current?.scrollLeft === 0
          });
          if (this.props.stickyHeader && this.stickyHeaderActive) {
            this.stickyHeaderScrolling();
          }
        };
        this.handleHover = (row) => () => {
          this.setState({
            rowHovered: row
          });
        };
        this.handleFocus = (event) => {
          const fixedFirstColumns = this.fixedFirstColumns();
          if (this.scrollContainer.current == null || event.target == null) {
            return;
          }
          const currentCell = event.target.parentNode;
          const fixedNthColumn = this.props;
          const nthColumnWidth = fixedNthColumn ? this.state.columnVisibilityData[fixedFirstColumns]?.rightEdge : 0;
          const currentColumnLeftEdge = currentCell.offsetLeft;
          const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;
          if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {
            this.scrollContainer.current.scrollLeft = desiredScrollLeft;
          }
        };
        this.navigateTable = (direction) => {
          const fixedFirstColumns = this.fixedFirstColumns();
          const {
            currentColumn,
            previousColumn
          } = this.state;
          const nthColumnWidth = this.state.columnVisibilityData[fixedFirstColumns - 1]?.rightEdge;
          if (!currentColumn || !previousColumn) {
            return;
          }
          let prevWidths = 0;
          for (let index = 0; index < currentColumn.index; index++) {
            prevWidths += this.state.columnVisibilityData[index].width;
          }
          const {
            current: scrollContainer
          } = this.scrollContainer;
          const handleScroll = () => {
            let newScrollLeft = 0;
            if (fixedFirstColumns) {
              newScrollLeft = direction === "right" ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;
            } else {
              newScrollLeft = direction === "right" ? currentColumn.rightEdge : previousColumn.leftEdge;
            }
            if (scrollContainer) {
              scrollContainer.scrollLeft = newScrollLeft;
              requestAnimationFrame(() => {
                this.setState((prevState) => ({
                  ...this.calculateColumnVisibilityData(prevState.condensed)
                }));
              });
            }
          };
          return handleScroll;
        };
        this.renderHeading = ({
          heading,
          headingIndex,
          inFixedNthColumn,
          inStickyHeader
        }) => {
          const {
            sortable,
            truncate = false,
            columnContentTypes,
            defaultSortDirection,
            initialSortColumnIndex = 0,
            verticalAlign,
            firstColumnMinWidth
          } = this.props;
          const fixedFirstColumns = this.fixedFirstColumns();
          const {
            sortDirection = defaultSortDirection,
            sortedColumnIndex = initialSortColumnIndex,
            isScrolledFarthestLeft
          } = this.state;
          let sortableHeadingProps;
          const headingCellId = `heading-cell-${headingIndex}`;
          const stickyHeaderId = `stickyheader-${headingIndex}`;
          const id = inStickyHeader ? stickyHeaderId : headingCellId;
          if (sortable) {
            const isSortable = sortable[headingIndex];
            const isSorted = isSortable && sortedColumnIndex === headingIndex;
            const direction = isSorted ? sortDirection : "none";
            sortableHeadingProps = {
              defaultSortDirection,
              sorted: isSorted,
              sortable: isSortable,
              sortDirection: direction,
              onSort: this.defaultOnSort(headingIndex),
              fixedNthColumn: fixedFirstColumns,
              inFixedNthColumn: fixedFirstColumns
            };
          }
          const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : void 0;
          const fixedCellVisible = !isScrolledFarthestLeft;
          const cellProps = {
            header: true,
            stickyHeadingCell: inStickyHeader,
            content: heading,
            contentType: columnContentTypes[headingIndex],
            nthColumn: headingIndex < fixedFirstColumns,
            fixedFirstColumns,
            truncate,
            headingIndex,
            ...sortableHeadingProps,
            verticalAlign,
            handleFocus: this.handleFocus,
            stickyCellWidth,
            fixedCellVisible,
            firstColumnMinWidth
          };
          if (inFixedNthColumn && inStickyHeader) {
            return [/* @__PURE__ */ import_react243.default.createElement(Cell3, Object.assign({
              key: id
            }, cellProps, {
              setRef: (ref) => {
                this.setCellRef({
                  ref,
                  index: headingIndex,
                  inStickyHeader
                });
              },
              inFixedNthColumn: false
            })), /* @__PURE__ */ import_react243.default.createElement(Cell3, Object.assign({
              key: `${id}-sticky`
            }, cellProps, {
              setRef: (ref) => {
                this.setCellRef({
                  ref,
                  index: headingIndex,
                  inStickyHeader
                });
              },
              inFixedNthColumn: Boolean(fixedFirstColumns),
              lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,
              style: {
                left: this.state.columnVisibilityData[headingIndex]?.leftEdge
              }
            }))];
          }
          return /* @__PURE__ */ import_react243.default.createElement(Cell3, Object.assign({
            key: id
          }, cellProps, {
            setRef: (ref) => {
              this.setCellRef({
                ref,
                index: headingIndex,
                inStickyHeader
              });
            },
            lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,
            inFixedNthColumn
          }));
        };
        this.totalsRowHeading = () => {
          const {
            i18n,
            totals,
            totalsName
          } = this.props;
          const totalsLabel = totalsName ? totalsName : {
            singular: i18n.translate("Polaris.DataTable.totalRowHeading"),
            plural: i18n.translate("Polaris.DataTable.totalsRowHeading")
          };
          return totals && totals.filter((total) => total !== "").length > 1 ? totalsLabel.plural : totalsLabel.singular;
        };
        this.renderTotals = ({
          total,
          index
        }) => {
          const fixedFirstColumns = this.fixedFirstColumns();
          const id = `totals-cell-${index}`;
          const {
            truncate = false,
            verticalAlign,
            columnContentTypes
          } = this.props;
          let content;
          let contentType;
          if (index === 0) {
            content = this.totalsRowHeading();
          }
          if (total !== "" && index > 0) {
            contentType = columnContentTypes[index];
            content = total;
          }
          const totalInFooter = this.props.showTotalsInFooter;
          return /* @__PURE__ */ import_react243.default.createElement(Cell3, {
            total: true,
            totalInFooter,
            nthColumn: index <= fixedFirstColumns - 1,
            firstColumn: index === 0,
            key: id,
            content,
            contentType,
            truncate,
            verticalAlign
          });
        };
        this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {
          const fixedFirstColumns = this.fixedFirstColumns();
          if (fixedFirstColumns) {
            return 1;
          }
          const rowLen = rowLength ? rowLength : 1;
          const colLen = headingsLength ? headingsLength : contentTypesLength;
          const colSpan = Math.floor(colLen / rowLen);
          const remainder = colLen % rowLen;
          return cellIndex === 0 ? colSpan + remainder : colSpan;
        };
        this.defaultRenderRow = ({
          row,
          index,
          inFixedNthColumn,
          rowHeights
        }) => {
          const {
            columnContentTypes,
            truncate = false,
            verticalAlign,
            hoverable = true,
            headings
          } = this.props;
          const {
            condensed
          } = this.state;
          const fixedFirstColumns = this.fixedFirstColumns();
          const className = classNames(styles85.TableRow, hoverable && styles85.hoverable);
          return /* @__PURE__ */ import_react243.default.createElement("tr", {
            key: `row-${index}`,
            className,
            onMouseEnter: this.handleHover(index),
            onMouseLeave: this.handleHover()
          }, row.map((content, cellIndex) => {
            const hovered = index === this.state.rowHovered;
            const id = `cell-${cellIndex}-row-${index}`;
            const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);
            return /* @__PURE__ */ import_react243.default.createElement(Cell3, {
              key: id,
              content,
              contentType: columnContentTypes[cellIndex],
              nthColumn: cellIndex <= fixedFirstColumns - 1,
              firstColumn: cellIndex === 0,
              truncate,
              verticalAlign,
              colSpan,
              hovered,
              style: rowHeights ? {
                height: `${rowHeights[index]}px`
              } : {},
              inFixedNthColumn: condensed && inFixedNthColumn
            });
          }));
        };
        this.defaultOnSort = (headingIndex) => {
          const {
            onSort,
            defaultSortDirection = "ascending",
            initialSortColumnIndex
          } = this.props;
          const {
            sortDirection = defaultSortDirection,
            sortedColumnIndex = initialSortColumnIndex
          } = this.state;
          let newSortDirection = defaultSortDirection;
          if (sortedColumnIndex === headingIndex) {
            newSortDirection = sortDirection === "ascending" ? "descending" : "ascending";
          }
          const handleSort = () => {
            this.setState({
              sortDirection: newSortDirection,
              sortedColumnIndex: headingIndex
            }, () => {
              if (onSort) {
                onSort(headingIndex, newSortDirection);
              }
            });
          };
          return handleSort;
        };
      }
      componentDidMount() {
        if (true) {
          setTimeout(() => {
            this.handleResize();
          }, 10);
        } else {
          this.handleResize();
        }
      }
      componentDidUpdate(prevProps) {
        if ((0, import_react_fast_compare3.default)(prevProps, this.props)) {
          return;
        }
        this.handleResize();
      }
      componentWillUnmount() {
        this.handleResize.cancel();
      }
      render() {
        const {
          headings,
          totals,
          showTotalsInFooter,
          rows,
          footerContent,
          hideScrollIndicator = false,
          increasedTableDensity = false,
          hasZebraStripingOnData = false,
          stickyHeader = false,
          hasFixedFirstColumn: fixedFirstColumn = false,
          pagination
        } = this.props;
        const {
          condensed,
          columnVisibilityData,
          isScrolledFarthestLeft,
          isScrolledFarthestRight
        } = this.state;
        if (fixedFirstColumn && true) {
          console.warn("Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.");
        }
        const fixedFirstColumns = this.fixedFirstColumns();
        const rowCountIsEven = rows.length % 2 === 0;
        const className = classNames(styles85.DataTable, condensed && styles85.condensed, totals && styles85.ShowTotals, showTotalsInFooter && styles85.ShowTotalsInFooter, hasZebraStripingOnData && styles85.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles85.RowCountIsEven);
        const wrapperClassName = classNames(styles85.TableWrapper, condensed && styles85.condensed, increasedTableDensity && styles85.IncreasedTableDensity, stickyHeader && styles85.StickyHeaderEnabled);
        const headingMarkup = /* @__PURE__ */ import_react243.default.createElement("tr", null, headings.map((heading, index) => this.renderHeading({
          heading,
          headingIndex: index,
          inFixedNthColumn: false,
          inStickyHeader: false
        })));
        const totalsMarkup = totals ? /* @__PURE__ */ import_react243.default.createElement("tr", null, totals.map((total, index) => this.renderTotals({
          total,
          index
        }))) : null;
        const nthColumns = rows.map((row) => row.slice(0, fixedFirstColumns));
        const nthHeadings = headings.slice(0, fixedFirstColumns);
        const nthTotals = totals?.slice(0, fixedFirstColumns);
        const tableHeaderRows = this.table.current?.children[0].childNodes;
        const tableBodyRows = this.table.current?.children[1].childNodes;
        const headerRowHeights = getRowClientHeights(tableHeaderRows);
        const bodyRowHeights = getRowClientHeights(tableBodyRows);
        const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /* @__PURE__ */ import_react243.default.createElement("table", {
          className: classNames(styles85.FixedFirstColumn, !isScrolledFarthestLeft && styles85.separate),
          style: {
            width: `${columnVisibilityData[fixedFirstColumns - 1]?.rightEdge}px`
          }
        }, /* @__PURE__ */ import_react243.default.createElement("thead", null, /* @__PURE__ */ import_react243.default.createElement("tr", {
          style: {
            height: `${headerRowHeights[0]}px`
          }
        }, nthHeadings.map((heading, index) => this.renderHeading({
          heading,
          headingIndex: index,
          inFixedNthColumn: true,
          inStickyHeader: false
        }))), totals && !showTotalsInFooter && /* @__PURE__ */ import_react243.default.createElement("tr", {
          style: {
            height: `${headerRowHeights[1]}px`
          }
        }, nthTotals?.map((total, index) => this.renderTotals({
          total,
          index
        })))), /* @__PURE__ */ import_react243.default.createElement("tbody", null, nthColumns.map((row, index) => this.defaultRenderRow({
          row,
          index,
          inFixedNthColumn: true,
          rowHeights: bodyRowHeights
        }))), totals && showTotalsInFooter && /* @__PURE__ */ import_react243.default.createElement("tfoot", null, /* @__PURE__ */ import_react243.default.createElement("tr", null, nthTotals?.map((total, index) => this.renderTotals({
          total,
          index
        })))));
        const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({
          row,
          index,
          inFixedNthColumn: false
        }));
        const footerMarkup = footerContent ? /* @__PURE__ */ import_react243.default.createElement("div", {
          className: styles85.Footer
        }, footerContent) : null;
        const paginationMarkup = pagination ? /* @__PURE__ */ import_react243.default.createElement(Pagination, Object.assign({
          type: "table"
        }, pagination)) : null;
        const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;
        const footerTotalsMarkup = showTotalsInFooter ? /* @__PURE__ */ import_react243.default.createElement("tfoot", null, totalsMarkup) : null;
        const navigationMarkup = (location) => hideScrollIndicator ? null : /* @__PURE__ */ import_react243.default.createElement(Navigation, {
          columnVisibilityData,
          isScrolledFarthestLeft,
          isScrolledFarthestRight,
          navigateTableLeft: this.navigateTable("left"),
          navigateTableRight: this.navigateTable("right"),
          fixedFirstColumns,
          setRef: (ref) => {
            if (location === "header") {
              this.headerNav = ref;
            } else if (location === "sticky") {
              this.stickyNav = ref;
            }
          }
        });
        const stickyHeaderMarkup = stickyHeader ? /* @__PURE__ */ import_react243.default.createElement(AfterInitialMount, null, /* @__PURE__ */ import_react243.default.createElement("div", {
          className: styles85.StickyHeaderWrapper,
          role: "presentation"
        }, /* @__PURE__ */ import_react243.default.createElement(Sticky, {
          boundingElement: this.dataTable.current,
          onStickyChange: (isSticky) => {
            this.changeHeadingFocus();
            this.stickyHeaderActive = isSticky;
          }
        }, (isSticky) => {
          const stickyHeaderInnerClassNames = classNames(styles85.StickyHeaderInner, isSticky && styles85["StickyHeaderInner-isSticky"]);
          const stickyHeaderTableClassNames = classNames(styles85.StickyHeaderTable, !isScrolledFarthestLeft && styles85.separate);
          return /* @__PURE__ */ import_react243.default.createElement("div", {
            className: stickyHeaderInnerClassNames
          }, /* @__PURE__ */ import_react243.default.createElement("div", null, navigationMarkup("sticky")), /* @__PURE__ */ import_react243.default.createElement("table", {
            className: stickyHeaderTableClassNames,
            ref: this.stickyTable
          }, /* @__PURE__ */ import_react243.default.createElement("thead", null, /* @__PURE__ */ import_react243.default.createElement("tr", {
            className: styles85.StickyTableHeadingsRow
          }, headings.map((heading, index) => {
            return this.renderHeading({
              heading,
              headingIndex: index,
              inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),
              inStickyHeader: true
            });
          })))));
        }))) : null;
        return /* @__PURE__ */ import_react243.default.createElement("div", {
          className: wrapperClassName,
          ref: this.dataTable
        }, stickyHeaderMarkup, navigationMarkup("header"), /* @__PURE__ */ import_react243.default.createElement("div", {
          className
        }, /* @__PURE__ */ import_react243.default.createElement("div", {
          className: styles85.ScrollContainer,
          ref: this.scrollContainer
        }, /* @__PURE__ */ import_react243.default.createElement(EventListener, {
          event: "resize",
          handler: this.handleResize
        }), /* @__PURE__ */ import_react243.default.createElement(EventListener, {
          capture: true,
          passive: true,
          event: "scroll",
          handler: this.scrollListener
        }), fixedNthColumnMarkup, /* @__PURE__ */ import_react243.default.createElement("table", {
          className: styles85.Table,
          ref: this.table
        }, /* @__PURE__ */ import_react243.default.createElement("thead", null, headingMarkup, headerTotalsMarkup), /* @__PURE__ */ import_react243.default.createElement("tbody", null, bodyMarkup), footerTotalsMarkup)), paginationMarkup, footerMarkup));
      }
      fixedFirstColumns() {
        const {
          hasFixedFirstColumn,
          fixedFirstColumns = 0,
          headings
        } = this.props;
        const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;
        if (numberOfFixedFirstColumns >= headings.length) {
          return 0;
        }
        return numberOfFixedFirstColumns;
      }
      // eslint-disable-next-line @shopify/react-no-multiple-render-methods
      // eslint-disable-next-line @shopify/react-no-multiple-render-methods
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/dates.js
function getWeeksForMonth(month, year, weekStartsOn = 0) {
  const firstOfMonth = new Date(year, month, 1);
  const firstDayOfWeek = firstOfMonth.getDay();
  const weeks = [[]];
  let currentWeek = weeks[0];
  let currentDate = firstOfMonth;
  const orderedWeekday = getOrderedWeekdays(weekStartsOn);
  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {
    currentWeek.push(null);
  }
  while (currentDate.getMonth() === month) {
    if (currentWeek.length === WEEK_LENGTH) {
      currentWeek = [];
      weeks.push(currentWeek);
    }
    currentWeek.push(currentDate);
    currentDate = new Date(year, month, currentDate.getDate() + 1);
  }
  while (currentWeek.length < 7) {
    currentWeek.push(null);
  }
  return weeks;
}
function dateIsInRange(day, range) {
  if (day == null) {
    return false;
  }
  const {
    start,
    end
  } = range;
  return Boolean(start && day > start && end && day < end);
}
function dateIsSelected(day, range) {
  if (day == null) {
    return false;
  }
  const {
    start,
    end
  } = range;
  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));
}
function isSameDay(day1, day2) {
  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();
}
function getNewRange(range, selected) {
  if (range == null) {
    return {
      start: selected,
      end: selected
    };
  }
  const {
    start,
    end
  } = range;
  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {
    return {
      start: selected,
      end: selected
    };
  }
  if (start) {
    if (isDateBefore(selected, start)) {
      return {
        start: selected,
        end: selected
      };
    }
    return {
      start,
      end: selected
    };
  }
  if (end) {
    if (isDateBefore(selected, end)) {
      return {
        start: selected,
        end
      };
    }
    return {
      start: start || end,
      end: selected
    };
  }
  return {
    start: selected,
    end: selected
  };
}
function getNextDisplayMonth(month) {
  if (month === 11) {
    return 0;
  }
  return month + 1;
}
function getNextDisplayYear(month, year) {
  if (month === 11) {
    return year + 1;
  }
  return year;
}
function getPreviousDisplayMonth(month) {
  if (month === 0) {
    return 11;
  }
  return month - 1;
}
function getPreviousDisplayYear(month, year) {
  if (month === 0) {
    return year - 1;
  }
  return year;
}
function isDateAfter(date, dateToCompare) {
  return date.getTime() > dateToCompare.getTime();
}
function isDateBefore(date, dateToCompare) {
  return date.getTime() < dateToCompare.getTime();
}
function isDateDisabled(date, datesToCompare) {
  return datesToCompare.some((dateToCompare) => {
    return date.getTime() === dateToCompare.getTime();
  });
}
function getOrderedWeekdays(weekStartsOn) {
  const weekDays = [...WEEKDAYS];
  const restOfDays = weekDays.splice(weekStartsOn);
  return [...restOfDays, ...weekDays];
}
var WEEK_LENGTH, WEEKDAYS;
var init_dates = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/dates.js"() {
    WEEK_LENGTH = 7;
    WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];
  }
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/utilities.js
function monthName(month) {
  switch (month) {
    case 0:
      return "january";
    case 1:
      return "february";
    case 2:
      return "march";
    case 3:
      return "april";
    case 4:
      return "may";
    case 5:
      return "june";
    case 6:
      return "july";
    case 7:
      return "august";
    case 8:
      return "september";
    case 9:
      return "october";
    case 10:
      return "november";
    case 11:
      return "december";
  }
}
function weekdayName(weekday) {
  switch (weekday) {
    case 0:
      return "sunday";
    case 1:
      return "monday";
    case 2:
      return "tuesday";
    case 3:
      return "wednesday";
    case 4:
      return "thursday";
    case 5:
      return "friday";
    case 6:
      return "saturday";
  }
}
var init_utilities9 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DatePicker/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.css.js
var styles86;
var init_DatePicker_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.css.js"() {
    styles86 = {
      "DatePicker": "Polaris-DatePicker",
      "MonthLayout": "Polaris-DatePicker__MonthLayout",
      "MonthContainer": "Polaris-DatePicker__MonthContainer",
      "Month": "Polaris-DatePicker__Month",
      "DayCell": "Polaris-DatePicker__DayCell",
      "DayCell-inRange": "Polaris-DatePicker__DayCell--inRange",
      "Day": "Polaris-DatePicker__Day",
      "Day-inRange": "Polaris-DatePicker__Day--inRange",
      "Day-selected": "Polaris-DatePicker__Day--selected",
      "Day-disabled": "Polaris-DatePicker__Day--disabled",
      "EmptyDayCell": "Polaris-DatePicker__EmptyDayCell",
      "Weekday": "Polaris-DatePicker__Weekday",
      "Header": "Polaris-DatePicker__Header",
      "Title": "Polaris-DatePicker__Title",
      "Day-firstInRange": "Polaris-DatePicker__Day--firstInRange",
      "Day-hasRange": "Polaris-DatePicker__Day--hasRange",
      "Day-hoverRight": "Polaris-DatePicker__Day--hoverRight",
      "Day-lastInRange": "Polaris-DatePicker__Day--lastInRange",
      "Week": "Polaris-DatePicker__Week"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Weekday/Weekday.js
var import_react244, Weekday;
var init_Weekday = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Weekday/Weekday.js"() {
    import_react244 = __toESM(require_react());
    init_DatePicker_css();
    init_Text();
    Weekday = /* @__PURE__ */ (0, import_react244.memo)(function Weekday2({
      label,
      title,
      current
    }) {
      return /* @__PURE__ */ import_react244.default.createElement("th", {
        "aria-label": label,
        scope: "col",
        className: styles86.Weekday
      }, /* @__PURE__ */ import_react244.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        alignment: "center",
        fontWeight: current ? "bold" : "regular",
        tone: !current ? "subdued" : void 0
      }, title));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Day/Day.js
function noop10() {
}
var import_react245, Day;
var init_Day = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Day/Day.js"() {
    import_react245 = __toESM(require_react());
    init_css();
    init_dates();
    init_utilities9();
    init_DatePicker_css();
    init_hooks2();
    init_Text();
    Day = /* @__PURE__ */ (0, import_react245.memo)(function Day2({
      day,
      focused,
      onClick,
      onHover = noop10,
      onFocus = noop10,
      selected,
      inRange,
      inHoveringRange,
      disabled,
      lastDayOfMonth,
      isLastSelectedDay,
      isFirstSelectedDay,
      isHoveringRight,
      rangeIsDifferent,
      weekday,
      selectedAccessibilityLabelPrefix
    }) {
      const i18n = useI18n();
      const dayNode = (0, import_react245.useRef)(null);
      const hoverValue = lastDayOfMonth || day;
      (0, import_react245.useEffect)(() => {
        if (focused && dayNode.current) {
          dayNode.current.focus();
        }
      }, [focused]);
      if (!day) {
        return /* @__PURE__ */ import_react245.default.createElement("td", {
          className: styles86.EmptyDayCell,
          onMouseOver: () => onHover(hoverValue)
        });
      }
      const handleClick = onClick && !disabled ? onClick.bind(null, day) : noop10;
      const today = isSameDay(/* @__PURE__ */ new Date(), day);
      const dayCellClassName = classNames(styles86.DayCell, selected && styles86["DayCell-selected"], (inRange || inHoveringRange) && !disabled && styles86["DayCell-inRange"], isLastSelectedDay && styles86["DayCell-lastInRange"], isFirstSelectedDay && styles86["DayCell-firstInRange"], isHoveringRight && styles86["DayCell-hoverRight"], rangeIsDifferent && styles86["DayCell-hasRange"]);
      const dayClassName = classNames(styles86.Day, selected && styles86["Day-selected"], disabled && styles86["Day-disabled"], (inRange || inHoveringRange) && !disabled && styles86["Day-inRange"], isLastSelectedDay && styles86["Day-lastInRange"], isFirstSelectedDay && styles86["Day-firstInRange"], isHoveringRight && styles86["Day-hoverRight"], rangeIsDifferent && styles86["Day-hasRange"]);
      const date = day.getDate();
      const tabIndex = (focused || selected || today || date === 1) && !disabled ? 0 : -1;
      const ariaLabel = [selected && selectedAccessibilityLabelPrefix ? `${selectedAccessibilityLabelPrefix} ` : "", `${today ? i18n.translate("Polaris.DatePicker.today") : ""}`, `${weekday ? weekday : ""} `, `${i18n.translate(`Polaris.DatePicker.months.${monthName(day.getMonth())}`)} `, `${date} `, `${day.getFullYear()}`].join("");
      return /* @__PURE__ */ import_react245.default.createElement("td", {
        className: dayCellClassName
      }, /* @__PURE__ */ import_react245.default.createElement("button", {
        onFocus: () => onFocus(day),
        type: "button",
        ref: dayNode,
        tabIndex,
        className: dayClassName,
        onMouseOver: () => onHover(hoverValue),
        onClick: handleClick,
        "aria-label": ariaLabel,
        "aria-disabled": disabled,
        "aria-pressed": selected
      }, /* @__PURE__ */ import_react245.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        alignment: "center",
        fontWeight: today ? "bold" : "regular"
      }, date)));
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Month/Month.js
function Month({
  focusedDate,
  selected,
  hoverDate,
  disableDatesBefore,
  disableDatesAfter,
  disableSpecificDates,
  allowRange,
  onChange = noop11,
  onHover = noop11,
  onFocus = noop11,
  month,
  year,
  weekStartsOn,
  accessibilityLabelPrefixes
}) {
  const i18n = useI18n();
  const isInHoveringRange = allowRange ? hoveringDateIsInRange : () => false;
  const now = /* @__PURE__ */ new Date();
  const current = now.getMonth() === month && now.getFullYear() === year;
  const weeks = (0, import_react246.useMemo)(() => getWeeksForMonth(month, year, weekStartsOn), [month, weekStartsOn, year]);
  const weekdays = getOrderedWeekdays(weekStartsOn).map((weekday) => /* @__PURE__ */ import_react246.default.createElement(Weekday, {
    key: weekday,
    title: i18n.translate(`Polaris.DatePicker.daysAbbreviated.${weekdayName(weekday)}`),
    label: weekdayLabel(weekday),
    current: current && (/* @__PURE__ */ new Date()).getDay() === weekday
  }));
  const handleDateClick = (0, import_react246.useCallback)((selectedDate) => {
    onChange(getNewRange(allowRange ? selected : void 0, selectedDate));
  }, [allowRange, onChange, selected]);
  const lastDayOfMonth = (0, import_react246.useMemo)(() => new Date(year, month + 1, 0), [month, year]);
  function renderWeek(day, dayIndex) {
    if (day == null) {
      return /* @__PURE__ */ import_react246.default.createElement(Day, {
        key: dayIndex,
        onHover,
        lastDayOfMonth
      });
    }
    const disabled = disableDatesBefore && isDateBefore(day, disableDatesBefore) || disableDatesAfter && isDateAfter(day, disableDatesAfter) || disableSpecificDates && isDateDisabled(day, disableSpecificDates);
    const isFirstSelectedDay = allowRange && selected && isDateStart(day, selected);
    const isLastSelectedDay = allowRange && selected && (!isSameDay(selected.start, selected.end) && isDateEnd(day, selected) || hoverDate && isSameDay(selected.start, selected.end) && isDateAfter(hoverDate, selected.start) && isSameDay(day, hoverDate) && !isFirstSelectedDay);
    const rangeIsDifferent = !(selected && isSameDay(selected.start, selected.end));
    const isHoveringRight = hoverDate && isDateBefore(day, hoverDate);
    const [firstAccessibilityLabelPrefix, lastAccessibilityLabelPrefix] = accessibilityLabelPrefixes;
    let accessibilityLabelPrefix;
    if (allowRange && isFirstSelectedDay || !allowRange && firstAccessibilityLabelPrefix) {
      accessibilityLabelPrefix = firstAccessibilityLabelPrefix;
    } else if (allowRange && isLastSelectedDay) {
      accessibilityLabelPrefix = lastAccessibilityLabelPrefix;
    }
    return /* @__PURE__ */ import_react246.default.createElement(Day, {
      selectedAccessibilityLabelPrefix: accessibilityLabelPrefix,
      weekday: weekdayLabel(dayIndex),
      focused: focusedDate != null && isSameDay(day, focusedDate),
      day,
      key: dayIndex,
      onFocus,
      onClick: handleDateClick,
      onHover,
      selected: selected != null && dateIsSelected(day, selected),
      inRange: selected != null && dateIsInRange(day, selected),
      disabled,
      inHoveringRange: selected != null && hoverDate != null && isInHoveringRange(day, selected, hoverDate),
      isLastSelectedDay,
      isFirstSelectedDay,
      isHoveringRight,
      rangeIsDifferent
    });
  }
  const weeksMarkup = weeks.map((week, index) => /* @__PURE__ */ import_react246.default.createElement("tr", {
    className: styles86.Week,
    key: index
  }, week.map(renderWeek)));
  return /* @__PURE__ */ import_react246.default.createElement("div", {
    className: styles86.MonthContainer
  }, /* @__PURE__ */ import_react246.default.createElement("table", {
    role: "grid",
    className: styles86.Month
  }, /* @__PURE__ */ import_react246.default.createElement("caption", {
    className: styles86.Title
  }, /* @__PURE__ */ import_react246.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    alignment: "center",
    fontWeight: current ? "bold" : "medium"
  }, i18n.translate(`Polaris.DatePicker.months.${monthName(month)}`), " ", year)), /* @__PURE__ */ import_react246.default.createElement("thead", null, /* @__PURE__ */ import_react246.default.createElement("tr", {
    className: styles86.WeekHeadings
  }, weekdays)), /* @__PURE__ */ import_react246.default.createElement("tbody", null, weeksMarkup)));
  function weekdayLabel(weekday) {
    return i18n.translate(`Polaris.DatePicker.days.${weekdayName(weekday)}`);
  }
}
function noop11() {
}
function hoveringDateIsInRange(day, range, hoverEndDate) {
  if (day == null) {
    return false;
  }
  const {
    start,
    end
  } = range;
  return Boolean(isSameDay(start, end) && day > start && day <= hoverEndDate);
}
function isDateEnd(day, range) {
  if (day == null)
    return false;
  const {
    end
  } = range;
  return Boolean(end && isSameDay(end, day));
}
function isDateStart(day, range) {
  if (day == null)
    return false;
  const {
    start
  } = range;
  return Boolean(start && isSameDay(start, day));
}
var import_react246;
var init_Month = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DatePicker/components/Month/Month.js"() {
    import_react246 = __toESM(require_react());
    init_dates();
    init_DatePicker_css();
    init_utilities9();
    init_Weekday();
    init_Day();
    init_hooks2();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.js
function DatePicker({
  id,
  selected,
  month,
  year,
  allowRange,
  multiMonth,
  disableDatesBefore,
  disableDatesAfter,
  disableSpecificDates,
  weekStartsOn = 0,
  dayAccessibilityLabelPrefix,
  onMonthChange,
  onChange = noop12
}) {
  const i18n = useI18n();
  const [hoverDate, setHoverDate] = (0, import_react247.useState)(void 0);
  const [focusDate, setFocusDate] = (0, import_react247.useState)(void 0);
  (0, import_react247.useEffect)(() => {
    setFocusDate(void 0);
  }, [selected]);
  const handleFocus = (0, import_react247.useCallback)((date) => {
    setFocusDate(date);
  }, []);
  const setFocusDateAndHandleMonthChange = (0, import_react247.useCallback)((date) => {
    if (onMonthChange) {
      onMonthChange(date.getMonth(), date.getFullYear());
    }
    setHoverDate(date);
    setFocusDate(date);
  }, [onMonthChange]);
  const handleDateSelection = (0, import_react247.useCallback)((range) => {
    const {
      end
    } = range;
    setHoverDate(end);
    setFocusDate(new Date(end));
    onChange(range);
  }, [onChange]);
  const handleMonthChangeClick = (0, import_react247.useCallback)((month2, year2) => {
    if (!onMonthChange) {
      return;
    }
    setFocusDate(void 0);
    onMonthChange(month2, year2);
  }, [onMonthChange]);
  const handleHover = (0, import_react247.useCallback)((date) => {
    setHoverDate(date);
  }, []);
  const handleKeyUp = (0, import_react247.useCallback)((event) => {
    const {
      key
    } = event;
    const range = deriveRange(selected);
    const focusedDate = focusDate || range && range.start;
    if (focusedDate == null) {
      return;
    }
    if (key === "ArrowUp") {
      const previousWeek = new Date(focusedDate);
      previousWeek.setDate(focusedDate.getDate() - 7);
      if (!(disableDatesBefore && isDateBefore(previousWeek, disableDatesBefore) || disableSpecificDates && isDateDisabled(previousWeek, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(previousWeek);
      }
    }
    if (key === "ArrowDown") {
      const nextWeek = new Date(focusedDate);
      nextWeek.setDate(focusedDate.getDate() + 7);
      if (!(disableDatesAfter && isDateAfter(nextWeek, disableDatesAfter) || disableSpecificDates && isDateDisabled(nextWeek, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(nextWeek);
      }
    }
    if (key === "ArrowRight") {
      const tomorrow = new Date(focusedDate);
      tomorrow.setDate(focusedDate.getDate() + 1);
      if (!(disableDatesAfter && isDateAfter(tomorrow, disableDatesAfter) || disableSpecificDates && isDateDisabled(tomorrow, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(tomorrow);
      }
    }
    if (key === "ArrowLeft") {
      const yesterday = new Date(focusedDate);
      yesterday.setDate(focusedDate.getDate() - 1);
      if (!(disableDatesBefore && isDateBefore(yesterday, disableDatesBefore) || disableSpecificDates && isDateDisabled(yesterday, disableSpecificDates))) {
        setFocusDateAndHandleMonthChange(yesterday);
      }
    }
  }, [disableDatesAfter, disableDatesBefore, disableSpecificDates, focusDate, selected, setFocusDateAndHandleMonthChange]);
  const showNextYear = getNextDisplayYear(month, year);
  const showNextMonth = getNextDisplayMonth(month);
  const showNextToNextYear = getNextDisplayYear(showNextMonth, showNextYear);
  const showNextToNextMonth = getNextDisplayMonth(showNextMonth);
  const showPreviousYear = getPreviousDisplayYear(month, year);
  const showPreviousMonth = getPreviousDisplayMonth(month);
  const previousMonthName = i18n.translate(`Polaris.DatePicker.months.${monthName(showPreviousMonth)}`);
  const nextMonth = multiMonth ? i18n.translate(`Polaris.DatePicker.months.${monthName(showNextToNextMonth)}`) : i18n.translate(`Polaris.DatePicker.months.${monthName(showNextMonth)}`);
  const nextYear = multiMonth ? showNextToNextYear : showNextYear;
  const monthIsSelected = (0, import_react247.useMemo)(() => deriveRange(selected), [selected]);
  const firstDatePickerAccessibilityLabelPrefix = allowRange ? i18n.translate(`Polaris.DatePicker.start`) : dayAccessibilityLabelPrefix;
  const secondDatePickerAccessibilityLabelPrefix = i18n.translate(`Polaris.DatePicker.end`);
  const accessibilityLabelPrefixes = [firstDatePickerAccessibilityLabelPrefix, secondDatePickerAccessibilityLabelPrefix];
  const secondDatePicker = multiMonth ? /* @__PURE__ */ import_react247.default.createElement(Month, {
    onFocus: handleFocus,
    focusedDate: focusDate,
    month: showNextMonth,
    year: showNextYear,
    selected: monthIsSelected,
    hoverDate,
    onChange: handleDateSelection,
    onHover: handleHover,
    disableDatesBefore,
    disableDatesAfter,
    disableSpecificDates,
    allowRange,
    weekStartsOn,
    accessibilityLabelPrefixes
  }) : null;
  const datePickerClassName = classNames(styles86.DatePicker);
  return /* @__PURE__ */ import_react247.default.createElement("div", {
    id,
    className: datePickerClassName,
    onKeyDown: handleKeyDown,
    onKeyUp: handleKeyUp
  }, /* @__PURE__ */ import_react247.default.createElement("div", {
    className: styles86.Header
  }, /* @__PURE__ */ import_react247.default.createElement(Button, {
    variant: "tertiary",
    icon: SvgArrowLeftIcon,
    accessibilityLabel: i18n.translate("Polaris.DatePicker.previousMonth", {
      previousMonthName,
      showPreviousYear
    }),
    onClick: () => handleMonthChangeClick(showPreviousMonth, showPreviousYear)
  }), /* @__PURE__ */ import_react247.default.createElement(Button, {
    variant: "tertiary",
    icon: SvgArrowRightIcon,
    accessibilityLabel: i18n.translate("Polaris.DatePicker.nextMonth", {
      nextMonth,
      nextYear
    }),
    onClick: () => handleMonthChangeClick(showNextMonth, showNextYear)
  })), /* @__PURE__ */ import_react247.default.createElement("div", {
    className: styles86.MonthLayout
  }, /* @__PURE__ */ import_react247.default.createElement(Month, {
    onFocus: handleFocus,
    focusedDate: focusDate,
    month,
    year,
    selected: deriveRange(selected),
    hoverDate,
    onChange: handleDateSelection,
    onHover: handleHover,
    disableDatesBefore,
    disableDatesAfter,
    disableSpecificDates,
    allowRange,
    weekStartsOn,
    accessibilityLabelPrefixes
  }), secondDatePicker));
}
function noop12() {
}
function handleKeyDown(event) {
  const {
    key
  } = event;
  if (key === "ArrowUp" || key === "ArrowDown" || key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}
function deriveRange(selected) {
  return selected instanceof Date ? {
    start: selected,
    end: selected
  } : selected;
}
var import_react247;
var init_DatePicker = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DatePicker/DatePicker.js"() {
    import_react247 = __toESM(require_react());
    init_dist();
    init_css();
    init_dates();
    init_utilities9();
    init_DatePicker_css();
    init_Month();
    init_hooks2();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.css.js
var styles87;
var init_DescriptionList_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.css.js"() {
    styles87 = {
      "DescriptionList": "Polaris-DescriptionList",
      "Term": "Polaris-DescriptionList__Term",
      "spacingTight": "Polaris-DescriptionList--spacingTight",
      "Description": "Polaris-DescriptionList__Description"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.js
function DescriptionList({
  items,
  gap = "loose"
}) {
  const terms = items.reduce((allTerms, {
    term,
    description
  }, index) => [...allTerms, /* @__PURE__ */ import_react248.default.createElement("dt", {
    key: `dt${index}`,
    className: styles87.Term
  }, /* @__PURE__ */ import_react248.default.createElement(Text, {
    as: "span",
    variant: "headingSm"
  }, term)), /* @__PURE__ */ import_react248.default.createElement("dd", {
    key: `dd${index}`,
    className: styles87.Description
  }, description)], []);
  const className = classNames(styles87.DescriptionList, gap === "tight" && styles87.spacingTight);
  return /* @__PURE__ */ import_react248.default.createElement("dl", {
    className
  }, terms);
}
var import_react248;
var init_DescriptionList = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DescriptionList/DescriptionList.js"() {
    import_react248 = __toESM(require_react());
    init_css();
    init_DescriptionList_css();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/capitalize.js
function capitalize2(word = "") {
  const wordLower = word.toLowerCase();
  return wordLower.charAt(0).toUpperCase() + wordLower.slice(1);
}
var init_capitalize = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/capitalize.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/utils/index.js
function fileAccepted(file, accept) {
  return file.type === "application/x-moz-file" || accepts(file, accept);
}
function getDataTransferFiles(event) {
  if (isDragEvent(event) && event.dataTransfer) {
    const dt = event.dataTransfer;
    if (dt.files && dt.files.length) {
      return Array.from(dt.files);
    } else if (dt.items && dt.items.length) {
      return Array.from(dt.items);
    }
  } else if (isChangeEvent(event) && event.target.files) {
    return Array.from(event.target.files);
  }
  return [];
}
function accepts(file, acceptedFiles) {
  if (file && acceptedFiles) {
    const fileName = file.name || "";
    const mimeType = file.type || "";
    const baseMimeType = mimeType.replace(/\/.*$/, "");
    const acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(",");
    return acceptedFilesArray.some((type) => {
      const validType = type.trim();
      if (validType.startsWith(".")) {
        return fileName.toLowerCase().endsWith(validType.toLowerCase());
      } else if (validType.endsWith("/*")) {
        return baseMimeType === validType.replace(/\/.*$/, "");
      }
      return mimeType === validType;
    });
  }
  return true;
}
function isDragEvent(event) {
  return dragEvents.indexOf(event.type) > 0;
}
function isChangeEvent(event) {
  return Object.prototype.hasOwnProperty.call(event, "target");
}
function createAllowMultipleKey(allowMultiple) {
  return allowMultiple ? "allowMultiple" : "single";
}
var dragEvents, defaultAllowMultiple;
var init_utils5 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DropZone/utils/index.js"() {
    dragEvents = ["dragover", "dragenter", "drop"];
    defaultAllowMultiple = true;
  }
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/context.js
var import_react249, DropZoneContext;
var init_context19 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DropZone/context.js"() {
    import_react249 = __toESM(require_react());
    init_utils5();
    DropZoneContext = /* @__PURE__ */ (0, import_react249.createContext)({
      disabled: false,
      focused: false,
      size: "extraLarge",
      type: "file",
      measuring: false,
      allowMultiple: defaultAllowMultiple
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.css.js
var styles88;
var init_DropZone_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.css.js"() {
    styles88 = {
      "DropZone": "Polaris-DropZone",
      "focused": "Polaris-DropZone--focused",
      "noOutline": "Polaris-DropZone--noOutline",
      "hasOutline": "Polaris-DropZone--hasOutline",
      "isDisabled": "Polaris-DropZone--isDisabled",
      "isDragging": "Polaris-DropZone--isDragging",
      "sizeLarge": "Polaris-DropZone--sizeLarge",
      "sizeMedium": "Polaris-DropZone--sizeMedium",
      "sizeSmall": "Polaris-DropZone--sizeSmall",
      "measuring": "Polaris-DropZone--measuring",
      "Container": "Polaris-DropZone__Container",
      "Overlay": "Polaris-DropZone__Overlay",
      "hasError": "Polaris-DropZone--hasError"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.css.js
var styles89;
var init_FileUpload_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.css.js"() {
    styles89 = {
      "FileUpload": "Polaris-DropZone-FileUpload",
      "large": "Polaris-DropZone-FileUpload--large",
      "small": "Polaris-DropZone-FileUpload--small",
      "ActionTitle": "Polaris-DropZone-FileUpload__ActionTitle",
      "ActionTitle-disabled": "Polaris-DropZone-FileUpload__ActionTitle--disabled",
      "ActionTitle-focused": "Polaris-DropZone-FileUpload__ActionTitle--focused",
      "UploadIcon": "Polaris-DropZone-FileUpload__UploadIcon",
      "disabled": "Polaris-DropZone-FileUpload--disabled"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.js
function FileUpload(props) {
  const i18n = useI18n();
  const {
    size: size2,
    measuring,
    type,
    disabled,
    allowMultiple
  } = (0, import_react250.useContext)(DropZoneContext);
  const typeSuffix = capitalize2(type);
  const allowMultipleKey = createAllowMultipleKey(allowMultiple);
  const {
    actionTitle = i18n.translate(`Polaris.DropZone.${allowMultipleKey}.actionTitle${typeSuffix}`),
    actionHint
  } = props;
  const actionMarkup = /* @__PURE__ */ import_react250.default.createElement(Button, {
    disabled
  }, actionTitle);
  const fileUploadClassName = classNames(styles89.FileUpload, measuring && styles89.measuring, size2 === "large" && styles89.large, size2 === "small" && styles89.small);
  const actionHintMarkup = actionHint && /* @__PURE__ */ import_react250.default.createElement(Text, {
    variant: "bodySm",
    as: "p",
    tone: "subdued"
  }, actionHint);
  let viewMarkup;
  switch (size2) {
    case "large":
    case "medium":
      viewMarkup = /* @__PURE__ */ import_react250.default.createElement(BlockStack, {
        inlineAlign: "center",
        gap: "200"
      }, actionMarkup, actionHintMarkup);
      break;
    case "small":
      viewMarkup = /* @__PURE__ */ import_react250.default.createElement("div", {
        className: classNames(styles89.UploadIcon, disabled && styles89.disabled)
      }, /* @__PURE__ */ import_react250.default.createElement(Icon, {
        source: SvgUploadIcon
      }));
      break;
  }
  return /* @__PURE__ */ import_react250.default.createElement("div", {
    className: fileUploadClassName
  }, viewMarkup);
}
var import_react250;
var init_FileUpload = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DropZone/components/FileUpload/FileUpload.js"() {
    import_react250 = __toESM(require_react());
    init_dist();
    init_css();
    init_capitalize();
    init_context19();
    init_utils5();
    init_FileUpload_css();
    init_hooks2();
    init_Icon();
    init_BlockStack();
    init_Button();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.js
function stopEvent(event) {
  event.preventDefault();
  event.stopPropagation();
}
var import_react251, DropZone;
var init_DropZone = __esm({
  "node_modules/@shopify/polaris/build/esm/components/DropZone/DropZone.js"() {
    import_react251 = __toESM(require_react());
    init_dist();
    init_debounce();
    init_css();
    init_capitalize();
    init_target();
    init_use_component_did_mount();
    init_use_toggle();
    init_use_event_listener();
    init_context19();
    init_utils5();
    init_DropZone_css();
    init_FileUpload();
    init_hooks2();
    init_BlockStack();
    init_Icon();
    init_Text();
    init_Labelled();
    DropZone = function DropZone2({
      dropOnPage,
      label,
      labelAction,
      labelHidden,
      children,
      disabled = false,
      outline = true,
      accept,
      active,
      overlay: overlay2 = true,
      allowMultiple = defaultAllowMultiple,
      overlayText,
      errorOverlayText,
      id: idProp,
      type = "file",
      onClick,
      error,
      openFileDialog,
      variableHeight,
      onFileDialogClose,
      customValidator,
      onDrop,
      onDropAccepted,
      onDropRejected,
      onDragEnter,
      onDragOver,
      onDragLeave
    }) {
      const node = (0, import_react251.useRef)(null);
      const inputRef = (0, import_react251.useRef)(null);
      const dragTargets = (0, import_react251.useRef)([]);
      const adjustSize = (0, import_react251.useCallback)(debounce(() => {
        if (!node.current) {
          return;
        }
        if (variableHeight) {
          setMeasuring(false);
          return;
        }
        let size3 = "large";
        const width2 = node.current.getBoundingClientRect().width;
        if (width2 < 100) {
          size3 = "small";
        } else if (width2 < 160) {
          size3 = "medium";
        }
        setSize(size3);
        measuring && setMeasuring(false);
      }, 50, {
        trailing: true
      }), []);
      const [dragging, setDragging] = (0, import_react251.useState)(false);
      const [internalError, setInternalError] = (0, import_react251.useState)(false);
      const {
        value: focused,
        setTrue: handleFocus,
        setFalse: handleBlur
      } = useToggle(false);
      const [size2, setSize] = (0, import_react251.useState)("large");
      const [measuring, setMeasuring] = (0, import_react251.useState)(true);
      const i18n = useI18n();
      const getValidatedFiles = (0, import_react251.useCallback)((files) => {
        const acceptedFiles = [];
        const rejectedFiles = [];
        Array.from(files).forEach((file) => {
          !fileAccepted(file, accept) || customValidator && !customValidator(file) ? rejectedFiles.push(file) : acceptedFiles.push(file);
        });
        if (!allowMultiple) {
          acceptedFiles.splice(1, acceptedFiles.length);
          rejectedFiles.push(...acceptedFiles.slice(1));
        }
        return {
          files,
          acceptedFiles,
          rejectedFiles
        };
      }, [accept, allowMultiple, customValidator]);
      const handleDrop = (0, import_react251.useCallback)((event) => {
        stopEvent(event);
        if (disabled)
          return;
        const fileList = getDataTransferFiles(event);
        const {
          files,
          acceptedFiles,
          rejectedFiles
        } = getValidatedFiles(fileList);
        dragTargets.current = [];
        setDragging(false);
        setInternalError(rejectedFiles.length > 0);
        onDrop && onDrop(files, acceptedFiles, rejectedFiles);
        onDropAccepted && acceptedFiles.length && onDropAccepted(acceptedFiles);
        onDropRejected && rejectedFiles.length && onDropRejected(rejectedFiles);
        if (!(event.target && "value" in event.target))
          return;
        event.target.value = "";
      }, [disabled, getValidatedFiles, onDrop, onDropAccepted, onDropRejected]);
      const handleDragEnter = (0, import_react251.useCallback)((event) => {
        stopEvent(event);
        if (disabled)
          return;
        const fileList = getDataTransferFiles(event);
        if (event.target && !dragTargets.current.includes(event.target)) {
          dragTargets.current.push(event.target);
        }
        if (dragging)
          return;
        const {
          rejectedFiles
        } = getValidatedFiles(fileList);
        setDragging(true);
        setInternalError(rejectedFiles.length > 0);
        onDragEnter && onDragEnter();
      }, [disabled, dragging, getValidatedFiles, onDragEnter]);
      const handleDragOver = (0, import_react251.useCallback)((event) => {
        stopEvent(event);
        if (disabled)
          return;
        onDragOver && onDragOver();
      }, [disabled, onDragOver]);
      const handleDragLeave = (0, import_react251.useCallback)((event) => {
        event.preventDefault();
        if (disabled)
          return;
        dragTargets.current = dragTargets.current.filter((el) => {
          const compareNode = dropOnPage && !isServer ? document : node.current;
          return el !== event.target && compareNode && compareNode.contains(el);
        });
        if (dragTargets.current.length > 0)
          return;
        setDragging(false);
        setInternalError(false);
        onDragLeave && onDragLeave();
      }, [dropOnPage, disabled, onDragLeave]);
      const dropNode = dropOnPage && !isServer ? document : node.current;
      useEventListener("drop", handleDrop, dropNode);
      useEventListener("dragover", handleDragOver, dropNode);
      useEventListener("dragenter", handleDragEnter, dropNode);
      useEventListener("dragleave", handleDragLeave, dropNode);
      useEventListener("resize", adjustSize, isServer ? null : window);
      useComponentDidMount(() => {
        adjustSize();
      });
      const uniqId = (0, import_react251.useId)();
      const id = idProp ?? uniqId;
      const typeSuffix = capitalize2(type);
      const allowMultipleKey = createAllowMultipleKey(allowMultiple);
      const overlayTextWithDefault = overlayText === void 0 ? i18n.translate(`Polaris.DropZone.${allowMultipleKey}.overlayText${typeSuffix}`) : overlayText;
      const errorOverlayTextWithDefault = errorOverlayText === void 0 ? i18n.translate(`Polaris.DropZone.errorOverlayText${typeSuffix}`) : errorOverlayText;
      const labelValue = label || i18n.translate(`Polaris.DropZone.${allowMultipleKey}.label${typeSuffix}`);
      const labelHiddenValue = label ? labelHidden : true;
      const classes = classNames(styles88.DropZone, outline && styles88.hasOutline, !outline && styles88.noOutline, focused && styles88.focused, (active || dragging) && styles88.isDragging, disabled && styles88.isDisabled, (internalError || error) && styles88.hasError, !variableHeight && styles88[variationName("size", size2)], measuring && styles88.measuring);
      const dragOverlay = (active || dragging) && !internalError && !error && overlay2 && overlayMarkup(SvgUploadIcon, overlayTextWithDefault);
      const dragErrorOverlay = dragging && (internalError || error) && overlayMarkup(SvgAlertCircleIcon, errorOverlayTextWithDefault, "critical");
      const context = (0, import_react251.useMemo)(() => ({
        disabled,
        focused,
        size: size2,
        type: type || "file",
        measuring,
        allowMultiple
      }), [disabled, focused, measuring, size2, type, allowMultiple]);
      const open = (0, import_react251.useCallback)(() => {
        if (!inputRef.current)
          return;
        inputRef.current.click();
      }, [inputRef]);
      const triggerFileDialog = (0, import_react251.useCallback)(() => {
        open();
        onFileDialogClose?.();
      }, [open, onFileDialogClose]);
      function overlayMarkup(icon, text2, color2) {
        return /* @__PURE__ */ import_react251.default.createElement("div", {
          className: styles88.Overlay
        }, /* @__PURE__ */ import_react251.default.createElement(BlockStack, {
          gap: "200",
          inlineAlign: "center"
        }, size2 === "small" && /* @__PURE__ */ import_react251.default.createElement(Icon, {
          source: icon,
          tone: color2
        }), (size2 === "medium" || size2 === "large") && /* @__PURE__ */ import_react251.default.createElement(Text, {
          variant: "bodySm",
          as: "p",
          fontWeight: "bold"
        }, text2)));
      }
      function handleClick(event) {
        if (disabled)
          return;
        return onClick ? onClick(event) : open();
      }
      (0, import_react251.useEffect)(() => {
        if (openFileDialog)
          triggerFileDialog();
      }, [openFileDialog, triggerFileDialog]);
      return /* @__PURE__ */ import_react251.default.createElement(DropZoneContext.Provider, {
        value: context
      }, /* @__PURE__ */ import_react251.default.createElement(Labelled, {
        id,
        label: labelValue,
        action: labelAction,
        labelHidden: labelHiddenValue
      }, /* @__PURE__ */ import_react251.default.createElement("div", {
        ref: node,
        className: classes,
        "aria-disabled": disabled,
        onClick: handleClick,
        onDragStart: stopEvent
      }, dragOverlay, dragErrorOverlay, /* @__PURE__ */ import_react251.default.createElement(Text, {
        variant: "bodySm",
        as: "span",
        visuallyHidden: true
      }, /* @__PURE__ */ import_react251.default.createElement("input", {
        id,
        accept,
        disabled,
        multiple: allowMultiple,
        onChange: handleDrop,
        onFocus: handleFocus,
        onBlur: handleBlur,
        type: "file",
        ref: inputRef,
        autoComplete: "off"
      })), /* @__PURE__ */ import_react251.default.createElement("div", {
        className: styles88.Container
      }, children))));
    };
    DropZone.FileUpload = FileUpload;
  }
});

// node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.css.js
var styles90;
var init_ExceptionList_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.css.js"() {
    styles90 = {
      "ExceptionList": "Polaris-ExceptionList",
      "Item": "Polaris-ExceptionList__Item",
      "Icon": "Polaris-ExceptionList__Icon",
      "statusWarning": "Polaris-ExceptionList--statusWarning",
      "statusCritical": "Polaris-ExceptionList--statusCritical",
      "Bullet": "Polaris-ExceptionList__Bullet",
      "Title": "Polaris-ExceptionList__Title",
      "Description": "Polaris-ExceptionList__Description"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.css.js
var styles91;
var init_Truncate_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.css.js"() {
    styles91 = {
      "Truncate": "Polaris-Truncate"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.js
function Truncate({
  children
}) {
  return /* @__PURE__ */ import_react252.default.createElement("span", {
    className: styles91.Truncate
  }, children);
}
var import_react252;
var init_Truncate = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Truncate/Truncate.js"() {
    import_react252 = __toESM(require_react());
    init_Truncate_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.js
function ExceptionList({
  items: itemsList
}) {
  const items = itemsList.map((item, index) => {
    const {
      status,
      icon,
      title,
      description,
      truncate = false
    } = item;
    const itemClasses = classNames(styles90.Item, status && styles90[variationName("status", status)]);
    const iconMarkup = icon ? /* @__PURE__ */ import_react253.default.createElement(Icon, {
      source: icon
    }) : /* @__PURE__ */ import_react253.default.createElement("span", {
      className: styles90.Bullet
    });
    const titleMarkup = title && /* @__PURE__ */ import_react253.default.createElement("span", {
      className: styles90.Title
    }, title);
    const descriptionMarkup = description && /* @__PURE__ */ import_react253.default.createElement("span", {
      className: styles90.Description
    }, description);
    const Element2 = truncate ? Truncate : import_react253.Fragment;
    return /* @__PURE__ */ import_react253.default.createElement("li", {
      className: itemClasses,
      key: index
    }, /* @__PURE__ */ import_react253.default.createElement("span", {
      className: styles90.Icon
    }, iconMarkup), /* @__PURE__ */ import_react253.default.createElement(Element2, null, titleMarkup, descriptionMarkup));
  });
  return /* @__PURE__ */ import_react253.default.createElement("ul", {
    className: styles90.ExceptionList
  }, items);
}
var import_react253;
var init_ExceptionList = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ExceptionList/ExceptionList.js"() {
    import_react253 = __toESM(require_react());
    init_css();
    init_ExceptionList_css();
    init_Truncate();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Filters/Filters.css.js
var styles92;
var init_Filters_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Filters/Filters.css.js"() {
    styles92 = {
      "Container": "Polaris-Filters__Container",
      "SearchField": "Polaris-Filters__SearchField",
      "FiltersWrapper": "Polaris-Filters__FiltersWrapper",
      "hideQueryField": "Polaris-Filters--hideQueryField",
      "FiltersInner": "Polaris-Filters__FiltersInner",
      "AddFilter": "Polaris-Filters__AddFilter",
      "FiltersWrapperWithAddButton": "Polaris-Filters__FiltersWrapperWithAddButton",
      "AddFilterActivatorMultiple": "Polaris-Filters__AddFilterActivatorMultiple",
      "FiltersStickyArea": "Polaris-Filters__FiltersStickyArea",
      "ClearAll": "Polaris-Filters__ClearAll",
      "MultiplePinnedFilterClearAll": "Polaris-Filters__MultiplePinnedFilterClearAll"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Filters/components/SearchField/SearchField.js
function SearchField({
  onChange,
  onClear,
  onFocus,
  onBlur,
  focused,
  value,
  placeholder,
  disabled,
  borderlessQueryField,
  loading,
  selectedViewName
}) {
  const i18n = useI18n();
  const id = (0, import_react254.useId)();
  const {
    mdUp
  } = useBreakpoints();
  const suffix = value && selectedViewName && mdUp ? /* @__PURE__ */ import_react254.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    tone: "subdued"
  }, i18n.translate("Polaris.Filters.searchInView", {
    viewName: selectedViewName
  })) : null;
  function handleChange(eventValue) {
    onChange(eventValue ?? value);
  }
  function handleClear() {
    if (onClear) {
      onClear();
    } else {
      onChange("");
    }
  }
  return /* @__PURE__ */ import_react254.default.createElement(TextField, {
    id,
    value,
    onChange: handleChange,
    onFocus,
    onBlur,
    onClearButtonClick: handleClear,
    autoComplete: "off",
    placeholder,
    disabled,
    variant: borderlessQueryField ? "borderless" : "inherit",
    size: "slim",
    prefix: mdUp ? /* @__PURE__ */ import_react254.default.createElement(Icon, {
      source: SvgSearchIcon
    }) : void 0,
    suffix,
    focused,
    label: placeholder,
    labelHidden: true,
    clearButton: true,
    autoSize: Boolean(suffix),
    loading
  });
}
var import_react254;
var init_SearchField = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Filters/components/SearchField/SearchField.js"() {
    import_react254 = __toESM(require_react());
    init_dist();
    init_breakpoints2();
    init_hooks2();
    init_Text();
    init_TextField();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-on-value-change.js
function useOnValueChange(value, onChange) {
  const tracked = import_react255.default.useRef(value);
  (0, import_react255.useEffect)(() => {
    const oldValue = tracked.current;
    if (value !== tracked.current) {
      tracked.current = value;
      onChange(value, oldValue);
    }
  }, [value, onChange]);
}
var import_react255;
var init_use_on_value_change = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-on-value-change.js"() {
    import_react255 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.css.js
var styles93;
var init_FilterPill_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.css.js"() {
    styles93 = {
      "FilterButton": "Polaris-Filters-FilterPill__FilterButton",
      "focusedFilterButton": "Polaris-Filters-FilterPill--focusedFilterButton",
      "ActiveFilterButton": "Polaris-Filters-FilterPill__ActiveFilterButton",
      "PlainButton": "Polaris-Filters-FilterPill__PlainButton",
      "ToggleButton": "Polaris-Filters-FilterPill__ToggleButton",
      "clearButton": "Polaris-Filters-FilterPill--clearButton",
      "IconWrapper": "Polaris-Filters-FilterPill__IconWrapper",
      "PopoverWrapper": "Polaris-Filters-FilterPill__PopoverWrapper",
      "ClearButtonWrapper": "Polaris-Filters-FilterPill__ClearButtonWrapper"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.js
function FilterPill({
  unsavedChanges = false,
  filterKey,
  label,
  filter,
  disabled,
  hideClearButton,
  selected,
  initialActive,
  closeOnChildOverlayClick,
  onRemove,
  onClick
}) {
  const i18n = useI18n();
  const elementRef = (0, import_react256.useRef)(null);
  const {
    value: focused,
    setTrue: setFocusedTrue,
    setFalse: setFocusedFalse
  } = useToggle(false);
  const [popoverActive, setPopoverActive] = (0, import_react256.useState)(initialActive);
  (0, import_react256.useEffect)(() => {
    const node = elementRef.current;
    if (!node || !popoverActive) {
      return;
    }
    const parent = node.parentElement?.parentElement;
    if (!parent) {
      return;
    }
    parent.scroll?.({
      left: node.offsetLeft
    });
  }, [elementRef, popoverActive]);
  const togglePopoverActive = (0, import_react256.useCallback)(() => {
    if (filter) {
      setPopoverActive((popoverActive2) => !popoverActive2);
    }
    if (onClick) {
      onClick(filterKey);
    }
  }, [filter, filterKey, onClick]);
  const handlePopoverClose = (0, import_react256.useCallback)(() => {
    togglePopoverActive();
    if (!selected) {
      onRemove?.(filterKey);
    }
  }, [onRemove, selected, filterKey, togglePopoverActive]);
  const handleClear = () => {
    if (onRemove)
      onRemove(filterKey);
    setPopoverActive(false);
  };
  const buttonClasses = classNames(styles93.FilterButton, selected && styles93.ActiveFilterButton, popoverActive && styles93.FocusFilterButton, focused && styles93.focusedFilterButton);
  const clearButtonClassNames = classNames(styles93.PlainButton, styles93.clearButton);
  const toggleButtonClassNames = classNames(styles93.PlainButton, styles93.ToggleButton);
  const disclosureMarkup = !selected ? /* @__PURE__ */ import_react256.default.createElement("div", {
    className: styles93.IconWrapper
  }, /* @__PURE__ */ import_react256.default.createElement(Icon, {
    source: SvgChevronDownIcon,
    tone: "base"
  })) : null;
  const labelMarkup = /* @__PURE__ */ import_react256.default.createElement(Box, {
    paddingInlineStart: unsavedChanges ? "0" : "050"
  }, /* @__PURE__ */ import_react256.default.createElement(InlineStack, null, /* @__PURE__ */ import_react256.default.createElement(Text, {
    variant: "bodySm",
    as: "span"
  }, label)));
  const unsavedPip = unsavedChanges ? /* @__PURE__ */ import_react256.default.createElement(Box, {
    paddingInlineEnd: "150"
  }, /* @__PURE__ */ import_react256.default.createElement(Box, {
    background: "bg-fill-emphasis",
    borderRadius: "050",
    width: "6px",
    minHeight: "6px"
  })) : null;
  const removeFilterButtonMarkup = selected ? /* @__PURE__ */ import_react256.default.createElement(UnstyledButton, {
    onClick: handleClear,
    className: clearButtonClassNames,
    type: "button",
    "aria-label": i18n.translate("Polaris.FilterPill.clear")
  }, /* @__PURE__ */ import_react256.default.createElement("div", {
    className: styles93.IconWrapper
  }, /* @__PURE__ */ import_react256.default.createElement(Icon, {
    source: SvgXSmallIcon,
    tone: "base"
  }))) : null;
  const activator = /* @__PURE__ */ import_react256.default.createElement("div", {
    className: buttonClasses
  }, /* @__PURE__ */ import_react256.default.createElement(InlineStack, {
    gap: "0",
    wrap: false
  }, /* @__PURE__ */ import_react256.default.createElement(UnstyledButton, {
    onFocus: setFocusedTrue,
    onBlur: setFocusedFalse,
    onClick: togglePopoverActive,
    className: toggleButtonClassNames,
    type: "button",
    accessibilityLabel: unsavedChanges ? i18n.translate("Polaris.FilterPill.unsavedChanges", {
      label
    }) : label
  }, /* @__PURE__ */ import_react256.default.createElement(InlineStack, {
    wrap: false,
    align: "center",
    blockAlign: "center",
    gap: "0"
  }, unsavedPip, labelMarkup, disclosureMarkup)), removeFilterButtonMarkup));
  const clearButtonMarkup = !hideClearButton && /* @__PURE__ */ import_react256.default.createElement("div", {
    className: styles93.ClearButtonWrapper
  }, /* @__PURE__ */ import_react256.default.createElement(Button, {
    onClick: handleClear,
    variant: "plain",
    disabled: !selected,
    textAlign: "left"
  }, i18n.translate("Polaris.FilterPill.clear")));
  if (disabled) {
    return null;
  }
  return /* @__PURE__ */ import_react256.default.createElement("div", {
    ref: elementRef
  }, /* @__PURE__ */ import_react256.default.createElement(Popover2, {
    active: popoverActive,
    activator,
    key: filterKey,
    onClose: handlePopoverClose,
    preferredAlignment: "left",
    preventCloseOnChildOverlayClick: !closeOnChildOverlayClick
  }, /* @__PURE__ */ import_react256.default.createElement("div", {
    className: styles93.PopoverWrapper
  }, /* @__PURE__ */ import_react256.default.createElement(Popover2.Section, null, /* @__PURE__ */ import_react256.default.createElement(BlockStack, {
    gap: "100"
  }, filter, clearButtonMarkup)))));
}
var import_react256;
var init_FilterPill = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Filters/components/FilterPill/FilterPill.js"() {
    import_react256 = __toESM(require_react());
    init_dist();
    init_use_toggle();
    init_css();
    init_FilterPill_css();
    init_hooks2();
    init_Icon();
    init_UnstyledButton();
    init_InlineStack();
    init_Button();
    init_Popover();
    init_BlockStack();
    init_Box();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Filters/components/FiltersBar/FiltersBar.js
function FiltersBar({
  filters,
  appliedFilters,
  onClearAll,
  disabled,
  hideQueryField,
  disableFilters,
  mountedStateStyles,
  onAddFilterClick,
  closeOnChildOverlayClick,
  children
}) {
  const i18n = useI18n();
  const [popoverActive, setPopoverActive] = (0, import_react257.useState)(false);
  const hasMounted = (0, import_react257.useRef)(false);
  (0, import_react257.useEffect)(() => {
    hasMounted.current = true;
  });
  const togglePopoverActive = () => setPopoverActive((popoverActive2) => !popoverActive2);
  const handleAddFilterClick = () => {
    onAddFilterClick?.();
    togglePopoverActive();
  };
  const appliedFilterKeys = appliedFilters?.map(({
    key
  }) => key);
  const pinnedFromPropsKeys = filters.filter(({
    pinned
  }) => pinned).map(({
    key
  }) => key);
  const pinnedFiltersFromPropsAndAppliedFilters = filters.filter(({
    pinned,
    key
  }) => {
    const isPinnedOrApplied = Boolean(pinned) || appliedFilterKeys?.includes(key);
    return isPinnedOrApplied;
  });
  const [localPinnedFilters, setLocalPinnedFilters] = (0, import_react257.useState)(pinnedFiltersFromPropsAndAppliedFilters.map(({
    key
  }) => key));
  useOnValueChange(filters.length, () => {
    setLocalPinnedFilters(pinnedFiltersFromPropsAndAppliedFilters.map(({
      key
    }) => key));
  });
  const pinnedFilters = localPinnedFilters.map((key) => filters.find((filter) => filter.key === key)).reduce((acc, filter) => filter ? [...acc, filter] : acc, []);
  const onFilterClick = ({
    key,
    onAction
  }) => () => {
    setTimeout(() => {
      setLocalPinnedFilters((currentLocalPinnedFilters) => [.../* @__PURE__ */ new Set([...currentLocalPinnedFilters, key])]);
      onAction?.();
      togglePopoverActive();
    }, 0);
  };
  const filterToActionItem = (filter) => ({
    ...filter,
    content: filter.label,
    onAction: onFilterClick(filter)
  });
  const unpinnedFilters = filters.filter((filter) => !pinnedFilters.some(({
    key
  }) => key === filter.key));
  const unsectionedFilters = unpinnedFilters.filter((filter) => !filter.section && !filter.hidden).map(filterToActionItem);
  const sectionedFilters = unpinnedFilters.filter((filter) => filter.section).reduce((acc, filter) => {
    const filterActionItem = filterToActionItem(filter);
    const sectionIndex = acc.findIndex((section) => section.title === filter.section);
    if (sectionIndex === -1) {
      acc.push({
        title: filter.section,
        items: [filterActionItem]
      });
    } else {
      acc[sectionIndex].items.push(filterActionItem);
    }
    return acc;
  }, []);
  const hasOneOrMorePinnedFilters = pinnedFilters.length >= 1;
  const addFilterActivator = /* @__PURE__ */ import_react257.default.createElement("div", null, /* @__PURE__ */ import_react257.default.createElement(UnstyledButton, {
    type: "button",
    className: styles92.AddFilter,
    onClick: handleAddFilterClick,
    "aria-label": i18n.translate("Polaris.Filters.addFilter"),
    disabled: disabled || unsectionedFilters.length === 0 && sectionedFilters.length === 0 || disableFilters
  }, /* @__PURE__ */ import_react257.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    tone: disabled ? "disabled" : "base"
  }, i18n.translate("Polaris.Filters.addFilter"), " "), /* @__PURE__ */ import_react257.default.createElement(SvgPlusIcon, null)));
  const handleClearAllFilters = () => {
    setLocalPinnedFilters(pinnedFromPropsKeys);
    onClearAll?.();
  };
  const shouldShowAddButton = filters.some((filter) => !filter.pinned) || filters.length !== localPinnedFilters.length;
  const pinnedFiltersMarkup = pinnedFilters.map(({
    key: filterKey,
    ...pinnedFilter
  }) => {
    const appliedFilter = appliedFilters?.find(({
      key
    }) => key === filterKey);
    const handleFilterPillRemove = () => {
      setLocalPinnedFilters((currentLocalPinnedFilters) => currentLocalPinnedFilters.filter((key) => {
        const isMatchedFilters = key === filterKey;
        const isPinnedFilterFromProps = pinnedFromPropsKeys.includes(key);
        return !isMatchedFilters || isPinnedFilterFromProps;
      }));
      appliedFilter?.onRemove(filterKey);
    };
    return /* @__PURE__ */ import_react257.default.createElement(FilterPill, Object.assign({
      key: filterKey
    }, pinnedFilter, {
      initialActive: hasMounted.current && !pinnedFilter.pinned && !appliedFilter,
      unsavedChanges: appliedFilter?.unsavedChanges,
      label: appliedFilter?.label || pinnedFilter.label,
      filterKey,
      selected: appliedFilterKeys?.includes(filterKey),
      onRemove: handleFilterPillRemove,
      disabled: pinnedFilter.disabled || disableFilters,
      closeOnChildOverlayClick
    }));
  });
  const addButton = shouldShowAddButton ? /* @__PURE__ */ import_react257.default.createElement("div", {
    className: classNames(styles92.AddFilterActivator, hasOneOrMorePinnedFilters && styles92.AddFilterActivatorMultiple)
  }, /* @__PURE__ */ import_react257.default.createElement(Popover2, {
    active: popoverActive && !disabled,
    activator: addFilterActivator,
    onClose: togglePopoverActive
  }, /* @__PURE__ */ import_react257.default.createElement(ActionList, {
    actionRole: "menuitem",
    items: unsectionedFilters,
    sections: sectionedFilters
  }))) : null;
  const clearAllMarkup = appliedFilters?.length ? /* @__PURE__ */ import_react257.default.createElement("div", {
    className: classNames(styles92.ClearAll, hasOneOrMorePinnedFilters && shouldShowAddButton && styles92.MultiplePinnedFilterClearAll)
  }, /* @__PURE__ */ import_react257.default.createElement(Button, {
    size: "micro",
    onClick: handleClearAllFilters,
    variant: "monochromePlain"
  }, i18n.translate("Polaris.Filters.clearFilters"))) : null;
  return /* @__PURE__ */ import_react257.default.createElement("div", {
    className: classNames(styles92.FiltersWrapper, shouldShowAddButton && hasOneOrMorePinnedFilters && styles92.FiltersWrapperWithAddButton),
    "aria-live": "polite",
    style: mountedStateStyles
  }, /* @__PURE__ */ import_react257.default.createElement("div", {
    className: classNames(styles92.FiltersInner)
  }, /* @__PURE__ */ import_react257.default.createElement("div", {
    className: classNames(styles92.FiltersStickyArea)
  }, pinnedFiltersMarkup, addButton, clearAllMarkup)), hideQueryField ? /* @__PURE__ */ import_react257.default.createElement(Box, {
    paddingInlineEnd: "300",
    paddingBlockStart: "200",
    paddingBlockEnd: "200"
  }, /* @__PURE__ */ import_react257.default.createElement(InlineStack, {
    align: "start",
    blockAlign: "center",
    gap: {
      xs: "400",
      md: "300"
    }
  }, children)) : null);
}
var import_react257;
var init_FiltersBar = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Filters/components/FiltersBar/FiltersBar.js"() {
    import_react257 = __toESM(require_react());
    init_dist();
    init_use_on_value_change();
    init_css();
    init_Filters_css();
    init_FilterPill();
    init_hooks2();
    init_UnstyledButton();
    init_Text();
    init_Popover();
    init_ActionList();
    init_Button();
    init_Box();
    init_InlineStack();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Filters/Filters.js
function Filters({
  queryValue,
  queryPlaceholder,
  focused,
  filters,
  appliedFilters,
  onQueryChange,
  onQueryClear,
  onQueryBlur,
  onQueryFocus,
  onClearAll,
  children,
  disabled,
  hideFilters,
  hideQueryField,
  disableQueryField,
  borderlessQueryField,
  loading,
  disableFilters,
  mountedState,
  onAddFilterClick,
  closeOnChildOverlayClick,
  selectedViewName
}) {
  const hideFilterBar = hideFilters || filters.length === 0;
  const queryFieldMarkup = hideQueryField ? null : /* @__PURE__ */ import_react258.default.createElement("div", {
    className: styles92.Container
  }, /* @__PURE__ */ import_react258.default.createElement(Box, {
    padding: "200"
  }, /* @__PURE__ */ import_react258.default.createElement(InlineStack, {
    align: "start",
    blockAlign: "center",
    gap: {
      xs: "400",
      md: "300"
    }
  }, /* @__PURE__ */ import_react258.default.createElement("div", {
    className: styles92.SearchField,
    style: mountedState ? {
      ...defaultStyle,
      ...transitionStyles[mountedState]
    } : void 0
  }, /* @__PURE__ */ import_react258.default.createElement(SearchField, {
    onChange: onQueryChange,
    onFocus: onQueryFocus,
    onBlur: onQueryBlur,
    onClear: onQueryClear,
    value: queryValue,
    placeholder: queryPlaceholder,
    focused,
    disabled: disabled || disableQueryField,
    borderlessQueryField,
    loading,
    selectedViewName
  })), children)));
  const mountedStateStyles = mountedState && !hideQueryField ? {
    ...defaultFilterStyles,
    ...transitionFilterStyles[mountedState]
  } : void 0;
  const filtersMarkup = hideFilterBar ? null : /* @__PURE__ */ import_react258.default.createElement(FiltersBar, {
    filters,
    appliedFilters,
    onClearAll,
    disabled,
    hideQueryField,
    disableFilters,
    onAddFilterClick,
    closeOnChildOverlayClick,
    mountedStateStyles
  }, children);
  return /* @__PURE__ */ import_react258.default.createElement("div", {
    className: classNames(styles92.Filters, hideQueryField && styles92.hideQueryField)
  }, queryFieldMarkup, filtersMarkup);
}
var import_react258, TRANSITION_DURATION, TRANSITION_MARGIN, defaultStyle, transitionStyles, defaultFilterStyles, transitionFilterStyles;
var init_Filters = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Filters/Filters.js"() {
    import_react258 = __toESM(require_react());
    init_css();
    init_Filters_css();
    init_SearchField();
    init_FiltersBar();
    init_Box();
    init_InlineStack();
    TRANSITION_DURATION = "var(--p-motion-duration-150)";
    TRANSITION_MARGIN = "-36px";
    defaultStyle = {
      transition: `opacity ${TRANSITION_DURATION} var(--p-motion-ease)`,
      opacity: 0
    };
    transitionStyles = {
      entering: {
        opacity: 1
      },
      entered: {
        opacity: 1
      },
      exiting: {
        opacity: 0
      },
      exited: {
        opacity: 0
      },
      unmounted: {
        opacity: 0
      }
    };
    defaultFilterStyles = {
      transition: `opacity ${TRANSITION_DURATION} var(--p-motion-ease), margin ${TRANSITION_DURATION} var(--p-motion-ease)`,
      opacity: 0,
      marginTop: TRANSITION_MARGIN
    };
    transitionFilterStyles = {
      entering: {
        opacity: 1,
        marginTop: 0
      },
      entered: {
        opacity: 1,
        marginTop: 0
      },
      exiting: {
        opacity: 0,
        marginTop: TRANSITION_MARGIN
      },
      exited: {
        opacity: 0,
        marginTop: TRANSITION_MARGIN
      },
      unmounted: {
        opacity: 0,
        marginTop: TRANSITION_MARGIN
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.css.js
var styles94;
var init_FooterHelp_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.css.js"() {
    styles94 = {
      "FooterHelp": "Polaris-FooterHelp"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.js
function FooterHelp({
  children,
  align = "center"
}) {
  const style = {
    "--pc-footer-help-align": align
  };
  return /* @__PURE__ */ import_react259.default.createElement("div", {
    className: styles94.FooterHelp,
    style
  }, /* @__PURE__ */ import_react259.default.createElement(Text, {
    as: "p",
    variant: "bodyLg"
  }, children));
}
var import_react259;
var init_FooterHelp = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FooterHelp/FooterHelp.js"() {
    import_react259 = __toESM(require_react());
    init_FooterHelp_css();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Form/Form.js
function Form({
  acceptCharset,
  action,
  autoComplete,
  children,
  encType,
  implicitSubmit = true,
  method = "post",
  name,
  noValidate,
  preventDefault: preventDefault2 = true,
  target,
  onSubmit
}) {
  const i18n = useI18n();
  const handleSubmit = (0, import_react260.useCallback)((event) => {
    if (!preventDefault2) {
      return;
    }
    event.preventDefault();
    onSubmit(event);
  }, [onSubmit, preventDefault2]);
  const autoCompleteInputs = normalizeAutoComplete(autoComplete);
  const submitMarkup = implicitSubmit ? /* @__PURE__ */ import_react260.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, /* @__PURE__ */ import_react260.default.createElement("button", {
    type: "submit",
    "aria-hidden": "true",
    tabIndex: -1
  }, i18n.translate("Polaris.Common.submit"))) : null;
  return /* @__PURE__ */ import_react260.default.createElement("form", {
    acceptCharset,
    action,
    autoComplete: autoCompleteInputs,
    encType,
    method,
    name,
    noValidate,
    target,
    onSubmit: handleSubmit
  }, submitMarkup, children);
}
function normalizeAutoComplete(autoComplete) {
  if (autoComplete == null) {
    return autoComplete;
  }
  return autoComplete ? "on" : "off";
}
var import_react260;
var init_Form = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Form/Form.js"() {
    import_react260 = __toESM(require_react());
    init_hooks2();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.css.js
var styles95;
var init_FullscreenBar_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.css.js"() {
    styles95 = {
      "FullscreenBar": "Polaris-FullscreenBar",
      "BackAction": "Polaris-FullscreenBar__BackAction"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.js
function FullscreenBar({
  onAction,
  children
}) {
  const i18n = useI18n();
  const backButtonMarkup = /* @__PURE__ */ import_react261.default.createElement(Text, {
    as: "span",
    variant: "bodyLg"
  }, i18n.translate("Polaris.FullscreenBar.back"));
  return /* @__PURE__ */ import_react261.default.createElement("div", {
    className: styles95.FullscreenBar
  }, /* @__PURE__ */ import_react261.default.createElement("button", {
    className: styles95.BackAction,
    onClick: onAction,
    "aria-label": i18n.translate("Polaris.FullscreenBar.accessibilityLabel")
  }, /* @__PURE__ */ import_react261.default.createElement(Icon, {
    source: SvgExitIcon
  }), backButtonMarkup), children);
}
var import_react261;
var init_FullscreenBar = __esm({
  "node_modules/@shopify/polaris/build/esm/components/FullscreenBar/FullscreenBar.js"() {
    import_react261 = __toESM(require_react());
    init_dist();
    init_FullscreenBar_css();
    init_hooks2();
    init_Text();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Grid/Grid.css.js
var styles96;
var init_Grid_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Grid/Grid.css.js"() {
    styles96 = {
      "Grid": "Polaris-Grid"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.css.js
var styles97;
var init_Cell_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.css.js"() {
    styles97 = {
      "Cell": "Polaris-Grid-Cell",
      "Cell-1-column-xs": "Polaris-Grid-Cell--cell_1ColumnXs",
      "Cell-2-column-xs": "Polaris-Grid-Cell--cell_2ColumnXs",
      "Cell-3-column-xs": "Polaris-Grid-Cell--cell_3ColumnXs",
      "Cell-4-column-xs": "Polaris-Grid-Cell--cell_4ColumnXs",
      "Cell-5-column-xs": "Polaris-Grid-Cell--cell_5ColumnXs",
      "Cell-6-column-xs": "Polaris-Grid-Cell--cell_6ColumnXs",
      "Cell-1-column-sm": "Polaris-Grid-Cell--cell_1ColumnSm",
      "Cell-2-column-sm": "Polaris-Grid-Cell--cell_2ColumnSm",
      "Cell-3-column-sm": "Polaris-Grid-Cell--cell_3ColumnSm",
      "Cell-4-column-sm": "Polaris-Grid-Cell--cell_4ColumnSm",
      "Cell-5-column-sm": "Polaris-Grid-Cell--cell_5ColumnSm",
      "Cell-6-column-sm": "Polaris-Grid-Cell--cell_6ColumnSm",
      "Cell-1-column-md": "Polaris-Grid-Cell--cell_1ColumnMd",
      "Cell-2-column-md": "Polaris-Grid-Cell--cell_2ColumnMd",
      "Cell-3-column-md": "Polaris-Grid-Cell--cell_3ColumnMd",
      "Cell-4-column-md": "Polaris-Grid-Cell--cell_4ColumnMd",
      "Cell-5-column-md": "Polaris-Grid-Cell--cell_5ColumnMd",
      "Cell-6-column-md": "Polaris-Grid-Cell--cell_6ColumnMd",
      "Cell-1-column-lg": "Polaris-Grid-Cell--cell_1ColumnLg",
      "Cell-2-column-lg": "Polaris-Grid-Cell--cell_2ColumnLg",
      "Cell-3-column-lg": "Polaris-Grid-Cell--cell_3ColumnLg",
      "Cell-4-column-lg": "Polaris-Grid-Cell--cell_4ColumnLg",
      "Cell-5-column-lg": "Polaris-Grid-Cell--cell_5ColumnLg",
      "Cell-6-column-lg": "Polaris-Grid-Cell--cell_6ColumnLg",
      "Cell-7-column-lg": "Polaris-Grid-Cell--cell_7ColumnLg",
      "Cell-8-column-lg": "Polaris-Grid-Cell--cell_8ColumnLg",
      "Cell-9-column-lg": "Polaris-Grid-Cell--cell_9ColumnLg",
      "Cell-10-column-lg": "Polaris-Grid-Cell--cell_10ColumnLg",
      "Cell-11-column-lg": "Polaris-Grid-Cell--cell_11ColumnLg",
      "Cell-12-column-lg": "Polaris-Grid-Cell--cell_12ColumnLg",
      "Cell-1-column-xl": "Polaris-Grid-Cell--cell_1ColumnXl",
      "Cell-2-column-xl": "Polaris-Grid-Cell--cell_2ColumnXl",
      "Cell-3-column-xl": "Polaris-Grid-Cell--cell_3ColumnXl",
      "Cell-4-column-xl": "Polaris-Grid-Cell--cell_4ColumnXl",
      "Cell-5-column-xl": "Polaris-Grid-Cell--cell_5ColumnXl",
      "Cell-6-column-xl": "Polaris-Grid-Cell--cell_6ColumnXl",
      "Cell-7-column-xl": "Polaris-Grid-Cell--cell_7ColumnXl",
      "Cell-8-column-xl": "Polaris-Grid-Cell--cell_8ColumnXl",
      "Cell-9-column-xl": "Polaris-Grid-Cell--cell_9ColumnXl",
      "Cell-10-column-xl": "Polaris-Grid-Cell--cell_10ColumnXl",
      "Cell-11-column-xl": "Polaris-Grid-Cell--cell_11ColumnXl",
      "Cell-12-column-xl": "Polaris-Grid-Cell--cell_12ColumnXl"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.js
function Cell4({
  area: gridArea,
  column,
  columnSpan,
  row,
  children
}) {
  const className = classNames(styles97.Cell, columnSpan?.xs && styles97[`Cell-${columnSpan.xs}-column-xs`], columnSpan?.sm && styles97[`Cell-${columnSpan.sm}-column-sm`], columnSpan?.md && styles97[`Cell-${columnSpan.md}-column-md`], columnSpan?.lg && styles97[`Cell-${columnSpan.lg}-column-lg`], columnSpan?.xl && styles97[`Cell-${columnSpan.xl}-column-xl`]);
  const style = {
    gridArea,
    "--pc-column-xs": column?.xs,
    "--pc-column-sm": column?.sm,
    "--pc-column-md": column?.md,
    "--pc-column-lg": column?.lg,
    "--pc-column-xl": column?.xl,
    "--pc-row-xs": row?.xs,
    "--pc-row-sm": row?.sm,
    "--pc-row-md": row?.md,
    "--pc-row-lg": row?.lg,
    "--pc-row-xl": row?.xl
  };
  return /* @__PURE__ */ import_react262.default.createElement("div", {
    className,
    style
  }, children);
}
var import_react262;
var init_Cell3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Grid/components/Cell/Cell.js"() {
    import_react262 = __toESM(require_react());
    init_css();
    init_Cell_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Grid/Grid.js
function formatAreas(areas) {
  if (!areas)
    return;
  return `'${areas?.join(`' '`)}'`;
}
var import_react263, Grid;
var init_Grid = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Grid/Grid.js"() {
    import_react263 = __toESM(require_react());
    init_Grid_css();
    init_Cell3();
    Grid = function Grid2({
      gap,
      areas,
      children,
      columns
    }) {
      const style = {
        "--pc-grid-gap-xs": gap?.xs,
        "--pc-grid-gap-sm": gap?.sm,
        "--pc-grid-gap-md": gap?.md,
        "--pc-grid-gap-lg": gap?.lg,
        "--pc-grid-gap-xl": gap?.xl,
        "--pc-grid-columns-xs": columns?.xs,
        "--pc-grid-columns-sm": columns?.sm,
        "--pc-grid-columns-md": columns?.md,
        "--pc-grid-columns-lg": columns?.lg,
        "--pc-grid-columns-xl": columns?.xl,
        "--pc-grid-areas-xs": formatAreas(areas?.xs),
        "--pc-grid-areas-sm": formatAreas(areas?.sm),
        "--pc-grid-areas-md": formatAreas(areas?.md),
        "--pc-grid-areas-lg": formatAreas(areas?.lg),
        "--pc-grid-areas-xl": formatAreas(areas?.xl)
      };
      return /* @__PURE__ */ import_react263.default.createElement("div", {
        className: styles96.Grid,
        style
      }, children);
    };
    Grid.Cell = Cell4;
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/types.js
var IndexFiltersMode;
var init_types5 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/types.js"() {
    (function(IndexFiltersMode2) {
      IndexFiltersMode2["Default"] = "DEFAULT";
      IndexFiltersMode2["Filtering"] = "FILTERING";
      IndexFiltersMode2["EditingColumns"] = "EDITING_COLUMNS";
    })(IndexFiltersMode || (IndexFiltersMode = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.css.js
var styles98;
var init_IndexFilters_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.css.js"() {
    styles98 = {
      "IndexFiltersWrapper": "Polaris-IndexFilters__IndexFiltersWrapper",
      "IndexFilters": "Polaris-IndexFilters",
      "IndexFiltersSticky": "Polaris-IndexFilters__IndexFiltersSticky",
      "IndexFiltersStickyFlush": "Polaris-IndexFilters__IndexFiltersStickyFlush",
      "TabsWrapper": "Polaris-IndexFilters__TabsWrapper",
      "SmallScreenTabsWrapper": "Polaris-IndexFilters__SmallScreenTabsWrapper",
      "TabsWrapperLoading": "Polaris-IndexFilters__TabsWrapperLoading",
      "DesktopLoading": "Polaris-IndexFilters__DesktopLoading",
      "TabsLoading": "Polaris-IndexFilters__TabsLoading",
      "ActionWrap": "Polaris-IndexFilters__ActionWrap",
      "Spinner": "Polaris-IndexFilters__Spinner",
      "ButtonWrap": "Polaris-IndexFilters__ButtonWrap"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/hooks/useIsSticky/useIsSticky.js
function useIsSticky(mode, disabled, isFlushWhenSticky) {
  const hasIOSupport = typeof window !== "undefined" && Boolean(window.IntersectionObserver);
  const options = {
    root: null,
    rootMargin: `${isFlushWhenSticky ? "0px" : "-56px"} 0px 0px 0px`,
    threshold: 0
  };
  const [indexFilteringHeight, setIndexFiltersHeight] = (0, import_react264.useState)(0);
  const [isSticky, setIsSticky] = (0, import_react264.useState)(false);
  const measurerRef = (0, import_react264.useRef)(null);
  const intersectionRef = (0, import_react264.useRef)(null);
  const handleIntersect = (entries) => {
    entries.forEach((entry) => {
      setIsSticky(!entry.isIntersecting);
    });
  };
  const observerRef = (0, import_react264.useRef)(hasIOSupport ? new IntersectionObserver(handleIntersect, options) : null);
  (0, import_react264.useEffect)(() => {
    function computeDimensions() {
      const node = measurerRef.current;
      if (!node) {
        return {
          height: 0
        };
      }
      const box = node.getBoundingClientRect();
      const height2 = box.height;
      setIndexFiltersHeight(height2);
    }
    computeDimensions();
    const debouncedComputeDimensions = debounce(computeDimensions, DEBOUNCE_PERIOD, {
      trailing: true
    });
    window.addEventListener("resize", debouncedComputeDimensions);
    return () => window.removeEventListener("resize", debouncedComputeDimensions);
  }, [measurerRef, mode]);
  (0, import_react264.useEffect)(() => {
    const observer = observerRef.current;
    if (!observer) {
      return;
    }
    const node = intersectionRef.current;
    if (node) {
      observer.observe(node);
    }
    return () => {
      observer?.disconnect();
    };
  }, [intersectionRef]);
  return {
    intersectionRef,
    measurerRef,
    isSticky: isSticky && !disabled,
    indexFilteringHeight
  };
}
var import_react264, DEBOUNCE_PERIOD;
var init_useIsSticky = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/hooks/useIsSticky/useIsSticky.js"() {
    import_react264 = __toESM(require_react());
    init_debounce();
    DEBOUNCE_PERIOD = 250;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-is-touch-device.js
function useIsTouchDevice() {
  const [isTouchDevice, setIsTouchDevice] = (0, import_react265.useState)(false);
  const handleTouchStart = (0, import_react265.useCallback)(() => setIsTouchDevice(true), []);
  useEventListener("touchstart", handleTouchStart);
  return isTouchDevice;
}
var import_react265;
var init_use_is_touch_device = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-is-touch-device.js"() {
    import_react265 = __toESM(require_react());
    init_use_event_listener();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/UpdateButtons/UpdateButtons.js
function UpdateButtons({
  primaryAction,
  cancelAction,
  viewNames,
  disabled
}) {
  const i18n = useI18n();
  const [savedViewName, setSavedViewName] = (0, import_react266.useState)("");
  const [savedViewModalOpen, setSavedViewModalOpen] = (0, import_react266.useState)(false);
  const container = (0, import_react266.useRef)(null);
  const isTouchDevice = useIsTouchDevice();
  (0, import_react266.useEffect)(() => {
    if (!container.current || isTouchDevice)
      return;
    if (savedViewModalOpen) {
      focusFirstFocusableNode(container.current);
    }
  }, [savedViewModalOpen, isTouchDevice]);
  async function handleClickSaveButton() {
    if (primaryAction?.type === "save-as") {
      handleOpenModal();
    } else {
      await primaryAction?.onAction("");
    }
  }
  function handleOpenModal() {
    setSavedViewModalOpen(true);
  }
  function handleCloseModal() {
    setSavedViewModalOpen(false);
  }
  function handleChange(value) {
    setSavedViewName(value);
  }
  async function handlePrimaryAction() {
    if (isPrimaryActionDisabled)
      return;
    await primaryAction?.onAction(savedViewName);
    handleCloseModal();
  }
  const buttonText = (0, import_react266.useMemo)(() => {
    switch (primaryAction?.type) {
      case "save":
        return i18n.translate("Polaris.IndexFilters.UpdateButtons.save");
      case "save-as":
      default:
        return i18n.translate("Polaris.IndexFilters.UpdateButtons.saveAs");
    }
  }, [primaryAction?.type, i18n]);
  const saveButton = /* @__PURE__ */ import_react266.default.createElement(Button, {
    size: "micro",
    onClick: handleClickSaveButton,
    disabled: primaryAction?.disabled || disabled
  }, buttonText);
  const hasSameNameError = viewNames.some((name) => name.trim().toLowerCase() === savedViewName.trim().toLowerCase());
  const isPrimaryActionDisabled = hasSameNameError || !savedViewName || primaryAction?.loading || savedViewName.length > MAX_VIEW_NAME_LENGTH;
  const cancelButtonMarkup = cancelAction ? /* @__PURE__ */ import_react266.default.createElement(Button, {
    variant: "tertiary",
    size: "micro",
    onClick: cancelAction.onAction,
    disabled
  }, i18n.translate("Polaris.IndexFilters.UpdateButtons.cancel")) : null;
  if (!primaryAction) {
    return cancelButtonMarkup;
  }
  return /* @__PURE__ */ import_react266.default.createElement(InlineStack, {
    align: "start",
    blockAlign: "center",
    gap: "100"
  }, cancelButtonMarkup, primaryAction.type === "save-as" ? /* @__PURE__ */ import_react266.default.createElement(Modal, {
    activator: /* @__PURE__ */ import_react266.default.createElement(InlineStack, null, saveButton),
    open: savedViewModalOpen,
    title: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.title"),
    onClose: handleCloseModal,
    primaryAction: {
      onAction: handlePrimaryAction,
      content: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.save"),
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      onAction: handleCloseModal,
      content: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.cancel")
    }]
  }, /* @__PURE__ */ import_react266.default.createElement(Modal.Section, null, /* @__PURE__ */ import_react266.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, /* @__PURE__ */ import_react266.default.createElement(FormLayout, null, /* @__PURE__ */ import_react266.default.createElement("div", {
    ref: container
  }, /* @__PURE__ */ import_react266.default.createElement(TextField, {
    label: i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.label"),
    value: savedViewName,
    onChange: handleChange,
    autoComplete: "off",
    maxLength: MAX_VIEW_NAME_LENGTH,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.IndexFilters.UpdateButtons.modal.sameName", {
      name: savedViewName
    }) : void 0
  })))))) : saveButton);
}
var import_react266, MAX_VIEW_NAME_LENGTH;
var init_UpdateButtons = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/UpdateButtons/UpdateButtons.js"() {
    import_react266 = __toESM(require_react());
    init_focus();
    init_use_is_touch_device();
    init_hooks2();
    init_Button();
    init_InlineStack();
    init_Modal();
    init_Form();
    init_FormLayout();
    init_TextField();
    MAX_VIEW_NAME_LENGTH = 40;
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.css.js
var styles99;
var init_DirectionButton_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.css.js"() {
    styles99 = {
      "DirectionButton": "Polaris-SortButton-DirectionButton",
      "DirectionButton-active": "Polaris-SortButton-DirectionButton__DirectionButton--active"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.js
function DirectionButton({
  onClick,
  active,
  children,
  direction,
  value
}) {
  const classes = classNames(styles99.DirectionButton, active && styles99["DirectionButton-active"]);
  function handleClick() {
    onClick([value]);
  }
  return /* @__PURE__ */ import_react267.default.createElement(UnstyledButton, {
    className: classes,
    onClick: handleClick
  }, /* @__PURE__ */ import_react267.default.createElement(Icon, {
    source: direction === "asc" ? SvgArrowUpIcon : SvgArrowDownIcon,
    tone: "base"
  }), /* @__PURE__ */ import_react267.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    fontWeight: "medium"
  }, children));
}
var import_react267;
var init_DirectionButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/components/DirectionButton/DirectionButton.js"() {
    import_react267 = __toESM(require_react());
    init_dist();
    init_css();
    init_DirectionButton_css();
    init_UnstyledButton();
    init_Icon();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/SortButton.js
function SortButton({
  choices,
  selected,
  onChange,
  disabled,
  onChangeKey,
  onChangeDirection
}) {
  const i18n = useI18n();
  const [active, setActive] = (0, import_react268.useState)(false);
  const [selectedValueKey, selectedDirection] = selected[0].split(" ");
  function handleClick() {
    setActive((pastActive) => !pastActive);
  }
  function handleClose() {
    setActive(false);
  }
  function handleChangeChoiceList(sel) {
    if (onChangeKey) {
      const [key] = sel[0].split(" ");
      onChangeKey(key);
    } else {
      onChange(sel);
    }
  }
  function handleChangeDirection(sel) {
    if (onChangeDirection) {
      const [, direction] = sel[0].split(" ");
      onChangeDirection(direction);
    } else {
      onChange(sel);
    }
  }
  const choiceListChoices = (0, import_react268.useMemo)(() => {
    const choiceCategories = choices.reduce((acc, curr) => {
      const alreadyExists = acc.some((option) => option.label === curr.label);
      const [, currentValueDirection] = curr.value.split(" ");
      const isSameDirection = currentValueDirection === selectedDirection;
      if (!alreadyExists) {
        return [...acc, curr];
      }
      if (isSameDirection) {
        return acc.map((option) => {
          if (option.label === curr.label) {
            return curr;
          }
          return option;
        });
      }
      return acc;
    }, []);
    return choiceCategories;
  }, [choices, selectedDirection]);
  const selectedChoices = choices.filter((choice) => {
    const [currentKey] = choice.value.split(" ");
    return currentKey === selectedValueKey;
  });
  const sortButton = /* @__PURE__ */ import_react268.default.createElement(Tooltip, {
    content: i18n.translate("Polaris.IndexFilters.SortButton.tooltip"),
    preferredPosition: "above",
    hoverDelay: 400
  }, /* @__PURE__ */ import_react268.default.createElement(Button, {
    size: "slim",
    icon: SvgSortIcon,
    onClick: handleClick,
    disabled,
    accessibilityLabel: i18n.translate("Polaris.IndexFilters.SortButton.ariaLabel")
  }));
  return /* @__PURE__ */ import_react268.default.createElement(Popover2, {
    active: active && !disabled,
    activator: sortButton,
    autofocusTarget: "first-node",
    onClose: handleClose,
    preferredAlignment: "right",
    fluidContent: true
  }, /* @__PURE__ */ import_react268.default.createElement(Box, {
    minWidth: "148px",
    paddingInlineStart: "300",
    paddingInlineEnd: "300",
    paddingBlockStart: "200",
    paddingBlockEnd: "200",
    borderBlockEndWidth: "025",
    borderColor: "border-secondary"
  }, /* @__PURE__ */ import_react268.default.createElement(ChoiceList, {
    title: i18n.translate("Polaris.IndexFilters.SortButton.title"),
    choices: choiceListChoices,
    selected,
    onChange: handleChangeChoiceList
  })), /* @__PURE__ */ import_react268.default.createElement(Box, {
    paddingInlineStart: "150",
    paddingInlineEnd: "150",
    paddingBlockStart: "200",
    paddingBlockEnd: "200"
  }, /* @__PURE__ */ import_react268.default.createElement(DirectionButton, {
    direction: "asc",
    active: selectedDirection === SortButtonDirection.Asc,
    onClick: handleChangeDirection,
    value: selectedChoices?.[0]?.value
  }, selectedChoices?.[0]?.directionLabel), /* @__PURE__ */ import_react268.default.createElement(DirectionButton, {
    direction: "desc",
    active: selectedDirection === SortButtonDirection.Desc,
    onClick: handleChangeDirection,
    value: selectedChoices?.[1]?.value
  }, selectedChoices?.[1]?.directionLabel)));
}
var import_react268, SortButtonDirection;
var init_SortButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SortButton/SortButton.js"() {
    import_react268 = __toESM(require_react());
    init_dist();
    init_ChoiceList();
    init_DirectionButton();
    init_hooks2();
    init_Tooltip();
    init_Button();
    init_Popover();
    init_Box();
    (function(SortButtonDirection2) {
      SortButtonDirection2["Asc"] = "asc";
      SortButtonDirection2["Desc"] = "desc";
    })(SortButtonDirection || (SortButtonDirection = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.css.js
var styles100;
var init_Container_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.css.js"() {
    styles100 = {
      "Container": "Polaris-IndexFilters-Container"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.js
var import_react269, Container;
var init_Container = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/Container/Container.js"() {
    import_react269 = __toESM(require_react());
    init_Container_css();
    Container = ({
      children
    }) => {
      return /* @__PURE__ */ import_react269.default.createElement("div", {
        className: styles100.Container
      }, children);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/use-previous.js
function usePrevious(value) {
  const ref = (0, import_react270.useRef)();
  (0, import_react270.useEffect)(() => {
    ref.current = value;
  }, [value]);
  return ref.current;
}
var import_react270;
var init_use_previous = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/use-previous.js"() {
    import_react270 = __toESM(require_react());
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/utilities.js
function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {
  const sumTabWidths = tabWidths.reduce((sum, width2) => sum + width2, 0);
  const arrayOfTabIndices = tabs.map((_, index) => {
    return index;
  });
  const visibleTabs = [];
  const hiddenTabs = [];
  if (containerWidth > sumTabWidths) {
    visibleTabs.push(...arrayOfTabIndices);
  } else {
    visibleTabs.push(selected);
    let tabListWidth = tabWidths[selected];
    arrayOfTabIndices.forEach((currentTabIndex) => {
      if (currentTabIndex !== selected) {
        const currentTabWidth = tabWidths[currentTabIndex];
        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {
          hiddenTabs.push(currentTabIndex);
          return;
        }
        visibleTabs.push(currentTabIndex);
        tabListWidth += currentTabWidth;
      }
    });
  }
  return {
    visibleTabs,
    hiddenTabs
  };
}
var init_utilities10 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.css.js
var styles101;
var init_Tabs_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.css.js"() {
    styles101 = {
      "Outer": "Polaris-Tabs__Outer",
      "Wrapper": "Polaris-Tabs__Wrapper",
      "WrapperWithNewButton": "Polaris-Tabs__WrapperWithNewButton",
      "ButtonWrapper": "Polaris-Tabs__ButtonWrapper",
      "Tabs": "Polaris-Tabs",
      "Tab": "Polaris-Tabs__Tab",
      "Tab-active": "Polaris-Tabs__Tab--active",
      "Tab-hasActions": "Polaris-Tabs__Tab--hasActions",
      "Tab-iconOnly": "Polaris-Tabs__Tab--iconOnly",
      "fillSpace": "Polaris-Tabs--fillSpace",
      "TabContainer": "Polaris-Tabs__TabContainer",
      "fitted": "Polaris-Tabs--fitted",
      "titleWithIcon": "Polaris-Tabs--titleWithIcon",
      "List": "Polaris-Tabs__List",
      "Item": "Polaris-Tabs__Item",
      "DisclosureTab": "Polaris-Tabs__DisclosureTab",
      "DisclosureTab-visible": "Polaris-Tabs__DisclosureTab--visible",
      "DisclosureActivator": "Polaris-Tabs__DisclosureActivator",
      "TabsMeasurer": "Polaris-Tabs__TabsMeasurer",
      "NewTab": "Polaris-Tabs__NewTab",
      "ActionListWrap": "Polaris-Tabs__ActionListWrap",
      "Panel": "Polaris-Tabs__Panel",
      "Panel-hidden": "Polaris-Tabs__Panel--hidden"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/components/DuplicateModal/DuplicateModal.js
function DuplicateModal({
  open,
  isModalLoading,
  name,
  onClose,
  onClickPrimaryAction,
  onClickSecondaryAction,
  helpText,
  viewNames
}) {
  const i18n = useI18n();
  const [value, setValue] = (0, import_react271.useState)(name);
  const container = (0, import_react271.useRef)(null);
  const hasSameNameError = viewNames?.some((viewName) => viewName.trim().toLowerCase() === value.trim().toLowerCase());
  const isPrimaryActionDisabled = isModalLoading || hasSameNameError || !value || value.length > MAX_VIEW_NAME_LENGTH2;
  (0, import_react271.useEffect)(() => {
    if (!container.current)
      return;
    if (open) {
      focusFirstFocusableNode(container.current);
    }
  }, [open]);
  (0, import_react271.useEffect)(() => {
    if (open) {
      setValue(name.slice(0, MAX_VIEW_NAME_LENGTH2));
    }
  }, [name, open]);
  const handleChange = (0, import_react271.useCallback)((newValue) => {
    setValue(newValue);
  }, []);
  async function handlePrimaryAction() {
    if (isPrimaryActionDisabled) {
      return;
    }
    await onClickPrimaryAction(value);
    setValue("");
    onClose();
  }
  function handleSecondaryAction() {
    onClickSecondaryAction?.();
    setValue(name);
    onClose();
  }
  return /* @__PURE__ */ import_react271.default.createElement(Modal, {
    open,
    onClose,
    title: i18n.translate("Polaris.Tabs.DuplicateModal.title"),
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.DuplicateModal.create"),
      onAction: handlePrimaryAction,
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.DuplicateModal.cancel"),
      onAction: handleSecondaryAction
    }],
    instant: true
  }, /* @__PURE__ */ import_react271.default.createElement(Modal.Section, null, /* @__PURE__ */ import_react271.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, /* @__PURE__ */ import_react271.default.createElement(FormLayout, null, /* @__PURE__ */ import_react271.default.createElement("div", {
    ref: container
  }, /* @__PURE__ */ import_react271.default.createElement(TextField, {
    label: i18n.translate("Polaris.Tabs.DuplicateModal.label"),
    value,
    onChange: handleChange,
    autoComplete: "off",
    helpText,
    maxLength: MAX_VIEW_NAME_LENGTH2,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.Tabs.DuplicateModal.errors.sameName", {
      name: value
    }) : void 0
  }))))));
}
var import_react271, MAX_VIEW_NAME_LENGTH2;
var init_DuplicateModal = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/components/DuplicateModal/DuplicateModal.js"() {
    import_react271 = __toESM(require_react());
    init_focus();
    init_hooks2();
    init_Modal();
    init_Form();
    init_FormLayout();
    init_TextField();
    MAX_VIEW_NAME_LENGTH2 = 40;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/components/RenameModal/RenameModal.js
function RenameModal({
  open,
  isModalLoading,
  name,
  onClose,
  onClickPrimaryAction,
  onClickSecondaryAction,
  helpText,
  viewNames
}) {
  const i18n = useI18n();
  const [value, setValue] = (0, import_react272.useState)(name);
  const container = (0, import_react272.useRef)(null);
  const hasSameNameError = viewNames?.filter((viewName) => viewName !== name).some((viewName) => viewName.trim().toLowerCase() === value.trim().toLowerCase());
  const isPrimaryActionDisabled = isModalLoading || hasSameNameError || value === name || !value;
  (0, import_react272.useEffect)(() => {
    if (!container.current)
      return;
    if (open) {
      focusFirstFocusableNode(container.current);
    }
  }, [open]);
  (0, import_react272.useEffect)(() => {
    if (open) {
      setValue(name);
    }
  }, [name, open]);
  const handleChange = (0, import_react272.useCallback)((newValue) => {
    setValue(newValue);
  }, []);
  async function handlePrimaryAction() {
    if (isPrimaryActionDisabled) {
      return;
    }
    await onClickPrimaryAction(value);
    setValue("");
    onClose();
  }
  function handleSecondaryAction() {
    onClickSecondaryAction?.();
    setValue(name);
    onClose();
  }
  return /* @__PURE__ */ import_react272.default.createElement(Modal, {
    open,
    onClose,
    title: i18n.translate("Polaris.Tabs.RenameModal.title"),
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.RenameModal.create"),
      onAction: handlePrimaryAction,
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.RenameModal.cancel"),
      onAction: handleSecondaryAction
    }],
    instant: true
  }, /* @__PURE__ */ import_react272.default.createElement(Modal.Section, null, /* @__PURE__ */ import_react272.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, /* @__PURE__ */ import_react272.default.createElement(FormLayout, null, /* @__PURE__ */ import_react272.default.createElement("div", {
    ref: container
  }, /* @__PURE__ */ import_react272.default.createElement(TextField, {
    label: i18n.translate("Polaris.Tabs.RenameModal.label"),
    value,
    onChange: handleChange,
    autoComplete: "off",
    helpText,
    maxLength: 40,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.Tabs.RenameModal.errors.sameName", {
      name: value
    }) : void 0
  }))))));
}
var import_react272;
var init_RenameModal = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/components/RenameModal/RenameModal.js"() {
    import_react272 = __toESM(require_react());
    init_focus();
    init_Form();
    init_FormLayout();
    init_hooks2();
    init_Modal();
    init_TextField();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js
function focusPanelID(panelID) {
  const panel = document.getElementById(panelID);
  if (panel) {
    panel.focus({
      preventScroll: true
    });
  }
}
function mergeRefs(refs) {
  return (node) => {
    for (const ref of refs) {
      if (ref != null) {
        ref.current = node;
      }
    }
  };
}
var import_react273, Tab;
var init_Tab = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js"() {
    import_react273 = __toESM(require_react());
    init_dist();
    init_css();
    init_focus();
    init_Tabs_css();
    init_DuplicateModal();
    init_RenameModal();
    init_hooks2();
    init_Icon();
    init_Modal();
    init_Popover();
    init_ActionList();
    init_InlineStack();
    init_Text();
    init_UnstyledLink();
    init_UnstyledButton();
    init_Badge();
    Tab = /* @__PURE__ */ (0, import_react273.forwardRef)(({
      content,
      accessibilityLabel,
      badge,
      id,
      panelID,
      url,
      onAction,
      actions,
      disabled,
      isModalLoading,
      icon,
      siblingTabHasFocus,
      measuring,
      focused,
      selected,
      onToggleModal,
      onTogglePopover,
      viewNames,
      tabIndexOverride,
      onFocus
    }, ref) => {
      const i18n = useI18n();
      const [popoverActive, setPopoverActive] = (0, import_react273.useState)(false);
      const [activeModalType, setActiveModalType] = (0, import_react273.useState)(null);
      const wasSelected = (0, import_react273.useRef)(selected);
      const panelFocused = (0, import_react273.useRef)(false);
      const node = (0, import_react273.useRef)(null);
      (0, import_react273.useEffect)(() => {
        onTogglePopover(popoverActive);
      }, [popoverActive, onTogglePopover]);
      (0, import_react273.useEffect)(() => {
        onToggleModal(Boolean(activeModalType));
      }, [activeModalType, onToggleModal]);
      (0, import_react273.useEffect)(() => {
        return () => {
          onToggleModal(false);
          onTogglePopover(false);
        };
      }, [onToggleModal, onTogglePopover]);
      (0, import_react273.useEffect)(() => {
        if (measuring) {
          return;
        }
        const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;
        if (itemHadFocus && selected && panelID != null && !panelFocused.current) {
          focusPanelID(panelID);
          panelFocused.current = true;
        }
        if (selected && !wasSelected.current && panelID != null) {
          focusPanelID(panelID);
        } else if (focused && node.current != null && activeModalType == null && !disabled) {
          focusFirstFocusableNode(node.current);
        }
        wasSelected.current = selected;
      }, [focused, id, content, measuring, panelID, selected, activeModalType, disabled]);
      let tabIndex;
      if (selected && !siblingTabHasFocus && !measuring) {
        tabIndex = 0;
      } else if (focused && !measuring) {
        tabIndex = 0;
      } else {
        tabIndex = -1;
      }
      if (tabIndexOverride != null) {
        tabIndex = tabIndexOverride;
      }
      const renameAction = actions?.find((action) => action.type === "rename");
      const duplicateAction = actions?.find((action) => action.type === "duplicate");
      const deleteAction = actions?.find((action) => action.type === "delete");
      const togglePopoverActive = (0, import_react273.useCallback)(() => {
        if (!actions?.length) {
          return;
        }
        setPopoverActive((popoverActive2) => !popoverActive2);
      }, [actions]);
      const handleClick = (0, import_react273.useCallback)(() => {
        if (disabled) {
          return;
        }
        if (selected) {
          togglePopoverActive();
        } else {
          onAction?.();
        }
      }, [selected, onAction, togglePopoverActive, disabled]);
      const handleModalOpen = (type) => {
        setActiveModalType(type);
      };
      const handleModalClose = () => {
        setActiveModalType(null);
      };
      const handleSaveRenameModal = (0, import_react273.useCallback)(async (value) => {
        await renameAction?.onPrimaryAction?.(value);
        setTimeout(() => {
          if (node.current) {
            focusFirstFocusableNode(node.current);
          }
        }, 250);
      }, [renameAction]);
      const handleConfirmDeleteView = (0, import_react273.useCallback)(async () => {
        await deleteAction?.onPrimaryAction?.(content);
        handleModalClose();
      }, [deleteAction, content]);
      const handleSaveDuplicateModal = (0, import_react273.useCallback)(async (duplicateName) => {
        await duplicateAction?.onPrimaryAction?.(duplicateName);
      }, [duplicateAction]);
      const actionContent = {
        rename: {
          icon: SvgInfoIcon,
          content: i18n.translate("Polaris.Tabs.Tab.rename")
        },
        duplicate: {
          icon: SvgDuplicateIcon,
          content: i18n.translate("Polaris.Tabs.Tab.duplicate")
        },
        edit: {
          icon: SvgEditIcon,
          content: i18n.translate("Polaris.Tabs.Tab.edit")
        },
        "edit-columns": {
          icon: SvgLayoutColumns3Icon,
          content: i18n.translate("Polaris.Tabs.Tab.editColumns")
        },
        delete: {
          icon: SvgDeleteIcon,
          content: i18n.translate("Polaris.Tabs.Tab.delete"),
          destructive: true
        }
      };
      const formattedActions = actions?.map(({
        type,
        onAction: onAction2,
        onPrimaryAction,
        ...additionalOptions
      }) => {
        const isModalActivator = !type.includes("edit");
        return {
          ...actionContent[type],
          ...additionalOptions,
          onAction: () => {
            onAction2?.(content);
            togglePopoverActive();
            if (isModalActivator) {
              handleModalOpen(type);
            }
          }
        };
      });
      const handleKeyDown5 = (0, import_react273.useCallback)((event) => {
        if (event.key === " ") {
          event.preventDefault();
          handleClick();
        }
      }, [handleClick]);
      const tabContainerClassNames = classNames(styles101.TabContainer, selected && styles101.Underline);
      const urlIfNotDisabledOrSelected = disabled || selected ? void 0 : url;
      const BaseComponent = urlIfNotDisabledOrSelected ? UnstyledLink : UnstyledButton;
      const tabClassName = classNames(styles101.Tab, icon && styles101["Tab-iconOnly"], popoverActive && styles101["Tab-popoverActive"], selected && styles101["Tab-active"], selected && actions?.length && styles101["Tab-hasActions"]);
      const badgeMarkup = badge ? /* @__PURE__ */ import_react273.default.createElement(Badge, {
        tone: selected ? void 0 : "new"
      }, badge) : null;
      const disclosureMarkup = selected && actions?.length ? /* @__PURE__ */ import_react273.default.createElement("div", {
        className: classNames(styles101.IconWrap)
      }, /* @__PURE__ */ import_react273.default.createElement(Icon, {
        source: SvgChevronDownIcon
      })) : null;
      const activator = /* @__PURE__ */ import_react273.default.createElement(BaseComponent, {
        id,
        className: tabClassName,
        tabIndex,
        "aria-selected": selected,
        "aria-controls": panelID,
        "aria-label": accessibilityLabel,
        role: tabIndexOverride == null ? "tab" : void 0,
        disabled,
        url: urlIfNotDisabledOrSelected,
        onFocus,
        onMouseUp: handleMouseUpByBlurring,
        onClick: handleClick,
        onKeyDown: handleKeyDown5
      }, /* @__PURE__ */ import_react273.default.createElement(InlineStack, {
        gap: "200",
        align: "center",
        blockAlign: "center",
        wrap: false
      }, /* @__PURE__ */ import_react273.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        fontWeight: "medium"
      }, icon ?? content), badgeMarkup), disclosureMarkup);
      const isPlainButton = !selected || !actions?.length;
      const renameModal = renameAction ? /* @__PURE__ */ import_react273.default.createElement(RenameModal, {
        name: content,
        open: activeModalType === "rename",
        onClose: handleModalClose,
        onClickPrimaryAction: handleSaveRenameModal,
        isModalLoading,
        viewNames
      }) : null;
      const duplicateModal = duplicateAction ? /* @__PURE__ */ import_react273.default.createElement(DuplicateModal, {
        open: activeModalType === "duplicate",
        name: i18n.translate("Polaris.Tabs.Tab.copy", {
          name: content
        }),
        onClose: handleModalClose,
        onClickPrimaryAction: handleSaveDuplicateModal,
        isModalLoading,
        viewNames: viewNames || []
      }) : null;
      const deleteModal = deleteAction ? /* @__PURE__ */ import_react273.default.createElement(Modal, {
        open: activeModalType === "delete",
        onClose: handleModalClose,
        primaryAction: {
          content: i18n.translate("Polaris.Tabs.Tab.deleteModal.delete"),
          onAction: handleConfirmDeleteView,
          destructive: true,
          disabled: isModalLoading
        },
        secondaryActions: [{
          content: i18n.translate("Polaris.Tabs.Tab.deleteModal.cancel"),
          onAction: handleModalClose
        }],
        title: i18n.translate("Polaris.Tabs.Tab.deleteModal.title"),
        instant: true
      }, /* @__PURE__ */ import_react273.default.createElement(Modal.Section, null, i18n.translate("Polaris.Tabs.Tab.deleteModal.description", {
        viewName: content
      }))) : null;
      const markup = isPlainButton || disabled ? activator : /* @__PURE__ */ import_react273.default.createElement(import_react273.default.Fragment, null, /* @__PURE__ */ import_react273.default.createElement(Popover2, {
        active: popoverActive,
        activator,
        autofocusTarget: "first-node",
        onClose: togglePopoverActive
      }, /* @__PURE__ */ import_react273.default.createElement("div", {
        className: styles101.ActionListWrap
      }, /* @__PURE__ */ import_react273.default.createElement(ActionList, {
        actionRole: "menuitem",
        items: formattedActions
      }))), renameModal, duplicateModal, deleteModal);
      if (icon) {
        return markup;
      }
      return /* @__PURE__ */ import_react273.default.createElement("li", {
        className: tabContainerClassNames,
        ref: mergeRefs([node, ref]),
        role: "presentation"
      }, markup);
    });
    Tab.displayName = "Tab";
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/TabMeasurer/TabMeasurer.js
function noop13() {
}
var import_react274, TabMeasurer;
var init_TabMeasurer = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/TabMeasurer/TabMeasurer.js"() {
    import_react274 = __toESM(require_react());
    init_css();
    init_use_component_did_mount();
    init_use_event_listener();
    init_Tabs_css();
    init_Tab();
    TabMeasurer = /* @__PURE__ */ (0, import_react274.memo)(function TabMeasurer2({
      selected,
      tabs,
      activator,
      tabToFocus,
      siblingTabHasFocus,
      handleMeasurement: handleMeasurementProp
    }) {
      const containerNode = (0, import_react274.useRef)(null);
      const animationFrame = (0, import_react274.useRef)(null);
      const handleMeasurement = (0, import_react274.useCallback)(() => {
        if (animationFrame.current) {
          cancelAnimationFrame(animationFrame.current);
        }
        animationFrame.current = requestAnimationFrame(() => {
          if (!containerNode.current) {
            return;
          }
          const containerWidth = containerNode.current.offsetWidth - 20 - 28;
          const hiddenTabNodes = containerNode.current.children;
          const hiddenTabNodesArray = Array.from(hiddenTabNodes);
          const hiddenTabWidths = hiddenTabNodesArray.map((node) => {
            const buttonWidth = Math.ceil(node.getBoundingClientRect().width);
            return buttonWidth + 4;
          });
          const disclosureWidth = hiddenTabWidths.pop() || 0;
          handleMeasurementProp({
            containerWidth,
            disclosureWidth,
            hiddenTabWidths
          });
        });
      }, [handleMeasurementProp]);
      (0, import_react274.useEffect)(() => {
        handleMeasurement();
      }, [handleMeasurement, tabs]);
      useComponentDidMount(() => {
        if (true) {
          setTimeout(handleMeasurement, 0);
        }
      });
      const tabsMarkup = tabs.map((tab, index) => {
        return /* @__PURE__ */ import_react274.default.createElement(Tab, {
          measuring: true,
          key: `$${tab.id}Hidden`,
          id: `${tab.id}Measurer`,
          siblingTabHasFocus,
          focused: index === tabToFocus,
          selected: index === selected,
          url: tab.url,
          content: tab.content,
          onTogglePopover: noop13,
          onToggleModal: noop13
        });
      });
      const classname = classNames(styles101.Tabs, styles101.TabsMeasurer);
      useEventListener("resize", handleMeasurement);
      return /* @__PURE__ */ import_react274.default.createElement("div", {
        className: classname,
        ref: containerNode
      }, tabsMarkup, activator);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Panel/Panel.js
function Panel({
  hidden,
  id,
  tabID,
  children
}) {
  const className = classNames(styles101.Panel, hidden && styles101["Panel-hidden"]);
  return /* @__PURE__ */ import_react275.default.createElement("div", {
    className,
    id,
    role: "tabpanel",
    "aria-labelledby": tabID,
    tabIndex: -1
  }, children);
}
var import_react275;
var init_Panel = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/Panel/Panel.js"() {
    import_react275 = __toESM(require_react());
    init_css();
    init_Tabs_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/Item/Item.js
function noop14() {
}
var import_react276, Item7;
var init_Item7 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/Item/Item.js"() {
    import_react276 = __toESM(require_react());
    init_css();
    init_Tabs_css();
    init_UnstyledLink();
    Item7 = /* @__PURE__ */ (0, import_react276.memo)(function Item8({
      id,
      focused,
      children,
      url,
      accessibilityLabel,
      onClick = noop14
    }) {
      const focusedNode = (0, import_react276.useRef)(null);
      (0, import_react276.useEffect)(() => {
        if (focusedNode.current && focusedNode.current instanceof HTMLElement && focused) {
          focusedNode.current.focus();
        }
      }, [focusedNode, focused]);
      const classname = classNames(styles101.Item);
      const sharedProps = {
        id,
        ref: focusedNode,
        onClick,
        className: classname,
        "aria-selected": false,
        "aria-label": accessibilityLabel
      };
      const markup = url ? /* @__PURE__ */ import_react276.default.createElement(UnstyledLink, Object.assign({}, sharedProps, {
        url
      }), children) : /* @__PURE__ */ import_react276.default.createElement("button", Object.assign({}, sharedProps, {
        ref: focusedNode,
        type: "button"
      }), children);
      return /* @__PURE__ */ import_react276.default.createElement("li", null, markup);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/List/List.js
function List3({
  focusIndex,
  disclosureTabs,
  onClick = noop15,
  onKeyPress = noop15
}) {
  const tabs = disclosureTabs.map(({
    id,
    content,
    ...tabProps
  }, index) => {
    return /* @__PURE__ */ import_react277.default.createElement(Item7, Object.assign({
      key: id
    }, tabProps, {
      id,
      focused: index === focusIndex,
      onClick: onClick.bind(null, id)
    }), content);
  });
  return /* @__PURE__ */ import_react277.default.createElement("ul", {
    className: styles101.List,
    onKeyDown: handleKeyDown2,
    onKeyUp: onKeyPress
  }, tabs);
}
function noop15() {
}
function handleKeyDown2(event) {
  const {
    key
  } = event;
  if (key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}
var import_react277;
var init_List2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/List/List.js"() {
    import_react277 = __toESM(require_react());
    init_Tabs_css();
    init_Item7();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/components/CreateViewModal/CreateViewModal.js
function CreateViewModal({
  activator,
  open,
  onClose,
  onClickPrimaryAction,
  onClickSecondaryAction,
  viewNames
}) {
  const i18n = useI18n();
  const [value, setValue] = (0, import_react278.useState)("");
  const [loading, setLoading] = (0, import_react278.useState)(false);
  const container = (0, import_react278.useRef)(null);
  const isTouchDevice = useIsTouchDevice();
  const hasSameNameError = viewNames.some((viewName) => viewName.trim().toLowerCase() === value.trim().toLowerCase());
  const isPrimaryActionDisabled = !value || hasSameNameError || loading || value.length > MAX_VIEW_NAME_LENGTH3;
  (0, import_react278.useEffect)(() => {
    if (!container.current || isTouchDevice)
      return;
    if (open) {
      focusFirstFocusableNode(container.current);
      const timeout2 = setTimeout(() => {
        if (!container.current)
          return;
        focusFirstFocusableNode(container.current);
      }, 50);
      return () => clearTimeout(timeout2);
    }
  }, [open, isTouchDevice]);
  const handleChange = (0, import_react278.useCallback)((newValue) => {
    setValue(newValue);
  }, []);
  async function handlePrimaryAction() {
    if (hasSameNameError || isPrimaryActionDisabled) {
      return;
    }
    setLoading(true);
    await onClickPrimaryAction(value);
    setLoading(false);
    setValue("");
    onClose();
  }
  function handleSecondaryAction() {
    onClickSecondaryAction?.();
    setValue("");
    onClose();
  }
  return /* @__PURE__ */ import_react278.default.createElement(Modal, {
    activator,
    open,
    onClose,
    title: i18n.translate("Polaris.Tabs.CreateViewModal.title"),
    primaryAction: {
      content: i18n.translate("Polaris.Tabs.CreateViewModal.create"),
      onAction: handlePrimaryAction,
      disabled: isPrimaryActionDisabled
    },
    secondaryActions: [{
      content: i18n.translate("Polaris.Tabs.CreateViewModal.cancel"),
      onAction: handleSecondaryAction
    }]
  }, /* @__PURE__ */ import_react278.default.createElement(Modal.Section, null, /* @__PURE__ */ import_react278.default.createElement(Form, {
    onSubmit: handlePrimaryAction
  }, /* @__PURE__ */ import_react278.default.createElement(FormLayout, null, /* @__PURE__ */ import_react278.default.createElement("div", {
    ref: container
  }, /* @__PURE__ */ import_react278.default.createElement(TextField, {
    label: i18n.translate("Polaris.Tabs.CreateViewModal.label"),
    value,
    onChange: handleChange,
    autoComplete: "off",
    maxLength: MAX_VIEW_NAME_LENGTH3,
    showCharacterCount: true,
    error: hasSameNameError ? i18n.translate("Polaris.Tabs.CreateViewModal.errors.sameName", {
      name: value
    }) : void 0
  }))))));
}
var import_react278, MAX_VIEW_NAME_LENGTH3;
var init_CreateViewModal = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/components/CreateViewModal/CreateViewModal.js"() {
    import_react278 = __toESM(require_react());
    init_use_is_touch_device();
    init_focus();
    init_hooks2();
    init_Modal();
    init_Form();
    init_FormLayout();
    init_TextField();
    MAX_VIEW_NAME_LENGTH3 = 40;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.js
var import_react279, CREATE_NEW_VIEW_ID, Tabs;
var init_Tabs = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tabs/Tabs.js"() {
    import_react279 = __toESM(require_react());
    init_dist();
    init_css();
    init_breakpoints2();
    init_use_previous();
    init_utilities10();
    init_Tabs_css();
    init_Tab();
    init_TabMeasurer();
    init_Panel();
    init_List2();
    init_CreateViewModal();
    init_hooks2();
    init_Text();
    init_Icon();
    init_UnstyledButton();
    init_Box();
    init_Popover();
    init_Tooltip();
    CREATE_NEW_VIEW_ID = "create-new-view";
    Tabs = ({
      tabs,
      children,
      selected,
      newViewAccessibilityLabel,
      canCreateNewView,
      disabled,
      onCreateNewView,
      onSelect,
      fitted,
      disclosureText
    }) => {
      const i18n = useI18n();
      const {
        mdDown
      } = useBreakpoints();
      const scrollRef = (0, import_react279.useRef)(null);
      const wrapRef = (0, import_react279.useRef)(null);
      const selectedTabRef = (0, import_react279.useRef)(null);
      const [state, setState] = (0, import_react279.useReducer)((data, partialData) => {
        return {
          ...data,
          ...partialData
        };
      }, {
        disclosureWidth: 0,
        containerWidth: Infinity,
        tabWidths: [],
        visibleTabs: [],
        hiddenTabs: [],
        showDisclosure: false,
        tabToFocus: -1,
        isNewViewModalActive: false,
        modalSubmitted: false,
        isTabsFocused: false,
        isTabPopoverOpen: false,
        isTabModalOpen: false
      });
      const {
        tabToFocus,
        visibleTabs,
        hiddenTabs,
        showDisclosure,
        isNewViewModalActive,
        modalSubmitted,
        disclosureWidth,
        tabWidths,
        containerWidth,
        isTabsFocused,
        isTabModalOpen,
        isTabPopoverOpen
      } = state;
      const prevModalOpen = usePrevious(isTabModalOpen);
      const prevPopoverOpen = usePrevious(isTabPopoverOpen);
      (0, import_react279.useEffect)(() => {
        const hasModalClosed = prevModalOpen && !isTabModalOpen;
        const hasPopoverClosed = prevPopoverOpen && !isTabPopoverOpen;
        if (hasModalClosed) {
          setState({
            isTabsFocused: true,
            tabToFocus: selected
          });
        } else if (hasPopoverClosed && !isTabModalOpen) {
          setState({
            isTabsFocused: true,
            tabToFocus: selected
          });
        }
      }, [prevPopoverOpen, isTabPopoverOpen, prevModalOpen, isTabModalOpen, selected, tabToFocus]);
      const handleTogglePopover = (0, import_react279.useCallback)((isOpen) => setState({
        isTabPopoverOpen: isOpen
      }), []);
      const handleToggleModal = (0, import_react279.useCallback)((isOpen) => setState({
        isTabModalOpen: isOpen
      }), []);
      const handleCloseNewViewModal = () => {
        setState({
          isNewViewModalActive: false
        });
      };
      const handleSaveNewViewModal = async (value) => {
        if (!onCreateNewView) {
          return false;
        }
        const hasExecuted = await onCreateNewView?.(value);
        if (hasExecuted) {
          setState({
            modalSubmitted: true
          });
        }
        return hasExecuted;
      };
      const handleClickNewTab = () => {
        setState({
          isNewViewModalActive: true
        });
      };
      const handleTabClick = (0, import_react279.useCallback)((id) => {
        const tab = tabs.find((aTab) => aTab.id === id);
        if (tab == null) {
          return null;
        }
        const selectedIndex = tabs.indexOf(tab);
        onSelect?.(selectedIndex);
      }, [tabs, onSelect]);
      const renderTabMarkup = (0, import_react279.useCallback)((tab, index) => {
        const handleClick = () => {
          handleTabClick(tab.id);
          tab.onAction?.();
        };
        const viewNames2 = tabs.map(({
          content
        }) => content);
        const tabPanelID = tab.panelID || `${tab.id}-panel`;
        return /* @__PURE__ */ import_react279.default.createElement(Tab, Object.assign({}, tab, {
          key: `${index}-${tab.id}`,
          id: tab.id,
          panelID: children ? tabPanelID : void 0,
          disabled: disabled || tab.disabled,
          siblingTabHasFocus: tabToFocus > -1,
          focused: index === tabToFocus,
          selected: index === selected,
          onAction: handleClick,
          accessibilityLabel: tab.accessibilityLabel,
          url: tab.url,
          content: tab.content,
          onToggleModal: handleToggleModal,
          onTogglePopover: handleTogglePopover,
          viewNames: viewNames2,
          ref: index === selected ? selectedTabRef : null
        }));
      }, [disabled, handleTabClick, tabs, children, selected, tabToFocus, handleToggleModal, handleTogglePopover]);
      const handleFocus = (0, import_react279.useCallback)((event) => {
        const target = event.target;
        const isItem = target.classList.contains(styles101.Item);
        const isInNaturalDOMOrder = target.closest(`[data-tabs-focus-catchment]`) || isItem;
        const isDisclosureActivator = target.classList.contains(styles101.DisclosureActivator);
        if (isDisclosureActivator || !isInNaturalDOMOrder) {
          return;
        }
        setState({
          isTabsFocused: true
        });
      }, []);
      const handleBlur = (0, import_react279.useCallback)((event) => {
        const target = event.target;
        const relatedTarget = event.relatedTarget;
        const isInNaturalDOMOrder = relatedTarget?.closest?.(`.${styles101.Tabs}`);
        const targetIsATab = target?.classList?.contains?.(styles101.Tab);
        const focusReceiverIsAnItem = relatedTarget?.classList.contains(styles101.Item);
        if (!relatedTarget && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {
          setState({
            tabToFocus: -1
          });
          return;
        }
        if (!isInNaturalDOMOrder && !isTabModalOpen && !targetIsATab && !focusReceiverIsAnItem) {
          setState({
            tabToFocus: -1
          });
          return;
        }
        setState({
          isTabsFocused: false
        });
      }, [isTabModalOpen]);
      const handleKeyDown5 = (event) => {
        if (isTabPopoverOpen || isTabModalOpen || isNewViewModalActive) {
          return;
        }
        const {
          key
        } = event;
        if (key === "ArrowLeft" || key === "ArrowRight") {
          event.preventDefault();
          event.stopPropagation();
        }
      };
      (0, import_react279.useEffect)(() => {
        const {
          visibleTabs: visibleTabs2,
          hiddenTabs: hiddenTabs2
        } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth);
        setState({
          visibleTabs: visibleTabs2,
          hiddenTabs: hiddenTabs2
        });
      }, [containerWidth, disclosureWidth, tabs, selected, tabWidths, setState]);
      const moveToSelectedTab = (0, import_react279.useCallback)(() => {
        const activeButton = selectedTabRef.current?.querySelector(`.${styles101["Tab-active"]}`);
        if (activeButton) {
          moveToActiveTab(activeButton.offsetLeft);
        }
      }, []);
      (0, import_react279.useEffect)(() => {
        if (mdDown) {
          moveToSelectedTab();
        }
      }, [moveToSelectedTab, selected, mdDown]);
      (0, import_react279.useEffect)(() => {
        if (isTabsFocused && !showDisclosure) {
          const tabToFocus2 = selected;
          setState({
            tabToFocus: tabToFocus2
          });
        }
      }, [isTabsFocused, selected, setState, showDisclosure]);
      const handleKeyPress = (event) => {
        const {
          showDisclosure: showDisclosure2,
          visibleTabs: visibleTabs2,
          hiddenTabs: hiddenTabs2,
          tabToFocus: tabToFocus2,
          isNewViewModalActive: isNewViewModalActive2
        } = state;
        if (isTabModalOpen || isTabPopoverOpen || isNewViewModalActive2) {
          return;
        }
        const key = event.key;
        const tabsArrayInOrder = showDisclosure2 || mdDown ? visibleTabs2.concat(hiddenTabs2) : [...visibleTabs2];
        let newFocus = tabsArrayInOrder.indexOf(tabToFocus2);
        if (key === "ArrowRight") {
          newFocus += 1;
          if (newFocus === tabsArrayInOrder.length) {
            newFocus = 0;
          }
        }
        if (key === "ArrowLeft") {
          if (newFocus === -1 || newFocus === 0) {
            newFocus = tabsArrayInOrder.length - 1;
          } else {
            newFocus -= 1;
          }
        }
        const buttonToFocus = tabsArrayInOrder[newFocus];
        if (buttonToFocus != null) {
          setState({
            tabToFocus: buttonToFocus
          });
        }
      };
      const handleDisclosureActivatorClick = () => {
        setState({
          showDisclosure: !showDisclosure,
          tabToFocus: hiddenTabs[0]
        });
      };
      const handleClose = () => {
        setState({
          showDisclosure: false
        });
      };
      const handleMeasurement = (0, import_react279.useCallback)((measurements) => {
        const {
          hiddenTabWidths: tabWidths2,
          containerWidth: containerWidth2,
          disclosureWidth: disclosureWidth2
        } = measurements;
        const {
          visibleTabs: visibleTabs2,
          hiddenTabs: hiddenTabs2
        } = getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth2, tabWidths2, containerWidth2);
        setState({
          visibleTabs: visibleTabs2,
          hiddenTabs: hiddenTabs2,
          disclosureWidth: disclosureWidth2,
          containerWidth: containerWidth2,
          tabWidths: tabWidths2
        });
      }, [tabs, selected, setState]);
      const handleListTabClick = (id) => {
        handleTabClick(id);
        handleClose();
        setState({
          isTabsFocused: true
        });
      };
      const moveToActiveTab = (offsetLeft) => {
        setTimeout(() => {
          if (scrollRef.current && typeof scrollRef.current.scroll === "function") {
            const scrollRefOffset = wrapRef?.current?.offsetLeft || 0;
            scrollRef?.current?.scroll({
              left: offsetLeft - scrollRefOffset
            });
          }
        }, 0);
      };
      const createViewA11yLabel = newViewAccessibilityLabel || i18n.translate("Polaris.Tabs.newViewAccessibilityLabel");
      const tabsToShow = mdDown ? [...visibleTabs, ...hiddenTabs] : visibleTabs;
      const tabsMarkup = tabsToShow.sort((tabA, tabB) => tabA - tabB).filter((tabIndex) => tabs[tabIndex]).map((tabIndex) => renderTabMarkup(tabs[tabIndex], tabIndex));
      const disclosureActivatorVisible = visibleTabs.length < tabs.length && !mdDown;
      const classname = classNames(styles101.Tabs, fitted && styles101.fitted, disclosureActivatorVisible && styles101.fillSpace);
      const wrapperClassNames = classNames(styles101.Wrapper, canCreateNewView && styles101.WrapperWithNewButton);
      const disclosureTabClassName = classNames(styles101.DisclosureTab, disclosureActivatorVisible && styles101["DisclosureTab-visible"]);
      const disclosureButtonClassName = classNames(styles101.DisclosureActivator);
      const disclosureButtonContent = /* @__PURE__ */ import_react279.default.createElement(import_react279.default.Fragment, null, /* @__PURE__ */ import_react279.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        fontWeight: "medium"
      }, disclosureText ?? i18n.translate("Polaris.Tabs.toggleTabsLabel")), /* @__PURE__ */ import_react279.default.createElement("div", {
        className: classNames(styles101.IconWrap, disclosureActivatorVisible && showDisclosure && styles101["IconWrap-open"])
      }, /* @__PURE__ */ import_react279.default.createElement(Icon, {
        source: SvgChevronDownIcon,
        tone: "subdued"
      })));
      const disclosureButton = /* @__PURE__ */ import_react279.default.createElement(UnstyledButton, {
        type: "button",
        className: disclosureButtonClassName,
        onClick: handleDisclosureActivatorClick,
        "aria-label": disclosureText ?? i18n.translate("Polaris.Tabs.toggleTabsLabel"),
        disabled
      }, disclosureButtonContent);
      const activator = disclosureButton;
      const disclosureTabs = hiddenTabs.map((tabIndex) => tabs[tabIndex]);
      const viewNames = tabs.map(({
        content
      }) => content);
      const tabMeasurer = /* @__PURE__ */ import_react279.default.createElement(TabMeasurer, {
        tabToFocus,
        activator,
        selected,
        tabs,
        siblingTabHasFocus: tabToFocus > -1,
        handleMeasurement
      });
      const newTab = /* @__PURE__ */ import_react279.default.createElement(Tab, {
        id: CREATE_NEW_VIEW_ID,
        content: createViewA11yLabel,
        actions: [],
        onAction: handleClickNewTab,
        onFocus: () => {
          if (modalSubmitted) {
            setState({
              tabToFocus: selected,
              modalSubmitted: false
            });
          }
        },
        icon: /* @__PURE__ */ import_react279.default.createElement(Icon, {
          source: SvgPlusIcon,
          accessibilityLabel: createViewA11yLabel
        }),
        disabled,
        onTogglePopover: handleTogglePopover,
        onToggleModal: handleToggleModal,
        tabIndexOverride: 0
      });
      const panelMarkup = children ? tabs.map((_tab, index) => {
        return selected === index ? /* @__PURE__ */ import_react279.default.createElement(Panel, {
          id: tabs[index].panelID || `${tabs[index].id}-panel`,
          tabID: tabs[index].id,
          key: tabs[index].id
        }, children) : /* @__PURE__ */ import_react279.default.createElement(Panel, {
          id: tabs[index].panelID || `${tabs[index].id}-panel`,
          tabID: tabs[index].id,
          key: tabs[index].id,
          hidden: true
        });
      }) : null;
      return /* @__PURE__ */ import_react279.default.createElement("div", {
        className: styles101.Outer
      }, /* @__PURE__ */ import_react279.default.createElement(Box, {
        padding: {
          md: "200"
        }
      }, tabMeasurer, /* @__PURE__ */ import_react279.default.createElement("div", {
        className: wrapperClassNames,
        ref: scrollRef
      }, /* @__PURE__ */ import_react279.default.createElement("div", {
        className: styles101.ButtonWrapper,
        ref: wrapRef
      }, /* @__PURE__ */ import_react279.default.createElement("ul", {
        role: tabsMarkup.length > 0 ? "tablist" : void 0,
        className: classname,
        onFocus: handleFocus,
        onBlur: handleBlur,
        onKeyDown: handleKeyDown5,
        onKeyUp: handleKeyPress,
        "data-tabs-focus-catchment": true
      }, tabsMarkup, mdDown || tabsToShow.length === 0 ? null : /* @__PURE__ */ import_react279.default.createElement("li", {
        className: disclosureTabClassName,
        role: "presentation"
      }, /* @__PURE__ */ import_react279.default.createElement(Popover2, {
        preferredPosition: "below",
        preferredAlignment: "left",
        activator,
        active: disclosureActivatorVisible && showDisclosure,
        onClose: handleClose,
        autofocusTarget: "first-node"
      }, /* @__PURE__ */ import_react279.default.createElement(List3, {
        focusIndex: hiddenTabs.indexOf(tabToFocus),
        disclosureTabs,
        onClick: handleListTabClick,
        onKeyPress: handleKeyPress
      })))), canCreateNewView && tabsToShow.length > 0 ? /* @__PURE__ */ import_react279.default.createElement("div", {
        className: styles101.NewTab
      }, /* @__PURE__ */ import_react279.default.createElement(CreateViewModal, {
        open: isNewViewModalActive,
        onClose: handleCloseNewViewModal,
        onClickPrimaryAction: handleSaveNewViewModal,
        viewNames,
        activator: disabled ? newTab : /* @__PURE__ */ import_react279.default.createElement("div", null, /* @__PURE__ */ import_react279.default.createElement(Tooltip, {
          content: i18n.translate("Polaris.Tabs.newViewTooltip"),
          preferredPosition: "above",
          hoverDelay: 400
        }, newTab))
      })) : null))), panelMarkup);
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SearchFilterButton/SearchFilterButton.js
function SearchFilterButton({
  onClick,
  label,
  disabled,
  tooltipContent,
  style,
  hideFilters,
  hideQueryField
}) {
  const iconMarkup = /* @__PURE__ */ import_react280.default.createElement(InlineStack, {
    gap: "0"
  }, hideQueryField ? null : /* @__PURE__ */ import_react280.default.createElement(Icon, {
    source: SvgSearchIcon,
    tone: "base"
  }), hideFilters ? null : /* @__PURE__ */ import_react280.default.createElement(Icon, {
    source: SvgFilterIcon,
    tone: "base"
  }));
  const activator = /* @__PURE__ */ import_react280.default.createElement("div", {
    style
  }, /* @__PURE__ */ import_react280.default.createElement(Button, {
    size: "slim",
    onClick,
    disabled,
    icon: iconMarkup,
    accessibilityLabel: label
  }));
  const content = /* @__PURE__ */ import_react280.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    alignment: "center"
  }, tooltipContent);
  return /* @__PURE__ */ import_react280.default.createElement(Tooltip, {
    content,
    preferredPosition: "above",
    hoverDelay: 400
  }, activator);
}
var import_react280;
var init_SearchFilterButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/SearchFilterButton/SearchFilterButton.js"() {
    import_react280 = __toESM(require_react());
    init_dist();
    init_Tooltip();
    init_Button();
    init_Text();
    init_InlineStack();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/EditColumnsButton/EditColumnsButton.js
function EditColumnsButton({
  onClick,
  disabled
}) {
  const i18n = useI18n();
  const tooltipContent = /* @__PURE__ */ import_react281.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    alignment: "center"
  }, i18n.translate("Polaris.IndexFilters.EditColumnsButton.tooltip"));
  return /* @__PURE__ */ import_react281.default.createElement(Tooltip, {
    content: tooltipContent,
    preferredPosition: "above",
    hoverDelay: 400
  }, /* @__PURE__ */ import_react281.default.createElement(Button, {
    size: "slim",
    onClick,
    disabled,
    icon: SvgLayoutColumns3Icon,
    accessibilityLabel: i18n.translate("Polaris.IndexFilters.EditColumnsButton.accessibilityLabel")
  }));
}
var import_react281;
var init_EditColumnsButton = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/components/EditColumnsButton/EditColumnsButton.js"() {
    import_react281 = __toESM(require_react());
    init_dist();
    init_hooks2();
    init_Text();
    init_Tooltip();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.js
function IndexFilters({
  tabs,
  selected,
  onSelect,
  onSort,
  onSortKeyChange,
  onSortDirectionChange,
  onAddFilterClick,
  sortOptions,
  sortSelected,
  queryValue = "",
  queryPlaceholder,
  primaryAction,
  cancelAction,
  filters,
  appliedFilters,
  onClearAll,
  onQueryChange,
  onQueryFocus,
  onQueryClear,
  onEditStart,
  disabled,
  disableQueryField,
  hideFilters,
  loading,
  mode,
  setMode,
  disableStickyMode,
  isFlushWhenSticky = false,
  canCreateNewView = true,
  onCreateNewView,
  filteringAccessibilityLabel,
  filteringAccessibilityTooltip,
  hideQueryField,
  closeOnChildOverlayClick,
  disableKeyboardShortcuts,
  showEditColumnsButton,
  autoFocusSearchField = true
}) {
  const i18n = useI18n();
  const {
    mdDown
  } = useBreakpoints();
  const defaultRef = (0, import_react282.useRef)(null);
  const filteringRef = (0, import_react282.useRef)(null);
  const {
    value: filtersFocused,
    setFalse: setFiltersUnFocused,
    setTrue: setFiltersFocused
  } = useToggle(mode === IndexFiltersMode.Filtering && autoFocusSearchField);
  const handleModeChange = (newMode) => {
    if (newMode === IndexFiltersMode.Filtering && autoFocusSearchField) {
      setFiltersFocused();
    } else {
      setFiltersUnFocused();
    }
  };
  useOnValueChange(mode, handleModeChange);
  useEventListener("keydown", (event) => {
    const hasNoFiltersOrSearch = hideQueryField && hideFilters;
    if (disableKeyboardShortcuts || hasNoFiltersOrSearch)
      return;
    const {
      key
    } = event;
    const tag = document?.activeElement?.tagName;
    if (mode !== IndexFiltersMode.Default && event.key === "Escape") {
      onPressEscape();
    }
    if (key === "f" && mode === IndexFiltersMode.Default) {
      if (tag && DEFAULT_IGNORED_TAGS.includes(tag)) {
        return;
      }
      onPressF();
      event.preventDefault();
    }
  });
  const {
    intersectionRef,
    measurerRef,
    indexFilteringHeight,
    isSticky
  } = useIsSticky(mode, Boolean(disableStickyMode), isFlushWhenSticky);
  const viewNames = tabs.map(({
    content
  }) => content);
  const handleChangeSortButton = (0, import_react282.useCallback)((value) => {
    onSort?.(value);
  }, [onSort]);
  const handleChangeSearch = (0, import_react282.useCallback)((value) => {
    onQueryChange(value);
  }, [onQueryChange]);
  const useExecutedCallback = (action, afterEffect) => (0, import_react282.useCallback)(async (name) => {
    const hasExecuted = await action?.(name);
    if (hasExecuted) {
      setMode(IndexFiltersMode.Default);
      afterEffect?.();
    }
  }, [action, afterEffect]);
  const onExecutedPrimaryAction = useExecutedCallback(primaryAction?.onAction);
  const onExecutedCancelAction = (0, import_react282.useCallback)(() => {
    cancelAction?.onAction?.();
    setMode(IndexFiltersMode.Default);
  }, [cancelAction, setMode]);
  const enhancedPrimaryAction = (0, import_react282.useMemo)(() => {
    return primaryAction ? {
      ...primaryAction,
      onAction: onExecutedPrimaryAction
    } : void 0;
  }, [onExecutedPrimaryAction, primaryAction]);
  const enhancedCancelAction = (0, import_react282.useMemo)(() => {
    return cancelAction ? {
      ...cancelAction,
      onAction: onExecutedCancelAction
    } : void 0;
  }, [cancelAction, onExecutedCancelAction]);
  const beginEdit = (0, import_react282.useCallback)((mode2) => {
    setMode(mode2);
    onEditStart?.(mode2);
  }, [onEditStart, setMode]);
  const updateButtonsMarkup = (0, import_react282.useMemo)(() => enhancedCancelAction || enhancedPrimaryAction ? /* @__PURE__ */ import_react282.default.createElement(UpdateButtons, {
    primaryAction: enhancedPrimaryAction,
    cancelAction: enhancedCancelAction,
    viewNames,
    disabled
  }) : null, [enhancedPrimaryAction, enhancedCancelAction, disabled, viewNames]);
  const sortMarkup = (0, import_react282.useMemo)(() => {
    if (!sortOptions?.length) {
      return null;
    }
    return /* @__PURE__ */ import_react282.default.createElement(SortButton, {
      choices: sortOptions,
      selected: sortSelected,
      onChange: handleChangeSortButton,
      onChangeKey: onSortKeyChange,
      onChangeDirection: onSortDirectionChange,
      disabled
    });
  }, [handleChangeSortButton, onSortDirectionChange, onSortKeyChange, sortOptions, sortSelected, disabled]);
  function handleClickEditColumnsButton() {
    beginEdit(IndexFiltersMode.EditingColumns);
  }
  const editColumnsMarkup = showEditColumnsButton ? /* @__PURE__ */ import_react282.default.createElement(EditColumnsButton, {
    onClick: handleClickEditColumnsButton,
    disabled
  }) : null;
  const isActionLoading = primaryAction?.loading || cancelAction?.loading;
  function handleClickFilterButton() {
    beginEdit(IndexFiltersMode.Filtering);
  }
  const searchFilterTooltipLabelId = disableKeyboardShortcuts ? "Polaris.IndexFilters.searchFilterTooltip" : "Polaris.IndexFilters.searchFilterTooltipWithShortcut";
  const searchFilterTooltip = filteringAccessibilityTooltip || i18n.translate(searchFilterTooltipLabelId);
  const searchFilterAriaLabel = filteringAccessibilityLabel || i18n.translate("Polaris.IndexFilters.searchFilterAccessibilityLabel");
  const isLoading = loading || isActionLoading;
  function onPressEscape() {
    cancelAction?.onAction();
    setMode(IndexFiltersMode.Default);
  }
  function handleClearSearch() {
    onQueryClear?.();
  }
  function handleQueryBlur() {
    setFiltersUnFocused();
  }
  function handleQueryFocus() {
    setFiltersFocused();
    onQueryFocus?.();
  }
  function onPressF() {
    if (mode !== IndexFiltersMode.Default) {
      return;
    }
    beginEdit(IndexFiltersMode.Filtering);
  }
  return /* @__PURE__ */ import_react282.default.createElement("div", {
    className: styles98.IndexFiltersWrapper,
    style: {
      height: indexFilteringHeight
    }
  }, /* @__PURE__ */ import_react282.default.createElement("div", {
    ref: intersectionRef
  }), /* @__PURE__ */ import_react282.default.createElement("div", {
    className: classNames(styles98.IndexFilters, isSticky && styles98.IndexFiltersSticky, isSticky && isFlushWhenSticky && styles98.IndexFiltersStickyFlush),
    ref: measurerRef
  }, /* @__PURE__ */ import_react282.default.createElement(Transition_default, {
    nodeRef: defaultRef,
    in: mode !== IndexFiltersMode.Filtering,
    timeout: TRANSITION_DURATION2
  }, (state) => /* @__PURE__ */ import_react282.default.createElement("div", {
    ref: defaultRef
  }, mode !== IndexFiltersMode.Filtering ? /* @__PURE__ */ import_react282.default.createElement(Container, null, /* @__PURE__ */ import_react282.default.createElement(InlineStack, {
    align: "start",
    blockAlign: "center",
    gap: {
      xs: "0",
      md: "200"
    },
    wrap: false
  }, /* @__PURE__ */ import_react282.default.createElement("div", {
    className: classNames(styles98.TabsWrapper, mdDown && styles98.SmallScreenTabsWrapper, isLoading && styles98.TabsWrapperLoading)
  }, /* @__PURE__ */ import_react282.default.createElement("div", {
    className: styles98.TabsInner,
    style: {
      ...defaultStyle2,
      ...transitionStyles2[state]
    }
  }, /* @__PURE__ */ import_react282.default.createElement(Tabs, {
    tabs,
    selected,
    onSelect,
    disabled: Boolean(mode !== IndexFiltersMode.Default || disabled),
    canCreateNewView,
    onCreateNewView
  })), isLoading && mdDown && /* @__PURE__ */ import_react282.default.createElement("div", {
    className: styles98.TabsLoading
  }, /* @__PURE__ */ import_react282.default.createElement(Spinner, {
    size: "small"
  }))), /* @__PURE__ */ import_react282.default.createElement("div", {
    className: styles98.ActionWrap
  }, isLoading && !mdDown && /* @__PURE__ */ import_react282.default.createElement("div", {
    className: styles98.DesktopLoading
  }, isLoading ? /* @__PURE__ */ import_react282.default.createElement(Spinner, {
    size: "small"
  }) : null), mode === IndexFiltersMode.Default ? /* @__PURE__ */ import_react282.default.createElement(import_react282.default.Fragment, null, hideFilters && hideQueryField ? null : /* @__PURE__ */ import_react282.default.createElement(SearchFilterButton, {
    onClick: handleClickFilterButton,
    label: searchFilterAriaLabel,
    tooltipContent: searchFilterTooltip,
    disabled,
    hideFilters,
    hideQueryField,
    style: {
      ...defaultStyle2,
      ...transitionStyles2[state]
    }
  }), editColumnsMarkup, sortMarkup) : null, mode === IndexFiltersMode.EditingColumns ? updateButtonsMarkup : null))) : null)), /* @__PURE__ */ import_react282.default.createElement(Transition_default, {
    nodeRef: filteringRef,
    in: mode === IndexFiltersMode.Filtering,
    timeout: TRANSITION_DURATION2
  }, (state) => /* @__PURE__ */ import_react282.default.createElement("div", {
    ref: filteringRef
  }, mode === IndexFiltersMode.Filtering ? /* @__PURE__ */ import_react282.default.createElement(Filters, {
    queryValue,
    queryPlaceholder,
    onQueryChange: handleChangeSearch,
    onQueryClear: handleClearSearch,
    onQueryFocus: handleQueryFocus,
    onQueryBlur: handleQueryBlur,
    onAddFilterClick,
    filters,
    appliedFilters,
    onClearAll,
    disableFilters: disabled,
    hideFilters,
    hideQueryField,
    disableQueryField: disabled || disableQueryField,
    loading: loading || isActionLoading,
    focused: filtersFocused,
    mountedState: mdDown ? void 0 : state,
    borderlessQueryField: true,
    closeOnChildOverlayClick
  }, /* @__PURE__ */ import_react282.default.createElement("div", {
    className: styles98.ButtonWrap
  }, /* @__PURE__ */ import_react282.default.createElement(InlineStack, {
    gap: "200",
    align: "start",
    blockAlign: "center"
  }, /* @__PURE__ */ import_react282.default.createElement("div", {
    style: {
      ...defaultStyle2,
      ...transitionStyles2[state]
    }
  }, updateButtonsMarkup), sortMarkup))) : null))));
}
var import_react282, DEFAULT_IGNORED_TAGS, TRANSITION_DURATION2, defaultStyle2, transitionStyles2;
var init_IndexFilters = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/IndexFilters.js"() {
    import_react282 = __toESM(require_react());
    init_esm();
    init_css();
    init_use_event_listener();
    init_use_toggle();
    init_use_on_value_change();
    init_breakpoints2();
    init_types5();
    init_IndexFilters_css();
    init_useIsSticky();
    init_UpdateButtons();
    init_SortButton();
    init_Container();
    init_Tabs();
    init_SearchFilterButton();
    init_Filters();
    init_EditColumnsButton();
    init_hooks2();
    init_InlineStack();
    init_Spinner();
    DEFAULT_IGNORED_TAGS = ["INPUT", "SELECT", "TEXTAREA"];
    TRANSITION_DURATION2 = 150;
    defaultStyle2 = {
      transition: `opacity ${TRANSITION_DURATION2}ms var(--p-motion-ease)`,
      opacity: 0
    };
    transitionStyles2 = {
      entering: {
        opacity: 1
      },
      entered: {
        opacity: 1
      },
      exiting: {
        opacity: 0
      },
      exited: {
        opacity: 0
      },
      unmounted: {
        opacity: 0
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/IndexFilters/hooks/useSetIndexFiltersMode/useSetIndexFiltersMode.js
function useSetIndexFiltersMode(defaultMode = IndexFiltersMode.Default) {
  const [mode, setMode] = (0, import_react283.useState)(defaultMode);
  return {
    mode,
    setMode
  };
}
var import_react283;
var init_useSetIndexFiltersMode = __esm({
  "node_modules/@shopify/polaris/build/esm/components/IndexFilters/hooks/useSetIndexFiltersMode/useSetIndexFiltersMode.js"() {
    import_react283 = __toESM(require_react());
    init_types5();
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.css.js
var styles102;
var init_InlineCode_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.css.js"() {
    styles102 = {
      "Code": "Polaris-InlineCode__Code"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.js
var import_react284, InlineCode;
var init_InlineCode = __esm({
  "node_modules/@shopify/polaris/build/esm/components/InlineCode/InlineCode.js"() {
    import_react284 = __toESM(require_react());
    init_InlineCode_css();
    InlineCode = ({
      children
    }) => /* @__PURE__ */ import_react284.default.createElement("code", {
      className: styles102.Code
    }, children);
  }
});

// node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.css.js
var styles103;
var init_KeyboardKey_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.css.js"() {
    styles103 = {
      "KeyboardKey": "Polaris-KeyboardKey",
      "small": "Polaris-KeyboardKey--small"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.js
function KeyboardKey({
  children = "",
  size: size2
}) {
  const key = !size2 && children.length > 1 ? children.toLowerCase() : children.toUpperCase();
  const className = classNames(styles103.KeyboardKey, size2 && styles103[size2]);
  return /* @__PURE__ */ import_react285.default.createElement("kbd", {
    className
  }, key);
}
var import_react285;
var init_KeyboardKey = __esm({
  "node_modules/@shopify/polaris/build/esm/components/KeyboardKey/KeyboardKey.js"() {
    import_react285 = __toESM(require_react());
    init_css();
    init_KeyboardKey_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.css.js
var styles104;
var init_LegacyFilters_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.css.js"() {
    styles104 = {
      "LegacyFilters": "Polaris-LegacyFilters",
      "LegacyFiltersContainer": "Polaris-LegacyFilters__LegacyFiltersContainer",
      "LegacyFiltersContainerHeader": "Polaris-LegacyFilters__LegacyFiltersContainerHeader",
      "LegacyFiltersDesktopContainerContent": "Polaris-LegacyFilters__LegacyFiltersDesktopContainerContent",
      "LegacyFiltersMobileContainerContent": "Polaris-LegacyFilters__LegacyFiltersMobileContainerContent",
      "LegacyFiltersContainerFooter": "Polaris-LegacyFilters__LegacyFiltersContainerFooter",
      "LegacyFiltersMobileContainerFooter": "Polaris-LegacyFilters__LegacyFiltersMobileContainerFooter",
      "EmptyFooterState": "Polaris-LegacyFilters__EmptyFooterState",
      "FilterTriggerContainer": "Polaris-LegacyFilters__FilterTriggerContainer",
      "FilterTrigger": "Polaris-LegacyFilters__FilterTrigger",
      "FilterTriggerTitle": "Polaris-LegacyFilters__FilterTriggerTitle",
      "AppliedFilterBadgeContainer": "Polaris-LegacyFilters__AppliedFilterBadgeContainer",
      "open": "Polaris-LegacyFilters--open",
      "FilterTriggerLabelContainer": "Polaris-LegacyFilters__FilterTriggerLabelContainer",
      "first": "Polaris-LegacyFilters--first",
      "last": "Polaris-LegacyFilters--last",
      "FilterNodeContainer": "Polaris-LegacyFilters__FilterNodeContainer",
      "SearchIcon": "Polaris-LegacyFilters__SearchIcon",
      "Backdrop": "Polaris-LegacyFilters__Backdrop",
      "HelpText": "Polaris-LegacyFilters__HelpText",
      "TagsContainer": "Polaris-LegacyFilters__TagsContainer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.css.js
var styles105;
var init_ConnectedFilterControl_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.css.js"() {
    styles105 = {
      "ConnectedFilterControl": "Polaris-LegacyFilters-ConnectedFilterControl",
      "CenterContainer": "Polaris-LegacyFilters-ConnectedFilterControl__CenterContainer",
      "right": "Polaris-LegacyFilters-ConnectedFilterControl--right",
      "Item": "Polaris-LegacyFilters-ConnectedFilterControl__Item",
      "Item-focused": "Polaris-LegacyFilters-ConnectedFilterControl__Item--focused",
      "ProxyButtonContainer": "Polaris-LegacyFilters-ConnectedFilterControl__ProxyButtonContainer",
      "RightContainer": "Polaris-LegacyFilters-ConnectedFilterControl__RightContainer",
      "MoreFiltersButtonContainer": "Polaris-LegacyFilters-ConnectedFilterControl__MoreFiltersButtonContainer",
      "queryFieldHidden": "Polaris-LegacyFilters-ConnectedFilterControl--queryFieldHidden",
      "RightContainerWithoutMoreFilters": "Polaris-LegacyFilters-ConnectedFilterControl__RightContainerWithoutMoreFilters",
      "onlyButtonVisible": "Polaris-LegacyFilters-ConnectedFilterControl--onlyButtonVisible",
      "Wrapper": "Polaris-LegacyFilters-ConnectedFilterControl__Wrapper",
      "AuxiliaryContainer": "Polaris-LegacyFilters-ConnectedFilterControl__AuxiliaryContainer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/components/Item/Item.js
function Item9({
  children
}) {
  const {
    value: focused,
    setTrue: forceTrueFocused,
    setFalse: forceFalseFocused
  } = useToggle(false);
  const className = classNames(styles105.Item, focused && styles105["Item-focused"]);
  return /* @__PURE__ */ import_react286.default.createElement("div", {
    onBlur: forceFalseFocused,
    onFocus: forceTrueFocused,
    className
  }, children);
}
var import_react286;
var init_Item8 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/components/Item/Item.js"() {
    import_react286 = __toESM(require_react());
    init_css();
    init_use_toggle();
    init_ConnectedFilterControl_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.js
var import_react287, FILTER_FIELD_MIN_WIDTH, ConnectedFilterControl;
var init_ConnectedFilterControl = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/ConnectedFilterControl/ConnectedFilterControl.js"() {
    import_react287 = __toESM(require_react());
    init_debounce();
    init_css();
    init_ConnectedFilterControl_css();
    init_Item8();
    init_EventListener();
    init_Button();
    init_Popover();
    FILTER_FIELD_MIN_WIDTH = 150;
    ConnectedFilterControl = class extends import_react287.Component {
      constructor(...args) {
        super(...args);
        this.state = {
          availableWidth: 0,
          proxyButtonsWidth: {}
        };
        this.container = /* @__PURE__ */ (0, import_react287.createRef)();
        this.proxyButtonContainer = /* @__PURE__ */ (0, import_react287.createRef)();
        this.moreFiltersButtonContainer = /* @__PURE__ */ (0, import_react287.createRef)();
        this.handleResize = debounce(() => {
          this.measureProxyButtons();
          this.measureAvailableWidth();
        }, 40, {
          leading: true,
          trailing: true,
          maxWait: 40
        });
      }
      componentDidMount() {
        this.handleResize();
      }
      render() {
        const {
          children,
          rightPopoverableActions,
          rightAction,
          auxiliary,
          forceShowMorefiltersButton = true,
          queryFieldHidden
        } = this.props;
        const actionsToRender = rightPopoverableActions != null ? this.getActionsToRender(rightPopoverableActions) : [];
        const className = classNames(styles105.ConnectedFilterControl, rightPopoverableActions && styles105.right);
        const shouldRenderMoreFiltersButton = forceShowMorefiltersButton || rightPopoverableActions && rightPopoverableActions.length !== actionsToRender.length;
        const RightContainerClassName = classNames(styles105.RightContainer, !shouldRenderMoreFiltersButton && styles105.RightContainerWithoutMoreFilters, queryFieldHidden && styles105.queryFieldHidden);
        const rightMarkup = actionsToRender.length > 0 ? /* @__PURE__ */ import_react287.default.createElement("div", {
          className: RightContainerClassName
        }, this.popoverFrom(actionsToRender)) : null;
        const moreFiltersButtonContainerClassname = classNames(styles105.MoreFiltersButtonContainer, actionsToRender.length === 0 && styles105.onlyButtonVisible);
        const rightActionMarkup = rightAction ? /* @__PURE__ */ import_react287.default.createElement("div", {
          ref: this.moreFiltersButtonContainer,
          className: moreFiltersButtonContainerClassname
        }, shouldRenderMoreFiltersButton && /* @__PURE__ */ import_react287.default.createElement(Item9, null, rightAction)) : null;
        const proxyButtonMarkup = rightPopoverableActions ? /* @__PURE__ */ import_react287.default.createElement("div", {
          className: styles105.ProxyButtonContainer,
          ref: this.proxyButtonContainer,
          "aria-hidden": true
        }, rightPopoverableActions.map((action) => /* @__PURE__ */ import_react287.default.createElement("div", {
          key: action.key,
          "data-key": action.key
        }, this.activatorButtonFrom(action, {
          proxy: true
        })))) : null;
        const auxMarkup = auxiliary ? /* @__PURE__ */ import_react287.default.createElement("div", {
          className: styles105.AuxiliaryContainer
        }, auxiliary) : null;
        return /* @__PURE__ */ import_react287.default.createElement(import_react287.default.Fragment, null, proxyButtonMarkup, /* @__PURE__ */ import_react287.default.createElement("div", {
          className: styles105.Wrapper
        }, /* @__PURE__ */ import_react287.default.createElement("div", {
          className,
          ref: this.container
        }, children ? /* @__PURE__ */ import_react287.default.createElement("div", {
          className: styles105.CenterContainer
        }, /* @__PURE__ */ import_react287.default.createElement(Item9, null, children)) : null, rightMarkup, rightActionMarkup, /* @__PURE__ */ import_react287.default.createElement(EventListener, {
          event: "resize",
          handler: this.handleResize
        })), auxMarkup));
      }
      measureProxyButtons() {
        if (this.proxyButtonContainer.current) {
          const proxyButtonsWidth = {};
          const tolerance = 78;
          if (this.proxyButtonContainer.current) {
            Array.from(this.proxyButtonContainer.current.children).forEach((element) => {
              const buttonWidth = element.getBoundingClientRect().width + tolerance;
              const buttonKey = element instanceof HTMLElement && element.dataset.key;
              if (buttonKey) {
                proxyButtonsWidth[buttonKey] = buttonWidth;
              }
            });
          }
          this.setState({
            proxyButtonsWidth
          });
        }
      }
      measureAvailableWidth() {
        if (this.container.current && this.moreFiltersButtonContainer.current) {
          const containerWidth = this.container.current.getBoundingClientRect().width;
          const moreFiltersButtonWidth = this.moreFiltersButtonContainer.current.getBoundingClientRect().width;
          const filtersActionWidth = 0;
          const filterFieldMinWidth = this.props.queryFieldHidden ? 0 : FILTER_FIELD_MIN_WIDTH;
          const availableWidth = containerWidth - filterFieldMinWidth - moreFiltersButtonWidth - filtersActionWidth;
          this.setState({
            availableWidth
          });
        }
      }
      getActionsToRender(actions) {
        let remainingWidth = this.state.availableWidth;
        const actionsToReturn = [];
        for (let i = 0; remainingWidth > 0 && i < actions.length; i++) {
          const action = actions[i];
          const actionWidth = this.state.proxyButtonsWidth[action.key];
          if (actionWidth <= remainingWidth) {
            actionsToReturn.push(action);
            remainingWidth -= actionWidth;
          } else {
            break;
          }
        }
        return actionsToReturn;
      }
      activatorButtonFrom(action, options) {
        const id = options?.proxy ? void 0 : `Activator-${action.key}`;
        return /* @__PURE__ */ import_react287.default.createElement(Button, {
          onClick: action.onAction,
          disclosure: true,
          disabled: this.props.disabled || action.disabled,
          id,
          size: "large"
        }, action.content);
      }
      popoverFrom(actions) {
        return actions.map((action) => {
          return /* @__PURE__ */ import_react287.default.createElement(Item9, {
            key: action.key
          }, /* @__PURE__ */ import_react287.default.createElement(Popover2, {
            active: action.popoverOpen,
            activator: this.activatorButtonFrom(action),
            onClose: action.onAction,
            preferredAlignment: "left",
            sectioned: true
          }, action.popoverContent));
        });
      }
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/TagsWrapper/TagsWrapper.js
function TagsWrapper({
  children,
  hidden
}) {
  if (hidden) {
    return /* @__PURE__ */ import_react288.default.createElement(Text, {
      as: "span",
      visuallyHidden: true
    }, children);
  }
  return /* @__PURE__ */ import_react288.default.createElement(import_react288.default.Fragment, null, children);
}
var import_react288;
var init_TagsWrapper = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyFilters/components/TagsWrapper/TagsWrapper.js"() {
    import_react288 = __toESM(require_react());
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tag/Tag.css.js
var styles106;
var init_Tag_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tag/Tag.css.js"() {
    styles106 = {
      "Tag": "Polaris-Tag",
      "disabled": "Polaris-Tag--disabled",
      "clickable": "Polaris-Tag--clickable",
      "linkable": "Polaris-Tag--linkable",
      "removable": "Polaris-Tag--removable",
      "Button": "Polaris-Tag__Button",
      "Link": "Polaris-Tag__Link",
      "segmented": "Polaris-Tag--segmented",
      "Text": "Polaris-Tag__Text",
      "sizeLarge": "Polaris-Tag--sizeLarge",
      "overlay": "Polaris-Tag--overlay"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Tag/Tag.js
function Tag({
  children,
  disabled = false,
  onClick,
  onRemove,
  accessibilityLabel,
  url,
  size: size2
}) {
  const i18n = useI18n();
  const segmented = onRemove && url;
  const className = classNames(styles106.Tag, disabled && styles106.disabled, onClick && styles106.clickable, onRemove && styles106.removable, url && !disabled && styles106.linkable, segmented && styles106.segmented, size2 && styles106[variationName("size", size2)]);
  let tagTitle = accessibilityLabel;
  if (!tagTitle) {
    tagTitle = typeof children === "string" ? children : void 0;
  }
  const tagText = /* @__PURE__ */ import_react289.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    truncate: true
  }, /* @__PURE__ */ import_react289.default.createElement("span", {
    title: tagTitle,
    className: styles106.Text
  }, children));
  if (onClick) {
    return /* @__PURE__ */ import_react289.default.createElement("button", {
      type: "button",
      disabled,
      className,
      onClick
    }, tagText);
  }
  const ariaLabel = i18n.translate("Polaris.Tag.ariaLabel", {
    children: tagTitle || ""
  });
  const removeButton = onRemove ? /* @__PURE__ */ import_react289.default.createElement("button", {
    type: "button",
    "aria-label": ariaLabel,
    className: classNames(styles106.Button, segmented && styles106.segmented),
    onClick: onRemove,
    onMouseUp: handleMouseUpByBlurring,
    disabled
  }, /* @__PURE__ */ import_react289.default.createElement(Icon, {
    source: SvgXSmallIcon
  })) : null;
  const tagContent = url && !disabled ? /* @__PURE__ */ import_react289.default.createElement("a", {
    className: classNames(styles106.Link, segmented && styles106.segmented),
    href: url
  }, tagText) : tagText;
  return /* @__PURE__ */ import_react289.default.createElement("span", {
    className,
    "aria-disabled": disabled
  }, tagContent, size2 === "large" && /* @__PURE__ */ import_react289.default.createElement("span", {
    className: styles106.overlay
  }), removeButton);
}
var import_react289;
var init_Tag = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Tag/Tag.js"() {
    import_react289 = __toESM(require_react());
    init_dist();
    init_css();
    init_focus();
    init_Tag_css();
    init_hooks2();
    init_Text();
    init_Icon();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.css.js
var styles107;
var init_Sheet_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.css.js"() {
    styles107 = {
      "Sheet": "Polaris-Sheet",
      "Container": "Polaris-Sheet__Container",
      "Bottom": "Polaris-Sheet__Bottom",
      "enterBottom": "Polaris-Sheet--enterBottom",
      "enterBottomActive": "Polaris-Sheet--enterBottomActive",
      "exitBottom": "Polaris-Sheet--exitBottom",
      "exitBottomActive": "Polaris-Sheet--exitBottomActive",
      "Right": "Polaris-Sheet__Right",
      "enterRight": "Polaris-Sheet--enterRight",
      "enterRightActive": "Polaris-Sheet--enterRightActive",
      "exitRight": "Polaris-Sheet--exitRight",
      "exitRightActive": "Polaris-Sheet--exitRightActive"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.js
function Sheet({
  children,
  open,
  onClose,
  onEntered,
  onExit,
  accessibilityLabel,
  activator
}) {
  const theme = useTheme();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const container = (0, import_react290.useRef)(null);
  const activatorRef = (0, import_react290.useRef)(null);
  const handleClose = (0, import_react290.useCallback)(() => {
    onClose();
    const activatorElement = activator && isRef3(activator) ? activator && activator.current : activatorRef.current;
    if (activatorElement) {
      requestAnimationFrame(() => focusFirstFocusableNode(activatorElement));
    }
  }, [activator, onClose]);
  (0, import_react290.useEffect)(() => {
    if (true) {
      console.warn("Deprecation: <Sheet /> is deprecated. This component might be removed in a future major version of Polaris. Use <Modal /> instead or avoid modal patterns all together.");
    }
  }, []);
  const activatorMarkup = activator && !isRef3(activator) ? /* @__PURE__ */ import_react290.default.createElement("div", {
    ref: activatorRef
  }, activator) : null;
  return /* @__PURE__ */ import_react290.default.createElement(import_react290.default.Fragment, null, activatorMarkup, /* @__PURE__ */ import_react290.default.createElement(Portal, {
    idPrefix: "sheet"
  }, /* @__PURE__ */ import_react290.default.createElement(CSSTransition_default, {
    nodeRef: container,
    classNames: isNavigationCollapsed ? BOTTOM_CLASS_NAMES : RIGHT_CLASS_NAMES,
    timeout: parseInt(theme.motion["motion-duration-300"], 10),
    in: open,
    mountOnEnter: true,
    unmountOnExit: true,
    onEntered,
    onExit
  }, /* @__PURE__ */ import_react290.default.createElement("div", Object.assign({
    className: styles107.Container
  }, layer.props, overlay.props, {
    ref: container
  }), /* @__PURE__ */ import_react290.default.createElement(TrapFocus, {
    trapping: open
  }, /* @__PURE__ */ import_react290.default.createElement("div", {
    role: "dialog",
    "aria-modal": true,
    tabIndex: -1,
    className: styles107.Sheet,
    "aria-label": accessibilityLabel
  }, children)))), /* @__PURE__ */ import_react290.default.createElement(KeypressListener, {
    keyCode: Key.Escape,
    handler: handleClose
  }), open && /* @__PURE__ */ import_react290.default.createElement(Backdrop, {
    transparent: true,
    onClick: handleClose
  })));
}
function isRef3(ref) {
  return Object.prototype.hasOwnProperty.call(ref, "current");
}
var import_react290, BOTTOM_CLASS_NAMES, RIGHT_CLASS_NAMES;
var init_Sheet = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Sheet/Sheet.js"() {
    import_react290 = __toESM(require_react());
    init_esm();
    init_focus();
    init_css();
    init_types();
    init_shared();
    init_use_theme();
    init_Sheet_css();
    init_hooks7();
    init_Portal();
    init_TrapFocus();
    init_KeypressListener();
    init_Backdrop();
    BOTTOM_CLASS_NAMES = {
      enter: classNames(styles107.Bottom, styles107.enterBottom),
      enterActive: classNames(styles107.Bottom, styles107.enterBottomActive),
      exit: classNames(styles107.Bottom, styles107.exitBottom),
      exitActive: classNames(styles107.Bottom, styles107.exitBottomActive)
    };
    RIGHT_CLASS_NAMES = {
      enter: classNames(styles107.Right, styles107.enterRight),
      enterActive: classNames(styles107.Right, styles107.enterRightActive),
      exit: classNames(styles107.Right, styles107.exitRight),
      exitActive: classNames(styles107.Right, styles107.exitRightActive)
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.js
function getShortcutFilters(filters) {
  return filters.filter((filter) => filter.shortcut === true);
}
function LegacyFilters(props) {
  const i18n = useI18n();
  const mediaQuery = useMediaQuery();
  return /* @__PURE__ */ import_react291.default.createElement(LegacyFiltersInner, Object.assign({}, props, {
    i18n,
    mediaQuery
  }));
}
var import_react291, Suffix, LegacyFiltersInner;
var init_LegacyFilters = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyFilters/LegacyFilters.js"() {
    import_react291 = __toESM(require_react());
    init_dist();
    init_css();
    init_focus();
    init_within_filter_context();
    init_types();
    init_LegacyFilters_css();
    init_context15();
    init_Collapsible();
    init_ConnectedFilterControl();
    init_TagsWrapper();
    init_Tag();
    init_Sheet();
    init_hooks2();
    init_hooks7();
    init_ScrollLock();
    init_Badge();
    init_Text();
    init_Icon();
    init_Focus();
    init_Button();
    init_TextField();
    init_Scrollable();
    init_KeypressListener();
    init_LegacyStack();
    (function(Suffix2) {
      Suffix2["Filter"] = "Filter";
      Suffix2["Shortcut"] = "Shortcut";
    })(Suffix || (Suffix = {}));
    LegacyFiltersInner = class extends import_react291.Component {
      constructor(...args) {
        super(...args);
        this.state = {
          open: false,
          readyForFocus: false
        };
        this.moreFiltersButtonContainer = /* @__PURE__ */ (0, import_react291.createRef)();
        this.moreFiltersDoneButtonContainer = /* @__PURE__ */ (0, import_react291.createRef)();
        this.focusNode = /* @__PURE__ */ (0, import_react291.createRef)();
        this.closeFilters = () => {
          this.setState({
            open: false
          }, () => {
            if (this.moreFiltersButtonContainer.current) {
              focusFirstFocusableNode(this.moreFiltersButtonContainer.current, false);
            }
          });
        };
        this.toggleFilters = () => {
          if (this.state.open === true) {
            this.closeFilters();
          } else {
            this.openFilters();
          }
        };
        this.setReadyForFocus = (newState) => () => {
          this.setState({
            readyForFocus: newState
          });
        };
        this.handleClearAll = () => {
          this.props.onClearAll();
          this.moreFiltersDoneButtonContainer.current && focusFirstFocusableNode(this.moreFiltersDoneButtonContainer.current, false);
        };
      }
      render() {
        const {
          filters,
          queryValue,
          onQueryBlur,
          onQueryChange,
          onQueryFocus,
          focused,
          onClearAll,
          appliedFilters,
          onQueryClear,
          queryPlaceholder,
          children,
          disabled = false,
          helpText,
          hideTags,
          hideQueryField,
          disableQueryField = false,
          i18n,
          mediaQuery: {
            isNavigationCollapsed
          }
        } = this.props;
        const {
          resourceName
        } = this.context;
        const {
          open,
          readyForFocus
        } = this.state;
        const backdropMarkup = open ? /* @__PURE__ */ import_react291.default.createElement(import_react291.default.Fragment, null, /* @__PURE__ */ import_react291.default.createElement(ScrollLock, null), /* @__PURE__ */ import_react291.default.createElement("div", {
          className: styles104.Backdrop,
          onClick: this.closeFilters
        })) : null;
        const filtersContentMarkup = filters.map((filter, index) => {
          const filterIsOpen = this.state[`${filter.key}${Suffix.Filter}`] === true;
          const icon = filterIsOpen ? SvgChevronUpIcon : SvgChevronDownIcon;
          const className = classNames(styles104.FilterTriggerContainer, filterIsOpen && styles104.open, index === 0 && styles104.first, filters.length !== 1 && index === filters.length - 1 && styles104.last);
          const appliedFilterContent = this.getAppliedFilterContent(filter.key);
          const appliedFilterBadgeMarkup = appliedFilterContent ? /* @__PURE__ */ import_react291.default.createElement("div", {
            className: styles104.AppliedFilterBadgeContainer
          }, /* @__PURE__ */ import_react291.default.createElement(Badge, {
            tone: "new"
          }, appliedFilterContent)) : null;
          const collapsibleID = `${filter.key}Collapsible`;
          const buttonClassName = classNames(styles104.FilterTrigger);
          return /* @__PURE__ */ import_react291.default.createElement("div", {
            key: filter.key,
            className
          }, /* @__PURE__ */ import_react291.default.createElement("button", {
            onClick: () => this.toggleFilter(filter.key),
            className: buttonClassName,
            id: `${filter.key}ToggleButton`,
            type: "button",
            "aria-controls": collapsibleID,
            "aria-expanded": filterIsOpen
          }, /* @__PURE__ */ import_react291.default.createElement("div", {
            className: styles104.FilterTriggerLabelContainer
          }, /* @__PURE__ */ import_react291.default.createElement("h3", {
            className: styles104.FilterTriggerTitle
          }, /* @__PURE__ */ import_react291.default.createElement(Text, {
            as: "span",
            tone: this.props.disabled || filter.disabled ? "subdued" : void 0
          }, filter.label)), /* @__PURE__ */ import_react291.default.createElement("span", {
            className: styles104.FilterTriggerIcon
          }, /* @__PURE__ */ import_react291.default.createElement(Icon, {
            source: icon,
            tone: "base"
          }))), appliedFilterBadgeMarkup), /* @__PURE__ */ import_react291.default.createElement(Collapsible, {
            id: collapsibleID,
            open: filterIsOpen,
            onAnimationEnd: this.setReadyForFocus(true)
          }, /* @__PURE__ */ import_react291.default.createElement("div", {
            className: styles104.FilterNodeContainer
          }, /* @__PURE__ */ import_react291.default.createElement(Focus, {
            disabled: !filterIsOpen || !readyForFocus || !open,
            root: this.focusNode
          }, this.generateFilterMarkup(filter)))));
        });
        const appliedFiltersCount = appliedFilters ? appliedFilters.length : 0;
        const moreFiltersLabel = hideTags && appliedFiltersCount > 0 ? i18n.translate("Polaris.Filters.moreFiltersWithCount", {
          count: appliedFiltersCount
        }) : i18n.translate("Polaris.Filters.moreFilters");
        const rightActionMarkup = filters.length ? /* @__PURE__ */ import_react291.default.createElement("div", {
          ref: this.moreFiltersButtonContainer
        }, /* @__PURE__ */ import_react291.default.createElement(Button, {
          onClick: this.toggleFilters,
          disabled,
          size: "large"
        }, moreFiltersLabel)) : null;
        const filterResourceName = resourceName || {
          singular: i18n.translate("Polaris.ResourceList.defaultItemSingular"),
          plural: i18n.translate("Polaris.ResourceList.defaultItemPlural")
        };
        const transformedFilters = this.transformFilters(filters);
        const filtersControlMarkup = /* @__PURE__ */ import_react291.default.createElement(ConnectedFilterControl, {
          rightPopoverableActions: transformedFilters,
          rightAction: rightActionMarkup,
          auxiliary: children,
          disabled,
          forceShowMorefiltersButton: filters.length > transformedFilters.length,
          queryFieldHidden: hideQueryField
        }, hideQueryField ? null : /* @__PURE__ */ import_react291.default.createElement(TextField, {
          placeholder: queryPlaceholder || i18n.translate("Polaris.Filters.filter", {
            resourceName: filterResourceName.plural
          }),
          onChange: onQueryChange,
          onBlur: onQueryBlur,
          onFocus: onQueryFocus,
          value: queryValue,
          focused,
          label: queryPlaceholder || i18n.translate("Polaris.Filters.filter", {
            resourceName: filterResourceName.plural
          }),
          labelHidden: true,
          prefix: /* @__PURE__ */ import_react291.default.createElement("span", {
            className: styles104.SearchIcon
          }, /* @__PURE__ */ import_react291.default.createElement(Icon, {
            source: SvgSearchIcon
          })),
          clearButton: true,
          onClearButtonClick: onQueryClear,
          disabled: disabled || disableQueryField,
          autoComplete: "off"
        }));
        const filtersContainerHeaderClassname = classNames(styles104.LegacyFiltersContainerHeader);
        const filtersDesktopHeaderMarkup = /* @__PURE__ */ import_react291.default.createElement("div", {
          className: filtersContainerHeaderClassname
        }, /* @__PURE__ */ import_react291.default.createElement(Text, {
          variant: "headingLg",
          as: "h3"
        }, moreFiltersLabel), /* @__PURE__ */ import_react291.default.createElement(Button, {
          icon: SvgXSmallIcon,
          variant: "plain",
          accessibilityLabel: i18n.translate("Polaris.Filters.cancel"),
          onClick: this.closeFilters
        }));
        const filtersMobileHeaderMarkup = /* @__PURE__ */ import_react291.default.createElement("div", {
          className: filtersContainerHeaderClassname
        }, /* @__PURE__ */ import_react291.default.createElement(Button, {
          icon: SvgXSmallIcon,
          variant: "plain",
          accessibilityLabel: i18n.translate("Polaris.Filters.cancel"),
          onClick: this.closeFilters
        }), /* @__PURE__ */ import_react291.default.createElement(Text, {
          variant: "headingLg",
          as: "h3"
        }, moreFiltersLabel), /* @__PURE__ */ import_react291.default.createElement(Button, {
          onClick: this.closeFilters,
          variant: "primary"
        }, i18n.translate("Polaris.Filters.done")));
        const filtersDesktopFooterClassname = classNames(styles104.LegacyFiltersContainerFooter);
        const filtersDesktopFooterMarkup = /* @__PURE__ */ import_react291.default.createElement("div", {
          className: filtersDesktopFooterClassname
        }, /* @__PURE__ */ import_react291.default.createElement(Button, {
          onClick: this.handleClearAll,
          disabled: !this.hasAppliedFilters()
        }, i18n.translate("Polaris.Filters.clearAllFilters")), /* @__PURE__ */ import_react291.default.createElement("div", {
          ref: this.moreFiltersDoneButtonContainer
        }, /* @__PURE__ */ import_react291.default.createElement(Button, {
          onClick: this.closeFilters,
          variant: "primary"
        }, i18n.translate("Polaris.Filters.done"))));
        const filtersMobileFooterMarkup = /* @__PURE__ */ import_react291.default.createElement("div", {
          className: styles104.LegacyFiltersMobileContainerFooter
        }, this.hasAppliedFilters() ? /* @__PURE__ */ import_react291.default.createElement(Button, {
          onClick: onClearAll,
          fullWidth: true
        }, i18n.translate("Polaris.Filters.clearAllFilters")) : /* @__PURE__ */ import_react291.default.createElement("div", {
          className: styles104.EmptyFooterState
        }, /* @__PURE__ */ import_react291.default.createElement(Text, {
          tone: "subdued",
          as: "span"
        }, /* @__PURE__ */ import_react291.default.createElement("p", null, i18n.translate("Polaris.Filters.noFiltersApplied")))));
        const shouldHideTagsContainer = !appliedFilters || appliedFilters.length < 1;
        const tagsMarkup = !hideTags ? /* @__PURE__ */ import_react291.default.createElement(TagsWrapper, {
          hidden: shouldHideTagsContainer
        }, /* @__PURE__ */ import_react291.default.createElement("div", {
          className: styles104.TagsContainer,
          "aria-live": "polite"
        }, (appliedFilters || []).map((filter) => {
          return /* @__PURE__ */ import_react291.default.createElement(Tag, {
            key: filter.key,
            onRemove: () => {
              filter.onRemove(filter.key);
            },
            disabled
          }, filter.label);
        }))) : null;
        const filtersMobileContainerContentClassName = classNames(styles104.LegacyFiltersMobileContainerContent);
        const filtersDesktopContainerContentClassName = classNames(styles104.LegacyFiltersDesktopContainerContent);
        const filtersContainerMarkup = isNavigationCollapsed ? /* @__PURE__ */ import_react291.default.createElement(Sheet, {
          accessibilityLabel: moreFiltersLabel,
          open,
          onClose: this.closeFilters,
          onEntered: this.setReadyForFocus(true),
          onExit: this.setReadyForFocus(false)
        }, filtersMobileHeaderMarkup, /* @__PURE__ */ import_react291.default.createElement(Scrollable, {
          className: filtersMobileContainerContentClassName,
          shadow: true
        }, filtersContentMarkup, filtersMobileFooterMarkup)) : /* @__PURE__ */ import_react291.default.createElement(Sheet, {
          accessibilityLabel: moreFiltersLabel,
          open,
          onClose: this.closeFilters,
          onEntered: this.setReadyForFocus(true),
          onExit: this.setReadyForFocus(false)
        }, /* @__PURE__ */ import_react291.default.createElement("div", {
          className: styles104.LegacyFiltersContainer
        }, filtersDesktopHeaderMarkup, /* @__PURE__ */ import_react291.default.createElement(Scrollable, {
          className: filtersDesktopContainerContentClassName,
          shadow: true
        }, filtersContentMarkup), filtersDesktopFooterMarkup));
        const helpTextMarkup = helpText ? /* @__PURE__ */ import_react291.default.createElement("div", {
          id: "FiltersHelpText",
          className: styles104.HelpText
        }, /* @__PURE__ */ import_react291.default.createElement(Text, {
          tone: "subdued",
          as: "span"
        }, helpText)) : null;
        return /* @__PURE__ */ import_react291.default.createElement(WithinFilterContext.Provider, {
          value: true
        }, /* @__PURE__ */ import_react291.default.createElement("div", {
          className: styles104.LegacyFilters
        }, filtersControlMarkup, filtersContainerMarkup, tagsMarkup, helpTextMarkup, backdropMarkup, /* @__PURE__ */ import_react291.default.createElement(KeypressListener, {
          keyCode: Key.Escape,
          handler: this.closeFilters
        })));
      }
      hasAppliedFilters() {
        const {
          appliedFilters,
          queryValue
        } = this.props;
        const filtersApplied = Boolean(appliedFilters && appliedFilters.length > 0);
        const queryApplied = Boolean(queryValue && queryValue !== "");
        return filtersApplied || queryApplied;
      }
      getAppliedFilterContent(key) {
        const {
          appliedFilters
        } = this.props;
        if (!appliedFilters) {
          return void 0;
        }
        const filter = appliedFilters.find((filter2) => filter2.key === key);
        return filter == null ? void 0 : filter.label;
      }
      getAppliedFilterRemoveHandler(key) {
        const {
          appliedFilters
        } = this.props;
        if (!appliedFilters) {
          return void 0;
        }
        const filter = appliedFilters.find((filter2) => filter2.key === key);
        return filter == null ? void 0 : filter.onRemove;
      }
      openFilters() {
        this.setState({
          open: true
        });
      }
      toggleFilter(key) {
        if (this.state[`${key}${Suffix.Filter}`] === true) {
          this.setState({
            readyForFocus: false,
            [`${key}${Suffix.Filter}`]: false
          });
        } else {
          this.setState({
            readyForFocus: false,
            [`${key}${Suffix.Filter}`]: true
          });
        }
      }
      openFilterShortcut(key) {
        this.setState({
          [`${key}${Suffix.Shortcut}`]: true
        });
      }
      closeFilterShortcut(key) {
        this.setState({
          [`${key}${Suffix.Shortcut}`]: false
        });
      }
      toggleFilterShortcut(key) {
        if (this.state[`${key}${Suffix.Shortcut}`] === true) {
          this.closeFilterShortcut(key);
        } else {
          this.openFilterShortcut(key);
        }
      }
      transformFilters(filters) {
        const transformedActions = [];
        getShortcutFilters(filters).forEach((filter) => {
          const {
            key,
            label,
            disabled
          } = filter;
          transformedActions.push({
            popoverContent: this.generateFilterMarkup(filter),
            popoverOpen: Boolean(this.state[`${key}${Suffix.Shortcut}`]),
            key,
            content: label,
            disabled,
            onAction: () => this.toggleFilterShortcut(key)
          });
        });
        return transformedActions;
      }
      generateFilterMarkup(filter) {
        const i18n = this.props.i18n;
        const removeCallback = this.getAppliedFilterRemoveHandler(filter.key);
        const removeHandler = removeCallback == null ? void 0 : () => {
          removeCallback(filter.key);
        };
        const clearButtonMarkup = !filter.hideClearButton && /* @__PURE__ */ import_react291.default.createElement(Button, {
          variant: "plain",
          disabled: removeHandler == null,
          onClick: removeHandler,
          accessibilityLabel: i18n.translate("Polaris.Filters.clearLabel", {
            filterName: filter.label
          })
        }, i18n.translate("Polaris.Filters.clear"));
        return /* @__PURE__ */ import_react291.default.createElement("div", {
          ref: this.focusNode
        }, /* @__PURE__ */ import_react291.default.createElement(LegacyStack, {
          vertical: true,
          spacing: "tight"
        }, filter.filter, clearButtonMarkup));
      }
    };
    LegacyFiltersInner.contextType = ResourceListContext;
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/utilities.js
function getVisibleAndHiddenTabIndices2(tabs, selected, disclosureWidth, tabWidths, containerWidth) {
  const sumTabWidths = tabWidths.reduce((sum, width2) => sum + width2, 0);
  const arrayOfTabIndices = tabs.map((_, index) => {
    return index;
  });
  const visibleTabs = [];
  const hiddenTabs = [];
  if (containerWidth > sumTabWidths) {
    visibleTabs.push(...arrayOfTabIndices);
  } else {
    visibleTabs.push(selected);
    let tabListWidth = tabWidths[selected];
    arrayOfTabIndices.forEach((currentTabIndex) => {
      if (currentTabIndex !== selected) {
        const currentTabWidth = tabWidths[currentTabIndex];
        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {
          hiddenTabs.push(currentTabIndex);
          return;
        }
        visibleTabs.push(currentTabIndex);
        tabListWidth += currentTabWidth;
      }
    });
  }
  return {
    visibleTabs,
    hiddenTabs
  };
}
var init_utilities11 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/utilities.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.css.js
var styles108;
var init_LegacyTabs_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.css.js"() {
    styles108 = {
      "LegacyTabs": "Polaris-LegacyTabs",
      "fitted": "Polaris-LegacyTabs--fitted",
      "TabContainer": "Polaris-LegacyTabs__TabContainer",
      "Title": "Polaris-LegacyTabs__Title",
      "fillSpace": "Polaris-LegacyTabs--fillSpace",
      "Tab": "Polaris-LegacyTabs__Tab",
      "Tab-selected": "Polaris-LegacyTabs__Tab--selected",
      "titleWithIcon": "Polaris-LegacyTabs--titleWithIcon",
      "Panel": "Polaris-LegacyTabs__Panel",
      "Panel-hidden": "Polaris-LegacyTabs__Panel--hidden",
      "Item": "Polaris-LegacyTabs__Item",
      "DisclosureTab": "Polaris-LegacyTabs__DisclosureTab",
      "DisclosureTab-visible": "Polaris-LegacyTabs__DisclosureTab--visible",
      "DisclosureActivator": "Polaris-LegacyTabs__DisclosureActivator",
      "TabMeasurer": "Polaris-LegacyTabs__TabMeasurer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Panel/Panel.js
function Panel2({
  hidden,
  id,
  tabID,
  children
}) {
  const className = classNames(styles108.Panel, hidden && styles108["Panel-hidden"]);
  return /* @__PURE__ */ import_react292.default.createElement("div", {
    className,
    id,
    role: "tabpanel",
    "aria-labelledby": tabID,
    tabIndex: -1
  }, children);
}
var import_react292;
var init_Panel2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Panel/Panel.js"() {
    import_react292 = __toESM(require_react());
    init_css();
    init_LegacyTabs_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Tab/Tab.js
function Tab2({
  id,
  focused,
  siblingTabHasFocus,
  children,
  onClick,
  selected,
  url,
  panelID,
  measuring,
  accessibilityLabel
}) {
  const wasSelected = (0, import_react293.useRef)(selected);
  const panelFocused = (0, import_react293.useRef)(false);
  const node = (0, import_react293.useRef)(null);
  (0, import_react293.useEffect)(() => {
    if (measuring) {
      return;
    }
    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id;
    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {
      focusPanelID2(panelID);
      panelFocused.current = true;
    }
    if (selected && !wasSelected.current && panelID != null) {
      focusPanelID2(panelID);
    } else if (focused && node.current != null) {
      focusFirstFocusableNode(node.current);
    }
    wasSelected.current = selected;
  }, [focused, id, measuring, panelID, selected]);
  const handleClick = onClick && onClick.bind(null, id);
  const className = classNames(styles108.Tab, selected && styles108["Tab-selected"]);
  let tabIndex;
  if (selected && !siblingTabHasFocus && !measuring) {
    tabIndex = 0;
  } else if (focused && !measuring) {
    tabIndex = 0;
  } else {
    tabIndex = -1;
  }
  const tabContainerClassNames = classNames(styles108.TabContainer, selected && styles108.Underline);
  const markup = url ? /* @__PURE__ */ import_react293.default.createElement(UnstyledLink, {
    id,
    url,
    role: "tab",
    tabIndex,
    onClick: handleClick,
    className,
    "aria-selected": selected,
    "aria-controls": panelID,
    "aria-label": accessibilityLabel,
    onMouseUp: handleMouseUpByBlurring
  }, /* @__PURE__ */ import_react293.default.createElement("span", {
    className: styles108.Title
  }, /* @__PURE__ */ import_react293.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    fontWeight: "semibold"
  }, children))) : /* @__PURE__ */ import_react293.default.createElement("button", {
    id,
    role: "tab",
    type: "button",
    tabIndex,
    className,
    onClick: handleClick,
    "aria-selected": selected,
    "aria-controls": panelID,
    "aria-label": accessibilityLabel,
    onMouseUp: handleMouseUpByBlurring
  }, /* @__PURE__ */ import_react293.default.createElement("span", {
    className: styles108.Title
  }, /* @__PURE__ */ import_react293.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    fontWeight: "semibold"
  }, children)));
  return /* @__PURE__ */ import_react293.default.createElement("li", {
    className: tabContainerClassNames,
    ref: node,
    role: "presentation"
  }, markup);
}
function focusPanelID2(panelID) {
  const panel = document.getElementById(panelID);
  if (panel) {
    panel.focus({
      preventScroll: true
    });
  }
}
var import_react293;
var init_Tab2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Tab/Tab.js"() {
    import_react293 = __toESM(require_react());
    init_css();
    init_focus();
    init_LegacyTabs_css();
    init_UnstyledLink();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/TabMeasurer/TabMeasurer.js
function noop16() {
}
var import_react294, TabMeasurer3;
var init_TabMeasurer2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/TabMeasurer/TabMeasurer.js"() {
    import_react294 = __toESM(require_react());
    init_css();
    init_use_component_did_mount();
    init_LegacyTabs_css();
    init_Tab2();
    init_EventListener();
    TabMeasurer3 = /* @__PURE__ */ (0, import_react294.memo)(function TabMeasurer4({
      selected,
      tabs,
      activator,
      tabToFocus,
      siblingTabHasFocus,
      handleMeasurement: handleMeasurementProp
    }) {
      const containerNode = (0, import_react294.useRef)(null);
      const animationFrame = (0, import_react294.useRef)(null);
      const handleMeasurement = (0, import_react294.useCallback)(() => {
        if (animationFrame.current) {
          cancelAnimationFrame(animationFrame.current);
        }
        animationFrame.current = requestAnimationFrame(() => {
          if (!containerNode.current) {
            return;
          }
          const containerWidth = containerNode.current.offsetWidth;
          const hiddenTabNodes = containerNode.current.children;
          const hiddenTabNodesArray = Array.from(hiddenTabNodes);
          const hiddenTabWidths = hiddenTabNodesArray.map((node) => {
            return Math.ceil(node.getBoundingClientRect().width);
          });
          const disclosureWidth = hiddenTabWidths.pop() || 0;
          handleMeasurementProp({
            containerWidth,
            disclosureWidth,
            hiddenTabWidths
          });
        });
      }, [handleMeasurementProp]);
      (0, import_react294.useEffect)(() => {
        handleMeasurement();
      }, [handleMeasurement, tabs]);
      useComponentDidMount(() => {
        if (true) {
          setTimeout(handleMeasurement, 0);
        }
      });
      const tabsMarkup = tabs.map((tab, index) => {
        return /* @__PURE__ */ import_react294.default.createElement(Tab2, {
          measuring: true,
          key: `${index}${tab.id}Hidden`,
          id: `${tab.id}Measurer`,
          siblingTabHasFocus,
          focused: index === tabToFocus,
          selected: index === selected,
          onClick: noop16,
          url: tab.url
        }, tab.content);
      });
      const classname = classNames(styles108.LegacyTabs, styles108.TabMeasurer);
      return /* @__PURE__ */ import_react294.default.createElement("div", {
        className: classname,
        ref: containerNode
      }, /* @__PURE__ */ import_react294.default.createElement(EventListener, {
        event: "resize",
        handler: handleMeasurement
      }), tabsMarkup, activator);
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Item/Item.js
function noop17() {
}
var import_react295, Item10;
var init_Item9 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/Item/Item.js"() {
    import_react295 = __toESM(require_react());
    init_css();
    init_LegacyTabs_css();
    init_UnstyledLink();
    init_context();
    Item10 = class extends import_react295.PureComponent {
      constructor(...args) {
        super(...args);
        this.focusedNode = null;
        this.setFocusedNode = (node) => {
          this.focusedNode = node;
        };
      }
      componentDidMount() {
        const {
          focusedNode
        } = this;
        const {
          focused
        } = this.props;
        if (focusedNode && focusedNode instanceof HTMLElement && focused) {
          focusedNode.focus();
        }
      }
      componentDidUpdate() {
        const {
          focusedNode
        } = this;
        const {
          focused
        } = this.props;
        if (focusedNode && focusedNode instanceof HTMLElement && focused) {
          focusedNode.focus();
        }
      }
      render() {
        const {
          id,
          panelID,
          children,
          url,
          accessibilityLabel,
          onClick = noop17
        } = this.props;
        const classname = classNames(styles108.Item);
        const sharedProps = {
          id,
          ref: this.setFocusedNode,
          onClick,
          className: classname,
          "aria-controls": panelID,
          "aria-selected": false,
          "aria-label": accessibilityLabel
        };
        const markup = url ? /* @__PURE__ */ import_react295.default.createElement(UnstyledLink, Object.assign({}, sharedProps, {
          url
        }), children) : /* @__PURE__ */ import_react295.default.createElement("button", Object.assign({}, sharedProps, {
          type: "button"
        }), children);
        return /* @__PURE__ */ import_react295.default.createElement("li", null, markup);
      }
    };
    Item10.contextType = FeaturesContext;
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/List/List.js
function List4({
  focusIndex,
  disclosureTabs,
  onClick = noop18,
  onKeyPress = noop18
}) {
  const tabs = disclosureTabs.map(({
    id,
    content,
    ...tabProps
  }, index) => {
    return /* @__PURE__ */ import_react296.default.createElement(Item10, Object.assign({
      key: id
    }, tabProps, {
      id,
      focused: index === focusIndex,
      onClick: onClick.bind(null, id)
    }), content);
  });
  return /* @__PURE__ */ import_react296.default.createElement("div", {
    onKeyDown: handleKeyDown3,
    onKeyUp: onKeyPress
  }, /* @__PURE__ */ import_react296.default.createElement(Box, {
    as: "ul",
    padding: "200"
  }, tabs));
}
function noop18() {
}
function handleKeyDown3(event) {
  const {
    key
  } = event;
  if (key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}
var import_react296;
var init_List3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/components/List/List.js"() {
    import_react296 = __toESM(require_react());
    init_Item9();
    init_Box();
  }
});

// node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.js
function noop19() {
}
function handleKeyDown4(event) {
  const {
    key
  } = event;
  if (key === "ArrowLeft" || key === "ArrowRight") {
    event.preventDefault();
    event.stopPropagation();
  }
}
function LegacyTabs(props) {
  const i18n = useI18n();
  return /* @__PURE__ */ import_react297.default.createElement(TabsInner, Object.assign({}, props, {
    i18n
  }));
}
var import_react297, TabsInner;
var init_LegacyTabs = __esm({
  "node_modules/@shopify/polaris/build/esm/components/LegacyTabs/LegacyTabs.js"() {
    import_react297 = __toESM(require_react());
    init_dist();
    init_css();
    init_utilities11();
    init_LegacyTabs_css();
    init_Panel2();
    init_TabMeasurer2();
    init_List3();
    init_hooks2();
    init_Tab2();
    init_Icon();
    init_Box();
    init_Popover();
    TabsInner = class extends import_react297.PureComponent {
      constructor(...args) {
        super(...args);
        this.state = {
          disclosureWidth: 0,
          containerWidth: Infinity,
          tabWidths: [],
          visibleTabs: [],
          hiddenTabs: [],
          showDisclosure: false,
          tabToFocus: -1
        };
        this.handleKeyPress = (event) => {
          const {
            tabToFocus,
            visibleTabs,
            hiddenTabs,
            showDisclosure
          } = this.state;
          const key = event.key;
          const tabsArrayInOrder = showDisclosure ? visibleTabs.concat(hiddenTabs) : [...visibleTabs];
          let newFocus = tabsArrayInOrder.indexOf(tabToFocus);
          if (key === "ArrowRight") {
            newFocus += 1;
            if (newFocus === tabsArrayInOrder.length) {
              newFocus = 0;
            }
          }
          if (key === "ArrowLeft") {
            if (newFocus === -1 || newFocus === 0) {
              newFocus = tabsArrayInOrder.length - 1;
            } else {
              newFocus -= 1;
            }
          }
          this.setState({
            tabToFocus: tabsArrayInOrder[newFocus]
          });
        };
        this.renderTabMarkup = (tab, index) => {
          const {
            selected,
            children
          } = this.props;
          const {
            tabToFocus
          } = this.state;
          const tabPanelID = tab.panelID || `${tab.id}-panel`;
          return /* @__PURE__ */ import_react297.default.createElement(Tab2, {
            key: `${index}-${tab.id}`,
            id: tab.id,
            siblingTabHasFocus: tabToFocus > -1,
            focused: index === tabToFocus,
            selected: index === selected,
            onClick: this.handleTabClick,
            panelID: children ? tabPanelID : void 0,
            accessibilityLabel: tab.accessibilityLabel,
            url: tab.url
          }, tab.content);
        };
        this.handleFocus = (event) => {
          const {
            selected,
            tabs
          } = this.props;
          const target = event.target;
          if (target.classList.contains(styles108.Tab) || target.classList.contains(styles108.Item)) {
            let tabToFocus = -1;
            tabs.every((tab, index) => {
              if (tab.id === target.id) {
                tabToFocus = index;
                return false;
              }
              return true;
            });
            this.setState({
              tabToFocus
            });
            return;
          }
          if (target.classList.contains(styles108.DisclosureActivator)) {
            return;
          }
          if (!event.relatedTarget) {
            this.setState({
              tabToFocus: selected
            });
            return;
          }
          const relatedTarget = event.relatedTarget;
          if (relatedTarget instanceof HTMLElement && !relatedTarget.classList.contains(styles108.Tab) && !relatedTarget.classList.contains(styles108.Item) && !relatedTarget.classList.contains(styles108.DisclosureActivator)) {
            this.setState({
              tabToFocus: selected
            });
          }
        };
        this.handleBlur = (event) => {
          if (event.relatedTarget == null) {
            this.setState({
              tabToFocus: -1
            });
            return;
          }
          const target = event.relatedTarget;
          if (target instanceof HTMLElement && !target.classList.contains(styles108.Tab) && !target.classList.contains(styles108.Item)) {
            this.setState({
              tabToFocus: -1
            });
          }
        };
        this.handleDisclosureActivatorClick = () => {
          this.setState(({
            showDisclosure
          }) => ({
            showDisclosure: !showDisclosure
          }));
        };
        this.handleClose = () => {
          this.setState({
            showDisclosure: false
          });
        };
        this.handleMeasurement = (measurements) => {
          const {
            tabs,
            selected
          } = this.props;
          const {
            tabToFocus
          } = this.state;
          const {
            hiddenTabWidths: tabWidths,
            containerWidth,
            disclosureWidth
          } = measurements;
          const {
            visibleTabs,
            hiddenTabs
          } = getVisibleAndHiddenTabIndices2(tabs, selected, disclosureWidth, tabWidths, containerWidth);
          this.setState({
            tabToFocus: tabToFocus === -1 ? -1 : selected,
            visibleTabs,
            hiddenTabs,
            disclosureWidth,
            containerWidth,
            tabWidths
          });
        };
        this.handleTabClick = (id) => {
          const {
            tabs,
            onSelect = noop19
          } = this.props;
          const tab = tabs.find((aTab) => aTab.id === id);
          if (tab == null) {
            return;
          }
          const selectedIndex = tabs.indexOf(tab);
          onSelect(selectedIndex);
        };
      }
      static getDerivedStateFromProps(nextProps, prevState) {
        const {
          disclosureWidth,
          tabWidths,
          containerWidth
        } = prevState;
        const {
          visibleTabs,
          hiddenTabs
        } = getVisibleAndHiddenTabIndices2(nextProps.tabs, nextProps.selected, disclosureWidth, tabWidths, containerWidth);
        return {
          visibleTabs,
          hiddenTabs,
          selected: nextProps.selected
        };
      }
      render() {
        const {
          tabs,
          selected,
          fitted,
          children,
          i18n,
          disclosureText
        } = this.props;
        const {
          tabToFocus,
          visibleTabs,
          hiddenTabs,
          showDisclosure
        } = this.state;
        const disclosureTabs = hiddenTabs.map((tabIndex) => tabs[tabIndex]);
        const panelMarkup = children ? tabs.map((_tab, index) => {
          return selected === index ? /* @__PURE__ */ import_react297.default.createElement(Panel2, {
            id: tabs[index].panelID || `${tabs[index].id}-panel`,
            tabID: tabs[index].id,
            key: tabs[index].id
          }, children) : /* @__PURE__ */ import_react297.default.createElement(Panel2, {
            id: tabs[index].panelID || `${tabs[index].id}-panel`,
            tabID: tabs[index].id,
            key: tabs[index].id,
            hidden: true
          });
        }) : null;
        const tabsMarkup = visibleTabs.sort((tabA, tabB) => tabA - tabB).map((tabIndex) => this.renderTabMarkup(tabs[tabIndex], tabIndex));
        const disclosureActivatorVisible = visibleTabs.length < tabs.length;
        const hasCustomDisclosure = Boolean(disclosureText);
        const classname = classNames(styles108.LegacyTabs, fitted && styles108.fitted, disclosureActivatorVisible && styles108.fillSpace);
        const disclosureTabClassName = classNames(styles108.DisclosureTab, disclosureActivatorVisible && styles108["DisclosureTab-visible"]);
        const disclosureButtonClassName = classNames(styles108.DisclosureActivator, hasCustomDisclosure && styles108.Tab);
        const disclosureButtonContentWrapperClassName = classNames(styles108.Title, hasCustomDisclosure && styles108.titleWithIcon);
        const disclosureButtonContent = hasCustomDisclosure ? /* @__PURE__ */ import_react297.default.createElement(import_react297.default.Fragment, null, disclosureText, /* @__PURE__ */ import_react297.default.createElement(Icon, {
          source: SvgChevronDownIcon,
          tone: "subdued"
        })) : /* @__PURE__ */ import_react297.default.createElement(Icon, {
          source: SvgMenuHorizontalIcon,
          tone: "subdued"
        });
        const disclosureButton = /* @__PURE__ */ import_react297.default.createElement("button", {
          type: "button",
          className: disclosureButtonClassName,
          onClick: this.handleDisclosureActivatorClick,
          "aria-label": i18n.translate("Polaris.Tabs.toggleTabsLabel")
        }, /* @__PURE__ */ import_react297.default.createElement("span", {
          className: disclosureButtonContentWrapperClassName
        }, disclosureButtonContent));
        const activator = disclosureText ? /* @__PURE__ */ import_react297.default.createElement("div", {
          className: styles108.TabContainer
        }, disclosureButton) : disclosureButton;
        return /* @__PURE__ */ import_react297.default.createElement("div", null, /* @__PURE__ */ import_react297.default.createElement(Box, {
          borderBlockEndWidth: "025",
          borderColor: "border-secondary",
          paddingInlineStart: "200",
          paddingInlineEnd: "200"
        }, /* @__PURE__ */ import_react297.default.createElement(TabMeasurer3, {
          tabToFocus,
          activator,
          selected,
          tabs,
          siblingTabHasFocus: tabToFocus > -1,
          handleMeasurement: this.handleMeasurement
        }), /* @__PURE__ */ import_react297.default.createElement("ul", {
          role: "tablist",
          className: classname,
          onFocus: this.handleFocus,
          onBlur: this.handleBlur,
          onKeyDown: handleKeyDown4,
          onKeyUp: this.handleKeyPress
        }, tabsMarkup, /* @__PURE__ */ import_react297.default.createElement("li", {
          className: disclosureTabClassName,
          role: "presentation"
        }, /* @__PURE__ */ import_react297.default.createElement(Popover2, {
          preferredPosition: "below",
          activator,
          active: disclosureActivatorVisible && showDisclosure,
          onClose: this.handleClose,
          autofocusTarget: "first-node"
        }, /* @__PURE__ */ import_react297.default.createElement(List4, {
          focusIndex: hiddenTabs.indexOf(tabToFocus),
          disclosureTabs,
          onClick: this.handleTabClick,
          onKeyPress: this.handleKeyPress
        }))))), panelMarkup);
      }
      // eslint-disable-next-line @shopify/react-no-multiple-render-methods
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Loading/Loading.js
var import_react298, Loading3;
var init_Loading3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Loading/Loading.js"() {
    import_react298 = __toESM(require_react());
    init_hooks8();
    Loading3 = /* @__PURE__ */ (0, import_react298.memo)(function Loading4() {
      const {
        startLoading,
        stopLoading
      } = useFrame();
      (0, import_react298.useEffect)(() => {
        startLoading();
        return () => {
          stopLoading();
        };
      }, [startLoading, stopLoading]);
      return null;
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.css.js
var styles109;
var init_MediaCard_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.css.js"() {
    styles109 = {
      "MediaCard": "Polaris-MediaCard",
      "portrait": "Polaris-MediaCard--portrait",
      "MediaContainer": "Polaris-MediaCard__MediaContainer",
      "sizeSmall": "Polaris-MediaCard--sizeSmall",
      "InfoContainer": "Polaris-MediaCard__InfoContainer",
      "ActionContainer": "Polaris-MediaCard__ActionContainer"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.js
function MediaCard({
  title,
  children,
  primaryAction,
  secondaryAction,
  description,
  popoverActions = [],
  portrait = false,
  size: size2 = "medium",
  onDismiss
}) {
  const i18n = useI18n();
  const {
    value: popoverActive,
    toggle: togglePopoverActive
  } = useToggle(false);
  let headerMarkup = null;
  if (title) {
    const headerContent = typeof title === "string" ? /* @__PURE__ */ import_react299.default.createElement(Text, {
      variant: "headingSm",
      as: "h2"
    }, title) : title;
    headerMarkup = /* @__PURE__ */ import_react299.default.createElement("div", null, headerContent);
  }
  const dismissButtonMarkup = onDismiss ? /* @__PURE__ */ import_react299.default.createElement(Button, {
    icon: SvgXIcon,
    onClick: onDismiss,
    size: "slim",
    accessibilityLabel: i18n.translate("Polaris.MediaCard.dismissButton"),
    variant: "tertiary"
  }) : null;
  const popoverActivator = /* @__PURE__ */ import_react299.default.createElement(InlineStack, {
    blockAlign: "center"
  }, /* @__PURE__ */ import_react299.default.createElement(Button, {
    icon: SvgMenuHorizontalIcon,
    onClick: togglePopoverActive,
    size: "slim",
    accessibilityLabel: i18n.translate("Polaris.MediaCard.popoverButton"),
    variant: "tertiary"
  }));
  const popoverActionsMarkup = popoverActions.length > 0 ? /* @__PURE__ */ import_react299.default.createElement(Popover2, {
    active: popoverActive,
    activator: popoverActivator,
    onClose: togglePopoverActive,
    preferredAlignment: "left",
    preferredPosition: "below"
  }, /* @__PURE__ */ import_react299.default.createElement(ActionList, {
    items: popoverActions,
    onActionAnyItem: togglePopoverActive
  })) : null;
  const primaryActionMarkup = primaryAction ? /* @__PURE__ */ import_react299.default.createElement("div", null, buttonFrom(primaryAction)) : null;
  const secondaryActionMarkup = secondaryAction ? /* @__PURE__ */ import_react299.default.createElement("div", null, buttonFrom(secondaryAction)) : null;
  const actionClassName = classNames(styles109.ActionContainer, portrait && styles109.portrait);
  const actionMarkup = primaryActionMarkup || secondaryActionMarkup ? /* @__PURE__ */ import_react299.default.createElement("div", {
    className: actionClassName
  }, /* @__PURE__ */ import_react299.default.createElement(ButtonGroup, null, primaryActionMarkup, secondaryActionMarkup)) : null;
  const mediaCardClassName = classNames(styles109.MediaCard, portrait && styles109.portrait);
  const mediaContainerClassName = classNames(styles109.MediaContainer, portrait && styles109.portrait, size2 === "small" && styles109.sizeSmall);
  const infoContainerClassName = classNames(styles109.InfoContainer, portrait && styles109.portrait, size2 === "small" && styles109.sizeSmall);
  const popoverOrDismissMarkup = popoverActionsMarkup || dismissButtonMarkup ? /* @__PURE__ */ import_react299.default.createElement(Box, {
    position: "absolute",
    insetInlineEnd: "500",
    zIndex: "var(--p-z-index-2)"
  }, /* @__PURE__ */ import_react299.default.createElement(InlineStack, {
    gap: "100",
    wrap: false
  }, popoverActionsMarkup, dismissButtonMarkup)) : null;
  return /* @__PURE__ */ import_react299.default.createElement(LegacyCard, null, /* @__PURE__ */ import_react299.default.createElement("div", {
    className: mediaCardClassName
  }, /* @__PURE__ */ import_react299.default.createElement("div", {
    className: mediaContainerClassName
  }, children), /* @__PURE__ */ import_react299.default.createElement("div", {
    className: infoContainerClassName
  }, /* @__PURE__ */ import_react299.default.createElement(Box, {
    padding: "500"
  }, /* @__PURE__ */ import_react299.default.createElement(BlockStack, {
    gap: "200"
  }, /* @__PURE__ */ import_react299.default.createElement(InlineStack, {
    wrap: false,
    align: "space-between",
    gap: "200"
  }, headerMarkup, popoverOrDismissMarkup), /* @__PURE__ */ import_react299.default.createElement(Text, {
    as: "p",
    variant: "bodySm"
  }, description), actionMarkup)))));
}
var import_react299;
var init_MediaCard = __esm({
  "node_modules/@shopify/polaris/build/esm/components/MediaCard/MediaCard.js"() {
    import_react299 = __toESM(require_react());
    init_dist();
    init_use_toggle();
    init_css();
    init_MediaCard_css();
    init_hooks2();
    init_Button();
    init_InlineStack();
    init_Popover();
    init_ActionList();
    init_utils3();
    init_LegacyCard();
    init_Box();
    init_BlockStack();
    init_Text();
    init_ButtonGroup();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/context.js
var import_react300, NavigationContext;
var init_context20 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/context.js"() {
    import_react300 = __toESM(require_react());
    NavigationContext = /* @__PURE__ */ (0, import_react300.createContext)({
      location: ""
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.css.js
var styles110;
var init_Navigation_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.css.js"() {
    styles110 = {
      "Navigation": "Polaris-Navigation",
      "UserMenu": "Polaris-Navigation__UserMenu",
      "ContextControl": "Polaris-Navigation__ContextControl",
      "PrimaryNavigation": "Polaris-Navigation__PrimaryNavigation",
      "LogoContainer": "Polaris-Navigation__LogoContainer",
      "hasLogoSuffix": "Polaris-Navigation--hasLogoSuffix",
      "Logo": "Polaris-Navigation__Logo",
      "LogoLink": "Polaris-Navigation__LogoLink",
      "Item": "Polaris-Navigation__Item",
      "Icon-resized": "Polaris-Navigation__Icon--resized",
      "Badge": "Polaris-Navigation__Badge",
      "ItemInnerWrapper": "Polaris-Navigation__ItemInnerWrapper",
      "ItemWrapper": "Polaris-Navigation__ItemWrapper",
      "ItemInnerDisabled": "Polaris-Navigation__ItemInnerDisabled",
      "ItemInnerWrapper-display-actions-on-hover": "Polaris-Navigation--itemInnerWrapperDisplayActionsOnHover",
      "SecondaryActions": "Polaris-Navigation__SecondaryActions",
      "ItemInnerWrapper-selected": "Polaris-Navigation__ItemInnerWrapper--selected",
      "Text": "Polaris-Navigation__Text",
      "ItemInnerWrapper-open": "Polaris-Navigation__ItemInnerWrapper--open",
      "Item-selected": "Polaris-Navigation__Item--selected",
      "Item-child-active": "Polaris-Navigation--itemChildActive",
      "Item-disabled": "Polaris-Navigation__Item--disabled",
      "Icon": "Polaris-Navigation__Icon",
      "ListItem-hasAction": "Polaris-Navigation__ListItem--hasAction",
      "subNavigationActive": "Polaris-Navigation--subNavigationActive",
      "ListItem": "Polaris-Navigation__ListItem",
      "RollupSection": "Polaris-Navigation__RollupSection",
      "SecondaryNavigation": "Polaris-Navigation__SecondaryNavigation",
      "Text-truncated": "Polaris-Navigation__Text--truncated",
      "ItemWithFloatingActions": "Polaris-Navigation__ItemWithFloatingActions",
      "SecondaryAction": "Polaris-Navigation__SecondaryAction",
      "List": "Polaris-Navigation__List",
      "Item-line": "Polaris-Navigation__Item--line",
      "Item-hover-line": "Polaris-Navigation--itemHoverLine",
      "Item-line-pointer": "Polaris-Navigation--itemLinePointer",
      "Item-hover-pointer": "Polaris-Navigation--itemHoverPointer",
      "SecondaryNavigation-noIcon": "Polaris-Navigation__SecondaryNavigation--noIcon",
      "Section": "Polaris-Navigation__Section",
      "Section-fill": "Polaris-Navigation__Section--fill",
      "Section-withSeparator": "Polaris-Navigation__Section--withSeparator",
      "SectionHeading": "Polaris-Navigation__SectionHeading",
      "Action": "Polaris-Navigation__Action",
      "RollupToggle": "Polaris-Navigation__RollupToggle",
      "Indicator": "Polaris-Navigation__Indicator",
      "SecondaryNavigationOpen": "Polaris-Navigation__SecondaryNavigationOpen",
      "snappy-grow": "Polaris-Navigation__snappy--grow"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/types.js
var MatchState;
var init_types6 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/types.js"() {
    (function(MatchState2) {
      MatchState2[MatchState2["MatchForced"] = 0] = "MatchForced";
      MatchState2[MatchState2["MatchUrl"] = 1] = "MatchUrl";
      MatchState2[MatchState2["MatchPaths"] = 2] = "MatchPaths";
      MatchState2[MatchState2["Excluded"] = 3] = "Excluded";
      MatchState2[MatchState2["NoMatch"] = 4] = "NoMatch";
    })(MatchState || (MatchState = {}));
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/components/SecondaryNavigation/SecondaryNavigation.js
function SecondaryNavigation({
  ItemComponent,
  icon,
  longestMatch,
  subNavigationItems,
  showExpanded,
  truncateText,
  secondaryNavigationId
}) {
  const uid = (0, import_react301.useId)();
  const {
    onNavigationDismiss
  } = (0, import_react301.useContext)(NavigationContext);
  const [hoveredItem, setHoveredItem] = (0, import_react301.useState)();
  const matchedItemPosition = subNavigationItems.findIndex((item) => (0, import_react_fast_compare4.default)(item, longestMatch));
  const hoveredItemPosition = subNavigationItems.findIndex((item) => (0, import_react_fast_compare4.default)(item, hoveredItem));
  return /* @__PURE__ */ import_react301.default.createElement("div", {
    className: classNames(styles110.SecondaryNavigation, showExpanded && styles110.SecondaryNavigationOpen, !icon && styles110["SecondaryNavigation-noIcon"])
  }, /* @__PURE__ */ import_react301.default.createElement(Collapsible, {
    id: secondaryNavigationId || uid,
    open: showExpanded,
    transition: false
  }, /* @__PURE__ */ import_react301.default.createElement("ul", {
    className: styles110.List
  }, subNavigationItems.map((item, index) => {
    const {
      label,
      ...rest
    } = item;
    const onClick = () => {
      onNavigationDismiss?.();
      if (item.onClick && item.onClick !== onNavigationDismiss) {
        item.onClick();
      }
    };
    const shouldShowVerticalLine = index < matchedItemPosition;
    return /* @__PURE__ */ import_react301.default.createElement(ItemComponent, Object.assign({
      key: label
    }, rest, {
      label,
      showVerticalLine: shouldShowVerticalLine,
      showVerticalHoverPointer: index === hoveredItemPosition,
      level: 1,
      onMouseEnter: item.disabled ? void 0 : () => setHoveredItem(item),
      onMouseLeave: item.disabled ? void 0 : () => setHoveredItem(void 0),
      matches: (0, import_react_fast_compare4.default)(item, longestMatch),
      onClick,
      truncateText
    }));
  }))));
}
var import_react301, import_react_fast_compare4;
var init_SecondaryNavigation = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/components/SecondaryNavigation/SecondaryNavigation.js"() {
    import_react301 = __toESM(require_react());
    import_react_fast_compare4 = __toESM(require_react_fast_compare());
    init_css();
    init_context20();
    init_Navigation_css();
    init_Collapsible();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/Item.js
function Item11({
  url,
  icon: baseIcon,
  matchedItemIcon,
  label,
  subNavigationItems = [],
  secondaryAction,
  secondaryActions,
  displayActionsOnHover,
  disabled,
  onClick,
  accessibilityLabel,
  selected: selectedOverride,
  badge,
  new: isNew,
  matches: matches2,
  exactMatch,
  matchPaths,
  excludePaths,
  external,
  onToggleExpandedState,
  expanded,
  shouldResizeIcon,
  truncateText,
  showVerticalLine,
  showVerticalHoverPointer,
  level = 0,
  onMouseEnter,
  onMouseLeave
}) {
  const i18n = useI18n();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const secondaryNavigationId = (0, import_react302.useId)();
  const {
    location,
    onNavigationDismiss
  } = (0, import_react302.useContext)(NavigationContext);
  const navTextRef = (0, import_react302.useRef)(null);
  const [isTruncated, setIsTruncated] = (0, import_react302.useState)(false);
  (0, import_react302.useEffect)(() => {
    if (!isNavigationCollapsed && expanded) {
      onToggleExpandedState?.();
    }
  }, [expanded, isNavigationCollapsed, onToggleExpandedState]);
  useIsomorphicLayoutEffect(() => {
    const navTextNode = navTextRef.current;
    if (truncateText && navTextNode) {
      setIsTruncated(navTextNode.scrollHeight > navTextNode.clientHeight);
    }
  }, [truncateText]);
  const tabIndex = disabled ? -1 : 0;
  const hasNewChild = subNavigationItems.filter((subNavigationItem) => subNavigationItem.new).length > 0;
  const indicatorMarkup = hasNewChild ? /* @__PURE__ */ import_react302.default.createElement("span", {
    className: styles110.Indicator
  }, /* @__PURE__ */ import_react302.default.createElement(Indicator, {
    pulse: true
  })) : null;
  const matchState = matchStateForItem({
    url,
    matches: matches2,
    exactMatch,
    matchPaths,
    excludePaths
  }, location);
  const matchingSubNavigationItems = subNavigationItems.filter((item) => {
    const subMatchState = matchStateForItem(item, location);
    return subMatchState === MatchState.MatchForced || subMatchState === MatchState.MatchUrl || subMatchState === MatchState.MatchPaths;
  });
  const childIsActive = matchingSubNavigationItems.length > 0;
  const selected = selectedOverride == null ? matchState === MatchState.MatchForced || matchState === MatchState.MatchUrl || matchState === MatchState.MatchPaths : selectedOverride;
  const icon = selected || childIsActive ? matchedItemIcon ?? baseIcon : baseIcon;
  const iconMarkup = icon ? /* @__PURE__ */ import_react302.default.createElement("div", {
    className: classNames(styles110.Icon, shouldResizeIcon && styles110["Icon-resized"])
  }, /* @__PURE__ */ import_react302.default.createElement(Icon, {
    source: icon
  })) : null;
  let badgeMarkup = null;
  if (isNew) {
    badgeMarkup = /* @__PURE__ */ import_react302.default.createElement(Badge, {
      tone: "new"
    }, i18n.translate("Polaris.Badge.TONE_LABELS.new"));
  } else if (typeof badge === "string") {
    badgeMarkup = /* @__PURE__ */ import_react302.default.createElement(Badge, {
      tone: "new"
    }, badge);
  } else {
    badgeMarkup = badge;
  }
  const wrappedBadgeMarkup = badgeMarkup == null ? null : /* @__PURE__ */ import_react302.default.createElement("div", {
    className: styles110.Badge
  }, badgeMarkup);
  const tone = !showVerticalHoverPointer && !matches2 && level !== 0 ? "subdued" : void 0;
  let fontWeight = "regular";
  if ((matches2 || selected) && !childIsActive) {
    fontWeight = "semibold";
  } else if (level === 0 || showVerticalHoverPointer) {
    fontWeight = "medium";
  }
  const itemLabelMarkup = /* @__PURE__ */ import_react302.default.createElement("span", {
    className: classNames(styles110.Text, truncateText && styles110["Text-truncated"]),
    ref: navTextRef
  }, /* @__PURE__ */ import_react302.default.createElement(Text, {
    as: "span",
    variant: "bodyMd",
    tone,
    fontWeight
  }, label), indicatorMarkup);
  if (url == null) {
    const className2 = classNames(styles110.Item, disabled && styles110["Item-disabled"], selectedOverride && styles110["Item-selected"]);
    return /* @__PURE__ */ import_react302.default.createElement("li", {
      className: styles110.ListItem
    }, /* @__PURE__ */ import_react302.default.createElement("div", {
      className: styles110.ItemWrapper
    }, /* @__PURE__ */ import_react302.default.createElement("div", {
      className: classNames(styles110.ItemInnerWrapper, disabled && styles110.ItemInnerDisabled, selectedOverride && styles110["ItemInnerWrapper-selected"])
    }, /* @__PURE__ */ import_react302.default.createElement("button", {
      type: "button",
      className: className2,
      disabled,
      "aria-disabled": disabled,
      "aria-label": accessibilityLabel,
      onClick: getClickHandler(onClick)
    }, iconMarkup, itemLabelMarkup, wrappedBadgeMarkup))));
  }
  if (secondaryAction && true) {
    console.warn("Deprecation: The `secondaryAction` prop on the `Navigation.Item` has been deprecated. Use `secondaryActions` instead.");
  }
  const actions = secondaryActions || secondaryAction && [secondaryAction];
  if (actions && actions.length > MAX_SECONDARY_ACTIONS) {
    actions.length = MAX_SECONDARY_ACTIONS;
    if (true) {
      console.warn(`secondaryActions must have a maximum of ${MAX_SECONDARY_ACTIONS} actions. Only the first ${MAX_SECONDARY_ACTIONS} actions will be rendered.`);
    }
  }
  const secondaryActionMarkup = actions?.length ? /* @__PURE__ */ import_react302.default.createElement("span", {
    className: styles110.SecondaryActions
  }, actions.map((action) => /* @__PURE__ */ import_react302.default.createElement(ItemSecondaryAction, Object.assign({
    key: action.accessibilityLabel
  }, action, {
    tabIndex,
    disabled
  })))) : null;
  const itemContentMarkup = /* @__PURE__ */ import_react302.default.createElement(import_react302.default.Fragment, null, iconMarkup, itemLabelMarkup, secondaryActionMarkup ? null : wrappedBadgeMarkup);
  const outerContentMarkup = /* @__PURE__ */ import_react302.default.createElement(import_react302.default.Fragment, null, secondaryActionMarkup ? wrappedBadgeMarkup : null);
  const showExpanded = selected || expanded || childIsActive;
  const itemClassName = classNames(styles110.Item, disabled && styles110["Item-disabled"], (selected || childIsActive) && styles110["Item-selected"], showExpanded && styles110.subNavigationActive, childIsActive && styles110["Item-child-active"], showVerticalLine && styles110["Item-line"], matches2 && styles110["Item-line-pointer"], showVerticalHoverPointer && styles110["Item-hover-pointer"]);
  let secondaryNavigationMarkup = null;
  if (subNavigationItems.length > 0) {
    const longestMatch = matchingSubNavigationItems.sort(({
      url: firstUrl
    }, {
      url: secondUrl
    }) => secondUrl.length - firstUrl.length)[0];
    secondaryNavigationMarkup = /* @__PURE__ */ import_react302.default.createElement(SecondaryNavigation, {
      ItemComponent: Item11,
      icon,
      longestMatch,
      subNavigationItems,
      showExpanded,
      truncateText,
      secondaryNavigationId
    });
  }
  const className = classNames(styles110.ListItem, Boolean(actions && actions.length) && styles110["ListItem-hasAction"]);
  const itemLinkMarkup = () => {
    const linkMarkup = /* @__PURE__ */ import_react302.default.createElement(UnstyledLink, Object.assign({
      url,
      className: itemClassName,
      external,
      tabIndex,
      "aria-disabled": disabled,
      "aria-label": accessibilityLabel,
      onClick: getClickHandler(onClick)
    }, normalizeAriaAttributes(secondaryNavigationId, subNavigationItems.length > 0, showExpanded)), itemContentMarkup);
    return isTruncated ? /* @__PURE__ */ import_react302.default.createElement(Tooltip, {
      hoverDelay: TOOLTIP_HOVER_DELAY,
      content: label,
      preferredPosition: "above"
    }, linkMarkup) : linkMarkup;
  };
  return /* @__PURE__ */ import_react302.default.createElement("li", {
    className,
    onMouseEnter: () => {
      onMouseEnter?.(label);
    },
    onMouseLeave
  }, /* @__PURE__ */ import_react302.default.createElement("div", {
    className: styles110.ItemWrapper
  }, /* @__PURE__ */ import_react302.default.createElement("div", {
    className: classNames(styles110.ItemInnerWrapper, selected && childIsActive && styles110["ItemInnerWrapper-open"] || selected && !childIsActive && styles110["ItemInnerWrapper-selected"], displayActionsOnHover && styles110["ItemInnerWrapper-display-actions-on-hover"], disabled && styles110.ItemInnerDisabled)
  }, displayActionsOnHover && secondaryActionMarkup && wrappedBadgeMarkup ? /* @__PURE__ */ import_react302.default.createElement("span", {
    className: styles110.ItemWithFloatingActions
  }, itemLinkMarkup(), secondaryActionMarkup) : /* @__PURE__ */ import_react302.default.createElement(import_react302.default.Fragment, null, itemLinkMarkup(), secondaryActionMarkup), outerContentMarkup)), secondaryNavigationMarkup);
  function getClickHandler(onClick2) {
    return (event) => {
      const {
        currentTarget
      } = event;
      if (currentTarget.getAttribute("href") === location) {
        event.preventDefault();
      }
      if (subNavigationItems && subNavigationItems.length > 0 && isNavigationCollapsed) {
        event.preventDefault();
        onToggleExpandedState?.();
      } else if (onNavigationDismiss) {
        onNavigationDismiss();
        if (onClick2 && onClick2 !== onNavigationDismiss) {
          onClick2();
        }
        return;
      }
      if (onClick2) {
        onClick2();
      }
    };
  }
}
function ItemSecondaryAction({
  url,
  icon,
  accessibilityLabel,
  tooltip,
  onClick,
  disabled,
  tabIndex
}) {
  const markup = url ? /* @__PURE__ */ import_react302.default.createElement(UnstyledLink, {
    external: true,
    url,
    className: styles110.SecondaryAction,
    tabIndex,
    "aria-disabled": disabled,
    "aria-label": accessibilityLabel,
    onClick
  }, /* @__PURE__ */ import_react302.default.createElement(Icon, {
    source: icon
  })) : /* @__PURE__ */ import_react302.default.createElement(UnstyledButton, {
    className: styles110.SecondaryAction,
    tabIndex,
    disabled,
    accessibilityLabel,
    onClick
  }, /* @__PURE__ */ import_react302.default.createElement(Icon, {
    source: icon
  }));
  return tooltip ? /* @__PURE__ */ import_react302.default.createElement(Tooltip, tooltip, " ", markup, " ") : markup;
}
function isNavigationItemActive(navigationItem, currentPath) {
  const matchState = matchStateForItem(navigationItem, currentPath);
  const matchingSubNavigationItems = navigationItem.subNavigationItems && navigationItem.subNavigationItems.filter((item) => {
    const subMatchState = matchStateForItem(item, currentPath);
    return subMatchState === MatchState.MatchForced || subMatchState === MatchState.MatchUrl || subMatchState === MatchState.MatchPaths;
  });
  const childIsActive = matchingSubNavigationItems && matchingSubNavigationItems.length > 0;
  const selected = matchState === MatchState.MatchForced || matchState === MatchState.MatchUrl || matchState === MatchState.MatchPaths;
  return selected || childIsActive;
}
function normalizePathname(pathname) {
  const barePathname = pathname.split("?")[0].split("#")[0];
  return barePathname.endsWith("/") ? barePathname : `${barePathname}/`;
}
function safeEqual(location, path) {
  return normalizePathname(location) === normalizePathname(path);
}
function safeStartsWith(location, path) {
  return normalizePathname(location).startsWith(normalizePathname(path));
}
function matchStateForItem({
  url,
  matches: matches2,
  exactMatch,
  matchPaths,
  excludePaths
}, location) {
  if (url == null) {
    return MatchState.NoMatch;
  }
  if (matches2) {
    return MatchState.MatchForced;
  }
  if (matches2 === false || excludePaths && excludePaths.some((path) => safeStartsWith(location, path))) {
    return MatchState.Excluded;
  }
  if (matchPaths && matchPaths.some((path) => safeStartsWith(location, path))) {
    return MatchState.MatchPaths;
  }
  const matchesUrl = exactMatch ? safeEqual(location, url) : safeStartsWith(location, url);
  return matchesUrl ? MatchState.MatchUrl : MatchState.NoMatch;
}
function normalizeAriaAttributes(controlId, hasSubMenu, expanded) {
  return hasSubMenu ? {
    "aria-expanded": expanded,
    "aria-controls": controlId
  } : void 0;
}
var import_react302, MAX_SECONDARY_ACTIONS, TOOLTIP_HOVER_DELAY;
var init_Item10 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/components/Item/Item.js"() {
    import_react302 = __toESM(require_react());
    init_use_isomorphic_layout_effect();
    init_css();
    init_context20();
    init_Navigation_css();
    init_types6();
    init_SecondaryNavigation();
    init_hooks2();
    init_hooks7();
    init_Indicator();
    init_Icon();
    init_Badge();
    init_Text();
    init_UnstyledLink();
    init_UnstyledButton();
    init_Tooltip();
    MAX_SECONDARY_ACTIONS = 2;
    TOOLTIP_HOVER_DELAY = 1e3;
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/components/Section/Section.js
function Section7({
  title,
  fill,
  action,
  items,
  rollup,
  separator
}) {
  const {
    value: expanded,
    toggle: toggleExpanded,
    setFalse: setExpandedFalse
  } = useToggle(false);
  const animationFrame = (0, import_react303.useRef)(null);
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  const [expandedIndex, setExpandedIndex] = (0, import_react303.useState)();
  const handleClick = (onClick, hasSubNavItems) => {
    return () => {
      if (onClick) {
        onClick();
      }
      if (animationFrame.current) {
        cancelAnimationFrame(animationFrame.current);
      }
      if (!hasSubNavItems || !isNavigationCollapsed) {
        animationFrame.current = requestAnimationFrame(setExpandedFalse);
      }
    };
  };
  (0, import_react303.useEffect)(() => {
    return () => {
      animationFrame.current && cancelAnimationFrame(animationFrame.current);
    };
  });
  const className = classNames(styles110.Section, separator && styles110["Section-withSeparator"], fill && styles110["Section-fill"]);
  const buttonMarkup = action && /* @__PURE__ */ import_react303.default.createElement("button", {
    type: "button",
    className: styles110.Action,
    "aria-label": action.accessibilityLabel,
    onClick: action.onClick
  }, /* @__PURE__ */ import_react303.default.createElement(Icon, {
    source: action.icon
  }));
  const actionMarkup = action && (action.tooltip ? /* @__PURE__ */ import_react303.default.createElement(Tooltip, action.tooltip, buttonMarkup) : buttonMarkup);
  const sectionHeadingMarkup = title && /* @__PURE__ */ import_react303.default.createElement("li", {
    className: styles110.SectionHeading
  }, /* @__PURE__ */ import_react303.default.createElement(Text, {
    as: "span",
    variant: "bodySm",
    fontWeight: "medium",
    tone: "subdued"
  }, title), actionMarkup);
  const itemsMarkup = items.map((item, index) => {
    const {
      onClick,
      label,
      subNavigationItems,
      ...rest
    } = item;
    const hasSubNavItems = subNavigationItems != null && subNavigationItems.length > 0;
    const handleToggleExpandedState = () => {
      if (expandedIndex === index) {
        setExpandedIndex(-1);
      } else {
        setExpandedIndex(index);
      }
    };
    return /* @__PURE__ */ import_react303.default.createElement(Item11, Object.assign({
      key: label
    }, rest, {
      label,
      subNavigationItems,
      onClick: handleClick(onClick, hasSubNavItems),
      onToggleExpandedState: handleToggleExpandedState,
      expanded: expandedIndex === index
    }));
  });
  const toggleClassName = classNames(styles110.Item, styles110.RollupToggle);
  const ariaLabel = rollup && (expanded ? rollup.hide : rollup.view);
  const toggleRollup = rollup && items.length > rollup.after && /* @__PURE__ */ import_react303.default.createElement("div", {
    className: styles110.ListItem,
    key: "List Item"
  }, /* @__PURE__ */ import_react303.default.createElement("div", {
    className: styles110.ItemWrapper
  }, /* @__PURE__ */ import_react303.default.createElement("div", {
    className: styles110.ItemInnerWrapper
  }, /* @__PURE__ */ import_react303.default.createElement("button", {
    type: "button",
    className: toggleClassName,
    onClick: toggleExpanded,
    "aria-label": ariaLabel
  }, /* @__PURE__ */ import_react303.default.createElement("span", {
    className: styles110.Icon
  }, /* @__PURE__ */ import_react303.default.createElement(Icon, {
    source: SvgMenuHorizontalIcon
  }))))));
  const activeItemIndex = items.findIndex((item) => {
    if (!rollup) {
      return false;
    }
    return rollup.activePath === item.url || item.url && rollup.activePath.startsWith(item.url) || (item.subNavigationItems ? item.subNavigationItems.some(({
      url: itemUrl
    }) => rollup.activePath.startsWith(itemUrl)) : false);
  });
  const sectionItems = rollup ? itemsMarkup.slice(0, rollup.after) : itemsMarkup;
  const additionalItems = rollup ? itemsMarkup.slice(rollup.after) : [];
  if (rollup && activeItemIndex !== -1 && activeItemIndex > rollup.after - 1) {
    sectionItems.push(...additionalItems.splice(activeItemIndex - rollup.after, 1));
  }
  const additionalItemsId = (0, import_react303.useId)();
  const activeItemsMarkup = rollup && additionalItems.length > 0 && /* @__PURE__ */ import_react303.default.createElement("li", {
    className: styles110.RollupSection
  }, /* @__PURE__ */ import_react303.default.createElement(Collapsible, {
    id: additionalItemsId,
    open: expanded
  }, /* @__PURE__ */ import_react303.default.createElement("ul", {
    className: styles110.List
  }, additionalItems)), toggleRollup);
  return /* @__PURE__ */ import_react303.default.createElement("ul", {
    className
  }, sectionHeadingMarkup, sectionItems, activeItemsMarkup);
}
var import_react303;
var init_Section7 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/components/Section/Section.js"() {
    import_react303 = __toESM(require_react());
    init_dist();
    init_css();
    init_use_toggle();
    init_Navigation_css();
    init_Item10();
    init_hooks7();
    init_Icon();
    init_Tooltip();
    init_Text();
    init_Collapsible();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.js
var import_react304, Navigation2;
var init_Navigation2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Navigation/Navigation.js"() {
    import_react304 = __toESM(require_react());
    init_within_content_context();
    init_css();
    init_get_width();
    init_context20();
    init_Navigation_css();
    init_Section7();
    init_hooks8();
    init_UnstyledLink();
    init_Image();
    init_Scrollable();
    init_Item10();
    Navigation2 = function Navigation3({
      children,
      contextControl,
      location,
      onDismiss,
      ariaLabelledBy,
      logoSuffix
    }) {
      const {
        logo
      } = useFrame();
      const width2 = getWidth(logo, 104);
      const logoMarkup = logo ? /* @__PURE__ */ import_react304.default.createElement("div", {
        className: classNames(styles110.LogoContainer, logoSuffix && styles110.hasLogoSuffix)
      }, /* @__PURE__ */ import_react304.default.createElement(UnstyledLink, {
        url: logo.url || "",
        className: styles110.LogoLink,
        style: {
          width: width2
        }
      }, /* @__PURE__ */ import_react304.default.createElement(Image, {
        source: logo.topBarSource || "",
        alt: logo.accessibilityLabel || "",
        className: styles110.Logo,
        style: {
          width: width2
        }
      })), logoSuffix) : null;
      const mediaMarkup = contextControl ? /* @__PURE__ */ import_react304.default.createElement("div", {
        className: styles110.ContextControl
      }, contextControl) : logoMarkup;
      const context = (0, import_react304.useMemo)(() => ({
        location,
        onNavigationDismiss: onDismiss
      }), [location, onDismiss]);
      return /* @__PURE__ */ import_react304.default.createElement(NavigationContext.Provider, {
        value: context
      }, /* @__PURE__ */ import_react304.default.createElement(WithinContentContext.Provider, {
        value: true
      }, /* @__PURE__ */ import_react304.default.createElement("nav", {
        className: styles110.Navigation,
        "aria-labelledby": ariaLabelledBy
      }, mediaMarkup, /* @__PURE__ */ import_react304.default.createElement(Scrollable, {
        className: styles110.PrimaryNavigation
      }, children))));
    };
    Navigation2.Item = Item11;
    Navigation2.Section = Section7;
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/arrays.js
function arraysAreEqual(firstArray, secondArray, comparator) {
  if (firstArray.length !== secondArray.length) {
    return false;
  }
  return firstArray.every((firstItem, index) => {
    const secondItem = secondArray[index];
    if (comparator != null) {
      return comparator(firstItem, secondItem);
    }
    return firstItem === secondItem;
  });
}
var init_arrays = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/arrays.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.css.js
var styles111;
var init_Option_css2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.css.js"() {
    styles111 = {
      "Option": "Polaris-OptionList-Option",
      "SingleSelectOption": "Polaris-OptionList-Option__SingleSelectOption",
      "focused": "Polaris-OptionList-Option--focused",
      "active": "Polaris-OptionList-Option--active",
      "disabled": "Polaris-OptionList-Option--disabled",
      "select": "Polaris-OptionList-Option--select",
      "Media": "Polaris-OptionList-Option__Media",
      "Label": "Polaris-OptionList-Option__Label",
      "MultiSelectOption": "Polaris-OptionList-Option__MultiSelectOption",
      "CheckboxLabel": "Polaris-OptionList-Option__CheckboxLabel",
      "verticalAlignTop": "Polaris-OptionList-Option--verticalAlignTop",
      "verticalAlignCenter": "Polaris-OptionList-Option--verticalAlignCenter",
      "verticalAlignBottom": "Polaris-OptionList-Option--verticalAlignBottom",
      "Icon": "Polaris-OptionList-Option__Icon",
      "Checkbox": "Polaris-OptionList-Option__Checkbox"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.js
function Option3({
  label,
  value,
  id,
  select,
  active,
  allowMultiple,
  disabled,
  media,
  onClick,
  section,
  index,
  verticalAlign,
  onPointerEnter,
  onFocus
}) {
  const {
    value: focused,
    toggle: toggleFocused
  } = useToggle(false);
  const handleClick = (0, import_react305.useCallback)(() => {
    if (disabled) {
      return;
    }
    onClick(section, index);
  }, [disabled, index, onClick, section]);
  const handlePointerEnter = (0, import_react305.useCallback)(() => {
    if (disabled) {
      return;
    }
    onPointerEnter(section, index);
  }, [disabled, onPointerEnter, section, index]);
  const handleFocus = (0, import_react305.useCallback)(() => {
    toggleFocused();
    onFocus(section, index);
  }, [toggleFocused, onFocus, section, index]);
  const mediaMarkup = media ? /* @__PURE__ */ import_react305.default.createElement("div", {
    className: styles111.Media
  }, media) : null;
  const singleSelectClassName = classNames(styles111.SingleSelectOption, focused && styles111.focused, disabled && styles111.disabled, select && styles111.select, active && styles111.active, verticalAlign && styles111[variationName("verticalAlign", verticalAlign)]);
  const multiSelectClassName = classNames(styles111.Label, disabled && styles111.disabled, active && styles111.active, select && styles111.select, verticalAlign && styles111[variationName("verticalAlign", verticalAlign)], allowMultiple && styles111.CheckboxLabel, allowMultiple && styles111.MultiSelectOption);
  const optionMarkup = allowMultiple ? /* @__PURE__ */ import_react305.default.createElement("label", {
    htmlFor: id,
    className: multiSelectClassName
  }, /* @__PURE__ */ import_react305.default.createElement("div", {
    className: styles111.Checkbox
  }, /* @__PURE__ */ import_react305.default.createElement(Checkbox, {
    id,
    label: "",
    ariaDescribedBy: `${id}-label`,
    value,
    checked: select,
    disabled,
    onChange: handleClick
  })), mediaMarkup, /* @__PURE__ */ import_react305.default.createElement("span", {
    id: `${id}-label`
  }, label)) : /* @__PURE__ */ import_react305.default.createElement("button", {
    id,
    type: "button",
    className: singleSelectClassName,
    onClick: handleClick,
    disabled,
    onFocus: handleFocus,
    onBlur: toggleFocused,
    "aria-pressed": active || select
  }, /* @__PURE__ */ import_react305.default.createElement(import_react305.default.Fragment, null, /* @__PURE__ */ import_react305.default.createElement(InlineStack, {
    wrap: false,
    blockAlign: verticalAlignToBlockAlign(verticalAlign)
  }, mediaMarkup, label), (select || active) && /* @__PURE__ */ import_react305.default.createElement("span", {
    className: styles111.Icon
  }, /* @__PURE__ */ import_react305.default.createElement(Icon, {
    source: SvgCheckIcon
  }))));
  const scrollMarkup = active ? /* @__PURE__ */ import_react305.default.createElement(Scrollable.ScrollTo, null) : null;
  return /* @__PURE__ */ import_react305.default.createElement("li", {
    key: id,
    className: styles111.Option,
    tabIndex: -1,
    onPointerEnter: handlePointerEnter
  }, scrollMarkup, optionMarkup);
}
function verticalAlignToBlockAlign(verticalAlign) {
  switch (verticalAlign) {
    case "top":
      return "start";
    case "center":
      return "center";
    case "bottom":
      return "end";
    default:
      return "start";
  }
}
var import_react305;
var init_Option2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/OptionList/components/Option/Option.js"() {
    import_react305 = __toESM(require_react());
    init_dist();
    init_use_toggle();
    init_css();
    init_Option_css2();
    init_Checkbox();
    init_InlineStack();
    init_Icon();
    init_Scrollable();
  }
});

// node_modules/@shopify/polaris/build/esm/components/OptionList/OptionList.js
function OptionList({
  options,
  sections,
  title,
  selected,
  allowMultiple,
  role,
  verticalAlign,
  onChange,
  id: idProp,
  onPointerEnterOption,
  onFocusOption
}) {
  const [normalizedOptions, setNormalizedOptions] = (0, import_react306.useState)(createNormalizedOptions(options, sections, title));
  const uniqId = (0, import_react306.useId)();
  const id = idProp ?? uniqId;
  useDeepEffect(() => {
    setNormalizedOptions(createNormalizedOptions(options || [], sections || [], title));
  }, [options, sections, title], optionArraysAreEqual);
  const handleClick = (0, import_react306.useCallback)((sectionIndex, optionIndex) => {
    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
    const foundIndex = selected.indexOf(selectedValue);
    if (allowMultiple) {
      const newSelection = foundIndex === -1 ? [selectedValue, ...selected] : [...selected.slice(0, foundIndex), ...selected.slice(foundIndex + 1, selected.length)];
      onChange(newSelection);
      return;
    }
    onChange([selectedValue]);
  }, [normalizedOptions, selected, allowMultiple, onChange]);
  const handlePointerEnter = (0, import_react306.useCallback)((sectionIndex, optionIndex) => {
    if (!onPointerEnterOption)
      return;
    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
    onPointerEnterOption(selectedValue);
  }, [normalizedOptions, onPointerEnterOption]);
  const handleFocus = (0, import_react306.useCallback)((sectionIndex, optionIndex) => {
    if (!onFocusOption)
      return;
    const selectedValue = normalizedOptions[sectionIndex].options[optionIndex].value;
    onFocusOption(selectedValue);
  }, [normalizedOptions, onFocusOption]);
  const optionsExist = normalizedOptions.length > 0;
  const optionsMarkup = optionsExist ? normalizedOptions.map(({
    title: title2,
    options: options2
  }, sectionIndex) => {
    const isFirstOption = sectionIndex === 0;
    const titleLevel = isFirstOption ? "h2" : "h3";
    const titleMarkup = title2 ? /* @__PURE__ */ import_react306.default.createElement(Box, {
      paddingBlockStart: isFirstOption ? "050" : "300",
      paddingInlineStart: "150",
      paddingBlockEnd: "100",
      paddingInlineEnd: "150",
      borderColor: "border-secondary"
    }, /* @__PURE__ */ import_react306.default.createElement(Text, {
      as: titleLevel,
      variant: "headingSm"
    }, title2)) : null;
    const optionsMarkup2 = options2 && options2.map((option2, optionIndex) => {
      const isSelected2 = selected.includes(option2.value);
      const optionId = option2.id || `${id}-${sectionIndex}-${optionIndex}`;
      return /* @__PURE__ */ import_react306.default.createElement(Option3, Object.assign({
        key: optionId
      }, option2, {
        id: optionId,
        section: sectionIndex,
        index: optionIndex,
        onClick: handleClick,
        select: isSelected2,
        allowMultiple,
        verticalAlign,
        onPointerEnter: handlePointerEnter,
        onFocus: handleFocus
      }));
    });
    const option = /* @__PURE__ */ import_react306.default.createElement(Box, {
      as: "ul",
      id: `${id}-${sectionIndex}`,
      role
    }, optionsMarkup2);
    const blockStartPadding = isFirstOption ? title2 ? "100" : "0" : title2 ? "050" : "0";
    return /* @__PURE__ */ import_react306.default.createElement(Box, {
      key: title2 || `noTitle-${sectionIndex}`,
      as: "li",
      paddingBlockStart: blockStartPadding
    }, /* @__PURE__ */ import_react306.default.createElement(BlockStack, {
      gap: isFirstOption && sections ? void 0 : "0"
    }, titleMarkup, option));
  }) : null;
  return /* @__PURE__ */ import_react306.default.createElement(Box, {
    as: "ul",
    role,
    padding: "150"
  }, optionsMarkup);
}
function createNormalizedOptions(options, sections, title) {
  if (options == null) {
    const section = {
      options: [],
      title
    };
    return sections == null ? [] : [section, ...sections];
  }
  if (sections == null) {
    return [{
      title,
      options
    }];
  }
  return [{
    title,
    options
  }, ...sections];
}
function optionArraysAreEqual(firstArray, secondArray) {
  if (isSection(firstArray) && isSection(secondArray)) {
    return arraysAreEqual(firstArray, secondArray, testSectionsPropEquality);
  }
  return arraysAreEqual(firstArray, secondArray);
}
function testSectionsPropEquality(previousSection, currentSection) {
  const {
    options: previousOptions
  } = previousSection;
  const {
    options: currentOptions
  } = currentSection;
  const optionsAreEqual = arraysAreEqual(previousOptions, currentOptions);
  const titlesAreEqual = previousSection.title === currentSection.title;
  return optionsAreEqual && titlesAreEqual;
}
var import_react306;
var init_OptionList = __esm({
  "node_modules/@shopify/polaris/build/esm/components/OptionList/OptionList.js"() {
    import_react306 = __toESM(require_react());
    init_options();
    init_arrays();
    init_use_deep_effect();
    init_Option2();
    init_Box();
    init_BlockStack();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/string.js
function escapeRegex(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
var init_string = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/string.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/Picker/components/Activator/Activator.css.js
var styles112;
var init_Activator_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Picker/components/Activator/Activator.css.js"() {
    styles112 = {
      "Activator": "Polaris-Picker-Activator",
      "disabled": "Polaris-Picker-Activator--disabled"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Picker/components/Activator/Activator.js
var import_react307, Activator;
var init_Activator = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Picker/components/Activator/Activator.js"() {
    init_dist();
    import_react307 = __toESM(require_react());
    init_css();
    init_Activator_css();
    init_BlockStack();
    init_Text();
    init_Icon();
    Activator = /* @__PURE__ */ (0, import_react307.forwardRef)(({
      disabled,
      label,
      placeholder,
      selected,
      onClick
    }, ref) => {
      return /* @__PURE__ */ import_react307.default.createElement("button", {
        ref,
        disabled,
        onClick,
        className: classNames(styles112.Activator, disabled && styles112.disabled)
      }, /* @__PURE__ */ import_react307.default.createElement(BlockStack, {
        as: "span",
        gap: "100"
      }, label && /* @__PURE__ */ import_react307.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        alignment: "start",
        tone: "subdued"
      }, label), (selected !== "" || placeholder) && /* @__PURE__ */ import_react307.default.createElement(Text, {
        as: "span",
        variant: "bodyMd",
        alignment: "start",
        tone: selected ? void 0 : "subdued"
      }, selected || placeholder)), /* @__PURE__ */ import_react307.default.createElement("span", null, /* @__PURE__ */ import_react307.default.createElement(Icon, {
        tone: "subdued",
        source: SvgSelectIcon
      })));
    });
    Activator.displayName = "Activator";
  }
});

// node_modules/@shopify/polaris/build/esm/components/Picker/components/SearchField/SearchField.css.js
var styles113;
var init_SearchField_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Picker/components/SearchField/SearchField.css.js"() {
    styles113 = {
      "SearchField": "Polaris-Picker-SearchField"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/Picker/components/SearchField/SearchField.js
function SearchField2({
  value,
  id: idProp,
  type = "text",
  onFocus,
  onBlur,
  onChange,
  label,
  prefix,
  placeholder,
  focused
}) {
  const inputRef = import_react308.default.useRef(null);
  const comboboxTextFieldContext = useComboboxTextField();
  const {
    activeOptionId,
    listboxId,
    setTextFieldFocused,
    setTextFieldLabelId,
    onTextFieldFocus,
    onTextFieldChange,
    onTextFieldBlur
  } = comboboxTextFieldContext;
  const uniqueId = (0, import_react308.useId)();
  const textFieldId = (0, import_react308.useMemo)(() => idProp || uniqueId, [uniqueId, idProp]);
  const labelId = (0, import_react308.useMemo)(() => labelID(idProp || uniqueId), [uniqueId, idProp]);
  (0, import_react308.useEffect)(() => {
    if (setTextFieldLabelId)
      setTextFieldLabelId(labelId);
  }, [labelId, setTextFieldLabelId]);
  const handleFocus = (0, import_react308.useCallback)((event) => {
    if (onFocus)
      onFocus(event);
    if (onTextFieldFocus)
      onTextFieldFocus();
    if (setTextFieldFocused)
      setTextFieldFocused(true);
  }, [onFocus, onTextFieldFocus, setTextFieldFocused]);
  const handleBlur = (0, import_react308.useCallback)((event) => {
    if (onBlur)
      onBlur(event);
    if (onTextFieldBlur)
      onTextFieldBlur();
    if (setTextFieldFocused)
      setTextFieldFocused(false);
  }, [onBlur, onTextFieldBlur, setTextFieldFocused]);
  const handleChange = (0, import_react308.useCallback)((value2, id) => {
    if (onChange)
      onChange(value2, id);
    if (onTextFieldChange)
      onTextFieldChange(value2);
  }, [onChange, onTextFieldChange]);
  if (focused && document.activeElement !== inputRef.current) {
    inputRef.current?.focus();
  }
  return /* @__PURE__ */ import_react308.default.createElement(InlineStack, {
    gap: "100",
    blockAlign: "center"
  }, /* @__PURE__ */ import_react308.default.createElement(Label, {
    id: textFieldId
  }, /* @__PURE__ */ import_react308.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, label), /* @__PURE__ */ import_react308.default.createElement("span", null, prefix)), /* @__PURE__ */ import_react308.default.createElement("input", {
    ref: inputRef,
    id: textFieldId,
    className: styles113.SearchField,
    value,
    type,
    "aria-activedescendant": activeOptionId,
    role: "combobox",
    "aria-haspopup": "listbox",
    "aria-autocomplete": "list",
    "aria-expanded": "true",
    placeholder,
    "aria-controls": listboxId,
    onFocus: handleFocus,
    onBlur: handleBlur,
    onChange: ({
      target
    }) => handleChange(target.value, textFieldId)
  }));
}
var import_react308;
var init_SearchField2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Picker/components/SearchField/SearchField.js"() {
    import_react308 = __toESM(require_react());
    init_SearchField_css();
    init_hooks11();
    init_Label();
    init_InlineStack();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/Picker/Picker.js
function Picker({
  activator,
  allowMultiple,
  searchField,
  options = [],
  willLoadMoreOptions,
  height: height2,
  addAction,
  onScrolledToBottom,
  onClose,
  ...listboxProps
}) {
  const activatorRef = /* @__PURE__ */ import_react309.default.createRef();
  const [activeItems, setActiveItems] = (0, import_react309.useState)([]);
  const [popoverActive, setPopoverActive] = (0, import_react309.useState)(false);
  const [activeOptionId, setActiveOptionId] = (0, import_react309.useState)();
  const [textFieldLabelId, setTextFieldLabelId] = (0, import_react309.useState)();
  const [listboxId, setListboxId] = (0, import_react309.useState)();
  const [query, setQuery] = (0, import_react309.useState)("");
  const [filteredOptions, setFilteredOptions] = (0, import_react309.useState)(options);
  const shouldOpen = !popoverActive;
  const handleClose = (0, import_react309.useCallback)(() => {
    setPopoverActive(false);
    onClose?.();
    activatorRef.current?.focus();
  }, [activatorRef, onClose]);
  const handleOpen = (0, import_react309.useCallback)(() => {
    setPopoverActive(true);
  }, []);
  const handleFocus = (0, import_react309.useCallback)(() => {
    if (shouldOpen)
      handleOpen();
  }, [shouldOpen, handleOpen]);
  const handleChange = (0, import_react309.useCallback)(() => {
    if (shouldOpen)
      handleOpen();
  }, [shouldOpen, handleOpen]);
  const handleBlur = (0, import_react309.useCallback)(() => {
    if (popoverActive) {
      handleClose();
      setQuery("");
      setFilteredOptions(options);
    }
  }, [popoverActive, handleClose, options]);
  const textFieldContextValue = (0, import_react309.useMemo)(() => ({
    activeOptionId,
    expanded: popoverActive,
    listboxId,
    setTextFieldLabelId,
    onTextFieldFocus: handleFocus,
    onTextFieldChange: handleChange,
    onTextFieldBlur: handleBlur
  }), [activeOptionId, popoverActive, listboxId, setTextFieldLabelId, handleFocus, handleChange, handleBlur]);
  const listboxOptionContextValue = (0, import_react309.useMemo)(() => ({
    allowMultiple
  }), [allowMultiple]);
  const listboxContextValue = (0, import_react309.useMemo)(() => ({
    listboxId,
    textFieldLabelId,
    textFieldFocused: popoverActive,
    willLoadMoreOptions,
    setActiveOptionId,
    setListboxId,
    onKeyToBottom: onScrolledToBottom
  }), [listboxId, textFieldLabelId, popoverActive, willLoadMoreOptions, setActiveOptionId, setListboxId, onScrolledToBottom]);
  const updateText = (0, import_react309.useCallback)((value) => {
    setQuery(value);
    if (value === "") {
      setFilteredOptions(options);
      return;
    }
    const resultOptions = options?.filter((option) => FILTER_REGEX(value).exec(reactChildrenText(option.children)));
    setFilteredOptions(resultOptions ?? []);
  }, [options]);
  const handleSelect = (0, import_react309.useCallback)((selected) => {
    setQuery("");
    updateText("");
    listboxProps.onSelect?.(selected);
    if (!allowMultiple) {
      handleClose();
      setActiveItems([selected]);
      return;
    }
    setActiveItems((selectedOptions) => {
      return activeItems.includes(selected) ? selectedOptions.filter((option) => option !== selected) : [...selectedOptions, selected];
    });
  }, [updateText, listboxProps, allowMultiple, activeItems, handleClose]);
  const firstSelectedOption = reactChildrenText(options.find((option) => option.value === activeItems?.[0])?.children);
  const queryMatchesExistingOption = options.some((option) => {
    const matcher = QUERY_REGEX(query);
    return reactChildrenText(option.children).match(matcher);
  });
  return /* @__PURE__ */ import_react309.default.createElement(Popover2, {
    activator: /* @__PURE__ */ import_react309.default.createElement(Activator, Object.assign({}, activator, {
      onClick: handleOpen,
      selected: firstSelectedOption || "",
      placeholder: activator.placeholder,
      ref: activatorRef
    })),
    active: popoverActive,
    autofocusTarget: "none",
    onClose: handleClose,
    preferredPosition: "cover",
    preventFocusOnClose: true
  }, /* @__PURE__ */ import_react309.default.createElement(Popover2.Pane, {
    onScrolledToBottom,
    height: height2
  }, searchField ? /* @__PURE__ */ import_react309.default.createElement(Box, {
    paddingBlockStart: "200",
    paddingBlockEnd: "100",
    paddingInline: "200",
    borderBlockEndWidth: "025",
    borderColor: "border"
  }, /* @__PURE__ */ import_react309.default.createElement(ComboboxTextFieldContext.Provider, {
    value: textFieldContextValue
  }, /* @__PURE__ */ import_react309.default.createElement(SearchField2, Object.assign({}, searchField, {
    value: query,
    onChange: (value) => {
      updateText(value);
      searchField.onChange?.(value, searchField.id ?? "");
    },
    prefix: /* @__PURE__ */ import_react309.default.createElement(Icon, {
      source: SvgSearchIcon
    }),
    labelHidden: true,
    focused: popoverActive
  })))) : null, /* @__PURE__ */ import_react309.default.createElement(ComboboxListboxContext.Provider, {
    value: listboxContextValue
  }, /* @__PURE__ */ import_react309.default.createElement(ComboboxListboxOptionContext.Provider, {
    value: listboxOptionContextValue
  }, /* @__PURE__ */ import_react309.default.createElement(Box, {
    paddingBlock: "200"
  }, /* @__PURE__ */ import_react309.default.createElement(Listbox, Object.assign({}, listboxProps, {
    onSelect: handleSelect
  }), filteredOptions?.map((option) => /* @__PURE__ */ import_react309.default.createElement(Listbox.Option, Object.assign({
    key: option.value,
    selected: activeItems.some((item) => item === option.value)
  }, option))), addAction && query !== "" && !queryMatchesExistingOption ? /* @__PURE__ */ import_react309.default.createElement(Listbox.Action, Object.assign({}, addAction, {
    value: query
  })) : null))))));
}
var import_react309, FILTER_REGEX, QUERY_REGEX, reactChildrenText;
var init_Picker = __esm({
  "node_modules/@shopify/polaris/build/esm/components/Picker/Picker.js"() {
    import_react309 = __toESM(require_react());
    init_dist();
    init_string();
    init_Activator();
    init_SearchField2();
    init_Popover();
    init_Box();
    init_context16();
    init_Icon();
    init_Listbox();
    FILTER_REGEX = (value) => new RegExp(value, "i");
    QUERY_REGEX = (value) => new RegExp(`^${escapeRegex(value)}$`, "i");
    reactChildrenText = (children) => {
      if (typeof children === "string")
        return children;
      return /* @__PURE__ */ (0, import_react309.isValidElement)(children) ? reactChildrenText(children?.props?.children) : "";
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/PolarisTestProvider/PolarisTestProvider.js
function PolarisTestProvider({
  strict,
  children,
  i18n,
  link,
  mediaQuery,
  features,
  frame,
  theme: themeName = themeNameDefault
}) {
  const Wrapper = strict ? import_react310.StrictMode : import_react310.Fragment;
  const intl = (0, import_react310.useMemo)(() => new I18n(i18n || {}), [i18n]);
  const scrollLockManager = (0, import_react310.useMemo)(() => new ScrollLockManager(), []);
  const stickyManager = (0, import_react310.useMemo)(() => new StickyManager(), []);
  const mergedFrame = createFrameContext(frame);
  const mergedMediaQuery = merge(defaultMediaQuery, mediaQuery);
  return /* @__PURE__ */ import_react310.default.createElement(Wrapper, null, /* @__PURE__ */ import_react310.default.createElement(ThemeNameContext.Provider, {
    value: themeName
  }, /* @__PURE__ */ import_react310.default.createElement(ThemeContext.Provider, {
    value: getTheme(themeName)
  }, /* @__PURE__ */ import_react310.default.createElement(FeaturesContext.Provider, {
    value: features
  }, /* @__PURE__ */ import_react310.default.createElement(I18nContext.Provider, {
    value: intl
  }, /* @__PURE__ */ import_react310.default.createElement(ScrollLockManagerContext.Provider, {
    value: scrollLockManager
  }, /* @__PURE__ */ import_react310.default.createElement(StickyManagerContext.Provider, {
    value: stickyManager
  }, /* @__PURE__ */ import_react310.default.createElement(LinkContext.Provider, {
    value: link
  }, /* @__PURE__ */ import_react310.default.createElement(MediaQueryContext.Provider, {
    value: mergedMediaQuery
  }, /* @__PURE__ */ import_react310.default.createElement(PortalsManager, null, /* @__PURE__ */ import_react310.default.createElement(FocusManager, null, /* @__PURE__ */ import_react310.default.createElement(EphemeralPresenceManager, null, /* @__PURE__ */ import_react310.default.createElement(FrameContext.Provider, {
    value: mergedFrame
  }, children)))))))))))));
}
function noop20() {
}
function createFrameContext({
  logo = void 0,
  showToast = noop20,
  hideToast = noop20,
  toastMessages = [],
  setContextualSaveBar = noop20,
  removeContextualSaveBar = noop20,
  startLoading = noop20,
  stopLoading = noop20
} = {}) {
  return {
    logo,
    showToast,
    hideToast,
    toastMessages,
    setContextualSaveBar,
    removeContextualSaveBar,
    startLoading,
    stopLoading
  };
}
var import_react310, defaultMediaQuery;
var init_PolarisTestProvider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/PolarisTestProvider/PolarisTestProvider.js"() {
    import_react310 = __toESM(require_react());
    init_build();
    init_merge();
    init_use_theme();
    init_I18n();
    init_scroll_lock_manager();
    init_sticky_manager();
    init_context();
    init_context2();
    init_context3();
    init_context4();
    init_context5();
    init_context6();
    init_PortalsManager();
    init_FocusManager();
    init_EphemeralPresenceManager();
    init_context12();
    defaultMediaQuery = {
      isNavigationCollapsed: false
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.css.js
var styles114;
var init_ProgressBar_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.css.js"() {
    styles114 = {
      "ProgressBar": "Polaris-ProgressBar",
      "sizeSmall": "Polaris-ProgressBar--sizeSmall",
      "sizeMedium": "Polaris-ProgressBar--sizeMedium",
      "sizeLarge": "Polaris-ProgressBar--sizeLarge",
      "toneHighlight": "Polaris-ProgressBar--toneHighlight",
      "tonePrimary": "Polaris-ProgressBar--tonePrimary",
      "toneSuccess": "Polaris-ProgressBar--toneSuccess",
      "toneCritical": "Polaris-ProgressBar--toneCritical",
      "Indicator": "Polaris-ProgressBar__Indicator",
      "IndicatorAppearActive": "Polaris-ProgressBar__IndicatorAppearActive",
      "IndicatorAppearDone": "Polaris-ProgressBar__IndicatorAppearDone",
      "Progress": "Polaris-ProgressBar__Progress",
      "Label": "Polaris-ProgressBar__Label"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.js
function ProgressBar({
  progress = 0,
  size: size2 = "medium",
  tone = "highlight",
  animated: hasAppearAnimation = true,
  ariaLabelledBy
}) {
  const theme = useTheme();
  const i18n = useI18n();
  const indicatorRef = (0, import_react311.useRef)(null);
  const className = classNames(styles114.ProgressBar, size2 && styles114[variationName("size", size2)], tone && styles114[variationName("tone", tone)]);
  const warningMessage = i18n.translate(progress < 0 ? "Polaris.ProgressBar.negativeWarningMessage" : "Polaris.ProgressBar.exceedWarningMessage", {
    progress
  });
  const parsedProgress = parseProgress(progress, warningMessage);
  const progressBarDuration = hasAppearAnimation ? theme.motion["motion-duration-500"] : theme.motion["motion-duration-0"];
  return /* @__PURE__ */ import_react311.default.createElement("div", {
    className
  }, /* @__PURE__ */ import_react311.default.createElement("progress", {
    "aria-labelledby": ariaLabelledBy,
    className: styles114.Progress,
    value: parsedProgress,
    max: "100"
  }), /* @__PURE__ */ import_react311.default.createElement(CSSTransition_default, {
    in: true,
    appear: true,
    timeout: parseInt(progressBarDuration, 10),
    nodeRef: indicatorRef,
    classNames: {
      appearActive: styles114.IndicatorAppearActive,
      appearDone: styles114.IndicatorAppearDone
    }
  }, /* @__PURE__ */ import_react311.default.createElement("div", {
    ref: indicatorRef,
    className: styles114.Indicator,
    style: {
      "--pc-progress-bar-duration": progressBarDuration,
      "--pc-progress-bar-percent": parsedProgress / 100
    }
  }, /* @__PURE__ */ import_react311.default.createElement("span", {
    className: styles114.Label
  }, parsedProgress, "%"))));
}
function parseProgress(progress, warningMessage) {
  let progressWidth;
  if (progress < 0) {
    if (true) {
      console.warn(warningMessage);
    }
    progressWidth = 0;
  } else if (progress > 100) {
    if (true) {
      console.warn(warningMessage);
    }
    progressWidth = 100;
  } else {
    progressWidth = progress;
  }
  return progressWidth;
}
var import_react311;
var init_ProgressBar = __esm({
  "node_modules/@shopify/polaris/build/esm/components/ProgressBar/ProgressBar.js"() {
    import_react311 = __toESM(require_react());
    init_esm();
    init_css();
    init_use_theme();
    init_ProgressBar_css();
    init_hooks2();
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.css.js
var sharedStyles;
var init_RangeSlider_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.css.js"() {
    sharedStyles = {
      "RangeSlider": "Polaris-RangeSlider",
      "Track--dashed-after": "Polaris-RangeSlider--trackDashedAfter",
      "Track--dashed": "Polaris-RangeSlider--trackDashed"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.css.js
var styles115;
var init_DualThumb_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.css.js"() {
    styles115 = {
      "DualThumb": "Polaris-RangeSlider-DualThumb",
      "TrackWrapper": "Polaris-RangeSlider-DualThumb__TrackWrapper",
      "disabled": "Polaris-RangeSlider-DualThumb--disabled",
      "Track": "Polaris-RangeSlider-DualThumb__Track",
      "error": "Polaris-RangeSlider-DualThumb--error",
      "Thumbs": "Polaris-RangeSlider-DualThumb__Thumbs",
      "Prefix": "Polaris-RangeSlider-DualThumb__Prefix",
      "Suffix": "Polaris-RangeSlider-DualThumb__Suffix",
      "Output": "Polaris-RangeSlider-DualThumb__Output",
      "OutputBubble": "Polaris-RangeSlider-DualThumb__OutputBubble"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.js
function registerMouseMoveHandler(handler) {
  document.addEventListener("mousemove", handler);
  document.addEventListener("mouseup", () => {
    document.removeEventListener("mousemove", handler);
  }, {
    once: true
  });
}
function registerTouchMoveHandler(handler) {
  const removeHandler = () => {
    document.removeEventListener("touchmove", handler);
    document.removeEventListener("touchend", removeHandler);
    document.removeEventListener("touchcancel", removeHandler);
  };
  document.addEventListener("touchmove", handler, {
    passive: false
  });
  document.addEventListener("touchend", removeHandler, {
    once: true
  });
  document.addEventListener("touchcancel", removeHandler, {
    once: true
  });
}
function sanitizeValue(value, min, max, step, control = Control.Upper) {
  let upperValue = inBoundsUpper(roundedToStep(value[1]));
  let lowerValue = inBoundsLower(roundedToStep(value[0]));
  const maxLowerValue = upperValue - step;
  const minUpperValue = lowerValue + step;
  if (control === Control.Upper && lowerValue > maxLowerValue) {
    lowerValue = maxLowerValue;
  } else if (control === Control.Lower && upperValue < minUpperValue) {
    upperValue = minUpperValue;
  }
  return [lowerValue, upperValue];
  function inBoundsUpper(value2) {
    const lowerMin = min + step;
    if (value2 < lowerMin) {
      return lowerMin;
    } else if (value2 > max) {
      return max;
    } else {
      return value2;
    }
  }
  function inBoundsLower(value2) {
    const upperMax = max - step;
    if (value2 < min) {
      return min;
    } else if (value2 > upperMax) {
      return upperMax;
    } else {
      return value2;
    }
  }
  function roundedToStep(value2) {
    return Math.round(value2 / step) * step;
  }
}
function isTupleEqual(a, b) {
  if (a == null || b == null) {
    return false;
  }
  return a[0] === b[0] && a[1] === b[1];
}
var import_react312, Control, DualThumb;
var init_DualThumb = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/DualThumb/DualThumb.js"() {
    import_react312 = __toESM(require_react());
    init_debounce();
    init_css();
    init_types();
    init_RangeSlider_css();
    init_DualThumb_css();
    init_Text();
    init_Labelled();
    init_Label();
    init_EventListener();
    init_context();
    (function(Control2) {
      Control2[Control2["Lower"] = 0] = "Lower";
      Control2[Control2["Upper"] = 1] = "Upper";
    })(Control || (Control = {}));
    DualThumb = class extends import_react312.Component {
      constructor(...args) {
        super(...args);
        this.state = {
          value: sanitizeValue(this.props.value, this.props.min, this.props.max, this.props.step),
          trackWidth: 0,
          trackLeft: 0
        };
        this.track = /* @__PURE__ */ (0, import_react312.createRef)();
        this.trackWrapper = /* @__PURE__ */ (0, import_react312.createRef)();
        this.thumbLower = /* @__PURE__ */ (0, import_react312.createRef)();
        this.thumbUpper = /* @__PURE__ */ (0, import_react312.createRef)();
        this.setTrackPosition = debounce(() => {
          if (this.track.current) {
            const thumbSize = 16;
            const {
              width: width2,
              left
            } = this.track.current.getBoundingClientRect();
            const adjustedTrackWidth = width2 - thumbSize;
            const adjustedTrackLeft = left + thumbSize / 2;
            const range = this.props.max - this.props.min;
            const minValuePosition = this.props.min / range * adjustedTrackWidth;
            this.setState({
              trackWidth: adjustedTrackWidth,
              trackLeft: adjustedTrackLeft - minValuePosition
            });
          }
        }, 40, {
          leading: true,
          trailing: true,
          maxWait: 40
        });
        this.handleMouseDownThumbLower = (event) => {
          if (event.button !== 0 || this.props.disabled)
            return;
          registerMouseMoveHandler(this.handleMouseMoveThumbLower);
          event.stopPropagation();
        };
        this.handleMouseMoveThumbLower = (event) => {
          const valueUpper = this.state.value[1];
          this.setValue([this.actualXPosition(event.clientX), valueUpper], Control.Upper);
        };
        this.handleTouchStartThumbLower = (event) => {
          if (this.props.disabled)
            return;
          registerTouchMoveHandler(this.handleTouchMoveThumbLower);
          event.stopPropagation();
        };
        this.handleTouchMoveThumbLower = (event) => {
          event.preventDefault();
          const valueUpper = this.state.value[1];
          this.setValue([this.actualXPosition(event.touches[0].clientX), valueUpper], Control.Upper);
        };
        this.handleMouseDownThumbUpper = (event) => {
          if (event.button !== 0 || this.props.disabled)
            return;
          registerMouseMoveHandler(this.handleMouseMoveThumbUpper);
          event.stopPropagation();
        };
        this.handleMouseMoveThumbUpper = (event) => {
          const valueLower = this.state.value[0];
          this.setValue([valueLower, this.actualXPosition(event.clientX)], Control.Lower);
        };
        this.handleTouchStartThumbUpper = (event) => {
          if (this.props.disabled)
            return;
          registerTouchMoveHandler(this.handleTouchMoveThumbUpper);
          event.stopPropagation();
        };
        this.handleTouchMoveThumbUpper = (event) => {
          event.preventDefault();
          const valueLower = this.state.value[0];
          this.setValue([valueLower, this.actualXPosition(event.touches[0].clientX)], Control.Lower);
        };
        this.handleKeypressLower = (event) => {
          if (this.props.disabled)
            return;
          const {
            incrementValueLower,
            decrementValueLower
          } = this;
          const handlerMap = {
            [Key.UpArrow]: incrementValueLower,
            [Key.RightArrow]: incrementValueLower,
            [Key.DownArrow]: decrementValueLower,
            [Key.LeftArrow]: decrementValueLower
          };
          const handler = handlerMap[event.keyCode];
          if (handler != null) {
            event.preventDefault();
            event.stopPropagation();
            handler();
          }
        };
        this.handleKeypressUpper = (event) => {
          if (this.props.disabled)
            return;
          const {
            incrementValueUpper,
            decrementValueUpper
          } = this;
          const handlerMap = {
            [Key.UpArrow]: incrementValueUpper,
            [Key.RightArrow]: incrementValueUpper,
            [Key.DownArrow]: decrementValueUpper,
            [Key.LeftArrow]: decrementValueUpper
          };
          const handler = handlerMap[event.keyCode];
          if (handler != null) {
            event.preventDefault();
            event.stopPropagation();
            handler();
          }
        };
        this.incrementValueLower = () => {
          this.setValue([this.state.value[0] + this.props.step, this.state.value[1]], Control.Upper);
        };
        this.decrementValueLower = () => {
          this.setValue([this.state.value[0] - this.props.step, this.state.value[1]], Control.Upper);
        };
        this.incrementValueUpper = () => {
          this.setValue([this.state.value[0], this.state.value[1] + this.props.step], Control.Lower);
        };
        this.decrementValueUpper = () => {
          this.setValue([this.state.value[0], this.state.value[1] - this.props.step], Control.Lower);
        };
        this.dispatchValue = () => {
          const {
            onChange,
            id
          } = this.props;
          const {
            value
          } = this.state;
          onChange(value, id);
        };
        this.setValue = (dirtyValue, control) => {
          const {
            props: {
              min,
              max,
              step
            },
            state: {
              value
            }
          } = this;
          const sanitizedValue = sanitizeValue(dirtyValue, min, max, step, control);
          if (isTupleEqual(sanitizedValue, value) === false) {
            this.setState({
              value: sanitizedValue
            }, this.dispatchValue);
          }
        };
        this.handleMouseDownTrack = (event) => {
          if (event.button !== 0 || this.props.disabled)
            return;
          event.preventDefault();
          const clickXPosition = this.actualXPosition(event.clientX);
          const {
            value
          } = this.state;
          const distanceFromLowerThumb = Math.abs(value[0] - clickXPosition);
          const distanceFromUpperThumb = Math.abs(value[1] - clickXPosition);
          if (distanceFromLowerThumb <= distanceFromUpperThumb) {
            this.setValue([clickXPosition, value[1]], Control.Upper);
            registerMouseMoveHandler(this.handleMouseMoveThumbLower);
            if (this.thumbLower.current != null) {
              this.thumbLower.current.focus();
            }
          } else {
            this.setValue([value[0], clickXPosition], Control.Lower);
            registerMouseMoveHandler(this.handleMouseMoveThumbUpper);
            if (this.thumbUpper.current != null) {
              this.thumbUpper.current.focus();
            }
          }
        };
        this.handleTouchStartTrack = (event) => {
          if (this.props.disabled)
            return;
          event.preventDefault();
          const clickXPosition = this.actualXPosition(event.touches[0].clientX);
          const {
            value
          } = this.state;
          const distanceFromLowerThumb = Math.abs(value[0] - clickXPosition);
          const distanceFromUpperThumb = Math.abs(value[1] - clickXPosition);
          if (distanceFromLowerThumb <= distanceFromUpperThumb) {
            this.setValue([clickXPosition, value[1]], Control.Upper);
            registerTouchMoveHandler(this.handleTouchMoveThumbLower);
            if (this.thumbLower.current != null) {
              this.thumbLower.current.focus();
            }
          } else {
            this.setValue([value[0], clickXPosition], Control.Lower);
            registerTouchMoveHandler(this.handleTouchMoveThumbUpper);
            if (this.thumbUpper.current != null) {
              this.thumbUpper.current.focus();
            }
          }
        };
        this.actualXPosition = (dirtyXPosition) => {
          if (this.track.current) {
            const {
              min,
              max
            } = this.props;
            const {
              trackLeft,
              trackWidth
            } = this.state;
            const relativeX = dirtyXPosition - trackLeft;
            const percentageOfTrack = relativeX / trackWidth;
            return percentageOfTrack * (max - min);
          } else {
            return 0;
          }
        };
      }
      static getDerivedStateFromProps(props, state) {
        const {
          min,
          step,
          max,
          value,
          onChange,
          id
        } = props;
        const {
          prevValue
        } = state;
        if (isTupleEqual(prevValue, value)) {
          return null;
        }
        const sanitizedValue = sanitizeValue(value, min, max, step);
        if (!isTupleEqual(value, sanitizedValue)) {
          onChange(sanitizedValue, id);
        }
        return {
          prevValue: value,
          value: sanitizedValue
        };
      }
      componentDidMount() {
        this.setTrackPosition();
        if (this.trackWrapper.current != null) {
          this.trackWrapper.current.addEventListener("touchstart", this.handleTouchStartTrack, {
            passive: false
          });
        }
      }
      componentWillUnmount() {
        if (this.trackWrapper.current != null) {
          this.trackWrapper.current.removeEventListener("touchstart", this.handleTouchStartTrack);
        }
      }
      render() {
        const {
          id,
          min,
          max,
          prefix,
          suffix,
          disabled,
          output,
          error,
          onFocus,
          onBlur,
          label,
          labelAction,
          labelHidden,
          helpText
        } = this.props;
        const {
          value
        } = this.state;
        const idLower = id;
        const idUpper = `${id}Upper`;
        const describedBy = [];
        if (error) {
          describedBy.push(`${id}Error`);
        }
        const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
        const trackWrapperClassName = classNames(styles115.TrackWrapper, error && styles115.error, disabled && styles115.disabled);
        const thumbLowerClassName = classNames(styles115.Thumbs, styles115.ThumbLower, disabled && styles115.disabled);
        const thumbUpperClassName = classNames(styles115.Thumbs, styles115.ThumbUpper, disabled && styles115.disabled);
        const trackWidth = this.state.trackWidth;
        const range = max - min;
        const minValuePosition = min / range * trackWidth;
        const leftPositionThumbLower = value[0] / range * trackWidth - minValuePosition;
        const leftPositionThumbUpper = value[1] / range * trackWidth - minValuePosition;
        const outputLowerClassName = classNames(styles115.Output, styles115.OutputLower);
        const outputMarkupLower = !disabled && output ? /* @__PURE__ */ import_react312.default.createElement("output", {
          htmlFor: idLower,
          className: outputLowerClassName,
          style: {
            left: `${leftPositionThumbLower}px`
          }
        }, /* @__PURE__ */ import_react312.default.createElement("div", {
          className: styles115.OutputBubble
        }, /* @__PURE__ */ import_react312.default.createElement(Text, {
          as: "span",
          variant: "headingSm",
          alignment: "center"
        }, value[0]))) : null;
        const outputUpperClassName = classNames(styles115.Output, styles115.OutputUpper);
        const outputMarkupUpper = !disabled && output ? /* @__PURE__ */ import_react312.default.createElement("output", {
          htmlFor: idUpper,
          className: outputUpperClassName,
          style: {
            left: `${leftPositionThumbUpper}px`
          }
        }, /* @__PURE__ */ import_react312.default.createElement("div", {
          className: styles115.OutputBubble
        }, /* @__PURE__ */ import_react312.default.createElement(Text, {
          as: "span",
          variant: "headingSm",
          alignment: "center"
        }, value[1]))) : null;
        const cssVars = {
          "--pc-range-slider-progress-lower": `${leftPositionThumbLower}px`,
          "--pc-range-slider-progress-upper": `${leftPositionThumbUpper}px`
        };
        const prefixMarkup = prefix && /* @__PURE__ */ import_react312.default.createElement("div", {
          className: styles115.Prefix
        }, prefix);
        const suffixMarkup = suffix && /* @__PURE__ */ import_react312.default.createElement("div", {
          className: styles115.Suffix
        }, suffix);
        return /* @__PURE__ */ import_react312.default.createElement(import_react312.default.Fragment, null, /* @__PURE__ */ import_react312.default.createElement(Labelled, {
          id,
          label,
          error,
          action: labelAction,
          labelHidden,
          helpText
        }, /* @__PURE__ */ import_react312.default.createElement("div", {
          className: classNames(styles115.DualThumb, sharedStyles.RangeSlider)
        }, prefixMarkup, /* @__PURE__ */ import_react312.default.createElement("div", {
          className: trackWrapperClassName,
          onMouseDown: this.handleMouseDownTrack,
          ref: this.trackWrapper
        }, /* @__PURE__ */ import_react312.default.createElement("div", {
          className: styles115.Track,
          style: cssVars,
          ref: this.track
        }), /* @__PURE__ */ import_react312.default.createElement("div", {
          className: sharedStyles["Track--dashed"]
        }), /* @__PURE__ */ import_react312.default.createElement("div", {
          id: idLower,
          className: thumbLowerClassName,
          style: {
            left: `${leftPositionThumbLower}px`
          },
          role: "slider",
          "aria-disabled": disabled,
          "aria-valuemin": min,
          "aria-valuemax": max,
          "aria-valuenow": value[0],
          "aria-invalid": Boolean(error),
          "aria-describedby": ariaDescribedBy,
          "aria-labelledby": labelID(id),
          onFocus,
          onBlur,
          tabIndex: 0,
          onKeyDown: this.handleKeypressLower,
          onMouseDown: this.handleMouseDownThumbLower,
          onTouchStart: this.handleTouchStartThumbLower,
          ref: this.thumbLower
        }), outputMarkupLower, /* @__PURE__ */ import_react312.default.createElement("div", {
          id: idUpper,
          className: thumbUpperClassName,
          style: {
            left: `${leftPositionThumbUpper}px`
          },
          role: "slider",
          "aria-disabled": disabled,
          "aria-valuemin": min,
          "aria-valuemax": max,
          "aria-valuenow": value[1],
          "aria-invalid": Boolean(error),
          "aria-describedby": ariaDescribedBy,
          "aria-labelledby": labelID(id),
          onFocus,
          onBlur,
          tabIndex: 0,
          onKeyDown: this.handleKeypressUpper,
          onMouseDown: this.handleMouseDownThumbUpper,
          onTouchStart: this.handleTouchStartThumbUpper,
          ref: this.thumbUpper
        }), outputMarkupUpper), suffixMarkup)), /* @__PURE__ */ import_react312.default.createElement(EventListener, {
          event: "resize",
          handler: this.setTrackPosition
        }));
      }
    };
    DualThumb.contextType = FeaturesContext;
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.css.js
var styles116;
var init_SingleThumb_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.css.js"() {
    styles116 = {
      "SingleThumb": "Polaris-RangeSlider-SingleThumb",
      "disabled": "Polaris-RangeSlider-SingleThumb--disabled",
      "InputWrapper": "Polaris-RangeSlider-SingleThumb__InputWrapper",
      "Prefix": "Polaris-RangeSlider-SingleThumb__Prefix",
      "Suffix": "Polaris-RangeSlider-SingleThumb__Suffix",
      "Input": "Polaris-RangeSlider-SingleThumb__Input",
      "error": "Polaris-RangeSlider-SingleThumb--error",
      "Output": "Polaris-RangeSlider-SingleThumb__Output",
      "OutputBubble": "Polaris-RangeSlider-SingleThumb__OutputBubble"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/utilities/invertNumber.js
function invertNumber(number) {
  if (Math.sign(number) === 1) {
    return -Math.abs(number);
  } else if (Math.sign(number) === -1) {
    return Math.abs(number);
  } else {
    return 0;
  }
}
var init_invertNumber = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/utilities/invertNumber.js"() {
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.js
function SingleThumb(props) {
  const {
    id,
    error,
    helpText,
    value,
    min,
    max,
    disabled,
    output,
    prefix,
    suffix,
    label,
    labelAction,
    labelHidden,
    step,
    onBlur,
    onFocus
  } = props;
  const clampedValue = clamp(value, min, max);
  const describedBy = [];
  if (error) {
    describedBy.push(`${id}Error`);
  }
  if (helpText) {
    describedBy.push(helpTextID(id));
  }
  const ariaDescribedBy = describedBy.length ? describedBy.join(" ") : void 0;
  const sliderProgress = (clampedValue - min) * 100 / (max - min);
  const outputFactor = invertNumber((sliderProgress - 50) / 100);
  const cssVars = {
    "--pc-range-slider-min": min,
    "--pc-range-slider-max": max,
    "--pc-range-slider-current": clampedValue,
    "--pc-range-slider-progress": `${sliderProgress}%`,
    "--pc-range-slider-output-factor": `${outputFactor}`
  };
  const outputMarkup = !disabled && output && /* @__PURE__ */ import_react313.default.createElement("output", {
    htmlFor: id,
    className: styles116.Output
  }, /* @__PURE__ */ import_react313.default.createElement("div", {
    className: styles116.OutputBubble
  }, /* @__PURE__ */ import_react313.default.createElement(Text, {
    as: "span",
    variant: "headingSm",
    alignment: "center"
  }, clampedValue)));
  const prefixMarkup = prefix && /* @__PURE__ */ import_react313.default.createElement("div", {
    className: styles116.Prefix
  }, prefix);
  const suffixMarkup = suffix && /* @__PURE__ */ import_react313.default.createElement("div", {
    className: styles116.Suffix
  }, suffix);
  const className = classNames(styles116.SingleThumb, sharedStyles.RangeSlider, error && styles116.error, disabled && styles116.disabled);
  return /* @__PURE__ */ import_react313.default.createElement(Labelled, {
    id,
    label,
    error,
    action: labelAction,
    labelHidden,
    helpText
  }, /* @__PURE__ */ import_react313.default.createElement("div", {
    className,
    style: cssVars
  }, prefixMarkup, /* @__PURE__ */ import_react313.default.createElement("div", {
    className: classNames(styles116.InputWrapper, sharedStyles["Track--dashed-after"])
  }, /* @__PURE__ */ import_react313.default.createElement("input", {
    type: "range",
    className: styles116.Input,
    id,
    name: id,
    min,
    max,
    step,
    value: clampedValue,
    disabled,
    onChange: handleChange,
    onFocus,
    onBlur,
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-valuenow": clampedValue,
    "aria-invalid": Boolean(error),
    "aria-describedby": ariaDescribedBy
  }), outputMarkup), suffixMarkup));
  function handleChange(event) {
    const {
      onChange
    } = props;
    onChange && onChange(parseFloat(event.currentTarget.value), id);
  }
}
var import_react313;
var init_SingleThumb = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/components/SingleThumb/SingleThumb.js"() {
    import_react313 = __toESM(require_react());
    init_css();
    init_clamp();
    init_RangeSlider_css();
    init_SingleThumb_css();
    init_invertNumber();
    init_Text();
    init_Labelled();
  }
});

// node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.js
function RangeSlider({
  min = 0,
  max = 100,
  step = 1,
  value,
  ...rest
}) {
  const id = (0, import_react314.useId)();
  const sharedProps = {
    id,
    min,
    max,
    step,
    ...rest
  };
  return isDualThumb(value) ? /* @__PURE__ */ import_react314.default.createElement(DualThumb, Object.assign({
    value
  }, sharedProps)) : /* @__PURE__ */ import_react314.default.createElement(SingleThumb, Object.assign({
    value
  }, sharedProps));
}
function isDualThumb(value) {
  return Array.isArray(value);
}
var import_react314;
var init_RangeSlider = __esm({
  "node_modules/@shopify/polaris/build/esm/components/RangeSlider/RangeSlider.js"() {
    import_react314 = __toESM(require_react());
    init_DualThumb();
    init_SingleThumb();
  }
});

// node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.css.js
var styles117;
var init_SelectAllActions_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.css.js"() {
    styles117 = {
      "SelectAllActions": "Polaris-SelectAllActions",
      "SelectAllActions-not-sticky": "Polaris-SelectAllActions--selectAllActionsNotSticky",
      "SelectAllActions-entering": "Polaris-SelectAllActions__SelectAllActions--entering",
      "SelectAllActions-exiting": "Polaris-SelectAllActions__SelectAllActions--exiting",
      "SelectAllActions-hasPagination": "Polaris-SelectAllActions__SelectAllActions--hasPagination",
      "SelectAllActions-exited": "Polaris-SelectAllActions__SelectAllActions--exited",
      "SelectAllActions-entered": "Polaris-SelectAllActions__SelectAllActions--entered",
      "AllAction": "Polaris-SelectAllActions__AllAction"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.js
var import_react315, SelectAllActions;
var init_SelectAllActions = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SelectAllActions/SelectAllActions.js"() {
    import_react315 = __toESM(require_react());
    init_esm();
    init_css();
    init_SelectAllActions_css();
    init_UnstyledButton();
    init_Text();
    init_CheckableButton();
    init_Box();
    init_InlineStack();
    SelectAllActions = /* @__PURE__ */ (0, import_react315.forwardRef)(function SelectAllActions2({
      label,
      selectMode,
      paginatedSelectAllText,
      paginatedSelectAllAction,
      disabled,
      isSticky,
      hasPagination,
      accessibilityLabel,
      selected,
      onToggleAll
    }, ref) {
      const nodeRef = (0, import_react315.useRef)(null);
      const paginatedSelectAllMarkup = paginatedSelectAllAction ? /* @__PURE__ */ import_react315.default.createElement(UnstyledButton, {
        className: styles117.AllAction,
        onClick: paginatedSelectAllAction.onAction,
        size: "slim",
        disabled
      }, /* @__PURE__ */ import_react315.default.createElement(Text, {
        as: "span",
        variant: "bodySm",
        fontWeight: "medium"
      }, paginatedSelectAllAction.content)) : null;
      const hasTextAndAction = paginatedSelectAllText && paginatedSelectAllAction;
      const ariaLive = hasTextAndAction ? "polite" : void 0;
      const checkableButtonProps = {
        accessibilityLabel,
        label: hasTextAndAction ? paginatedSelectAllText : label,
        selected,
        onToggleAll,
        disabled,
        ariaLive,
        ref
      };
      const checkableButtonMarkup = accessibilityLabel && onToggleAll ? /* @__PURE__ */ import_react315.default.createElement(CheckableButton, checkableButtonProps) : null;
      const markup = /* @__PURE__ */ import_react315.default.createElement(Transition_default, {
        timeout: 0,
        in: selectMode,
        key: "markup",
        nodeRef
      }, (status) => {
        const wrapperClasses = classNames(styles117.SelectAllActions, hasPagination && styles117["SelectAllActions-hasPagination"], !isSticky && styles117["SelectAllActions-not-sticky"], status && styles117[`SelectAllActions-${status}`]);
        return /* @__PURE__ */ import_react315.default.createElement("div", {
          className: wrapperClasses,
          ref: nodeRef
        }, /* @__PURE__ */ import_react315.default.createElement(Box, {
          background: "bg-surface-secondary",
          borderBlockStartWidth: "025",
          borderColor: "border",
          width: "100%",
          paddingBlockStart: "300",
          paddingBlockEnd: "300",
          paddingInlineStart: "300",
          paddingInlineEnd: "400"
        }, /* @__PURE__ */ import_react315.default.createElement(InlineStack, {
          gap: "200",
          align: "start",
          blockAlign: "center"
        }, checkableButtonMarkup, /* @__PURE__ */ import_react315.default.createElement(Text, {
          as: "span",
          variant: "bodySm",
          fontWeight: "medium"
        }, hasTextAndAction ? paginatedSelectAllText : label), paginatedSelectAllMarkup)));
      });
      return markup;
    });
  }
});

// node_modules/@shopify/polaris/build/esm/components/SettingToggle/SettingToggle.js
function SettingToggle({
  enabled,
  action,
  children
}) {
  const id = (0, import_react316.useId)();
  if (true) {
    console.warn(`Deprecation: <SettingToggle /> is deprecated. This component will be removed in a future major version of Polaris. Use the primitive layout and typography components to compose a setting toggle card.
      See the "With primitive components" example in https://polaris.shopify.com/components/deprecated/setting-toggle`);
  }
  const actionMarkup = action ? buttonFrom(action, {
    role: "switch",
    ariaChecked: enabled ? "true" : "false",
    size: "slim"
  }) : null;
  return /* @__PURE__ */ import_react316.default.createElement(LegacyCard, {
    sectioned: true
  }, /* @__PURE__ */ import_react316.default.createElement(SettingAction, {
    action: actionMarkup
  }, /* @__PURE__ */ import_react316.default.createElement("label", {
    htmlFor: id
  }, children)));
}
var import_react316;
var init_SettingToggle = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SettingToggle/SettingToggle.js"() {
    import_react316 = __toESM(require_react());
    init_utils3();
    init_LegacyCard();
    init_SettingAction();
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.css.js
var styles118;
var init_SkeletonBodyText_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.css.js"() {
    styles118 = {
      "SkeletonBodyTextContainer": "Polaris-SkeletonBodyText__SkeletonBodyTextContainer",
      "SkeletonBodyText": "Polaris-SkeletonBodyText"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.js
function SkeletonBodyText({
  lines = 3
}) {
  const bodyTextLines = [];
  for (let i = 0; i < lines; i++) {
    bodyTextLines.push(/* @__PURE__ */ import_react317.default.createElement("div", {
      className: styles118.SkeletonBodyText,
      key: i
    }));
  }
  return /* @__PURE__ */ import_react317.default.createElement("div", {
    className: styles118.SkeletonBodyTextContainer
  }, bodyTextLines);
}
var import_react317;
var init_SkeletonBodyText = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonBodyText/SkeletonBodyText.js"() {
    import_react317 = __toESM(require_react());
    init_SkeletonBodyText_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.css.js
var styles119;
var init_SkeletonDisplayText_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.css.js"() {
    styles119 = {
      "DisplayText": "Polaris-SkeletonDisplayText__DisplayText",
      "sizeSmall": "Polaris-SkeletonDisplayText--sizeSmall",
      "sizeMedium": "Polaris-SkeletonDisplayText--sizeMedium",
      "sizeLarge": "Polaris-SkeletonDisplayText--sizeLarge",
      "sizeExtraLarge": "Polaris-SkeletonDisplayText--sizeExtraLarge"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.js
function SkeletonDisplayText({
  size: size2 = "medium",
  maxWidth
}) {
  const className = classNames(styles119.DisplayText, size2 && styles119[variationName("size", size2)]);
  const style = {
    "--pc-skeleton-display-text-max-width": maxWidth ?? void 0
  };
  return /* @__PURE__ */ import_react318.default.createElement("div", {
    className,
    style: sanitizeCustomProperties(style)
  });
}
var import_react318;
var init_SkeletonDisplayText = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonDisplayText/SkeletonDisplayText.js"() {
    import_react318 = __toESM(require_react());
    init_css();
    init_SkeletonDisplayText_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.css.js
var styles120;
var init_SkeletonPage_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.css.js"() {
    styles120 = {
      "SkeletonTitle": "Polaris-SkeletonPage__SkeletonTitle"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.js
function SkeletonPage({
  children,
  fullWidth,
  narrowWidth,
  primaryAction,
  title = "",
  backAction
}) {
  const i18n = useI18n();
  const titleContent = title ? /* @__PURE__ */ import_react319.default.createElement(Text, {
    as: "h1",
    variant: "headingLg",
    fontWeight: "bold"
  }, title) : /* @__PURE__ */ import_react319.default.createElement("div", {
    className: styles120.SkeletonTitle
  }, /* @__PURE__ */ import_react319.default.createElement(Box, {
    background: "bg-fill-tertiary",
    minWidth: "120px",
    minHeight: "28px",
    borderRadius: "100"
  }));
  const primaryActionMarkup = primaryAction ? /* @__PURE__ */ import_react319.default.createElement(Box, {
    id: "SkeletonPage-PrimaryAction",
    borderRadius: "100",
    background: "bg-fill-tertiary",
    minHeight: "2.25rem",
    minWidth: "6.25rem"
  }) : null;
  const backActionMarkup = backAction ? /* @__PURE__ */ import_react319.default.createElement(Box, {
    borderRadius: "100",
    background: "bg-fill-tertiary",
    minHeight: "2.25rem",
    minWidth: "2.25rem",
    maxWidth: "2.25rem"
  }) : null;
  return /* @__PURE__ */ import_react319.default.createElement(BlockStack, {
    gap: "400",
    inlineAlign: "center"
  }, /* @__PURE__ */ import_react319.default.createElement(Box, Object.assign({
    width: "100%",
    padding: "0",
    paddingInlineStart: {
      sm: "600"
    },
    paddingInlineEnd: {
      sm: "600"
    },
    maxWidth: "var(--pc-skeleton-page-max-width)",
    "aria-label": i18n.translate("Polaris.SkeletonPage.loadingLabel"),
    role: "status"
  }, narrowWidth && {
    maxWidth: "var(--pc-skeleton-page-max-width-narrow)"
  }, fullWidth && {
    maxWidth: "none"
  }), /* @__PURE__ */ import_react319.default.createElement(BlockStack, null, /* @__PURE__ */ import_react319.default.createElement(Box, {
    paddingBlockStart: {
      xs: "400",
      md: "500"
    },
    paddingBlockEnd: {
      xs: "400",
      md: "500"
    },
    paddingInlineStart: {
      xs: "400",
      sm: "0"
    },
    paddingInlineEnd: {
      xs: "400",
      sm: "0"
    },
    width: "100%"
  }, /* @__PURE__ */ import_react319.default.createElement(InlineStack, {
    gap: "400",
    align: "space-between",
    blockAlign: "center"
  }, /* @__PURE__ */ import_react319.default.createElement(InlineStack, {
    gap: "400"
  }, backActionMarkup, /* @__PURE__ */ import_react319.default.createElement(Box, {
    paddingBlockStart: "100",
    paddingBlockEnd: "100"
  }, titleContent)), primaryActionMarkup)), /* @__PURE__ */ import_react319.default.createElement(Box, {
    paddingBlockEnd: "200",
    width: "100%"
  }, children))));
}
var import_react319;
var init_SkeletonPage = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonPage/SkeletonPage.js"() {
    import_react319 = __toESM(require_react());
    init_SkeletonPage_css();
    init_hooks2();
    init_Text();
    init_Box();
    init_BlockStack();
    init_InlineStack();
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.css.js
var styles121;
var init_SkeletonTabs_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.css.js"() {
    styles121 = {
      "Tabs": "Polaris-SkeletonTabs__Tabs",
      "Tab": "Polaris-SkeletonTabs__Tab",
      "TabText": "Polaris-SkeletonTabs__TabText",
      "fitted": "Polaris-SkeletonTabs--fitted"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.js
function SkeletonTabs({
  count = 2,
  fitted = false
}) {
  return /* @__PURE__ */ import_react320.default.createElement("div", {
    className: classNames(styles121.Tabs, fitted && styles121.fitted)
  }, [...Array(count).keys()].map((key) => {
    return /* @__PURE__ */ import_react320.default.createElement("div", {
      key,
      className: classNames(styles121.Tab)
    }, /* @__PURE__ */ import_react320.default.createElement("div", {
      className: styles121.TabText
    }));
  }));
}
var import_react320;
var init_SkeletonTabs = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonTabs/SkeletonTabs.js"() {
    import_react320 = __toESM(require_react());
    init_css();
    init_SkeletonTabs_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.css.js
var styles122;
var init_SkeletonThumbnail_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.css.js"() {
    styles122 = {
      "SkeletonThumbnail": "Polaris-SkeletonThumbnail",
      "sizeExtraSmall": "Polaris-SkeletonThumbnail--sizeExtraSmall",
      "sizeSmall": "Polaris-SkeletonThumbnail--sizeSmall",
      "sizeMedium": "Polaris-SkeletonThumbnail--sizeMedium",
      "sizeLarge": "Polaris-SkeletonThumbnail--sizeLarge"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.js
function SkeletonThumbnail({
  size: size2 = "medium"
}) {
  const className = classNames(styles122.SkeletonThumbnail, size2 && styles122[variationName("size", size2)]);
  return /* @__PURE__ */ import_react321.default.createElement("div", {
    className
  });
}
var import_react321;
var init_SkeletonThumbnail = __esm({
  "node_modules/@shopify/polaris/build/esm/components/SkeletonThumbnail/SkeletonThumbnail.js"() {
    import_react321 = __toESM(require_react());
    init_css();
    init_SkeletonThumbnail_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.css.js
var styles123;
var init_TopBar_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.css.js"() {
    styles123 = {
      "TopBar": "Polaris-TopBar",
      "Container": "Polaris-TopBar__Container",
      "LogoDisplayControl": "Polaris-TopBar__LogoDisplayControl",
      "LogoDisplayContainer": "Polaris-TopBar__LogoDisplayContainer",
      "LogoContainer": "Polaris-TopBar__LogoContainer",
      "hasLogoSuffix": "Polaris-TopBar--hasLogoSuffix",
      "Logo": "Polaris-TopBar__Logo",
      "LogoLink": "Polaris-TopBar__LogoLink",
      "ContextControl": "Polaris-TopBar__ContextControl",
      "NavigationIcon": "Polaris-TopBar__NavigationIcon",
      "focused": "Polaris-TopBar--focused",
      "IconWrapper": "Polaris-TopBar__IconWrapper",
      "LeftContent": "Polaris-TopBar__LeftContent",
      "Search": "Polaris-TopBar__Search",
      "RightContent": "Polaris-TopBar__RightContent",
      "SecondaryMenu": "Polaris-TopBar__SecondaryMenu"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.css.js
var styles124;
var init_Search_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.css.js"() {
    styles124 = {
      "Search": "Polaris-TopBar-Search",
      "SearchContent": "Polaris-TopBar-Search__SearchContent",
      "visible": "Polaris-TopBar-Search--visible",
      "Results": "Polaris-TopBar-Search__Results"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.css.js
var styles125;
var init_SearchDismissOverlay_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.css.js"() {
    styles125 = {
      "SearchDismissOverlay": "Polaris-TopBar-SearchDismissOverlay",
      "visible": "Polaris-TopBar-SearchDismissOverlay--visible"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.js
function SearchDismissOverlay({
  onDismiss,
  visible
}) {
  const node = (0, import_react322.useRef)(null);
  const handleDismiss = (0, import_react322.useCallback)(({
    target
  }) => {
    if (target === node.current && onDismiss != null) {
      onDismiss();
    }
  }, [onDismiss]);
  return /* @__PURE__ */ import_react322.default.createElement(import_react322.default.Fragment, null, visible ? /* @__PURE__ */ import_react322.default.createElement(ScrollLock, null) : null, /* @__PURE__ */ import_react322.default.createElement("div", {
    ref: node,
    className: classNames(styles125.SearchDismissOverlay, visible && styles125.visible),
    onClick: handleDismiss
  }));
}
var import_react322;
var init_SearchDismissOverlay = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchDismissOverlay/SearchDismissOverlay.js"() {
    import_react322 = __toESM(require_react());
    init_css();
    init_SearchDismissOverlay_css();
    init_ScrollLock();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.js
function Search({
  visible,
  children,
  onDismiss,
  overlayVisible = false
}) {
  if (children == null) {
    return null;
  }
  const overlayMarkup = visible ? /* @__PURE__ */ import_react323.default.createElement(SearchDismissOverlay, {
    onDismiss,
    visible: overlayVisible
  }) : null;
  return /* @__PURE__ */ import_react323.default.createElement(import_react323.default.Fragment, null, overlayMarkup, /* @__PURE__ */ import_react323.default.createElement("div", {
    className: classNames(styles124.Search, visible && styles124.visible)
  }, /* @__PURE__ */ import_react323.default.createElement("div", {
    className: styles124.SearchContent
  }, /* @__PURE__ */ import_react323.default.createElement("div", {
    className: styles124.Results
  }, children))));
}
var import_react323;
var init_Search = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/Search/Search.js"() {
    import_react323 = __toESM(require_react());
    init_css();
    init_Search_css();
    init_SearchDismissOverlay();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.css.js
var styles126;
var init_SearchField_css2 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.css.js"() {
    styles126 = {
      "SearchField": "Polaris-TopBar-SearchField",
      "focused": "Polaris-TopBar-SearchField--focused",
      "Input": "Polaris-TopBar-SearchField__Input",
      "Backdrop": "Polaris-TopBar-SearchField__Backdrop",
      "BackdropShowFocusBorder": "Polaris-TopBar-SearchField__BackdropShowFocusBorder",
      "Icon": "Polaris-TopBar-SearchField__Icon",
      "Clear": "Polaris-TopBar-SearchField__Clear"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.js
function SearchField3({
  value,
  focused,
  active,
  placeholder,
  onChange,
  onFocus,
  onBlur,
  onCancel,
  showFocusBorder
}) {
  const i18n = useI18n();
  const [forceActive, setForceActive] = (0, import_react324.useState)(false);
  const input = (0, import_react324.useRef)(null);
  const searchId = (0, import_react324.useId)();
  const handleChange = (0, import_react324.useCallback)(({
    currentTarget
  }) => {
    onChange(currentTarget.value);
  }, [onChange]);
  const handleFocus = (0, import_react324.useCallback)(() => onFocus && onFocus(), [onFocus]);
  const handleBlur = (0, import_react324.useCallback)(() => onBlur && onBlur(), [onBlur]);
  const handleClear = (0, import_react324.useCallback)(() => {
    onCancel && onCancel();
    if (!input.current) {
      return;
    }
    input.current.value = "";
    onChange("");
    input.current.focus();
  }, [onCancel, onChange]);
  (0, import_react324.useEffect)(() => {
    if (!input.current) {
      return;
    }
    if (focused) {
      input.current.focus();
    } else {
      input.current.blur();
    }
  }, [focused]);
  const clearMarkup = value !== "" && /* @__PURE__ */ import_react324.default.createElement("button", {
    type: "button",
    "aria-label": i18n.translate("Polaris.TopBar.SearchField.clearButtonLabel"),
    className: styles126.Clear,
    onClick: handleClear,
    onBlur: () => {
      setForceActive(false);
      handleClear();
    },
    onFocus: () => {
      handleFocus();
      setForceActive(true);
    }
  }, /* @__PURE__ */ import_react324.default.createElement(Icon, {
    source: SvgXCircleIcon
  }));
  const className = classNames(styles126.SearchField, (focused || active || forceActive) && styles126.focused);
  return /* @__PURE__ */ import_react324.default.createElement("div", {
    className,
    onFocus: handleFocus,
    onBlur: handleBlur
  }, /* @__PURE__ */ import_react324.default.createElement(Text, {
    as: "span",
    visuallyHidden: true
  }, /* @__PURE__ */ import_react324.default.createElement("label", {
    htmlFor: searchId
  }, i18n.translate("Polaris.TopBar.SearchField.search"))), /* @__PURE__ */ import_react324.default.createElement("input", {
    id: searchId,
    className: styles126.Input,
    placeholder,
    type: "search",
    autoCapitalize: "off",
    autoComplete: "off",
    autoCorrect: "off",
    ref: input,
    value,
    onChange: handleChange,
    onKeyDown: preventDefault
  }), /* @__PURE__ */ import_react324.default.createElement("span", {
    className: styles126.Icon
  }, /* @__PURE__ */ import_react324.default.createElement(Icon, {
    source: SvgSearchIcon
  })), clearMarkup, /* @__PURE__ */ import_react324.default.createElement("div", {
    className: classNames(styles126.Backdrop, showFocusBorder && styles126.BackdropShowFocusBorder)
  }));
}
function preventDefault(event) {
  if (event.key === "Enter") {
    event.preventDefault();
  }
}
var import_react324;
var init_SearchField3 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/SearchField/SearchField.js"() {
    import_react324 = __toESM(require_react());
    init_dist();
    init_css();
    init_SearchField_css2();
    init_hooks2();
    init_Icon();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.css.js
var styles127;
var init_UserMenu_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.css.js"() {
    styles127 = {
      "Details": "Polaris-TopBar-UserMenu__Details"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.css.js
var styles128;
var init_MessageIndicator_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.css.js"() {
    styles128 = {
      "MessageIndicatorWrapper": "Polaris-MessageIndicator__MessageIndicatorWrapper",
      "MessageIndicator": "Polaris-MessageIndicator"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.js
function MessageIndicator({
  children,
  active
}) {
  const indicatorMarkup = active && /* @__PURE__ */ import_react325.default.createElement("div", {
    className: styles128.MessageIndicator
  });
  return /* @__PURE__ */ import_react325.default.createElement("div", {
    className: styles128.MessageIndicatorWrapper
  }, indicatorMarkup, children);
}
var import_react325;
var init_MessageIndicator = __esm({
  "node_modules/@shopify/polaris/build/esm/components/MessageIndicator/MessageIndicator.js"() {
    import_react325 = __toESM(require_react());
    init_MessageIndicator_css();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.css.js
var styles129;
var init_Menu_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.css.js"() {
    styles129 = {
      "ActivatorWrapper": "Polaris-TopBar-Menu__ActivatorWrapper",
      "Activator": "Polaris-TopBar-Menu__Activator",
      "Activator-userMenu": "Polaris-TopBar-Menu__Activator--userMenu",
      "Section": "Polaris-TopBar-Menu__Section"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.css.js
var styles130;
var init_Message_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.css.js"() {
    styles130 = {
      "Section": "Polaris-Menu-Message__Section"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.js
function Message({
  title,
  description,
  action,
  link,
  badge
}) {
  const badgeMarkup = badge && /* @__PURE__ */ import_react326.default.createElement(Badge, {
    tone: badge.tone
  }, badge.content);
  const {
    to,
    content: linkContent
  } = link;
  const {
    onClick,
    content: actionContent
  } = action;
  return /* @__PURE__ */ import_react326.default.createElement("div", {
    className: styles130.Section
  }, /* @__PURE__ */ import_react326.default.createElement(Popover2.Section, null, /* @__PURE__ */ import_react326.default.createElement(LegacyStack, {
    vertical: true,
    spacing: "tight"
  }, /* @__PURE__ */ import_react326.default.createElement(TextContainer, null, /* @__PURE__ */ import_react326.default.createElement(Text, {
    variant: "headingMd",
    as: "h2"
  }, title, badgeMarkup), /* @__PURE__ */ import_react326.default.createElement("p", null, description)), /* @__PURE__ */ import_react326.default.createElement(Link, {
    url: to
  }, linkContent), /* @__PURE__ */ import_react326.default.createElement(Button, {
    variant: "plain",
    onClick
  }, actionContent))));
}
var import_react326;
var init_Message = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/components/Message/Message.js"() {
    import_react326 = __toESM(require_react());
    init_Message_css();
    init_Link();
    init_Badge();
    init_Popover();
    init_LegacyStack();
    init_TextContainer();
    init_Text();
    init_Button();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.js
function Menu(props) {
  const {
    actions,
    onOpen,
    onClose,
    open,
    activatorContent,
    message,
    accessibilityLabel,
    customWidth,
    userMenu
  } = props;
  const badgeProps = message && message.badge && {
    content: message.badge.content,
    tone: message.badge.tone
  };
  const messageMarkup = message && /* @__PURE__ */ import_react327.default.createElement(Message, {
    title: message.title,
    description: message.description,
    action: {
      onClick: message.action.onClick,
      content: message.action.content
    },
    link: {
      to: message.link.to,
      content: message.link.content
    },
    badge: badgeProps
  });
  return /* @__PURE__ */ import_react327.default.createElement(Popover2, {
    activator: /* @__PURE__ */ import_react327.default.createElement("div", {
      className: styles129.ActivatorWrapper
    }, /* @__PURE__ */ import_react327.default.createElement("button", {
      type: "button",
      className: classNames(styles129.Activator, userMenu && styles129["Activator-userMenu"]),
      onClick: onOpen,
      "aria-label": accessibilityLabel
    }, activatorContent)),
    active: open,
    onClose,
    fixed: true,
    fullHeight: true,
    preferredAlignment: "right"
  }, /* @__PURE__ */ import_react327.default.createElement("div", {
    className: styles129.MenuItems
  }, /* @__PURE__ */ import_react327.default.createElement(Box, {
    width: customWidth
  }, /* @__PURE__ */ import_react327.default.createElement(ActionList, {
    actionRole: "menuitem",
    onActionAnyItem: onClose,
    sections: actions
  }), messageMarkup)));
}
var import_react327;
var init_Menu = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/Menu/Menu.js"() {
    import_react327 = __toESM(require_react());
    init_css();
    init_Menu_css();
    init_Message();
    init_Popover();
    init_Box();
    init_ActionList();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.js
function UserMenu({
  name,
  detail,
  avatar,
  initials,
  actions,
  message,
  onToggle,
  open,
  accessibilityLabel,
  customActivator,
  customWidth
}) {
  const showIndicator = Boolean(message);
  const activatorContentMarkup = customActivator ? customActivator : /* @__PURE__ */ import_react328.default.createElement(import_react328.default.Fragment, null, /* @__PURE__ */ import_react328.default.createElement("span", {
    className: styles127.Details
  }, /* @__PURE__ */ import_react328.default.createElement(Text, {
    as: "p",
    variant: "bodySm",
    alignment: "start",
    fontWeight: "medium",
    truncate: true
  }, name), /* @__PURE__ */ import_react328.default.createElement("span", {
    className: styles127.Message
  }, /* @__PURE__ */ import_react328.default.createElement(Text, {
    as: "p",
    variant: "bodyXs",
    alignment: "start",
    tone: "text-inverse-secondary",
    truncate: true
  }, detail))), /* @__PURE__ */ import_react328.default.createElement(MessageIndicator, {
    active: showIndicator
  }, /* @__PURE__ */ import_react328.default.createElement(Avatar, {
    size: "md",
    initials: initials && initials.replace(" ", ""),
    source: avatar,
    name
  })));
  return /* @__PURE__ */ import_react328.default.createElement(Menu, {
    activatorContent: activatorContentMarkup,
    open,
    onOpen: onToggle,
    onClose: onToggle,
    actions,
    message,
    accessibilityLabel,
    customWidth,
    userMenu: true
  });
}
var import_react328;
var init_UserMenu = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/components/UserMenu/UserMenu.js"() {
    import_react328 = __toESM(require_react());
    init_UserMenu_css();
    init_MessageIndicator();
    init_Menu();
    init_Text();
    init_Avatar();
  }
});

// node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.js
var import_react329, TopBar;
var init_TopBar = __esm({
  "node_modules/@shopify/polaris/build/esm/components/TopBar/TopBar.js"() {
    import_react329 = __toESM(require_react());
    init_dist();
    init_css();
    init_get_width();
    init_use_toggle();
    init_TopBar_css();
    init_Search();
    init_SearchField3();
    init_UserMenu();
    init_hooks2();
    init_hooks8();
    init_Icon();
    init_UnstyledLink();
    init_Image();
    init_Menu();
    TopBar = function TopBar2({
      showNavigationToggle,
      userMenu,
      searchResults,
      searchField,
      secondaryMenu,
      searchResultsVisible,
      searchResultsOverlayVisible = false,
      onNavigationToggle,
      onSearchResultsDismiss,
      contextControl,
      logoSuffix
    }) {
      const i18n = useI18n();
      const {
        logo
      } = useFrame();
      const {
        value: focused,
        setTrue: forceTrueFocused,
        setFalse: forceFalseFocused
      } = useToggle(false);
      const iconClassName = classNames(styles123.NavigationIcon, focused && styles123.focused);
      const navigationButtonMarkup = showNavigationToggle ? /* @__PURE__ */ import_react329.default.createElement("button", {
        type: "button",
        className: iconClassName,
        onClick: onNavigationToggle,
        onFocus: forceTrueFocused,
        onBlur: forceFalseFocused,
        "aria-label": i18n.translate("Polaris.TopBar.toggleMenuLabel")
      }, /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.IconWrapper
      }, /* @__PURE__ */ import_react329.default.createElement(Icon, {
        source: SvgMenuIcon
      }))) : null;
      const width2 = getWidth(logo, 104);
      let contextMarkup;
      if (contextControl) {
        contextMarkup = /* @__PURE__ */ import_react329.default.createElement("div", {
          className: styles123.ContextControl
        }, contextControl);
      } else if (logo) {
        const className = classNames(styles123.LogoContainer, showNavigationToggle || searchField ? styles123.LogoDisplayControl : styles123.LogoDisplayContainer, logoSuffix && styles123.hasLogoSuffix);
        contextMarkup = /* @__PURE__ */ import_react329.default.createElement("div", {
          className
        }, /* @__PURE__ */ import_react329.default.createElement(UnstyledLink, {
          url: logo.url || "",
          className: styles123.LogoLink,
          style: {
            width: width2
          }
        }, /* @__PURE__ */ import_react329.default.createElement(Image, {
          source: logo.topBarSource || "",
          alt: logo.accessibilityLabel || "",
          className: styles123.Logo,
          style: {
            width: width2
          }
        })), logoSuffix);
      }
      const searchMarkup = searchField ? /* @__PURE__ */ import_react329.default.createElement(import_react329.default.Fragment, null, searchField, /* @__PURE__ */ import_react329.default.createElement(Search, {
        visible: searchResultsVisible,
        onDismiss: onSearchResultsDismiss,
        overlayVisible: searchResultsOverlayVisible
      }, searchResults)) : null;
      return /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.TopBar
      }, /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.Container
      }, /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.LeftContent
      }, navigationButtonMarkup, contextMarkup), /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.Search
      }, searchMarkup), /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.RightContent
      }, /* @__PURE__ */ import_react329.default.createElement("div", {
        className: styles123.SecondaryMenu
      }, secondaryMenu), userMenu)));
    };
    TopBar.Menu = Menu;
    TopBar.SearchField = SearchField3;
    TopBar.UserMenu = UserMenu;
  }
});

// node_modules/@shopify/polaris/build/esm/components/UnstyledButton/utils.js
function unstyledButtonFrom({
  content,
  onAction,
  ...action
}, overrides, key) {
  return /* @__PURE__ */ import_react330.default.createElement(UnstyledButton, Object.assign({
    key,
    onClick: onAction
  }, action, overrides), content);
}
var import_react330;
var init_utils6 = __esm({
  "node_modules/@shopify/polaris/build/esm/components/UnstyledButton/utils.js"() {
    import_react330 = __toESM(require_react());
    init_UnstyledButton();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/duration.js
function ensureTwoDigits(num) {
  return num > 9 ? String(num) : `0${num}`;
}
function secondsToTimeComponents(seconds) {
  return {
    hours: Math.floor(seconds / HOUR),
    minutes: Math.floor(seconds % HOUR / MINUTE),
    seconds: seconds % MINUTE
  };
}
function secondsToTimestamp(numSeconds) {
  const {
    hours,
    minutes,
    seconds
  } = secondsToTimeComponents(numSeconds);
  const hasHours = numSeconds > HOUR;
  const hoursText = hasHours ? `${hours}:` : "";
  const minutesText = `${hasHours ? ensureTwoDigits(minutes) : minutes}:`;
  const secondsText = `${ensureTwoDigits(seconds)}`;
  return `${hoursText}${minutesText}${secondsText}`;
}
function secondsToDurationTranslationKey(numSeconds) {
  const {
    hours,
    minutes,
    seconds
  } = secondsToTimeComponents(numSeconds);
  let durationKey = "Polaris.VideoThumbnail.playButtonA11yLabel.duration";
  if (hours) {
    durationKey += `.hours.${hours > 1 ? "other" : "one"}`;
    if (seconds) {
      if (minutes > 1) {
        durationKey += `${seconds > 1 ? ".minutesAndSeconds" : ".minutesAndSecond"}`;
      } else if (minutes === 1) {
        durationKey += `${seconds > 1 ? ".minuteAndSeconds" : ".minuteAndSecond"}`;
      } else {
        durationKey += `${seconds > 1 ? ".andSeconds" : ".andSecond"}`;
      }
    } else if (minutes) {
      durationKey += `${minutes > 1 ? ".andMinutes" : ".andMinute"}`;
    } else {
      durationKey += ".only";
    }
  } else if (minutes) {
    durationKey += `.minutes.${minutes > 1 ? "other" : "one"}`;
    if (seconds) {
      durationKey += `${seconds > 1 ? ".andSeconds" : ".andSecond"}`;
    } else {
      durationKey += ".only";
    }
  } else if (seconds) {
    durationKey += seconds > 1 ? ".seconds.other" : ".seconds.one";
  }
  return durationKey;
}
var MINUTE, HOUR;
var init_duration = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/duration.js"() {
    MINUTE = 60;
    HOUR = MINUTE * 60;
  }
});

// node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.css.js
var styles131;
var init_VideoThumbnail_css = __esm({
  "node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.css.js"() {
    styles131 = {
      "Thumbnail": "Polaris-VideoThumbnail__Thumbnail",
      "ThumbnailContainer": "Polaris-VideoThumbnail__ThumbnailContainer",
      "PlayButton": "Polaris-VideoThumbnail__PlayButton",
      "Timestamp": "Polaris-VideoThumbnail__Timestamp",
      "PlayIcon": "Polaris-VideoThumbnail__PlayIcon",
      "Progress": "Polaris-VideoThumbnail__Progress",
      "Indicator": "Polaris-VideoThumbnail__Indicator",
      "ProgressBar": "Polaris-VideoThumbnail__ProgressBar",
      "Label": "Polaris-VideoThumbnail__Label"
    };
  }
});

// node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.js
function VideoThumbnail({
  thumbnailUrl,
  videoLength = 0,
  videoProgress = 0,
  showVideoProgress = false,
  accessibilityLabel,
  onClick,
  onBeforeStartPlaying
}) {
  const i18n = useI18n();
  const {
    isNavigationCollapsed
  } = useMediaQuery();
  let buttonLabel;
  if (accessibilityLabel) {
    buttonLabel = accessibilityLabel;
  } else if (videoLength) {
    const {
      hours,
      minutes,
      seconds
    } = secondsToTimeComponents(videoLength);
    buttonLabel = i18n.translate("Polaris.VideoThumbnail.playButtonA11yLabel.defaultWithDuration", {
      duration: i18n.translate(secondsToDurationTranslationKey(videoLength), {
        hourCount: hours,
        minuteCount: minutes,
        secondCount: seconds
      })
    });
  } else {
    buttonLabel = i18n.translate("Polaris.VideoThumbnail.playButtonA11yLabel.default");
  }
  const timeStampMarkup = videoLength ? /* @__PURE__ */ import_react331.default.createElement("div", {
    className: styles131.Timestamp
  }, /* @__PURE__ */ import_react331.default.createElement(LegacyStack, {
    alignment: "center",
    spacing: "extraTight"
  }, /* @__PURE__ */ import_react331.default.createElement("span", {
    className: styles131.PlayIcon
  }, /* @__PURE__ */ import_react331.default.createElement(Icon, {
    source: SvgPlayIcon
  })), /* @__PURE__ */ import_react331.default.createElement(Text, {
    variant: isNavigationCollapsed ? "bodyLg" : "bodyMd",
    as: "p",
    fontWeight: "semibold"
  }, secondsToTimestamp(videoLength)))) : null;
  let progressMarkup = null;
  if (showVideoProgress) {
    const progressValue = calculateProgress(videoLength, videoProgress);
    const progressValuePercents = Math.round(progressValue * 100);
    progressMarkup = /* @__PURE__ */ import_react331.default.createElement("div", {
      className: styles131.Progress
    }, /* @__PURE__ */ import_react331.default.createElement("progress", {
      className: styles131.ProgressBar,
      value: progressValuePercents,
      max: "100"
    }), /* @__PURE__ */ import_react331.default.createElement("div", {
      className: styles131.Indicator,
      style: {
        transform: `scaleX(${progressValue})`
      }
    }, /* @__PURE__ */ import_react331.default.createElement("span", {
      className: styles131.Label
    }, progressValuePercents, "%")));
  }
  return /* @__PURE__ */ import_react331.default.createElement("div", {
    className: styles131.ThumbnailContainer
  }, /* @__PURE__ */ import_react331.default.createElement("div", {
    className: styles131.Thumbnail,
    style: {
      backgroundImage: `url(${thumbnailUrl})`
    }
  }), /* @__PURE__ */ import_react331.default.createElement("button", {
    type: "button",
    className: styles131.PlayButton,
    "aria-label": buttonLabel,
    onClick,
    onMouseEnter: onBeforeStartPlaying,
    onFocus: onBeforeStartPlaying,
    onTouchStart: onBeforeStartPlaying
  }, timeStampMarkup), progressMarkup);
}
function calculateProgress(videoLength, videoProgress) {
  if (videoProgress > videoLength && true) {
    console.warn("Value passed to the video progress should not exceed video length. Resetting progress to 100%.");
  }
  if (videoProgress > 0 && videoLength > 0) {
    const progress = parseFloat((videoProgress / videoLength).toFixed(2));
    return progress > 1 ? 1 : progress;
  }
  return 0;
}
var import_react331;
var init_VideoThumbnail = __esm({
  "node_modules/@shopify/polaris/build/esm/components/VideoThumbnail/VideoThumbnail.js"() {
    import_react331 = __toESM(require_react());
    init_dist();
    init_duration();
    init_VideoThumbnail_css();
    init_hooks2();
    init_hooks7();
    init_LegacyStack();
    init_Icon();
    init_Text();
  }
});

// node_modules/@shopify/polaris/build/esm/utilities/index-table/hooks.js
function useRowHovered() {
  const hovered = (0, import_react332.useContext)(RowHoveredContext);
  return hovered;
}
function useRowSelected() {
  const {
    selected
  } = (0, import_react332.useContext)(RowContext);
  return selected;
}
function useContainerScroll() {
  const scrolledContainerRef = (0, import_react332.useContext)(ScrollContext);
  return scrolledContainerRef;
}
var import_react332;
var init_hooks14 = __esm({
  "node_modules/@shopify/polaris/build/esm/utilities/index-table/hooks.js"() {
    import_react332 = __toESM(require_react());
    init_context14();
  }
});

// node_modules/@shopify/polaris/build/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  AccountConnection: () => AccountConnection,
  ActionList: () => ActionList,
  ActionMenu: () => ActionMenu,
  AlphaPicker: () => Picker,
  AppProvider: () => AppProvider,
  AutoSelection: () => AutoSelection,
  Autocomplete: () => Autocomplete,
  Avatar: () => Avatar,
  Backdrop: () => Backdrop,
  Badge: () => Badge,
  BadgeProgressValue: () => ProgressValue,
  BadgeStatusValue: () => ToneValue,
  Banner: () => Banner,
  Bleed: () => Bleed,
  BlockStack: () => BlockStack,
  Box: () => Box,
  Breadcrumbs: () => Breadcrumbs,
  Button: () => Button,
  ButtonGroup: () => ButtonGroup,
  CalloutCard: () => CalloutCard,
  Card: () => Card,
  Checkbox: () => Checkbox,
  ChoiceList: () => ChoiceList,
  Collapsible: () => Collapsible,
  ColorPicker: () => ColorPicker,
  Combobox: () => Combobox,
  Connected: () => Connected,
  ContextualSaveBar: () => ContextualSaveBar2,
  DATA_ATTRIBUTE: () => DATA_ATTRIBUTE,
  DEFAULT_LOCALE: () => DEFAULT_LOCALE,
  DEFAULT_TOAST_DURATION: () => DEFAULT_TOAST_DURATION,
  DEFAULT_TOAST_DURATION_WITH_ACTION: () => DEFAULT_TOAST_DURATION_WITH_ACTION,
  DataTable: () => DataTable,
  DatePicker: () => DatePicker,
  DescriptionList: () => DescriptionList,
  Divider: () => Divider,
  DropZone: () => DropZone,
  EmptySearchResult: () => EmptySearchResult,
  EmptyState: () => EmptyState,
  EventListener: () => EventListener,
  ExceptionList: () => ExceptionList,
  Filters: () => Filters,
  Focus: () => Focus,
  FooterHelp: () => FooterHelp,
  Form: () => Form,
  FormLayout: () => FormLayout,
  Frame: () => Frame,
  FrameContext: () => FrameContext,
  FullscreenBar: () => FullscreenBar,
  Grid: () => Grid,
  INDEX_TABLE_SELECT_ALL_ITEMS: () => SELECT_ALL_ITEMS,
  Icon: () => Icon,
  Image: () => Image,
  IndexFilters: () => IndexFilters,
  IndexFiltersMode: () => IndexFiltersMode,
  IndexTable: () => IndexTable,
  IndexTableSelectionType: () => SelectionType,
  Indicator: () => Indicator,
  InlineCode: () => InlineCode,
  InlineError: () => InlineError,
  InlineGrid: () => InlineGrid,
  InlineStack: () => InlineStack,
  Key: () => Key,
  KeyboardKey: () => KeyboardKey,
  KeypressListener: () => KeypressListener,
  Label: () => Label,
  Labelled: () => Labelled,
  Layout: () => Layout,
  LegacyCard: () => LegacyCard,
  LegacyFilters: () => LegacyFilters,
  LegacyStack: () => LegacyStack,
  LegacyTabs: () => LegacyTabs,
  Link: () => Link,
  List: () => List,
  Listbox: () => Listbox,
  Loading: () => Loading3,
  MediaCard: () => MediaCard,
  Modal: () => Modal,
  Navigation: () => Navigation2,
  OptionList: () => OptionList,
  Page: () => Page,
  PageActions: () => PageActions,
  Pagination: () => Pagination,
  PolarisTestProvider: () => PolarisTestProvider,
  Popover: () => Popover2,
  PopoverCloseSource: () => PopoverCloseSource,
  Portal: () => Portal,
  PortalsManager: () => PortalsManager,
  PositionedOverlay: () => PositionedOverlay,
  ProgressBar: () => ProgressBar,
  RadioButton: () => RadioButton,
  RangeSlider: () => RangeSlider,
  ResourceItem: () => ResourceItem,
  ResourceList: () => ResourceList,
  SUPPORTED_LOCALES: () => SUPPORTED_LOCALES,
  ScrollLock: () => ScrollLock,
  Scrollable: () => Scrollable,
  Select: () => Select,
  SelectAllActions: () => SelectAllActions,
  SettingToggle: () => SettingToggle,
  Sheet: () => Sheet,
  SkeletonBodyText: () => SkeletonBodyText,
  SkeletonDisplayText: () => SkeletonDisplayText,
  SkeletonPage: () => SkeletonPage,
  SkeletonTabs: () => SkeletonTabs,
  SkeletonThumbnail: () => SkeletonThumbnail,
  Spinner: () => Spinner,
  Sticky: () => Sticky,
  Tabs: () => Tabs,
  Tag: () => Tag,
  Text: () => Text,
  TextContainer: () => TextContainer,
  TextField: () => TextField,
  ThemeProvider: () => ThemeProvider,
  Thumbnail: () => Thumbnail,
  Toast: () => Toast2,
  Tooltip: () => Tooltip,
  TopBar: () => TopBar,
  TrapFocus: () => TrapFocus,
  Truncate: () => Truncate,
  UnstableBulkActions: () => BulkActions,
  UnstyledButton: () => UnstyledButton,
  UnstyledLink: () => UnstyledLink,
  VideoThumbnail: () => VideoThumbnail,
  _SECRET_INTERNAL_SCROLL_LOCK_MANAGER_CONTEXT: () => ScrollLockManagerContext,
  _SECRET_INTERNAL_WITHIN_CONTENT_CONTEXT: () => WithinContentContext,
  buttonFrom: () => buttonFrom,
  buttonsFrom: () => buttonsFrom,
  errorTextID: () => errorTextID,
  hexToRgb: () => hexToRgb,
  hsbToHex: () => hsbToHex,
  hsbToRgb: () => hsbToRgb,
  hslToRgb: () => hslToRgb,
  isNavigationItemActive: () => isNavigationItemActive,
  labelID: () => labelID,
  rgbString: () => rgbString,
  rgbToHex: () => rgbToHex,
  rgbToHsb: () => rgbToHsb,
  rgbToHsl: () => rgbToHsl,
  rgbaString: () => rgbaString,
  unstyledButtonFrom: () => unstyledButtonFrom,
  useBreakpoints: () => useBreakpoints,
  useCopyToClipboard: () => useCopyToClipboard,
  useEphemeralPresenceManager: () => useReadOnlyEphemeralPresenceManager,
  useEventListener: () => useEventListener,
  useFocus: () => useFocus,
  useFocusIn: () => useFocusIn,
  useFrame: () => useFrame,
  useHover: () => useHover,
  useIndexResourceState: () => useIndexResourceState,
  useIndexTableContainerScroll: () => useContainerScroll,
  useIndexTableRowHovered: () => useRowHovered,
  useIndexTableRowSelected: () => useRowSelected,
  useMediaQuery: () => useMediaQuery2,
  useSetIndexFiltersMode: () => useSetIndexFiltersMode,
  useTheme: () => useTheme
});
var init_esm2 = __esm({
  "node_modules/@shopify/polaris/build/esm/index.js"() {
    init_configure();
    init_types();
    init_shared();
    init_ThemeProvider();
    init_color_transformers();
    init_within_content_context();
    init_use_copy_to_clipboard();
    init_use_event_listener();
    init_use_focus();
    init_use_hover();
    init_use_media_query();
    init_use_theme();
    init_use_index_resource_state();
    init_breakpoints2();
    init_AppProvider();
    init_AccountConnection();
    init_ActionList();
    init_ActionMenu();
    init_Autocomplete();
    init_Avatar();
    init_Backdrop();
    init_Badge();
    init_types2();
    init_Banner();
    init_Bleed();
    init_Box();
    init_Breadcrumbs();
    init_BulkActions();
    init_Button();
    init_utils3();
    init_ButtonGroup();
    init_CalloutCard();
    init_Card();
    init_Checkbox();
    init_ChoiceList();
    init_Collapsible();
    init_ColorPicker();
    init_InlineGrid();
    init_Combobox();
    init_Connected();
    init_ContextualSaveBar2();
    init_DataTable();
    init_DatePicker();
    init_DescriptionList();
    init_Divider();
    init_DropZone();
    init_EmptySearchResult();
    init_EmptyState();
    init_EventListener();
    init_ExceptionList();
    init_Filters();
    init_Focus();
    init_FooterHelp();
    init_Form();
    init_FormLayout();
    init_Frame();
    init_Toast();
    init_FullscreenBar();
    init_Grid();
    init_Icon();
    init_Image();
    init_IndexFilters();
    init_useSetIndexFiltersMode();
    init_types5();
    init_IndexTable();
    init_Indicator();
    init_InlineStack();
    init_InlineCode();
    init_InlineError();
    init_KeyboardKey();
    init_KeypressListener();
    init_Label();
    init_Labelled();
    init_Layout();
    init_LegacyCard();
    init_LegacyFilters();
    init_LegacyStack();
    init_LegacyTabs();
    init_Link();
    init_List();
    init_Listbox();
    init_Loading3();
    init_MediaCard();
    init_Modal();
    init_Navigation2();
    init_Item10();
    init_OptionList();
    init_Page();
    init_PageActions();
    init_Pagination();
    init_Picker();
    init_PolarisTestProvider();
    init_Popover();
    init_PopoverOverlay();
    init_Portal();
    init_PortalsManager();
    init_PositionedOverlay();
    init_ProgressBar();
    init_RadioButton();
    init_RangeSlider();
    init_ResourceItem();
    init_ResourceList();
    init_Scrollable();
    init_ScrollLock();
    init_Select();
    init_SelectAllActions();
    init_SettingToggle();
    init_Sheet();
    init_SkeletonBodyText();
    init_SkeletonDisplayText();
    init_SkeletonPage();
    init_SkeletonTabs();
    init_SkeletonThumbnail();
    init_Spinner();
    init_Sticky();
    init_Tabs();
    init_Tag();
    init_Text();
    init_TextContainer();
    init_TextField();
    init_Thumbnail();
    init_Toast2();
    init_Tooltip();
    init_TopBar();
    init_TrapFocus();
    init_Truncate();
    init_UnstyledButton();
    init_utils6();
    init_UnstyledLink();
    init_BlockStack();
    init_VideoThumbnail();
    init_hooks8();
    init_context12();
    init_context3();
    init_hooks14();
    init_types3();
    init_hooks3();
  }
});

export {
  AppProvider,
  Text,
  Icon,
  Spinner,
  Button,
  Box,
  Card,
  InlineStack,
  BlockStack,
  Badge,
  InlineError,
  TextField,
  ActionList,
  Popover2 as Popover,
  Checkbox,
  Autocomplete,
  Banner,
  ChoiceList,
  DatePicker,
  Divider,
  EmptyState,
  FormLayout,
  Modal,
  Frame,
  IndexTable,
  Layout,
  Link,
  List,
  Page,
  PageActions,
  ResourceItem,
  Select,
  ResourceList,
  Thumbnail,
  Toast2 as Toast,
  esm_exports,
  init_esm2 as init_esm
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=/build/_shared/chunk-X4VQBRVX.js.map
