{
  "version": 3,
  "sources": ["../app/routes/app.labe.create.js", "<stdin>", "../app/entry.server.jsx", "../app/shopify.server.js", "../app/graphql/graphql.server.js", "../app/graphql/schema.server.js", "../app/models/discount.model.js", "../app/models/byXGetYDiscount.model.js", "../app/graphql/resolver.server.js", "../app/models/store.model.js", "../app/db.server.js", "../app/root.jsx", "../app/routes/app.volume-discount.$functionId.$id.jsx", "../app/components/NotFoundPage/NotFoundPage.jsx", "../app/const/Function.ts", "../app/graphql/mutation.js", "../app/routes/app.volume-discount.$functionId.new.jsx", "../app/graphql/query.js", "../app/routes/app.byXgetYdiscount.$id.jsx", "../app/routes/app.byXgetYdiscount.new.jsx", "../app/routes/app.discountList.jsx", "server-entry-module:@remix-run/dev/server-build", "../app/routes/app.additional.jsx", "../app/routes/app.shopInfo.jsx", "../app/routes/app._index.jsx", "../app/routes/auth.login/route.jsx", "../app/routes/auth.login/error.server.jsx", "../app/routes/app.label.jsx", "../app/routes/webhooks.jsx", "../app/routes/_index/route.jsx", "../app/routes/auth.$.jsx", "../app/routes/app.jsx", "../app/components/providers/DiscountProvider.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["", "export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { isbot } from \"isbot\";\n\nimport { addDocumentResponseHeaders } from \"./shopify.server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default async function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext,\n  _loadContext\n) {\n  addDocumentResponseHeaders(request, responseHeaders);\n\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        [callbackName]: () => {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error) {\n          reject(error);\n        },\n        onError(error) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import \"@shopify/shopify-app-remix/adapters/node\";\nimport {\n  AppDistribution,\n  DeliveryMethod,\n  shopifyApp,\n  LATEST_API_VERSION,\n} from \"@shopify/shopify-app-remix/server\";\nimport { PrismaSessionStorage } from \"@shopify/shopify-app-session-storage-prisma\";\nimport { restResources } from \"@shopify/shopify-api/rest/admin/2023-07\";\nimport GraphQLServer from \"./graphql/graphql.server\";\nimport prisma from \"./db.server\";\nimport mongoose from \"mongoose\";\nconst shopify = shopifyApp({\n  apiKey: process.env.SHOPIFY_API_KEY,\n  apiSecretKey: process.env.SHOPIFY_API_SECRET || \"\",\n  apiVersion: LATEST_API_VERSION,\n  scopes: process.env.SCOPES?.split(\",\"),\n  appUrl: process.env.SHOPIFY_APP_URL || \"\",\n  authPathPrefix: \"/auth\",\n  sessionStorage: new PrismaSessionStorage(prisma),\n  distribution: AppDistribution.AppStore,\n  restResources,\n  webhooks: {\n    APP_UNINSTALLED: {\n      deliveryMethod: DeliveryMethod.Http,\n      callbackUrl: \"/webhooks\",\n    },\n  },\n  hooks: {\n    afterAuth: async ({ session }) => {\n      shopify.registerWebhooks({ session });\n    },\n  },\n  ...(process.env.SHOP_CUSTOM_DOMAIN\n    ? { customShopDomains: [process.env.SHOP_CUSTOM_DOMAIN] }\n    : {}),\n});\nconst dbConnectionString = \"mongodb+srv://manh20194617:c1xvU6kqymtfQIZ0@cluster0.ggio7lj.mongodb.net/gr3?retryWrites=true&w=majority&appName=Cluster0\";\n// const dbConnectionString = \"mongodb://localhost:27017/GR1-email-template\";\nmongoose.set(\"debug\", true);\nmongoose.set(\"debug\", { color: true });\nmongoose\n  .connect(dbConnectionString)\n  .then((result) => {\n    console.log(\"Connect to mongodb successfully\");\n    GraphQLServer();\n  })\n  .catch((err) => {\n    console.log(\"Error occured when connect to mongodb: \", err.message);\n  });\nexport default shopify;\nexport const apiVersion = LATEST_API_VERSION;\nexport const addDocumentResponseHeaders = shopify.addDocumentResponseHeaders;\nexport const authenticate = shopify.authenticate;\nexport const unauthenticated = shopify.unauthenticated;\nexport const login = shopify.login;\nexport const registerWebhooks = shopify.registerWebhooks;\nexport const sessionStorage = shopify.sessionStorage;\n", "import express from \"express\";\nimport cors from \"cors\";\nimport { graphqlHTTP } from \"express-graphql\"\nimport { schema } from \"~/graphql/schema.server\";\nimport { resolver } from \"~/graphql/resolver.server\";\n\nexport default function GraphQLServer() {\n    const app = express();\n    app.use(cors());\n    app.use(express.json());\n    app.use('/graphql', graphqlHTTP({\n        schema: schema,\n        rootValue: resolver,\n        graphiql: true,\n    }))\n    app.listen(4000, () => {\n        console.log('Server is running on PORT 4000');\n    });\n}\n", "const { buildSchema } = require(\"graphql\")\nexport const schema = buildSchema(`\n    type Store {\n        id: String,\n        name: String,\n        email: String,\n        shop: String,\n        domain: String,\n        scope: String,\n        country: String,\n        customer_email: String,\n        myshopify_domain: String,\n        plan_name: String,\n        plan_display_name: String,\n        shop_owner: String,\n        iana_timezone: String,\n        currency: String,\n        address1: String,\n        address2: String,\n        phone: String,\n        created_at: String,\n        accessToken: String\n    }\ninput CreateStoreInput {\n        id: String,\n        name: String,\n        email: String,\n        shop: String,\n        domain: String,\n        scope: String,\n        country: String,\n        customer_email: String,\n        myshopify_domain: String,\n        plan_name: String,\n        plan_display_name: String,\n        shop_owner: String,\n        iana_timezone: String,\n        currency: String,\n        address1: String,\n        address2: String,\n        phone: String,\n        created_at: String,\n        accessToken: String\n    }\n\n\ntype Discount {\n    storeId:String,\n    title:String,\n    discountId:String,\n    code:String,\n    method:String,\n    combinesWith:String,\n    usageLimit:String,\n    appliesOncePerCustomer:Boolean,\n    startsAt:String,\n    endsAt:String,\n    status:String,\n    asyncUsageCount:String,\n    type:String,\n    quantity_1:String,\n    quantity_2:String,\n    quantity_3:String,\n    amount_1:String,\n    amount_2:String,\n    amount_3:String,\n    appliesToEachItem_1:Boolean,\n    appliesToEachItem_2:Boolean,\n    appliesToEachItem_3:Boolean,\n    percentage_1:String,\n    percentage_2:String,\n    percentage_3:String,\n    product_1:String,\n    product_2:String,\n    product_3:String,\n    }\n\ntype DiscountByXGetY {\n    storeId:String,\n    title:String,\n        id:String,\n    discountId:String,\n    code:String,\n    method:String,\n    combinesWith:String,\n    usageLimit:String,\n    appliesOncePerCustomer:Boolean,\n    startsAt:String,\n    endsAt:String,\n    status:String,\n    asyncUsageCount:String,\n   quantityPurchase:String,\n   amountPurchase:String,\n   quantityGet:String,\n   percentageGet:String,\n   productPurchase:String,\n   productPurchaseId:String,\n   productGet:String,\n   productGetId:String,\n}\n\ninput CreateDiscountInput {\n    storeId:String,\n    discountId:String,\n    title:String,\n    code:String,\n    method:String,\n    combinesWith:String,\n    usageLimit:String,\n    appliesOncePerCustomer:Boolean,\n    startsAt:String,\n    endsAt:String,\n    status:String,\n    asyncUsageCount:String,\n    type:String,\n     quantity_1:String,\n     quantity_2:String,\n     quantity_3:String,\n    amount_1:String,\n    amount_2:String,\n    amount_3:String,\n    appliesToEachItem_1:Boolean,\n    appliesToEachItem_2:Boolean,\n    appliesToEachItem_3:Boolean,\n    percentage_1:String,\n    percentage_2:String,\n    percentage_3:String,\n    product_1:String,\n    product_2:String,\n    product_3:String,\n\n}\ninput CreateDiscountByXGetYInput {\n    id:String,\n    storeId:String,\n    discountId:String,\n    title:String,\n    code:String,\n    method:String,\n    combinesWith:String,\n    usageLimit:String,\n    appliesOncePerCustomer:Boolean,\n    startsAt:String,\n    endsAt:String,\n    status:String,\n   asyncUsageCount:String,\n   quantityPurchase:String,\n   amountPurchase:String,\n   quantityGet:String,\n   percentageGet:String,\n   productPurchase:String,\n   productPurchaseId:String,\n   productGet:String,\n   productGetId:String,\n\n}\ninput UpdateDiscountByXGetYInput {\n    id:String,\n    storeId:String,\n    discountId:String,\n    title:String,\n    code:String,\n    method:String,\n    combinesWith:String,\n    usageLimit:String,\n    appliesOncePerCustomer:Boolean,\n    startsAt:String,\n    endsAt:String,\n    status:String,\n   asyncUsageCount:String,\n   quantityPurchase:String,\n   amountPurchase:String,\n   quantityGet:String,\n   percentageGet:String,\n   productPurchase:String,\n   productPurchaseId:String,\n   productGet:String,\n   productGetId:String,\n\n}\n\ninput UpdateDiscountInput {\n    storeId:String,\n    discountId:String,\n    title:String,\n    code:String,\n    method:String,\n    combinesWith:String,\n    usageLimit:String,\n    appliesOncePerCustomer:Boolean,\n    startsAt:String,\n    endsAt:String,\n    status:String,\n    asyncUsageCount:String,\n    type:String,\n     quantity_1:String,\n     quantity_2:String,\n     quantity_3:String,\n    amount_1:String,\n    amount_2:String,\n    amount_3:String,\n    appliesToEachItem_1:Boolean,\n    appliesToEachItem_2:Boolean,\n    appliesToEachItem_3:Boolean,\n    percentage_1:String,\n    percentage_2:String,\n    percentage_3:String,\n    product_1:String,\n    product_2:String,\n    product_3:String,\n}\ninput UpdateDiscountStatusAndUseCountInput {\n    storeId:String,\n    discountId:String,\n    status:String,\n    asyncUsageCount:String,\n}\n\ninput UpdateDiscountByXGetYStatusAndUseCountInput {\n    storeId:String,\n    discountId:String,\n    status:String,\n    asyncUsageCount:String,\n}\n\ninput DeleteDiscountInput {\n    storeId:String,\n    discountId:String,\n\n\n}\ninput DeleteDiscountByXGetYInput {\n    storeId:String,\n    discountId:String,\n\n}\ninput GetOneDiscountByXGetYInput {\n   storeId:String,\n   id:String\n}\n\n\n    type Query {\n        hello: String\n        getAllDiscount: [Discount]\n        getAllDiscountByXGetY :[DiscountByXGetY]\n        getOneDiscountByXGetY(input:GetOneDiscountByXGetYInput) :DiscountByXGetY\n\n    }\n\n    type Mutation {\n        createStore(input:CreateStoreInput):Store\n\n        createDiscount(input: CreateDiscountInput): Discount\n        updateStatusAndUseCount(input: UpdateDiscountStatusAndUseCountInput): Discount\n        updateDiscount(input: UpdateDiscountInput): Discount\n        deleteDiscount(input: DeleteDiscountInput): Discount\n\n        createDiscountByXGetY(input: CreateDiscountByXGetYInput): DiscountByXGetY\n        updateDiscountByXGetY(input: UpdateDiscountByXGetYInput): DiscountByXGetY\n        deleteDiscountByXGetY(input: DeleteDiscountByXGetYInput): DiscountByXGetY\n        updateStatusAndUseCountByXGetY(input: UpdateDiscountByXGetYStatusAndUseCountInput): DiscountByXGetY\n\n\n\n\n    }\n`)\n", "import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst discountSchema = new Schema({\n  storeId: {\n    type: String,\n  },\n  discountId: {\n    type: String,\n  },\n  code: {\n    type: String,\n  },\n  title: {\n    type: String,\n  },\n  method: {\n    type: String,\n    required: true,\n  },\n  combinesWith: {\n    type: String,\n\n  },\n  usageLimit: {\n    type: String,\n\n  },\n  appliesOncePerCustomer: {\n    type: Boolean,\n  },\n  startsAt: {\n    type: String,\n    required: true,\n  },\n  endsAt: {\n    type: String,\n  },\n  asyncUsageCount: {\n    type: String,\n  },\n  status:{\n    type:String,\n  },\n  type:{\n    type:String,\n  },\n  quantity_1:{\n    type:String,\n  },\n  quantity_2:{\n    type:String,\n  },\n  quantity_3:{\n    type:String,\n  },\n  amount_1:{\n    type:String,\n  },\n  amount_2:{\n    type:String,\n  },\n  amount_3:{\n    type:String,\n  },\n  appliesToEachItem_1:{\n    type:Boolean,\n  },\n  appliesToEachItem_2:{\n    type:Boolean,\n  },\n  appliesToEachItem_3:{\n    type:Boolean,\n  },\n  percentage_1:{\n    type:String,\n  },\n  percentage_2:{\n    type:String,\n  },\n  percentage_3:{\n    type:String,\n  },\n  product_1:{\n    type:String,\n  },\n  product_2:{\n    type:String,\n  },\n  product_3:{\n    type:String,\n  }\n\n\n});\n\nexport default mongoose.model('Discount', discountSchema);\n", "import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst discountSchema = new Schema({\n  storeId: {\n    type: String,\n  },\n  id: {\n    type: String,\n  },\n  discountId: {\n    type: String,\n  },\n  code: {\n    type: String,\n  },\n  title: {\n    type: String,\n  },\n  method: {\n    type: String,\n    required: true,\n  },\n  combinesWith: {\n    type: String,\n\n  },\n  usageLimit: {\n    type: String,\n  },\n  appliesOncePerCustomer: {\n    type: Boolean,\n  },\n  startsAt: {\n    type: String,\n    required: true,\n  },\n  endsAt: {\n    type: String,\n  },\n  asyncUsageCount: {\n    type: String,\n  },\n  status:{\n    type:String,\n  },\n\n  quantityPurchase:{\n    type:String,\n  },\n  amountPurchase:{\n    type:String,\n  },\n  quantityGet:{\n    type:String,\n  },\n  percentageGet:{\n    type:String,\n  },\n  productPurchase:{\n    type:String,\n  },\n  productPurchaseId:{\n    type:String,\n  },\n  productGet:{\n    type:String,\n  },\n  productGetId:{\n    type:String,\n  }\n});\n\nexport default mongoose.model('ByXGetYDiscount', discountSchema);\n", "import DiscountModel from \"~/models/discount.model\";\nimport DiscountByXGetYModel from \"~/models/byXGetYDiscount.model\";\n\nimport jwt from 'jsonwebtoken';\nimport StoreModel from \"~/models/store.model\";\n\nexport const verifyToken = async (bearerToken) => {\n  if (!bearerToken) {\n    throw new Error('You have to provide bearer token on the request headers');\n  } else {\n    const token = bearerToken.split(' ')[1];\n    const decoded = await jwt.verify(token, process.env.SECRET_KEY);\n    console.log('DECODED: ', decoded);\n    if (!decoded) {\n      throw new Error('Invalid access token');\n    }\n    return true;\n  }\n}\n\nexport const resolver = {\n    hello: () => {\n        return \"Hello World\";\n    },\n  createStore : async ({ input }) => {\n    const [store] = await Promise.all([StoreModel.create(input)]);\n    return store;\n  },\n   getAllDiscount: async () => {\n     return await DiscountModel.find({});\n  },\n  getAllDiscountByXGetY : async () => {\n    return await DiscountByXGetYModel.find({});\n  },\n  getOneDiscountByXGetY: async ({input}) => {\n    return await DiscountByXGetYModel.findOne({\n      id: input.id,\n      storeId:input.storeId,\n    })\n  },\n\n  createDiscount : async ({ input }) => {\n    const [discount] = await Promise.all([DiscountModel.create(input)]);\n    return discount;\n  },\n\n  createDiscountByXGetY : async ({ input }) => {\n    const [discount] = await Promise.all([DiscountByXGetYModel.create(input)]);\n    return discount;\n  },\n  updateDiscount : async ({ input }) => {\n    return DiscountModel.findOneAndUpdate({\n      discountId: input.discountId,\n      storeId:input.storeId,\n    }, {\n      title:input.title,\n      code:input.code,\n      method:input.method,\n      combinesWith:input.combinesWith,\n      usageLimit:input.usageLimit,\n      status:input.status,\n      startsAt:input.startsAt,\n      endsAt:input.endsAt,\n      asyncUsageCount:input.asyncUsageCount,\n      appliesOncePerCustomer:input.appliesOncePerCustomer,\n      amount_1:input.amount_1,\n      amount_2:input.amount_2,\n      amount_3:input.amount_3,\n      appliesToEachItem_1:input.appliesToEachItem_1,\n      appliesToEachItem_2:input.appliesToEachItem_2,\n      appliesToEachItem_3:input.appliesToEachItem_3,\n      percentage_1:input.percentage_1,\n      percentage_2:input.percentage_2,\n      percentage_3:input.percentage_3,\n      product_1:input.product_1,\n      product_2:input.product_2,\n      product_3:input.product_3,\n      quantity_1:input.quantity_1,\n      quantity_2:input.quantity_2,\n      quantity_3:input.quantity_3,\n      type: input.type,\n\n    }, {\n      returnDocument: \"after\",\n      new: true\n    })\n    },\n  updateDiscountByXGetY : async ({ input }) => {\n    return DiscountByXGetYModel.findOneAndUpdate({\n      discountId: input.discountId,\n      storeId:input.storeId,\n    }, {\n      title:input.title,\n      code:input.code,\n      method:input.method,\n      combinesWith:input.combinesWith,\n      usageLimit:input.usageLimit,\n      status:input.status,\n      startsAt:input.startsAt,\n      endsAt:input.endsAt,\n      asyncUsageCount:input.asyncUsageCount,\n      appliesOncePerCustomer:input.appliesOncePerCustomer,\n      quantityPurchase: input.quantityPurchase,\n      amountPurchase: input.amountPurchase,\n      quantityGet:input.quantityGet,\n      percentageGet: input.percentageGet,\n      productPurchase:input.productPurchase,\n      productPurchaseId:input.productPurchaseId,\n      productGet:input.productGet,\n      productGetId:input.productGetId,\n\n    }, {\n      returnDocument: \"after\",\n      new: true\n    })\n  },\n\n  updateStatusAndUseCount : async ({ input }) => {\n    return DiscountModel.findOneAndUpdate({\n      discountId: input.discountId,\n      storeId:input.storeId,\n    }, {\n      status:input.status,\n      asyncUsageCount:input.asyncUsageCount.toString(),\n    }, {\n      returnDocument: \"after\",\n      new: true\n    })\n  },\n  updateStatusAndUseCountByXGetY : async ({ input }) => {\n    return DiscountByXGetYModel.findOneAndUpdate({\n      discountId: input.discountId,\n      storeId:input.storeId,\n    }, {\n      status:input.status,\n      asyncUsageCount:input.asyncUsageCount.toString(),\n    }, {\n      returnDocument: \"after\",\n      new: true\n    })\n  },\n  deleteDiscount : async ({ input }) => {\n  return DiscountModel.findOneAndDelete({\n    discountId:input.discountId,\n    storeId:input.storeId,\n\n  },{\n    returnDocument: \"after\",\n    new: true\n  })\n  },\n  deleteDiscountByXGetY : async ({ input }) => {\n    return DiscountByXGetYModel.findOneAndDelete({\n      discountId:input.discountId,\n      storeId:input.storeId,\n\n    },{\n      returnDocument: \"after\",\n      new: true\n    })\n  },\n\n}\n", "import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst storeSchema = new Schema({\n    id: {\n        type: String,\n        required: true,\n    },\n    name: {\n        type: String,\n        required: true,\n    },\n    email: {\n        type: String,\n        required: true,\n    },\n    shop: {\n        type: String,\n        required: true,\n    },\n    domain: {\n        type: String,\n        required: true,\n    },\n    scope: {\n        type: String,\n        required: true,\n    },\n    country: {\n        type: String,\n    },\n    customer_email: {\n        type: String,\n        required: true,\n    },\n    myshopify_domain: {\n        type: String,\n        required: true,\n    },\n    plan_name: {\n        type: String,\n        required: true,\n    },\n    plan_display_name: {\n        type: String,\n        required: true,\n    },\n    shop_owner: {\n        type: String,\n        required: true,\n    },\n    iana_timezone: {\n        type: String,\n        required: true,\n    },\n    currency: {\n        type: String,\n        required: true,\n    },\n    address1: {\n        type: String,\n        required: true,\n    },\n    address2: {\n        type: String,\n        required: true,\n    },\n    phone: {\n        type: String,\n        required: true,\n    },\n    created_at: {\n        type: String,\n        required: true,\n    },\n    accessToken: {\n        type: String,\n    }\n});\n\nexport default mongoose.model('Store', storeSchema);\n", "import { PrismaClient } from \"@prisma/client\";\n\nconst prisma = global.prisma || new PrismaClient();\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient();\n  }\n}\n\nexport default prisma;\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\n\n// @ts-ignore\nimport { setContext } from '@apollo/client/link/context';\n// @ts-ignore\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from \"@apollo/client\";\n\nexport default function App() {\n  const httpLink = createHttpLink({\n    uri: 'http://localhost:4000/graphql'\n  });\n\n\n  const authLink = setContext((_, { headers }) => {\n    // get the authentication token from local storage if it exists\n    const token = localStorage.getItem('accessToken');\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    };\n  });\n\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n    defaultOptions: {\n      watchQuery: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'ignore'\n      },\n      query: {\n        fetchPolicy: 'no-cache',\n        errorPolicy: 'all'\n      }\n    }\n  });\n\n  // @ts-ignore\n  return (\n    <html>\n    <head>\n      <meta charSet=\"utf-8\" />\n      <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n      <link rel=\"stylesheet\" href=\"https://unpkg.com/@shopify/polaris@11.1.2/build/esm/styles.css\"></link>\n      {/* <link rel=\"stylesheet\" href=\"./routes/_index/style.css\" onload='this.media=\"all\"'></link> */}\n      <Meta />\n      <Links />\n    </head>\n    <body>\n    <ApolloProvider client={client}>\n      <Outlet />\n      <ScrollRestoration />\n      <LiveReload />\n      <Scripts />\n    </ApolloProvider>\n    </body>\n    </html>);\n\n}", "/* eslint-disable react-hooks/rules-of-hooks */\nimport {useCallback, useEffect, useState,} from \"react\";\nimport {json} from \"@remix-run/node\";\nimport {useField, useForm} from \"@shopify/react-form\";\nimport {CurrencyCode} from \"@shopify/react-i18n\";\nimport {Form, useActionData, useLoaderData, useNavigation, useSubmit, useNavigate} from \"@remix-run/react\";\nimport {\n  ActiveDatesCard,\n  CombinationCard,\n  DiscountClass,\n  DiscountMethod,\n  DiscountStatus, Eligibility,\n  MethodCard,\n  RequirementType,\n  SummaryCard,\n  UsageLimitsCard,\n} from \"@shopify/discount-app-components\";\nimport {\n  BlockStack,\n  Box,\n  Button,\n  Card,\n  ChoiceList, Frame,\n  Layout,\n  Page,\n  PageActions,\n  ResourceItem,\n  ResourceList, Select,\n  Text,\n  TextField,\n  Thumbnail, Toast,\n} from \"@shopify/polaris\";\n\nimport shopify, {authenticate} from \"../shopify.server\";\nimport {NotFoundPage} from \"~/components/NotFoundPage\";\nimport {Function} from \"~/const/Function\";\n// @ts-ignore\nimport {useMutation} from \"@apollo/client\";\nimport {UPDATE_DISCOUNT} from \"~/graphql/mutation\";\nimport axios from \"axios\";\nimport StoreModel from \"~/models/store.model\";\n\n// This is a server-side action that is invoked when the form is submitted.\n// It makes an admin GraphQL request to update a discount.\nexport const action = async ({params, request}) => {\n  const {id, functionId} = params;\n  const {admin} = await shopify.authenticate.admin(request);\n  const formData = await request.formData();\n  const {\n    title,\n    method,\n    code,\n    combinesWith,\n    usageLimit,\n    appliesOncePerCustomer,\n    startsAt,\n    endsAt,\n    configuration,\n    products1,\n    products2,\n    products3,\n    applyTo,\n    countStrategy\n  } = JSON.parse(formData.get(\"discountForm\"));\n  let value1\n  let discountTitle\n  if (method === DiscountMethod.Automatic) {\n    discountTitle = title\n  } else if (method === DiscountMethod.Code) {\n    discountTitle = code\n  }\n  value1 = JSON.stringify({\n    countStrategy: countStrategy,\n    discountCode: discountTitle,\n    applyTo: applyTo,\n    quantity: configuration.quantity,\n    quantity2: configuration.quantity2,\n    quantity3: configuration.quantity3,\n\n    fixedAmount: configuration.fixedAmount,\n    fixedAmount2: configuration.fixedAmount2,\n    fixedAmount3: configuration.fixedAmount3,\n\n    percentage: configuration.percentage,\n    percentage2: configuration.percentage2,\n    percentage3: configuration.percentage3,\n\n    products1: products1,\n    products2: products2,\n    products3: products3,\n    appliesForEachProduct: configuration.appliesToEachItem,\n    appliesForEachProduct2: configuration.appliesToEachItem2,\n    appliesForEachProduct3: configuration.appliesToEachItem3\n  })\n\n  const baseDiscount = {\n    functionId,\n    title,\n    combinesWith,\n    startsAt: new Date(startsAt),\n    endsAt: endsAt && new Date(endsAt),\n  };\n\n  if (method === DiscountMethod.Code) {\n    const baseCodeDiscount = {\n      ...baseDiscount,\n      title: code,\n      code,\n      usageLimit,\n      appliesOncePerCustomer,\n    };\n\n    const response = await admin.graphql(\n      `#graphql\n          mutation UpdateCodeDiscount($id: ID!, $discount: DiscountCodeAppInput!) {\n            discountUpdate: discountCodeAppUpdate(id: $id, codeAppDiscount: $discount) {\n            codeAppDiscount{\n                   __typename\n                   discountId\n                   title\n                   discountClass\n                   combinesWith {\n                   orderDiscounts\n                   productDiscounts\n                   shippingDiscounts\n                   }\n                  startsAt\n                  endsAt\n                  status\n                  asyncUsageCount\n                  usageLimit\n                  appliesOncePerCustomer\n                  codes(first: 10) {\n                  nodes {\n                  code\n                  }\n                  }\n           }\n              userErrors {\n                code\n                message\n                field\n              }\n            }\n          }`,\n      {\n        variables: {\n          id: `gid://shopify/DiscountCodeApp/${id}`,\n          discount: {\n            ...baseCodeDiscount,\n            metafields: [\n              {\n                id: configuration.metafieldId,\n                value: value1,\n\n              },\n            ],\n          },\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const errors = responseJson.data.discountUpdate?.userErrors;\n    const discountData = responseJson.data.discountUpdate?.codeAppDiscount\n    return json({errors, value1, discountData, responseJson});\n  } else {\n    const response = await admin.graphql(\n      `#graphql\n          mutation UpdateAutomaticDiscount($id: ID!, $discount: DiscountAutomaticAppInput!) {\n            discountUpdate: discountAutomaticAppUpdate(id: $id, automaticAppDiscount: $discount) {\n            automaticAppDiscount {\n                discountId\n                title\n                discountClass\n                combinesWith {\n                    orderDiscounts\n                    productDiscounts\n                    shippingDiscounts\n               }\n               asyncUsageCount\n               startsAt\n               endsAt\n               status\n               }\n              userErrors {\n                code\n                message\n                field\n              }\n            }\n          }`,\n      {\n        variables: {\n          id: `gid://shopify/DiscountAutomaticApp/${id}`,\n          discount: {\n            ...baseDiscount,\n            metafields: [\n              {\n                id: configuration.metafieldId,\n                value: value1,\n              },\n            ],\n          },\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const discountData = responseJson.data.discountUpdate?.automaticAppDiscount\n    const errors = responseJson.data.discountUpdate?.userErrors;\n    return json({errors, discountData, value1});\n  }\n};\n\n// This is invoked on the server to load the discount data with an admin GraphQL request. The result\n// is used by the component below to render the form.\nexport const loader = async ({params, request}) => {\n  const {id} = params;\n  const {admin} = await shopify.authenticate.admin(request);\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\",\n    },\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    })\n\n\n  const response = await admin.graphql(\n    `#graphql\n      query GetDiscount($id: ID!) {\n        discountNode(id: $id) {\n          id\n          configurationField: metafield(\n            namespace: \"$app:volume-discount\"\n            key: \"function-configuration\"\n          ) {\n            id\n            value\n          }\n          discount {\n            __typename\n            ... on DiscountAutomaticApp {\n              title\n              discountClass\n              combinesWith {\n                orderDiscounts\n                productDiscounts\n                shippingDiscounts\n              }\n              startsAt\n              endsAt\n              status\n              asyncUsageCount\n            }\n            ... on DiscountCodeApp {\n              title\n              discountClass\n              combinesWith {\n                orderDiscounts\n                productDiscounts\n                shippingDiscounts\n              }\n              startsAt\n              endsAt\n              status\n              asyncUsageCount\n              usageLimit\n              appliesOncePerCustomer\n              codes(first: 1) {\n                nodes {\n                  code\n                }\n              }\n            }\n          }\n        }\n      }`,\n    {\n      variables: {\n        id: `gid://shopify/DiscountNode/${id}`,\n      },\n    }\n  );\n\n  const responseJson = await response.json();\n\n  if (\n    !responseJson.data.discountNode ||\n    !responseJson.data.discountNode.discount\n  ) {\n    return json({discount: null,shop:shopData});\n  }\n\n  const method =\n    responseJson.data.discountNode.discount.__typename === \"DiscountCodeApp\"\n      ? DiscountMethod.Code\n      : DiscountMethod.Automatic;\n  const {\n    title,\n    codes,\n    combinesWith,\n    usageLimit,\n    appliesOncePerCustomer,\n    startsAt,\n    endsAt,\n  } = responseJson.data.discountNode.discount;\n  const configuration = JSON.parse(\n    responseJson.data.discountNode.configurationField.value\n  );\n\n  const discount = {\n    title,\n    method,\n    code: codes?.nodes[0]?.code ?? \"\",\n    combinesWith,\n    usageLimit: usageLimit ?? null,\n    appliesOncePerCustomer: appliesOncePerCustomer ?? false,\n    startsAt,\n    endsAt,\n    configuration: {\n      ...configuration,\n      metafieldId: responseJson.data.discountNode.configurationField.id,\n    },\n  };\n\n  return json({discount,shop:shopData});\n};\nconst EmptyProductSelected = () => (\n  <div style={{textAlign: \"center\", maxHeight: \"60vh\"}}>\n    <img style={{height: '60px', width: \"60px\"}}\n         src=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\" alt=\"test\"/>\n    <p style={{fontWeight: \"bold\"}}>There are no products selected</p>\n    <p>Please choose product for this discount</p>\n  </div>\n)\n// This is the React component for the page.\nexport default function VolumeEdit() {\n  const {\n    validateNumber,\n    validatePercentage\n  } = Function()\n  const submitForm = useSubmit();\n  const actionData = useActionData();\n  const [selected, setSelected] = useState(['allProduct']);\n  const [isFirstButtonActive, setIsFirstButtonActive] = useState(true);\n  const [applyTo, setApplyTo] = useState(\"all\");\n\n  // @ts-ignore\n  const {discount,shop} = useLoaderData();\n  const navigation = useNavigation();\n  const navigate = useNavigate()\n  const [active, setActive] = useState(false);\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n  const [message, setMessage] = useState(\"\")\n\n  const [selectedVolume, setSelectedVolume] = useState(['percentage']);\n  const [selectedVolume2, setSelectedVolume2] = useState(['percentage']);\n  const [selectedVolume3, setSelectedVolume3] = useState(['percentage']);\n\n  const [formState, setFormState] = useState([{}]);\n  const [formState2, setFormState2] = useState([{}]);\n  const [formState3, setFormState3] = useState([{}]);\n  const isLoading = navigation.state === \"submitting\";\n  const currencyCode = CurrencyCode.Cad;\n  const [check, setCheck] = useState(0)\n  const [count, setCount] = useState(0)\n  const [countDiscountCheck, setCountDiscountCheck] = useState(0)\n\n  const [showVolume1, setShowVolume1] = useState(true)\n  const [percentageDiscount, setPercentageDiscount] = useState(\"\")\n  const [amountDiscount, setAmountDiscount] = useState(\"\")\n  const [selectedValueType, setSelectedValueType] = useState(['max']);\n  const [appliesToEachItem, setAppliesToEachItem] = useState(false)\n\n  const [showVolume2, setShowVolume2] = useState(false)\n  const [percentageDiscount2, setPercentageDiscount2] = useState(\"\")\n  const [amountDiscount2, setAmountDiscount2] = useState(\"\")\n  const [selectedValueType2, setSelectedValueType2] = useState(['max']);\n  const [appliesToEachItem2, setAppliesToEachItem2] = useState(false)\n\n  const [showVolume3, setShowVolume3] = useState(false)\n  const [percentageDiscount3, setPercentageDiscount3] = useState(\"\")\n  const [amountDiscount3, setAmountDiscount3] = useState(\"\")\n  const [selectedValueType3, setSelectedValueType3] = useState(['max']);\n  const [appliesToEachItem3, setAppliesToEachItem3] = useState(false)\n\n  const [discountStrategyCount, setDiscountStrategyCount] = useState(\"3\")\n\n  const [update] = useMutation(UPDATE_DISCOUNT);\n  const updateDiscount = async () => {\n    try {\n      let value\n      if (actionData.value1) {\n        value = JSON.parse(actionData.value1)\n      } else {\n        value = {}\n      }\n      const createPromise = await update({\n        variables: {\n          input: {\n            storeId:shop.id,\n            discountId: actionData.discountData.discountId,\n            title: actionData.discountData.title,\n            code: actionData.discountData.__typename === \"DiscountCodeApp\" ? actionData.discountData.codes.nodes[0]?.code ?? \"\" : \"\",\n            method: actionData.discountData.__typename === \"DiscountCodeApp\" ? DiscountMethod.Code : DiscountMethod.Automatic,\n            combinesWith: JSON.stringify(actionData.discountData.combinesWith),\n            usageLimit: actionData.discountData.__typename === \"DiscountCodeApp\" && actionData.discountData.usageLimit !== null ? actionData.discountData.usageLimit.toString() : \"\",\n            status: actionData.discountData.status,\n            startsAt: actionData.discountData.startsAt,\n            endsAt: actionData.discountData.endsAt,\n            asyncUsageCount: actionData.discountData.asyncUsageCount.toString(),\n            appliesOncePerCustomer: actionData.discountData.__typename === \"DiscountCodeApp\" ? actionData.discountData.appliesOncePerCustomer : false,\n            type: value.applyTo,\n            amount_1: value.fixedAmount !== null ? value.fixedAmount.toString() : \"\",\n            amount_2: value.fixedAmount2 !== null ? value.fixedAmount2.toString() : \"\",\n            amount_3: value.fixedAmount3 !== null ? value.fixedAmount3.toString() : \"\",\n            appliesToEachItem_1: value.appliesForEachProduct,\n            appliesToEachItem_2: value.appliesForEachProduct2,\n            appliesToEachItem_3: value.appliesForEachProduct3,\n            percentage_1: value.percentage !== null ? value.percentage.toString() : \"\",\n            percentage_2: value.percentage2 !== null ? value.percentage2.toString() : \"\",\n            percentage_3: value.percentage3 !== null ? value.percentage3.toString() : \"\",\n            product_1: JSON.stringify(value.products1),\n            product_2: JSON.stringify(value.products2),\n            product_3: JSON.stringify(value.products3),\n            quantity_1: value.quantity ? value.quantity.toString() : \"\",\n            quantity_2: value.quantity2 ? value.quantity2.toString() : \"\",\n            quantity_3: value.quantity3 ? value.quantity3.toString() : \"\",\n          }\n        }\n      })\n      console.log(discount)\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n\n      await Promise.race([createPromise, timeoutPromise]);\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  useEffect(() => {\n    if (actionData?.errors.length === 0) {\n      if (actionData.discountData) {\n        updateDiscount().then()\n        navigate(\"../../app/discountList\")\n      }\n    }\n    console.log(actionData?.responseJson)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actionData]);\n  useEffect(() => {\n    console.log(discount)\n    setCountDiscountCheck(1)\n    setDiscountStrategyCount(discount.configuration.countStrategy)\n    setApplyTo(discount.configuration.applyTo)\n    if (discount.configuration.applyTo === \"choose\") {\n      setIsFirstButtonActive(true)\n    }\n//products1\n    if (discount.configuration.fixedAmount > 0) {\n      setShowVolume1(true)\n\n      console.log(\"sai 1\")\n      setSelectedVolume(['Value'])\n      setAmountDiscount(`${discount.configuration.fixedAmount}`);\n      if (discount.configuration.appliesForEachProduct === true) {\n        setSelectedValueType(['eachProduct'])\n        console.log(\"sai 2\")\n\n      } else {\n        setSelectedValueType(['max'])\n        console.log(\"sai 3\")\n\n      }\n    } else {\n      setShowVolume1(true)\n      setSelectedVolume(['percentage'])\n      setPercentageDiscount(`${discount.configuration.percentage}`);\n    }\n    if (discount.configuration.products1 && discount.configuration.products1.length > 0 && discount.configuration.products1[0].productId) {\n      setFormState(discount.configuration.products1)\n      setSelected(['chooseProduct'])\n    } else {\n      console.log(1233)\n    }\n//products2\n    if (discount.configuration.fixedAmount2 > 0) {\n      setShowVolume2(true)\n      console.log(\"sai 4\")\n      setSelectedVolume2(['Value'])\n      setAmountDiscount2(`${discount.configuration.fixedAmount2}`);\n      if (discount.configuration.appliesForEachProduct2 === true) {\n        setSelectedValueType2(['eachProduct'])\n        console.log(\"sai 5\")\n\n      } else {\n        setSelectedValueType2(['max'])\n        console.log(\"sai 6\")\n      }\n    } else {\n      console.log(\"sai 7\")\n      setShowVolume2(true)\n\n      setSelectedVolume2(['percentage'])\n      setPercentageDiscount2(`${discount.configuration.percentage2}`);\n    }\n    if (discount.configuration.products2 && discount.configuration.products2.length > 0 && discount.configuration.products2[0].productId) {\n      setFormState2(discount.configuration.products2)\n    } else {\n      console.log(123)\n    }\n//product3\n    if (discount.configuration.fixedAmount3 > 0) {\n      console.log(1234)\n      setShowVolume3(true)\n\n      setSelectedVolume3(['Value'])\n      setAmountDiscount3(`${discount.configuration.fixedAmount3}`);\n      if (discount.configuration.appliesForEachProduct3 === true) {\n        setSelectedValueType3(['eachProduct'])\n      } else {\n        setSelectedValueType3(['max'])\n      }\n    } else {\n      setShowVolume3(true)\n      setSelectedVolume3(['percentage'])\n      setPercentageDiscount3(`${discount.configuration.percentage3}`);\n    }\n\n    if (discount.configuration.products3 && discount.configuration.products3.length > 0 && discount.configuration.products3[0].productId) {\n      setFormState3(discount.configuration.products3)\n    }\n\n  }, [discount]);\n\n  useEffect(() => {\n    if (selectedVolume.includes('percentage')) {\n      setAmountDiscount(\"\")\n      if (discount.configuration.percentage > 0) {\n        setPercentageDiscount(`${discount.configuration.percentage}`);\n\n      } else {\n        setPercentageDiscount(\"\")\n      }\n    } else {\n      setPercentageDiscount(\"\")\n      if (discount.configuration.fixedAmount > 0) {\n        setAmountDiscount(`${discount.configuration.fixedAmount}`);\n      } else {\n        setAmountDiscount(\"\")\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedVolume]);\n\n  useEffect(() => {\n    if (countDiscountCheck === 1) {\n      if (selectedVolume2.includes('percentage')) {\n        setAmountDiscount2(\"\")\n        if (discount.configuration.percentage2 > 0) {\n          setPercentageDiscount(`${discount.configuration.percentage2}`);\n\n        } else {\n          setPercentageDiscount2(\"\")\n        }\n      } else {\n        setPercentageDiscount2(\"\")\n        if (discount.configuration.fixedAmount2 > 0) {\n          setAmountDiscount2(`${discount.configuration.fixedAmount2}`);\n        } else {\n          setAmountDiscount2(\"\")\n        }\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedVolume2]);\n\n  useEffect(() => {\n    if (selectedVolume3.includes('percentage')) {\n      setAmountDiscount3(\"\")\n      if (discount.configuration.percentage3 > 0) {\n        setPercentageDiscount3(`${discount.configuration.percentage3}`);\n\n      } else {\n        setPercentageDiscount3(\"\")\n      }\n    } else {\n      setPercentageDiscount3(\"\")\n      if (discount.configuration.fixedAmount3 !== null) {\n        setAmountDiscount3(`${discount.configuration.fixedAmount3}`);\n      } else {\n        setAmountDiscount3(\"\")\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedVolume3]);\n\n\n  useEffect(() => {\n    console.log(discountStrategyCount)\n    if (discountStrategyCount === \"1\") {\n      setShowVolume1(true)\n      setShowVolume2(false)\n      setShowVolume3(false)\n\n    } else if (discountStrategyCount === \"2\") {\n      setShowVolume1(true)\n      setShowVolume2(true)\n      setShowVolume3(false)\n\n    } else if (discountStrategyCount === \"3\") {\n      setShowVolume1(true)\n      setShowVolume2(true)\n      setShowVolume3(true)\n\n    }\n  }, [discountStrategyCount]);\n  useEffect(() => {\n    if (selectedValueType.includes('max')) {\n      setAppliesToEachItem(false)\n    } else {\n      setAppliesToEachItem(true)\n    }\n  }, [selectedValueType]);\n  useEffect(() => {\n    if (selectedValueType2.includes('max')) {\n      setAppliesToEachItem2(false)\n    } else {\n      setAppliesToEachItem2(true)\n    }\n  }, [selectedValueType2]);\n\n  useEffect(() => {\n    if (selectedValueType3.includes('max')) {\n      setAppliesToEachItem3(false)\n    } else {\n      setAppliesToEachItem3(true)\n    }\n  }, [selectedValueType3]);\n\n  useEffect(() => {\n    if (selected.includes('chooseProduct')) {\n      setApplyTo(\"choose\")\n      setDiscountStrategyCount(discount.configuration.countStrategy)\n      setIsFirstButtonActive(true)\n      //products1\n      if (discount.configuration.fixedAmount > 0) {\n        setSelectedVolume(['Value'])\n        setAmountDiscount(`${discount.configuration.fixedAmount}`);\n        if (discount.configuration.appliesForEachProduct === true) {\n          setSelectedValueType(['eachProduct'])\n\n        } else {\n          setSelectedValueType(['max'])\n\n\n        }\n      } else {\n        setSelectedVolume(['percentage'])\n        setPercentageDiscount(`${discount.configuration.percentage}`);\n      }\n      if (discount.configuration.products1 && discount.configuration.products1.length > 0 && discount.configuration.products1[0].productId) {\n        setFormState(discount.configuration.products1)\n      } else {\n        setFormState([{}])\n      }\n      //products2\n      if (discount.configuration.fixedAmount2 > 0) {\n        setSelectedVolume2(['Value'])\n        setAmountDiscount2(`${discount.configuration.fixedAmount2}`);\n        if (discount.configuration.appliesForEachProduct2 === true) {\n          setSelectedValueType2(['eachProduct'])\n\n        } else {\n          setSelectedValueType2(['max'])\n\n\n        }\n      } else {\n        setSelectedVolume2(['percentage'])\n        setPercentageDiscount2(`${discount.configuration.percentage2}`);\n      }\n      if (discount.configuration.products2 && discount.configuration.products2.length > 0 && discount.configuration.products2[0].productId) {\n        setFormState2(discount.configuration.products2)\n      } else {\n        setFormState2([{}])\n      }\n      //products3\n      if (discount.configuration.fixedAmount3 > 0) {\n        setSelectedVolume3(['Value'])\n        setAmountDiscount3(`${discount.configuration.fixedAmount3}`);\n        if (discount.configuration.appliesForEachProduct3 === true) {\n          setSelectedValueType3(['eachProduct'])\n\n        } else {\n          setSelectedValueType3(['max'])\n\n\n        }\n      } else {\n        setSelectedVolume3(['percentage'])\n        setPercentageDiscount3(`${discount.configuration.percentage3}`);\n      }\n      if (discount.configuration.products3 && discount.configuration.products3.length > 0 && discount.configuration.products3[0].productId) {\n        setFormState3(discount.configuration.products3)\n      } else {\n        setFormState3([{}])\n      }\n\n    } else if (selected.includes('allProduct')) {\n      console.log(\"sai o day\")\n      setApplyTo(\"all\")\n      setDiscountStrategyCount(\"1\")\n      setFormState([{}])\n      setFormState2([{}])\n      setFormState3([{}])\n\n      setAppliesToEachItem2(false)\n      setAmountDiscount2(\"\")\n      setPercentageDiscount2(\"\")\n      setSelectedValueType2(['max'])\n      setSelectedVolume2(['percentage'])\n      setIsFirstButtonActive(false)\n\n\n      setAppliesToEachItem3(false)\n      setAmountDiscount3(\"\")\n      setPercentageDiscount3(\"\")\n      setSelectedValueType3(['max'])\n      setSelectedVolume3(['percentage'])\n    }\n    console.log(selected)\n    console.log(countDiscountCheck)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selected]);\n\n\n  useEffect(() => {\n    if (!showVolume2 && discountStrategyCount === \"1\") {\n      setAppliesToEachItem2(false)\n      setAmountDiscount2(\"\")\n      setPercentageDiscount2(\"\")\n      setSelectedValueType2(['max'])\n      setSelectedVolume2(['percentage'])\n      setFormState2([{}])\n\n    } else {\n      if (discount.configuration.fixedAmount2 > 0) {\n        setSelectedVolume2(['Value'])\n        setAmountDiscount2(`${discount.configuration.fixedAmount2}`);\n        if (discount.configuration.appliesForEachProduct2 === true) {\n          setSelectedValueType2(['eachProduct'])\n\n        } else {\n          setSelectedValueType2(['max'])\n        }\n      } else {\n        setSelectedVolume2(['percentage'])\n        setPercentageDiscount2(`${discount.configuration.percentage2}`);\n      }\n      if (discount.configuration.products2 && discount.configuration.products2.length > 0 && discount.configuration.products2[0].productId) {\n        setFormState2(discount.configuration.products2)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showVolume2, discountStrategyCount]);\n\n  useEffect(() => {\n    if (!showVolume3 && discountStrategyCount !== \"3\") {\n      setAppliesToEachItem3(false)\n      setAmountDiscount3(\"\")\n      setPercentageDiscount3(\"\")\n      setSelectedValueType3(['max'])\n      setSelectedVolume3(['percentage'])\n      setFormState3([{}])\n    } else {\n      if (discount.configuration.fixedAmount3 > 0) {\n\n        setSelectedVolume3(['Value'])\n        setAmountDiscount3(`${discount.configuration.fixedAmount3}`);\n        if (discount.configuration.appliesForEachProduct3 === true) {\n          setSelectedValueType3(['eachProduct'])\n        } else {\n          setSelectedValueType3(['max'])\n        }\n      } else {\n        setSelectedVolume3(['percentage'])\n        setPercentageDiscount3(`${discount.configuration.percentage3}`);\n      }\n\n      if (discount.configuration.products3 && discount.configuration.products3.length > 0 && discount.configuration.products3[0].productId) {\n        setFormState3(discount.configuration.products3)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [showVolume3, discountStrategyCount]);\n\n  useEffect(() => {\n    if (check === 9) {\n      setMessage('There are duplicate products in Volume or Volume 3')\n      setActive(true)\n\n    } else if (check === 10) {\n      setMessage('There are duplicate products in Volume 1 or Volume 3')\n      setActive(true)\n    } else if (check === 11) {\n      setMessage('There are duplicate products in Volume 1 or Volume 2')\n      setActive(true)\n    }\n    if (count === 1) {\n      if (check === 1) {\n        setMessage('Discount code cannot be empty')\n        setActive(true)\n      } else if (check === 2) {\n        setMessage('Invalid Minimum quantity')\n        setActive(true)\n      } else if (check === 3) {\n        setMessage('Invalid discount percentage')\n        setActive(true)\n      } else if (check === 4) {\n        setMessage('Invalid discount amount')\n        setActive(true)\n      } else if (check === 5) {\n        setMessage('Save Discount Success')\n        setActive(true)\n\n      } else if (check === 6) {\n        setMessage('Product Volume 1 can not be empty')\n        setActive(true)\n\n      } else if (check === 7) {\n        setMessage('Product Volume 2 can not be empty')\n        setActive(true)\n\n      } else if (check === 8) {\n        setMessage('Product Volume 2 can not be empty')\n        setActive(true)\n\n      }\n\n\n      setCount(0); // Reset count sau khi hi\u1EC3n th\u1ECB th\u00F4ng b\u00E1o\n    }\n  }, [check, count]);\n  if (!discount) {\n    return <NotFoundPage/>;\n  }\n  const handleChangeApplies = (/** @type {React.SetStateAction<string[]>} */ /** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelected(value)\n    console.log(value)\n  }\n\n  //change value type\n  const handleChoiceValueTypeChange = useCallback(\n    (/** @type {React.SetStateAction<string[]>} */ value) => {\n      setSelectedValueType(value);\n    },\n    [],\n  );\n  const handleChoiceValueTypeChange2 = useCallback(\n    (/** @type {React.SetStateAction<string[]>} */ value) => setSelectedValueType2(value),\n    [],\n  );\n  const handleChoiceValueTypeChange3 = useCallback(\n    (/** @type {React.SetStateAction<string[]>} */ value) => setSelectedValueType3(value),\n    [],\n  );\n  //change Percentage\n  const handleDiscountPercentageChange = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageDiscount(newValue);\n    },\n    [],);\n  const handleDiscountPercentageChange2 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageDiscount2(newValue);\n    },\n    [],);\n  const handleDiscountPercentageChange3 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageDiscount3(newValue);\n    },\n    [],);\n\n  //change amount\n  const handleDiscountAmountChange = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountDiscount(newValue);\n    },\n    [],);\n  const handleDiscountAmountChange2 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountDiscount2(newValue);\n    },\n    [],);\n  const handleDiscountAmountChange3 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountDiscount3(newValue);\n    },\n    [],);\n  //change volume\n  const handleChangeVolume = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedVolume(value)\n  }\n  const handleChangeVolume2 = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedVolume2(value)\n  }\n  const handleChangeVolume3 = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedVolume3(value)\n  }\n  //set count volume discount can use\n  const handleSelectDiscountStrategyCountChange = useCallback(\n    (/** @type {React.SetStateAction<string>} */ value) => {\n      setDiscountStrategyCount(value)\n      setCountDiscountCheck(0)\n    },\n    [],\n  );\n\n\n//set products\n  async function selectProduct() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      const isDuplicateProduct = flattenedVariants.some(newProduct => {\n        // Ki\u1EC3m tra formState2\n        const isDuplicateInFormState2 = formState2.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId\n        );\n        // Ki\u1EC3m tra formState3\n        const isDuplicateInFormState3 = formState3.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId\n        );\n        // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 t\u1ED3n t\u1EA1i trong formState2 ho\u1EB7c formState3\n        return isDuplicateInFormState2 || isDuplicateInFormState3;\n      });\n\n      if (isDuplicateProduct) {\n        setCheck(9)\n\n        // X\u1EED l\u00FD khi c\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p\n        console.log(\"C\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p trong formState2 ho\u1EB7c formState3\");\n      } else {\n        // Kh\u00F4ng c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o tr\u00F9ng l\u1EB7p, c\u1EADp nh\u1EADt formState\n        setFormState(flattenedVariants);\n      }\n    }\n  }\n\n  async function selectProduct2() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      const isDuplicateProduct2 = flattenedVariants.some(newProduct => {\n        // Ki\u1EC3m tra formState\n        const isDuplicateInFormState = formState.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // Ki\u1EC3m tra formState3\n        const isDuplicateInFormState3 = formState3.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 t\u1ED3n t\u1EA1i trong formState1 ho\u1EB7c formState3\n        return isDuplicateInFormState || isDuplicateInFormState3;\n      });\n\n      if (isDuplicateProduct2) {\n        // X\u1EED l\u00FD khi c\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p\n        setCheck(10)\n        console.log(\"C\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p trong formState ho\u1EB7c formState3\");\n      } else {\n        // Kh\u00F4ng c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o tr\u00F9ng l\u1EB7p, c\u1EADp nh\u1EADt formState2\n        setFormState2(flattenedVariants);\n      }\n\n    }\n  }\n\n  async function selectProduct3() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      const isDuplicateProduct3 = flattenedVariants.some(newProduct => {\n        // Ki\u1EC3m tra formState\n        const isDuplicateInFormState1 = formState.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // Ki\u1EC3m tra formState3\n        const isDuplicateInFormState2 = formState2.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 t\u1ED3n t\u1EA1i trong formState1 ho\u1EB7c formState2\n        return isDuplicateInFormState1 || isDuplicateInFormState2;\n      });\n\n      if (isDuplicateProduct3) {\n        setCheck(11)\n        // X\u1EED l\u00FD khi c\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p\n        console.log(\"C\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p trong formState ho\u1EB7c formState2\");\n      } else {\n        // Kh\u00F4ng c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o tr\u00F9ng l\u1EB7p, c\u1EADp nh\u1EADt formState3\n        setFormState3(flattenedVariants);\n      }\n\n    }\n  }\n\n//remove product\n  const removeItemFromFormState = (/** @type {any} */ productVariantId) => {\n    const updatedFormState = formState.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setFormState(updatedFormState.length > 0 ? updatedFormState : [{}]);\n  };\n  const removeItemFromFormState2 = (/** @type {any} */ productVariantId) => {\n    const updatedFormState2 = formState2.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setFormState2(updatedFormState2.length > 0 ? updatedFormState2 : [{}]);\n  };\n  const removeItemFromFormState3 = (/** @type {any} */ productVariantId) => {\n    const updatedFormState3 = formState3.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setFormState3(updatedFormState3.length > 0 ? updatedFormState3 : [{}]);\n  };\n  // set children for choose list\n  const renderChildren = useCallback(\n    (/** @type {any} */ isSelected) => {\n      return isSelected && (\n        <ChoiceList\n          title=\"\"\n          choices={[\n            {label: 'Max Discount amount', value: 'max'},\n            {label: 'Discount for each product', value: 'eachProduct'},\n\n          ]}\n          selected={selectedValueType}\n          onChange={handleChoiceValueTypeChange}\n        />\n      );\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedValueType],\n  );\n  const renderChildren2 = useCallback(\n    (/** @type {any} */ isSelected2) =>\n      isSelected2 && (\n        <ChoiceList\n          title=\"\"\n          choices={[\n            {label: 'Max Discount amount', value: 'max'},\n            {label: 'Discount for each product', value: 'eachProduct'},\n\n          ]}\n          selected={selectedValueType2}\n          onChange={handleChoiceValueTypeChange2}\n        />\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedValueType2],\n  );\n  const choiceWithValueRenderChildren2 = {\n    label: 'Value',\n    value: 'Value',\n    renderChildren: renderChildren2,\n  };\n\n  const renderChildren3 = useCallback(\n    (/** @type {any} */ isSelected3) =>\n      isSelected3 && (\n        <ChoiceList\n          title=\"\"\n          choices={[\n            {label: 'Max Discount amount', value: 'max'},\n            {label: 'Discount for each product', value: 'eachProduct'},\n\n          ]}\n          selected={selectedValueType3}\n          onChange={handleChoiceValueTypeChange3}\n        />\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedValueType3],\n  );\n\n  const choiceWithValueRenderChildren3 = {\n    label: 'Value',\n    value: 'Value',\n    renderChildren: renderChildren3,\n  };\n\n  const options = [\n    {label: '1', value: \"1\"},\n    {label: '2', value: \"2\"},\n    {label: '3', value: \"3\"},\n  ];\n  const {metafieldId} = discount.configuration;\n\n  const {\n    fields: {\n      discountTitle,\n      discountCode,\n      discountMethod,\n      combinesWith,\n      requirementType,\n      requirementSubtotal,\n      requirementQuantity,\n      usageLimit,\n      appliesOncePerCustomer,\n      startDate,\n      endDate,\n      configuration,\n\n    },\n    submit,\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n  } = useForm({\n    fields: {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      discountTitle: useField(discount.title),\n      discountMethod: useField(discount.method),\n      discountCode: useField(discount.code),\n      combinesWith: useField(discount.combinesWith),\n      requirementType: useField(RequirementType.None),\n      requirementSubtotal: useField(\"0\"),\n      requirementQuantity: useField(\"0\"),\n      usageLimit: useField(discount.usageLimit),\n      appliesOncePerCustomer: useField(discount.appliesOncePerCustomer),\n      startDate: useField(discount.startsAt),\n      endDate: useField(discount.endsAt),\n      configuration: {\n        quantity: useField(discount.configuration.quantity),\n        percentage: useField(discount.configuration.percentage),\n        fixedAmount: useField(discount.configuration.fixedAmount),\n\n        quantity2: useField(discount.configuration.quantity2),\n        percentage2: useField(discount.configuration.percentage2),\n        fixedAmount2: useField(discount.configuration.fixedAmount2),\n\n        quantity3: useField(discount.configuration.quantity3),\n        percentage3: useField(discount.configuration.percentage3),\n        fixedAmount3: useField(discount.configuration.fixedAmount3)\n\n      },\n      products1: [{}],\n      products2: [{}],\n      products3: [{}],\n      countStrategy: useField(\"1\"),\n      applyTo: useField(\"\")\n\n    },\n    onSubmit: async (form) => {\n      setCount(1)\n      let discount;\n      discount = {\n        title: form.discountTitle,\n        method: form.discountMethod,\n        code: form.discountCode,\n        combinesWith: form.combinesWith,\n        usageLimit: form.usageLimit == null ? null : parseInt(form.usageLimit),\n        appliesOncePerCustomer: form.appliesOncePerCustomer,\n        startsAt: form.startDate,\n        endsAt: form.endDate,\n        countStrategy: discountStrategyCount,\n        applyTo: applyTo,\n        configuration: {\n          metafieldId,\n          quantity: parseInt(form.configuration.quantity),\n          percentage: parseFloat(percentageDiscount),\n          fixedAmount: parseFloat(amountDiscount),\n          quantity2: parseInt(form.configuration.quantity2),\n          percentage2: parseFloat(percentageDiscount2),\n          fixedAmount2: parseFloat(amountDiscount2),\n\n          quantity3: parseInt(form.configuration.quantity3),\n          percentage3: parseFloat(percentageDiscount3),\n          fixedAmount3: parseFloat(amountDiscount3),\n\n          appliesToEachItem: appliesToEachItem,\n          appliesToEachItem2: appliesToEachItem2,\n          appliesToEachItem3: appliesToEachItem3\n\n        },\n        products1: formState[0].productVariantId\n          ? formState\n          : [],\n        products2: formState2[0].productVariantId\n          ? formState2\n          : [],\n        products3: formState3[0].productVariantId\n          ? formState3\n          : [],\n      };\n\n      if (discount.code === '' && discount.title === '') {\n        setCheck(1)\n      } else if (validateNumber(discount.configuration.quantity) === 1 || validateNumber(discount.configuration.quantity2) === 1 || validateNumber(discount.configuration.quantity3) === 1) {\n        setCheck(2)\n      } else if (showVolume1 && showVolume2 === false && showVolume3 === false) {\n        if (validatePercentage(discount.configuration.percentage) === 1 && selectedVolume.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 1\")\n        } else if (validateNumber(discount.configuration.fixedAmount) === 1 && selectedVolume.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 2\")\n        } else if (discount.products1.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(6)\n          console.log(\"sai 15\")\n        } else {\n          setCheck(5)\n          submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n        }\n      } else if (showVolume2 && showVolume3 === false) {\n        if (validatePercentage(discount.configuration.percentage) === 1 && selectedVolume.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 4\")\n        } else if (validatePercentage(discount.configuration.percentage2) === 1 && selectedVolume2.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 5\")\n        } else if (validateNumber(discount.configuration.fixedAmount) === 1 && selectedVolume.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 6\")\n        } else if (validateNumber(discount.configuration.fixedAmount2) === 1 && selectedVolume2.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 7\")\n        } else if (discount.products1.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(6)\n          console.log(\"sai 16\")\n        } else if (discount.products2.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(7)\n          console.log(\"sai 17\")\n        } else {\n          setCheck(5)\n          submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n        }\n      } else if (showVolume2 && showVolume3) {\n        if (validatePercentage(discount.configuration.percentage) === 1 && selectedVolume.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 9\")\n        } else if (validatePercentage(discount.configuration.percentage2) === 1 && selectedVolume2.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 10\")\n        } else if (validatePercentage(discount.configuration.percentage3) === 1 && selectedVolume3.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 11\")\n        } else if (validateNumber(discount.configuration.fixedAmount) === 1 && selectedVolume.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 12\")\n        } else if (validateNumber(discount.configuration.fixedAmount2) === 1 && selectedVolume2.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 13\")\n        } else if (validatePercentage(discount.configuration.fixedAmount3) === 1 && selectedVolume3.includes('Value')) {\n          setCheck(3)\n          console.log(\"sai 14\")\n        } else if (discount.products1.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(6)\n          console.log(\"sai 18\")\n        } else if (discount.products2.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(7)\n          console.log(\"sai 19\")\n        } else if (discount.products3.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(8)\n          console.log(\"sai 20\")\n        } else {\n          setCheck(5)\n          submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n        }\n      } else {\n        setCheck(5)\n        submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n      }\n      console.log(discount)\n      return {status: \"success\"};\n    },\n  });\n\n  const toastMarkup = active ? (\n    <Toast content={message} onDismiss={toggleActive} error={check !== 5}/>\n  ) : null;\n  // @ts-ignore\n\n  return (\n    <Frame>\n      <Page\n        title=\"Create volume discount\"\n        backAction={{\n          content: \"Return\",\n          onAction: () => navigate(\"../../app/discountList\")\n          ,\n        }}\n        primaryAction={{\n          content: \"Save\",\n          onAction: submit,\n          loading: isLoading,\n        }}\n      >\n        <Layout>\n          <Layout.Section>\n            <Form method=\"post\">\n              <BlockStack align=\"space-around\" gap=\"200\">\n                <MethodCard\n                  title=\"Volume\"\n                  discountTitle={discountTitle}\n                  discountClass={DiscountClass.Product}\n                  discountCode={discountCode}\n                  discountMethod={discountMethod}\n                />\n                <Box paddingBlockEnd=\"300\">\n                  <Card>\n                    <BlockStack>\n                      <ChoiceList\n                        title=\"Apply to\"\n                        choices={[\n                          {label: 'Apply on all Product', value: 'allProduct'},\n                          {label: ' Choose Product', value: 'chooseProduct'},\n                        ]}\n                        selected={selected}\n                        onChange={handleChangeApplies}\n                      />\n                    </BlockStack>\n                  </Card>\n                </Box>\n\n                {isFirstButtonActive ?\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Select\n                          label=\"Discount Strategy Count\"\n                          options={options}\n                          onChange={handleSelectDiscountStrategyCountChange}\n                          value={discountStrategyCount}\n                        />\n\n                      </BlockStack>\n                    </Card>\n                  </Box>\n                  : null}\n                {showVolume1 && (\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h2\">\n                          Volume 1\n                        </Text>\n                        <TextField\n                          label=\"Minimum quantity\"\n                          autoComplete=\"on\"\n                          {...configuration.quantity}\n                        />\n                        <ChoiceList\n                          title=\"Select discount type\"\n                          choices={[\n                            {label: 'Percentage', value: 'percentage'},\n                            {label: 'Value', value: 'Value', renderChildren},\n                          ]}\n                          selected={selectedVolume}\n                          onChange={handleChangeVolume}\n                        />\n                        {selectedVolume.includes('percentage') && (\n                          <TextField\n                            label=\"Discount percentage\"\n                            autoComplete=\"on\"\n                            value={percentageDiscount}\n                            onChange={handleDiscountPercentageChange}\n                            suffix=\"%\"\n                          />\n                        )}\n                        {selectedVolume.includes('Value') && (\n                          <TextField\n                            label=\"Discount value\"\n                            autoComplete=\"on\"\n                            value={amountDiscount}\n                            onChange={handleDiscountAmountChange}\n                            suffix=\"VND\"\n                          />\n                        )}\n                      </BlockStack>\n                      {isFirstButtonActive ?\n                        <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                          <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProduct}>\n                            Click here to set product\n                          </Button>\n                        </div>\n                        : null}\n                      {formState[0].productId && isFirstButtonActive ? (\n                        <ResourceList\n                          resourceName={{singular: 'customer', plural: 'customers'}}\n                          items={formState}\n                          renderItem={(item) => {\n                            const media = <Thumbnail\n                              source={item.productImage || \"\"}\n                              alt={item.productAlt}/>;\n                            const shortcutActions = [\n                              {\n                                content: \"Remove\",\n                                onAction: () => removeItemFromFormState(item.productVariantId),\n                              },\n                            ];\n                            return (\n                              <ResourceItem\n                                id={item.productId}\n                                url={item.productImage}\n                                media={media}\n                                shortcutActions={shortcutActions}\n                                persistActions\n                              >\n                                <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                  {item.productTitle}\n                                </Text>\n                                <div>{item.variantTitle}</div>\n                              </ResourceItem>\n                            );\n                          }}\n                        />\n                      ) : (isFirstButtonActive && EmptyProductSelected())\n                      }\n                    </Card>\n                  </Box>\n                )}\n\n                {showVolume2 && (\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h2\">\n                          Volume 2\n                        </Text>\n                        <TextField\n                          label=\"Minimum quantity\"\n                          autoComplete=\"on\"\n                          {...configuration.quantity2}\n                        />\n                        <ChoiceList\n                          title=\"Select discount type\"\n                          choices={[\n                            {label: 'Percentage', value: 'percentage'},\n                            choiceWithValueRenderChildren2, // S\u1EED d\u1EE5ng \u0111\u1ED1i t\u01B0\u1EE3ng Choice m\u1EDBi \u1EDF \u0111\u00E2y\n                          ]}\n                          selected={selectedVolume2}\n                          onChange={handleChangeVolume2}\n                        />\n                        {selectedVolume2.includes('percentage') && (\n                          <TextField\n                            label=\"Discount percentage\"\n                            autoComplete=\"on\"\n                            value={percentageDiscount2}\n                            onChange={handleDiscountPercentageChange2}\n                            suffix=\"%\"\n                          />\n                        )}\n                        {selectedVolume2.includes('Value') && (\n                          <TextField\n                            label=\"Discount value\"\n                            autoComplete=\"on\"\n                            value={amountDiscount2}\n                            onChange={handleDiscountAmountChange2}\n                            suffix=\"VND\"\n                          />\n                        )}\n                      </BlockStack>\n                      {isFirstButtonActive ?\n                        <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                          <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProduct2}>\n                            Click here to set product\n                          </Button>\n                        </div>\n                        : null}\n                      {formState2[0].productId && isFirstButtonActive ?\n                        (<ResourceList\n                          resourceName={{singular: 'customer', plural: 'customers'}}\n                          items={formState2}\n                          renderItem={(item) => {\n                            const media = <Thumbnail\n                              source={item.productImage || \"\"}\n                              alt={item.productAlt}/>;\n                            const shortcutActions = [\n                              {\n                                content: \"Remove\",\n                                onAction: () => removeItemFromFormState2(item.productVariantId),\n                              },\n                            ];\n                            return (\n                              <ResourceItem\n                                id={item.productId}\n                                url={item.productImage}\n                                media={media}\n                                shortcutActions={shortcutActions}\n                                persistActions\n                              >\n                                <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                  {item.productTitle}\n                                </Text>\n                                <div>{item.variantTitle}</div>\n                              </ResourceItem>\n                            );\n                          }}\n                        />) : (isFirstButtonActive && EmptyProductSelected())\n                      }\n                    </Card>\n                  </Box>\n                )}\n\n                {showVolume3 && (\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h2\">\n                          Volume 3\n                        </Text>\n                        <TextField\n                          label=\"Minimum quantity\"\n                          autoComplete=\"on\"\n                          {...configuration.quantity3}\n                        />\n                        <ChoiceList\n                          title=\"Select discount type\"\n                          choices={[\n                            {label: 'Percentage', value: 'percentage'},\n                            choiceWithValueRenderChildren3, // S\u1EED d\u1EE5ng \u0111\u1ED1i t\u01B0\u1EE3ng Choice m\u1EDBi \u1EDF \u0111\u00E2y\n                          ]}\n                          selected={selectedVolume3}\n                          onChange={handleChangeVolume3}\n                        />\n                        {selectedVolume3.includes('percentage') && (\n                          <TextField\n                            label=\"Discount percentage\"\n                            autoComplete=\"on\"\n                            value={percentageDiscount3}\n                            onChange={handleDiscountPercentageChange3}\n                            suffix=\"%\"\n                          />\n                        )}\n                        {selectedVolume3.includes('Value') && (\n                          <TextField\n                            label=\"Discount value\"\n                            autoComplete=\"on\"\n                            value={amountDiscount3}\n                            onChange={handleDiscountAmountChange3}\n                            suffix=\"VND\"\n                          />\n                        )}\n                      </BlockStack>\n                      {isFirstButtonActive ? <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                          <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProduct3}>\n                            Click here to set product\n                          </Button>\n                        </div>\n                        : null}\n                      {formState3[0].productId && isFirstButtonActive ? (<ResourceList\n                        resourceName={{singular: 'customer', plural: 'customers'}}\n                        items={formState3}\n                        renderItem={(item) => {\n                          const media = <Thumbnail\n                            source={item.productImage || \"\"}\n                            alt={item.productAlt}/>;\n                          const shortcutActions = [\n                            {\n                              content: \"Remove\",\n                              onAction: () => removeItemFromFormState3(item.productVariantId),\n                            },\n                          ];\n                          return (\n                            <ResourceItem\n                              id={item.productId}\n                              url={item.productImage}\n                              media={media}\n                              shortcutActions={shortcutActions}\n                              persistActions\n                            >\n                              <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                {item.productTitle}\n                              </Text>\n                              <div>{item.variantTitle}</div>\n                            </ResourceItem>\n                          );\n                        }}\n                      />) : (isFirstButtonActive && EmptyProductSelected())\n\n                      }\n                    </Card>\n                  </Box>\n                )}\n\n                {discountMethod.value === DiscountMethod.Code && (\n                  <UsageLimitsCard\n                    totalUsageLimit={usageLimit}\n                    oncePerCustomer={appliesOncePerCustomer}\n                  />\n                )}\n\n                <CombinationCard\n                  combinableDiscountTypes={combinesWith}\n                  discountClass={DiscountClass.Product}\n                  discountDescriptor={\"Discount\"}\n                />\n                <ActiveDatesCard\n                  startDate={startDate}\n                  endDate={endDate}\n                  timezoneAbbreviation=\"GMT+7\"\n                />\n              </BlockStack>\n            </Form>\n          </Layout.Section>\n          <Layout.Section variant=\"oneThird\">\n            <SummaryCard\n              header={{\n                discountMethod: discountMethod.value,\n                discountDescriptor:\n                  discountMethod.value === DiscountMethod.Automatic\n                    ? discountTitle.value\n                    : discountCode.value,\n                appDiscountType: \"Volume\",\n                isEditing: false,\n              }}\n              performance={{\n                status: DiscountStatus.Scheduled,\n                usageCount: 0,\n              }}\n              minimumRequirements={{\n                requirementType: requirementType.value,\n                subtotal: requirementSubtotal.value,\n                quantity: requirementQuantity.value,\n                currencyCode: currencyCode,\n              }}\n              customerEligibility={{\n                eligibility: Eligibility.Everyone,\n              }}\n              usageLimits={{\n                oncePerCustomer: appliesOncePerCustomer.value,\n                totalUsageLimit: usageLimit.value,\n              }}\n              activeDates={{\n                startDate: startDate.value,\n                endDate: endDate.value,\n              }}\n            />\n          </Layout.Section>\n          <Layout.Section>\n            <PageActions\n              primaryAction={{\n                content: \"Save discount\",\n                onAction: submit,\n                loading: isLoading,\n              }}\n              secondaryActions={[\n                {\n                  content: \"Discard\",\n                  onAction: () => navigate(\"../../app/discountList\")\n                  ,\n                },\n              ]}\n            />\n          </Layout.Section>\n        </Layout>\n        {toastMarkup}\n      </Page>\n    </Frame>\n  );\n}\n", "import { Card, EmptyState, Page } from \"@shopify/polaris\";\nimport notFoundImage from \"./empty-state.svg\";\n\nexport function NotFoundPage() {\n  return (\n    <Page>\n      <Card>\n        <EmptyState\n          heading=\"There is no page at this address\"\n          image={notFoundImage}\n        >\n          <p>\n            Check the URL and try again, or use the search bar to find what you\n            need.\n          </p>\n        </EmptyState>\n      </Card>\n    </Page>\n  );\n}\n", "export const Function = ()=>{\n  const validateNumber = (value) => {\n    if (isNaN(parseFloat(value)) || parseFloat(value) <=0) {\n      return 1;\n    }\n    return 2;\n  };\n  const validatePercentage = (value: any)=> {\n    if (isNaN(parseFloat(value)) || parseFloat(value) < 0 || parseFloat(value) >= 100) {\n      return 1;\n    }\n    return 2 // kh\u00F4ng c\u00F3 l\u1ED7i, tr\u1EA3 v\u1EC1 undefined\n  };\n\n  return{\n    validateNumber,\n    validatePercentage\n  }\n}\n", "// @ts-ignore\nimport { gql } from \"@apollo/client\";\n\nexport const CREATE_STORE = gql`\n    mutation CreateStore($input : CreateStoreInput) {\n        createStore(input : $input) {\n           id,\n        name,\n        email,\n        shop,\n        domain,\n        scope,\n        country,\n        customer_email,\n        myshopify_domain,\n        plan_name,\n        plan_display_name,\n        shop_owner,\n        iana_timezone,\n        currency,\n        address1,\n        address2,\n        phone,\n        created_at,\n        accessToken\n        }\n    }\n`;\n\nexport const CREATE_DISCOUNT = gql`\n    mutation CreateDiscount($input : CreateDiscountInput) {\n        createDiscount(input : $input) {\n           discountId,\n           code,\n           method,\n           startsAt,\n           endsAt,\n           status,\n           asyncUsageCount\n        }\n    }\n`;\nexport const CREATE_DISCOUNT_BY_X_GET_Y = gql`\n    mutation CreateDiscountByXGetY($input : CreateDiscountByXGetYInput) {\n        createDiscountByXGetY(input : $input) {\n           discountId,\n           code,\n           method,\n           startsAt,\n           endsAt,\n           status,\n           asyncUsageCount\n        }\n    }\n`;\n\n\nexport const UPDATE_DISCOUNT = gql`\n    mutation UpdateDiscount($input : UpdateDiscountInput) {\n        updateDiscount(input : $input) {\n             code,\n             method,\n             startsAt,\n             endsAt,\n             status,\n             asyncUsageCount\n        }\n    }\n`;\nexport const UPDATE_DISCOUNT_BY_X_GET_Y = gql`\n    mutation UpdateDiscountByXGetY($input : UpdateDiscountByXGetYInput) {\n        updateDiscountByXGetY(input : $input) {\n             code,\n             method,\n             startsAt,\n             endsAt,\n             status,\n             asyncUsageCount\n        }\n    }\n`;\n\nexport const UPDATE_DISCOUNT_STATUS_AND_COUNT = gql`\n    mutation UpdateStatusAndUseCount($input : UpdateDiscountStatusAndUseCountInput) {\n        updateStatusAndUseCount(input : $input) {\n             status,\n             asyncUsageCount\n        }\n    }\n`;\nexport const UPDATE_DISCOUNT_STATUS_AND_COUNT_BY_X_GET_Y = gql`\n    mutation UpdateStatusAndUseCountByXGetY($input : UpdateDiscountByXGetYStatusAndUseCountInput) {\n        updateStatusAndUseCountByXGetY(input : $input) {\n             status,\n             asyncUsageCount\n        }\n    }\n`;\n\n\nexport const DELETE_DISCOUNT = gql`\n    mutation DeleteDiscount($input : DeleteDiscountInput) {\n        deleteDiscount(input : $input) {\n            discountId\n        }\n    }\n`;\nexport const DELETE_DISCOUNT_BY_X_GET_Y = gql`\n    mutation DeleteDiscountByXGetY($input : DeleteDiscountByXGetYInput) {\n        deleteDiscountByXGetY(input : $input) {\n            discountId\n        }\n    }\n`;\n\n", "import {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {json} from \"@remix-run/node\";\nimport {useField, useForm} from \"@shopify/react-form\";\n// @ts-ignore\nimport {useMutation, useQuery} from '@apollo/client';\nimport {CurrencyCode} from \"@shopify/react-i18n\";\nimport {Form, useActionData, useLoaderData, useNavigate, useNavigation, useSubmit,} from \"@remix-run/react\";\nimport {\n  ActiveDatesCard,\n  CombinationCard,\n  DiscountClass,\n  DiscountMethod,\n  DiscountStatus,\n  Eligibility,\n  MethodCard,\n  RequirementType,\n  SummaryCard,\n  UsageLimitsCard,\n} from \"@shopify/discount-app-components\";\nimport {\n  BlockStack,\n  Box,\n  Button,\n  Card,\n  ChoiceList, Frame,\n  Layout,\n  Page,\n  PageActions,\n  ResourceItem,\n  ResourceList, Select,\n  Text,\n  TextField,\n  Thumbnail, Toast,\n} from \"@shopify/polaris\";\n\nimport shopify, {authenticate} from \"../shopify.server\";\nimport {Function} from \"~/const/Function\";\nimport {CREATE_DISCOUNT} from \"~/graphql/mutation\";\nimport {GET_ALL_DISCOUNT} from \"~/graphql/query\";\nimport axios from \"axios\";\nimport StoreModel from \"~/models/store.model\";\n\nconst EmptyProductSelected = () => (\n  <div style={{textAlign: \"center\", maxHeight: \"60vh\"}}>\n    <img style={{height: '60px', width: \"60px\"}}\n         src=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\" alt=\"test\"/>\n    <p style={{fontWeight: \"bold\"}}>There are no products selected</p>\n    <p>Please choose product for this discount</p>\n  </div>\n)\n\nexport const action = async ({params, request}) => {\n  const {functionId} = params;\n  const {admin} = await shopify.authenticate.admin(request);\n  const formData = await request.formData();\n  const {\n    title,\n    method,\n    code,\n    combinesWith,\n    usageLimit,\n    appliesOncePerCustomer,\n    startsAt,\n    endsAt,\n    configuration,\n    products1,\n    products2,\n    products3,\n    applyTo,\n    countStrategy\n  } = JSON.parse(formData.get(\"discountForm\"));\n  let value1\n  let discountTitle\n  if (method === DiscountMethod.Automatic) {\n    discountTitle = title\n  } else if (method === DiscountMethod.Code) {\n    discountTitle = code\n  }\n  value1 = JSON.stringify({\n    countStrategy: countStrategy,\n    discountCode: discountTitle,\n    applyTo: applyTo,\n    quantity: configuration.quantity,\n    quantity2: configuration.quantity2,\n    quantity3: configuration.quantity3,\n\n    fixedAmount: configuration.fixedAmount,\n    fixedAmount2: configuration.fixedAmount2,\n    fixedAmount3: configuration.fixedAmount3,\n\n    percentage: configuration.percentage,\n    percentage2: configuration.percentage2,\n    percentage3: configuration.percentage3,\n\n    products1: products1,\n    products2: products2,\n    products3: products3,\n    appliesForEachProduct: configuration.appliesToEachItem,\n    appliesForEachProduct2: configuration.appliesToEachItem2,\n    appliesForEachProduct3: configuration.appliesToEachItem3\n  })\n\n\n  const baseDiscount = {\n    functionId,\n    title,\n    combinesWith,\n    startsAt: new Date(startsAt),\n    endsAt: endsAt && new Date(endsAt),\n  };\n\n  if (method === DiscountMethod.Code) { //\n    const baseCodeDiscount = {\n      ...baseDiscount,\n      title: code,\n      code,\n      usageLimit,\n      appliesOncePerCustomer,\n    };\n\n    const response = await admin.graphql(\n      `#graphql\n              mutation CreateCodeDiscount($discount: DiscountCodeAppInput!) {\n                discountCreate: discountCodeAppCreate(codeAppDiscount: $discount) {\n                 codeAppDiscount{\n                   __typename\n                   discountId\n                   title\n                   discountClass\n                   combinesWith {\n                   orderDiscounts\n                   productDiscounts\n                   shippingDiscounts\n                   }\n                  startsAt\n                  endsAt\n                  status\n                  asyncUsageCount\n                  usageLimit\n                  appliesOncePerCustomer\n                  codes(first: 10) {\n                  nodes {\n                  code\n                  }\n                  }}\n                  userErrors {\n                    code\n                    message\n                    field\n                  }\n                }\n              }`,\n      {\n        variables: {\n          discount: {\n            ...baseCodeDiscount,\n            metafields: [\n              {\n                namespace: \"$app:volume-discount\",\n                key: \"function-configuration\",\n                type: \"json\",\n                value: value1,\n              },\n            ],\n          },\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n\n    const errors = responseJson.data.discountCreate?.userErrors;\n    const discountData = responseJson.data.discountCreate?.codeAppDiscount\n\n    return json({errors, discountData, responseJson, value1}); //tra ve neu co loi\n  } else {\n    const response = await admin.graphql(\n      `#graphql\n              mutation CreateAutomaticDiscount($discount: DiscountAutomaticAppInput!) {\n                discountCreate: discountAutomaticAppCreate(automaticAppDiscount: $discount) {\n                automaticAppDiscount {\n                discountId\n                title\n                discountClass\n                combinesWith {\n                    orderDiscounts\n                    productDiscounts\n                    shippingDiscounts\n               }\n               asyncUsageCount\n               startsAt\n               endsAt\n               status\n               }\n                  userErrors {\n                    code\n                    message\n                    field\n                  }\n                }\n              }`,\n      {\n        variables: {\n          discount: {\n            ...baseDiscount,\n            metafields: [\n              {\n                namespace: \"$app:volume-discount\",\n                key: \"function-configuration\",\n                type: \"json\",\n                value: value1,\n              },\n            ],\n          },\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const errors = responseJson.data.discountCreate?.userErrors;\n    const discountData = responseJson.data.discountCreate?.automaticAppDiscount\n\n    return json({errors, responseJson, value1, discountData});\n  }\n};\n\n// eslint-disable-next-line react-hooks/rules-of-hooks\n\nexport async function loader({ request }) {\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\",\n    },\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    })\n\n  return json({\n    shop:shopData,\n  });\n}\n\n// This is the React component for the page.\nexport default function CreateDiscount() {\n  const {\n    validateNumber,\n    validatePercentage\n  } = Function()\n  const {shop}= useLoaderData()\n  const [formState, setFormState] = useState([{}]);\n  const [formState2, setFormState2] = useState([{}]);\n  const [formState3, setFormState3] = useState([{}]);\n  const [isFirstButtonActive, setIsFirstButtonActive] = useState(true);\n  const [check, setCheck] = useState(0)\n  const [count, setCount] = useState(0)\n  const [selected, setSelected] = useState(['allProduct']);\n  const [applyTo, setApplyTo] = useState(\"all\");\n  const [selectedVolume, setSelectedVolume] = useState(['percentage']);\n  const [selectedVolume2, setSelectedVolume2] = useState(['percentage']);\n  const [selectedVolume3, setSelectedVolume3] = useState(['percentage']);\n  const submitForm = useSubmit();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const today = useMemo(() => new Date(), []); // fix\n  const isLoading = navigation.state === \"submitting\";\n  const currencyCode = CurrencyCode.Cad;\n  const navigate = useNavigate()\n  const [active, setActive] = useState(false);\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n  const [message, setMessage] = useState(\"\")\n\n  const [showVolume1, setShowVolume1] = useState(true)\n  const [percentageDiscount, setPercentageDiscount] = useState(\"\")\n  const [amountDiscount, setAmountDiscount] = useState(\"\")\n  const [selectedValueType, setSelectedValueType] = useState(['max']);\n  const [appliesToEachItem, setAppliesToEachItem] = useState(false)\n\n  const [showVolume2, setShowVolume2] = useState(false)\n  const [percentageDiscount2, setPercentageDiscount2] = useState(\"\")\n  const [amountDiscount2, setAmountDiscount2] = useState(\"\")\n  const [selectedValueType2, setSelectedValueType2] = useState(['max']);\n  const [appliesToEachItem2, setAppliesToEachItem2] = useState(false)\n\n  const [showVolume3, setShowVolume3] = useState(false)\n  const [percentageDiscount3, setPercentageDiscount3] = useState(\"\")\n  const [amountDiscount3, setAmountDiscount3] = useState(\"\")\n  const [selectedValueType3, setSelectedValueType3] = useState(['max']);\n  const [appliesToEachItem3, setAppliesToEachItem3] = useState(false)\n  const [discountStrategyCount, setDiscountStrategyCount] = useState(\"1\")\n  const {loading: DiscountLoading, data: DiscountsData} = useQuery(GET_ALL_DISCOUNT)\n\n  const [createDiscount] = useMutation(CREATE_DISCOUNT);\n  const addDiscount = async () => {\n    try {\n      let value\n      if (actionData.value1) {\n        value = JSON.parse(actionData.value1)\n      } else {\n        value = {}\n      }\n      const createPromise = await createDiscount({\n        variables: {\n          input: {\n            storeId:shop.id,\n            discountId: actionData.discountData.discountId,\n            title: actionData.discountData.title,\n            code: actionData.discountData.__typename === \"DiscountCodeApp\" ? actionData.discountData.codes.nodes[0]?.code ?? \"\" : \"\",\n            method: actionData.discountData.__typename === \"DiscountCodeApp\" ? DiscountMethod.Code : DiscountMethod.Automatic,\n            combinesWith: JSON.stringify(actionData.discountData.combinesWith),\n            usageLimit: actionData.discountData.__typename === \"DiscountCodeApp\" && actionData.discountData.usageLimit !== null ? actionData.discountData.usageLimit.toString() : \"\",\n            status: actionData.discountData.status,\n            startsAt: actionData.discountData.startsAt,\n            endsAt: actionData.discountData.endsAt,\n            asyncUsageCount: actionData.discountData.asyncUsageCount.toString(),\n            appliesOncePerCustomer: actionData.discountData.__typename === \"DiscountCodeApp\" ? actionData.discountData.appliesOncePerCustomer : false,\n            type: value.applyTo,\n            amount_1: value.fixedAmount !== null ? value.fixedAmount.toString() : \"\",\n            amount_2: value.fixedAmount2 !== null ? value.fixedAmount2.toString() : \"\",\n            amount_3: value.fixedAmount3 !== null ? value.fixedAmount3.toString() : \"\",\n            appliesToEachItem_1: value.appliesForEachProduct,\n            appliesToEachItem_2: value.appliesForEachProduct2,\n            appliesToEachItem_3: value.appliesForEachProduct3,\n            percentage_1: value.percentage !== null ? value.percentage.toString() : \"\",\n            percentage_2: value.percentage2 !== null ? value.percentage2.toString() : \"\",\n            percentage_3: value.percentage3 !== null ? value.percentage3.toString() : \"\",\n            product_1: JSON.stringify(value.products1),\n            product_2: JSON.stringify(value.products2),\n            product_3: JSON.stringify(value.products3),\n            quantity_1: value.quantity ? value.quantity.toString() : \"\",\n            quantity_2: value.quantity2 ? value.quantity2.toString() : \"\",\n            quantity_3: value.quantity3 ? value.quantity3.toString() : \"\",\n          }\n        }\n      })\n\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n\n      await Promise.race([createPromise, timeoutPromise]);\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n\n  useEffect(() => {\n    if (actionData?.errors.length === 0) {\n      if (actionData.discountData) {\n        addDiscount().then()\n        navigate(\"../../app/discountList\")\n      }\n    }\n    console.log(actionData?.responseJson)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actionData]);\n  useEffect(() => {\n    if (check === 9) {\n      setMessage('There are duplicate products in Volume or Volume 3')\n      setActive(true)\n\n    } else if (check === 10) {\n      setMessage('There are duplicate products in Volume 1 or Volume 3')\n      setActive(true)\n    } else if (check === 11) {\n      setMessage('There are duplicate products in Volume 1 or Volume 2')\n      setActive(true)\n    }\n    if (count === 1) {\n      if (check === 1) {\n        setMessage('Discount code cannot be empty')\n        setActive(true)\n      } else if (check === 2) {\n        setMessage('Invalid Minimum quantity')\n        setActive(true)\n      } else if (check === 3) {\n        setMessage('Invalid discount percentage')\n        setActive(true)\n      } else if (check === 4) {\n        setMessage('Invalid discount amount')\n        setActive(true)\n      } else if (check === 5) {\n        setMessage('Create Discount Success')\n        setActive(true)\n\n      } else if (check === 6) {\n        setMessage('Product Volume 1 can not be empty')\n        setActive(true)\n\n      } else if (check === 7) {\n        setMessage('Product Volume 2 can not be empty')\n        setActive(true)\n\n      } else if (check === 8) {\n        setMessage('Product Volume 2 can not be empty')\n        setActive(true)\n\n      }\n      else if (check === 15) {\n        setMessage('Discount cannot be duplicated')\n        setActive(true)\n\n      }\n\n      setCount(0); // Reset count sau khi hi\u1EC3n th\u1ECB th\u00F4ng b\u00E1o\n    }\n  }, [check, count]);\n\n\n  useEffect(() => {\n    if (discountStrategyCount === \"1\") {\n      setShowVolume1(true)\n      setShowVolume2(false)\n      setShowVolume3(false)\n\n    } else if (discountStrategyCount === \"2\") {\n      setShowVolume1(true)\n      setShowVolume2(true)\n      setShowVolume3(false)\n\n    } else if (discountStrategyCount === \"3\") {\n      setShowVolume1(true)\n      setShowVolume2(true)\n      setShowVolume3(true)\n\n    }\n  }, [discountStrategyCount]);\n  useEffect(() => {\n    if (selectedVolume.includes('percentage')) {\n      setAmountDiscount(\"\")\n      setAppliesToEachItem(false)\n    } else {\n      setPercentageDiscount(\"\")\n    }\n  }, [selectedVolume]);\n\n  useEffect(() => {\n    if (selectedVolume2.includes('percentage')) {\n      setAmountDiscount2(\"\")\n      setAppliesToEachItem2(false)\n    } else {\n      setPercentageDiscount2(\"\")\n    }\n  }, [selectedVolume2]);\n  useEffect(() => {\n    if (selectedVolume3.includes('percentage')) {\n      setAmountDiscount3(\"\")\n      setAppliesToEachItem3(false)\n    } else {\n      setPercentageDiscount3(\"\")\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedVolume3]);\n\n  async function selectProduct() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      const isDuplicateProduct = flattenedVariants.some(newProduct => {\n        // Ki\u1EC3m tra formState2\n        const isDuplicateInFormState2 = formState2.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId\n        );\n        // Ki\u1EC3m tra formState3\n        const isDuplicateInFormState3 = formState3.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId\n        );\n        // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 t\u1ED3n t\u1EA1i trong formState2 ho\u1EB7c formState3\n        return isDuplicateInFormState2 || isDuplicateInFormState3;\n      });\n\n      if (isDuplicateProduct) {\n        setCheck(9)\n        // X\u1EED l\u00FD khi c\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p\n        console.log(\"C\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p trong formState2 ho\u1EB7c formState3\");\n      } else {\n        // Kh\u00F4ng c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o tr\u00F9ng l\u1EB7p, c\u1EADp nh\u1EADt formState\n        setFormState(flattenedVariants);\n      }\n    }\n  }\n\n  async function selectProduct2() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      const isDuplicateProduct2 = flattenedVariants.some(newProduct => {\n        // Ki\u1EC3m tra formState\n        const isDuplicateInFormState = formState.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // Ki\u1EC3m tra formState3\n        const isDuplicateInFormState3 = formState3.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 t\u1ED3n t\u1EA1i trong formState1 ho\u1EB7c formState3\n        return isDuplicateInFormState || isDuplicateInFormState3;\n      });\n\n      if (isDuplicateProduct2) {\n        // X\u1EED l\u00FD khi c\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p\n        console.log(\"C\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p trong formState ho\u1EB7c formState3\");\n        setCheck(10)\n\n      } else {\n        // Kh\u00F4ng c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o tr\u00F9ng l\u1EB7p, c\u1EADp nh\u1EADt formState2\n        setFormState2(flattenedVariants);\n      }\n\n    }\n  }\n\n  async function selectProduct3() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      const isDuplicateProduct3 = flattenedVariants.some(newProduct => {\n        // Ki\u1EC3m tra formState\n        const isDuplicateInFormState1 = formState.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // Ki\u1EC3m tra formState3\n        const isDuplicateInFormState2 = formState2.some(existingProduct => existingProduct.productVariantId === newProduct.productVariantId);\n        // N\u1EBFu s\u1EA3n ph\u1EA9m \u0111\u00E3 t\u1ED3n t\u1EA1i trong formState1 ho\u1EB7c formState2\n        return isDuplicateInFormState1 || isDuplicateInFormState2;\n      });\n\n      if (isDuplicateProduct3) {\n        setCheck(11)\n        // X\u1EED l\u00FD khi c\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p\n        console.log(\"C\u00F3 s\u1EA3n ph\u1EA9m tr\u00F9ng l\u1EB7p trong formState ho\u1EB7c formState2\");\n      } else {\n        // Kh\u00F4ng c\u00F3 s\u1EA3n ph\u1EA9m n\u00E0o tr\u00F9ng l\u1EB7p, c\u1EADp nh\u1EADt formState3\n        setFormState3(flattenedVariants);\n      }\n\n    }\n  }\n\n  useEffect(() => {\n    console.log(formState)\n  }, [formState]);\n  useEffect(() => {\n    if (selected.includes('chooseProduct')) {\n      setApplyTo(\"choose\")\n      setIsFirstButtonActive(true)\n      setDiscountStrategyCount(\"1\")\n      setFormState([{}])\n      setFormState2([{}])\n      setFormState3([{}])\n\n    } else {\n      setApplyTo(\"all\")\n      setIsFirstButtonActive(false)\n    }\n  }, [selected]);\n  useEffect(() => {\n    if (selectedValueType.includes('max')) {\n      setAppliesToEachItem(false)\n    } else {\n      setAppliesToEachItem(true)\n    }\n  }, [selectedValueType]);\n  useEffect(() => {\n    if (selectedValueType2.includes('max')) {\n      setAppliesToEachItem2(false)\n    } else {\n      setAppliesToEachItem2(true)\n    }\n  }, [selectedValueType2]);\n\n  useEffect(() => {\n    if (selectedValueType3.includes('max')) {\n      setAppliesToEachItem3(false)\n    } else {\n      setAppliesToEachItem3(true)\n    }\n  }, [selectedValueType3]);\n\n  useEffect(() => {\n    if (!showVolume2) {\n      setAppliesToEachItem2(false)\n      setAmountDiscount2(\"\")\n      setPercentageDiscount2(\"\")\n      setSelectedValueType2(['max'])\n      setSelectedVolume2(['percentage'])\n    }\n  }, [showVolume2]);\n\n  useEffect(() => {\n    if (!showVolume3) {\n      setAppliesToEachItem3(false)\n      setAmountDiscount3(\"\")\n      setPercentageDiscount3(\"\")\n      setSelectedValueType3(['max'])\n      setSelectedVolume3(['percentage'])\n\n    }\n  }, [showVolume3]);\n\n  const handleSelectDiscountStrategyCountChange = useCallback(\n    (/** @type {React.SetStateAction<string>} */ value) => setDiscountStrategyCount(value),\n    [],\n  );\n\n  const options = [\n    {label: '1', value: \"1\"},\n    {label: '2', value: \"2\"},\n    {label: '3', value: \"3\"},\n  ];\n\n\n  const handleChangeApplies = (/** @type {React.SetStateAction<string[]>} */ /** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelected(value)\n    console.log(value)\n  }\n  const handleChoiceValueTypeChange = useCallback(\n    (/** @type {React.SetStateAction<string[]>} */ value) => setSelectedValueType(value),\n    [],\n  );\n  const handleChoiceValueTypeChange2 = useCallback(\n    (/** @type {React.SetStateAction<string[]>} */ value) => setSelectedValueType2(value),\n    [],\n  );\n  const handleChoiceValueTypeChange3 = useCallback(\n    (/** @type {React.SetStateAction<string[]>} */ value) => setSelectedValueType3(value),\n    [],\n  );\n  const handleDiscountPercentageChange = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageDiscount(newValue);\n    },\n    [],);\n  const handleDiscountPercentageChange2 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageDiscount2(newValue);\n    },\n    [],);\n  const handleDiscountPercentageChange3 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageDiscount3(newValue);\n    },\n    [],);\n  const handleDiscountAmountChange = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountDiscount(newValue);\n    },\n    [],);\n  const handleDiscountAmountChange2 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountDiscount2(newValue);\n    },\n    [],);\n  const handleDiscountAmountChange3 = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountDiscount3(newValue);\n    },\n    [],);\n  const handleChangeVolume = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedVolume(value)\n  }\n  const handleChangeVolume2 = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedVolume2(value)\n  }\n  const handleChangeVolume3 = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedVolume3(value)\n  }\n\n  const removeItemFromFormState = (/** @type {any} */ productVariantId) => {\n    const updatedFormState = formState.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setFormState(updatedFormState.length > 0 ? updatedFormState : [{}]);\n  };\n  const removeItemFromFormState2 = (/** @type {any} */ productVariantId) => {\n    const updatedFormState2 = formState2.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setFormState2(updatedFormState2.length > 0 ? updatedFormState2 : [{}]);\n  };\n  const removeItemFromFormState3 = (/** @type {any} */ productVariantId) => {\n    const updatedFormState3 = formState3.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setFormState3(updatedFormState3.length > 0 ? updatedFormState3 : [{}]);\n  };\n  const renderChildren = useCallback(\n    (/** @type {any} */ isSelected) =>\n      isSelected && (\n        <ChoiceList\n          title=\"\"\n          choices={[\n            {label: 'Max Discount amount', value: 'max'},\n            {label: 'Discount for each product', value: 'eachProduct'},\n\n          ]}\n          selected={selectedValueType}\n          onChange={handleChoiceValueTypeChange}\n        />\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedValueType],\n  );\n  const renderChildren2 = useCallback(\n    (/** @type {any} */ isSelected2) =>\n      isSelected2 && (\n        <ChoiceList\n          title=\"\"\n          choices={[\n            {label: 'Max Discount amount', value: 'max'},\n            {label: 'Discount for each product', value: 'eachProduct'},\n\n          ]}\n          selected={selectedValueType2}\n          onChange={handleChoiceValueTypeChange2}\n        />\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedValueType2],\n  );\n  const choiceWithValueRenderChildren2 = {\n    label: 'Value',\n    value: 'Value',\n    renderChildren: renderChildren2,\n  };\n\n  const renderChildren3 = useCallback(\n    (/** @type {any} */ isSelected3) =>\n      isSelected3 && (\n        <ChoiceList\n          title=\"\"\n          choices={[\n            {label: 'Max Discount amount', value: 'max'},\n            {label: 'Discount for each product', value: 'eachProduct'},\n\n          ]}\n          selected={selectedValueType3}\n          onChange={handleChoiceValueTypeChange3}\n        />\n      ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [selectedValueType3],\n  );\n\n  const choiceWithValueRenderChildren3 = {\n    label: 'Value',\n    value: 'Value',\n    renderChildren: renderChildren3,\n  };\n  const {\n    // \u0110\u1ECBnh ngh\u0129a c\u00E1c tr\u01B0\u1EDDng nh\u1EADp li\u1EC7u v\u00E0 gi\u00E1 tr\u1ECB kh\u1EDFi t\u1EA1o c\u1EE7a ch\u00FAng\n    fields: {\n      discountTitle,\n      discountCode,\n      discountMethod,\n      combinesWith,\n      requirementType,\n      requirementSubtotal,\n      requirementQuantity,\n      usageLimit,\n      appliesOncePerCustomer,\n      startDate,\n      endDate,\n      configuration,\n    },\n    submit,\n  } = useForm({\n    fields: {\n      discountTitle: useField(\"\"),\n      discountMethod: useField(DiscountMethod.Code),\n      discountCode: useField(\"\"),\n      combinesWith: useField({\n        orderDiscounts: false,\n        productDiscounts: false,\n        shippingDiscounts: false,\n      }),\n      requirementType: useField(RequirementType.None),\n      requirementSubtotal: useField(\"0\"),\n      requirementQuantity: useField(\"0\"),\n      usageLimit: useField(null),\n      appliesOncePerCustomer: useField(false),\n      startDate: useField(today),\n      endDate: useField(null),\n      configuration: {\n        quantity: useField(\"1\"),\n        percentage: useField(\"\"),\n        fixedAmount: useField(\"\"),\n        quantity2: useField(\"1\"),\n        percentage2: useField(\"\"),\n        fixedAmount2: useField(\"\"),\n        quantity3: useField(\"1\"),\n        percentage3: useField(\"\"),\n        fixedAmount3: useField(\"\")\n      },\n      products1: [{}],\n      products2: [{}],\n      products3: [{}],\n      countStrategy: useField(\"1\"),\n      applyTo: useField(\"\")\n    },\n    onSubmit: async (form) => {\n      setCount(1)\n      let discount;\n      let existingDiscount\n      let existingDiscountTitle\n      discount = {\n        title: form.discountTitle,\n        method: form.discountMethod,\n        code: form.discountCode,\n        combinesWith: form.combinesWith,\n        usageLimit: form.usageLimit == null ? null : parseInt(form.usageLimit),\n        appliesOncePerCustomer: form.appliesOncePerCustomer,\n        startsAt: form.startDate,\n        endsAt: form.endDate,\n        countStrategy: discountStrategyCount,\n        applyTo: applyTo,\n        configuration: {\n          quantity: parseInt(form.configuration.quantity),\n          percentage: parseFloat(percentageDiscount),\n          fixedAmount: parseFloat(amountDiscount),\n          quantity2: parseInt(form.configuration.quantity2),\n          percentage2: parseFloat(percentageDiscount2),\n          fixedAmount2: parseFloat(amountDiscount2),\n\n          quantity3: parseInt(form.configuration.quantity3),\n          percentage3: parseFloat(percentageDiscount3),\n          fixedAmount3: parseFloat(amountDiscount3),\n\n          appliesToEachItem: appliesToEachItem,\n          appliesToEachItem2: appliesToEachItem2,\n          appliesToEachItem3: appliesToEachItem3\n\n        },\n        products1: formState[0].productVariantId\n          ? formState\n          : [],\n        products2: formState2[0].productVariantId\n          ? formState2\n          : [],\n        products3: formState3[0].productVariantId\n          ? formState3\n          : [],\n      };\n\n     if(!DiscountLoading)\n     {\n        existingDiscount = DiscountsData.getAllDiscount.filter((node)=>node.code!== \"\").find(item => item.code === discount.code)\n        existingDiscountTitle = DiscountsData.getAllDiscount.find(item => item.title === discount.title);\n     }\n\n      if (discount.code === '' && discount.title === '') {\n        setCheck(1)\n      }\n      else if(existingDiscount !==undefined || existingDiscountTitle!==undefined)\n      {\n        setCheck(15)\n        console.log(\"trung ten\")\n        console.log(existingDiscountTitle)\n        console.log(existingDiscount)\n\n\n      }\n      else if (validateNumber(discount.configuration.quantity) === 1 || validateNumber(discount.configuration.quantity2) === 1 || validateNumber(discount.configuration.quantity3) === 1) {\n        setCheck(2)\n      } else if (showVolume1 && showVolume2 === false && showVolume3 === false) {\n        if (validatePercentage(discount.configuration.percentage) === 1 && selectedVolume.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 1\")\n        } else if (validateNumber(discount.configuration.fixedAmount) === 1 && selectedVolume.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 2\")\n        } else if (discount.products1.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(6)\n          console.log(\"sai 15\")\n        }\n        else {\n          setCheck(5)\n          submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n        }\n      } else if (showVolume2 && showVolume3 === false) {\n        if (validatePercentage(discount.configuration.percentage) === 1 && selectedVolume.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 4\")\n        } else if (validatePercentage(discount.configuration.percentage2) === 1 && selectedVolume2.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 5\")\n        } else if (validateNumber(discount.configuration.fixedAmount) === 1 && selectedVolume.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 6\")\n        } else if (validateNumber(discount.configuration.fixedAmount2) === 1 && selectedVolume2.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 7\")\n        } else if (discount.products1.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(6)\n          console.log(\"sai 16\")\n        } else if (discount.products2.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(7)\n          console.log(\"sai 17\")\n        } else {\n          setCheck(5)\n          submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n        }\n      } else if (showVolume2 && showVolume3) {\n        if (validatePercentage(discount.configuration.percentage) === 1 && selectedVolume.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 9\")\n        } else if (validatePercentage(discount.configuration.percentage2) === 1 && selectedVolume2.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 10\")\n        } else if (validatePercentage(discount.configuration.percentage3) === 1 && selectedVolume3.includes('percentage')) {\n          setCheck(3)\n          console.log(\"sai 11\")\n        } else if (validateNumber(discount.configuration.fixedAmount) === 1 && selectedVolume.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 12\")\n        } else if (validateNumber(discount.configuration.fixedAmount2) === 1 && selectedVolume2.includes('Value')) {\n          setCheck(4)\n          console.log(\"sai 13\")\n        } else if (validatePercentage(discount.configuration.fixedAmount3) === 1 && selectedVolume3.includes('Value')) {\n          setCheck(3)\n          console.log(\"sai 14\")\n        } else if (discount.products1.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(6)\n          console.log(\"sai 18\")\n        } else if (discount.products2.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(7)\n          console.log(\"sai 19\")\n        } else if (discount.products3.length <= 0 && selected.includes('chooseProduct')) {\n          setCheck(8)\n          console.log(\"sai 20\")\n        } else {\n          setCheck(5)\n          submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n        }\n      } else {\n        setCheck(5)\n        submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n      }\n      console.log(discount)\n      return {status: \"success\"};\n    },\n  });\n  const toastMarkup = active ? (\n    <Toast content={message} onDismiss={toggleActive} error={check !== 5}/>\n  ) : null;\n  // @ts-ignore\n  return (\n    <Frame>\n      <Page\n        title=\"Create volume discount\"\n        backAction={{\n          content: \"Return\",\n          onAction: () => navigate(\"../../app/discountList\")\n          ,\n        }}\n        primaryAction={{\n          content: \"Save\",\n          onAction: submit,\n          loading: isLoading,\n        }}\n      >\n        <Layout>\n          <Layout.Section>\n            <Form method=\"post\">\n              <BlockStack align=\"space-around\" gap=\"200\">\n                <MethodCard\n                  title=\"Volume\"\n                  discountTitle={discountTitle}\n                  discountClass={DiscountClass.Product}\n                  discountCode={discountCode}\n                  discountMethod={discountMethod}\n                />\n                <Box paddingBlockEnd=\"300\">\n                  <Card>\n                    <BlockStack>\n                      <ChoiceList\n                        title=\"Apply to\"\n                        choices={[\n                          {label: 'Apply on all Product', value: 'allProduct'},\n                          {label: ' Choose Product', value: 'chooseProduct'},\n                        ]}\n                        selected={selected}\n                        onChange={handleChangeApplies}\n                      />\n                    </BlockStack>\n                  </Card>\n                </Box>\n                {isFirstButtonActive ?\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Select\n                          label=\"Discount Strategy Count\"\n                          options={options}\n                          onChange={handleSelectDiscountStrategyCountChange}\n                          value={discountStrategyCount}\n                        />\n\n                      </BlockStack>\n                    </Card>\n                  </Box>\n                  : null}\n                {showVolume1 && (\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h2\">\n                          Volume 1\n                        </Text>\n                        <TextField\n                          label=\"Minimum quantity\"\n                          autoComplete=\"on\"\n                          {...configuration.quantity}\n                        />\n                        <ChoiceList\n                          title=\"Select discount type\"\n                          choices={[\n                            {label: 'Percentage', value: 'percentage'},\n                            {label: 'Value', value: 'Value', renderChildren},\n                          ]}\n                          selected={selectedVolume}\n                          onChange={handleChangeVolume}\n                        />\n                        {selectedVolume.includes('percentage') && (\n                          <TextField\n                            label=\"Discount percentage\"\n                            autoComplete=\"on\"\n                            value={percentageDiscount}\n                            onChange={handleDiscountPercentageChange}\n                            suffix=\"%\"\n                          />\n                        )}\n                        {selectedVolume.includes('Value') && (\n                          <TextField\n                            label=\"Discount value\"\n                            autoComplete=\"on\"\n                            value={amountDiscount}\n                            onChange={handleDiscountAmountChange}\n                            suffix=\"VND\"\n                          />\n                        )}\n                      </BlockStack>\n                      {isFirstButtonActive ?\n                        <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                          <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProduct}>\n                            Click here to set product\n                          </Button>\n                        </div>\n                        : null}\n                      {isFirstButtonActive && formState[0].productId ? (\n                        <ResourceList\n                          resourceName={{singular: 'customer', plural: 'customers'}}\n                          items={formState}\n                          renderItem={(item) => {\n                            const media = <Thumbnail\n                              source={item.productImage || \"\"}\n                              alt={item.productAlt}/>;\n                            const shortcutActions = [\n                              {\n                                content: \"Remove\",\n                                onAction: () => removeItemFromFormState(item.productVariantId),\n                              },\n                            ];\n                            return (\n                              <ResourceItem\n                                id={item.productId}\n                                url={item.productImage}\n                                media={media}\n                                shortcutActions={shortcutActions}\n                                persistActions\n                              >\n                                <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                  {item.productTitle}\n                                </Text>\n                                <div>{item.variantTitle}</div>\n                              </ResourceItem>\n                            );\n                          }}\n                        />\n                      ) : (isFirstButtonActive && EmptyProductSelected())\n\n                      }\n                    </Card>\n                  </Box>\n                )}\n                {showVolume2 && (\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h2\">\n                          Volume 2\n                        </Text>\n                        <TextField\n                          label=\"Minimum quantity\"\n                          autoComplete=\"on\"\n                          {...configuration.quantity2}\n                        />\n                        <ChoiceList\n                          title=\"Select discount type\"\n                          choices={[\n                            {label: 'Percentage', value: 'percentage'},\n                            choiceWithValueRenderChildren2, // S\u1EED d\u1EE5ng \u0111\u1ED1i t\u01B0\u1EE3ng Choice m\u1EDBi \u1EDF \u0111\u00E2y\n                          ]}\n                          selected={selectedVolume2}\n                          onChange={handleChangeVolume2}\n                        />\n                        {selectedVolume2.includes('percentage') && (\n                          <TextField\n                            label=\"Discount percentage\"\n                            autoComplete=\"on\"\n                            value={percentageDiscount2}\n                            onChange={handleDiscountPercentageChange2}\n                            suffix=\"%\"\n                          />\n                        )}\n                        {selectedVolume2.includes('Value') && (\n                          <TextField\n                            label=\"Discount value\"\n                            autoComplete=\"on\"\n                            value={amountDiscount2}\n                            onChange={handleDiscountAmountChange2}\n                            suffix=\"VND\"\n                          />\n                        )}\n                      </BlockStack>\n                      {isFirstButtonActive ? <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                          <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProduct2}>\n                            Click here to set product\n                          </Button>\n                        </div>\n                        : null}\n                      {isFirstButtonActive && formState2[0].productId ? (\n                        <ResourceList\n                          resourceName={{singular: 'customer', plural: 'customers'}}\n                          items={formState2}\n                          renderItem={(item) => {\n                            const media = <Thumbnail\n                              source={item.productImage || \"\"}\n                              alt={item.productAlt}/>;\n                            const shortcutActions = [\n                              {\n                                content: \"Remove\",\n                                onAction: () => removeItemFromFormState2(item.productVariantId),\n                              },\n                            ];\n                            return (\n                              <ResourceItem\n                                id={item.productId}\n                                url={item.productImage}\n                                media={media}\n                                shortcutActions={shortcutActions}\n                                persistActions\n                              >\n                                <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                  {item.productTitle}\n                                </Text>\n                                <div>{item.variantTitle}</div>\n                              </ResourceItem>\n                            );\n                          }}\n                        />\n                      ) : (isFirstButtonActive && EmptyProductSelected())\n                      }\n                    </Card>\n                  </Box>\n                )}\n\n                {showVolume3 && (\n                  <Box paddingBlockEnd=\"300\">\n                    <Card>\n                      <BlockStack>\n                        <Text variant=\"headingMd\" as=\"h2\">\n                          Volume 3\n                        </Text>\n                        <TextField\n                          label=\"Minimum quantity\"\n                          autoComplete=\"on\"\n                          {...configuration.quantity3}\n                        />\n                        <ChoiceList\n                          title=\"Select discount type\"\n                          choices={[\n                            {label: 'Percentage', value: 'percentage'},\n                            choiceWithValueRenderChildren3, // S\u1EED d\u1EE5ng \u0111\u1ED1i t\u01B0\u1EE3ng Choice m\u1EDBi \u1EDF \u0111\u00E2y\n                          ]}\n                          selected={selectedVolume3}\n                          onChange={handleChangeVolume3}\n                        />\n                        {selectedVolume3.includes('percentage') && (\n                          <TextField\n                            label=\"Discount percentage\"\n                            autoComplete=\"on\"\n                            value={percentageDiscount3}\n                            onChange={handleDiscountPercentageChange3}\n                            suffix=\"%\"\n                          />\n                        )}\n                        {selectedVolume3.includes('Value') && (\n                          <TextField\n                            label=\"Discount value\"\n                            autoComplete=\"on\"\n                            value={amountDiscount3}\n                            onChange={handleDiscountAmountChange3}\n                            suffix=\"VND\"\n                          />\n                        )}\n                      </BlockStack>\n                      {isFirstButtonActive ? <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                          <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProduct3}>\n                            Click here to set product\n                          </Button>\n                        </div>\n                        : null}\n                      {isFirstButtonActive && formState3[0].productId ? (\n                        <ResourceList\n                          resourceName={{singular: 'customer', plural: 'customers'}}\n                          items={formState3}\n                          renderItem={(item) => {\n                            const media = <Thumbnail\n                              source={item.productImage || \"\"}\n                              alt={item.productAlt}/>;\n                            const shortcutActions = [\n                              {\n                                content: \"Remove\",\n                                onAction: () => removeItemFromFormState3(item.productVariantId),\n                              },\n                            ];\n                            return (\n                              <ResourceItem\n                                id={item.productId}\n                                url={item.productImage}\n                                media={media}\n                                shortcutActions={shortcutActions}\n                                persistActions\n                              >\n                                <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                  {item.productTitle}\n                                </Text>\n                                <div>{item.variantTitle}</div>\n                              </ResourceItem>\n                            );\n                          }}\n                        />\n                      ) : (isFirstButtonActive && EmptyProductSelected())\n                      }\n                    </Card>\n                  </Box>\n                )}\n\n\n                {discountMethod.value === DiscountMethod.Code && ( // ki\u1EC3m tra xem discount l\u00E0 code hay auto\n                  <UsageLimitsCard\n                    // @ts-ignore\n                    totalUsageLimit={usageLimit}\n                    oncePerCustomer={appliesOncePerCustomer}\n                  />\n                )}\n\n                <CombinationCard\n                  combinableDiscountTypes={combinesWith}\n                  discountClass={DiscountClass.Product}\n                  discountDescriptor={\"Discount\"}\n                />\n                <ActiveDatesCard\n                  // @ts-ignore\n                  startDate={startDate} // Truy\u1EC1n gi\u00E1 tr\u1ECB startDate t\u1EEB tr\u1EA1ng th\u00E1i ho\u1EB7c props\n                  // @ts-ignore\n                  endDate={endDate}\n                  timezoneAbbreviation=\"GMT\"\n                />\n              </BlockStack>\n            </Form>\n          </Layout.Section>\n          <Layout.Section variant=\"oneThird\">\n            <SummaryCard // th\u00F4ng tin c\u01A1 b\u1EA3n v\u1EC1 tr\u1EA1ng th\u00E1i gi\u1EA3m gi\u00E1 v\u00E0 c\u00F3 th\u1EC3 hi\u1EC3n th\u1ECB c\u00E1c t\u00F9y ch\u1ECDn c\u1EA5u h\u00ECnh n\u00E2ng cao h\u01A1n\n              header={{\n                discountMethod: discountMethod.value,\n                discountDescriptor:\n                  discountMethod.value === DiscountMethod.Automatic\n                    ? discountTitle.value\n                    : discountCode.value,\n                appDiscountType: \"Discount\",\n                isEditing: false,\n              }}\n              performance={{\n                status: DiscountStatus.Scheduled,\n                usageCount: 0,\n              }}\n              minimumRequirements={{\n                requirementType: requirementType.value,\n                subtotal: requirementSubtotal.value,\n                quantity: requirementQuantity.value,\n                currencyCode: currencyCode,\n              }}\n              customerEligibility={{\n                eligibility: Eligibility.Everyone,\n              }}\n              usageLimits={{\n                oncePerCustomer: appliesOncePerCustomer.value,\n                totalUsageLimit: usageLimit.value,\n              }}\n              activeDates={{\n                // @ts-ignore\n                startDate: startDate.value,\n                endDate: endDate.value,\n              }}\n            />\n          </Layout.Section>\n          <Layout.Section>\n            <PageActions\n              primaryAction={{\n                content: \"Save discount\",\n                onAction: submit,\n                loading: isLoading,\n              }}\n              secondaryActions={[\n                {\n                  content: \"Discard\",\n                  onAction: () => navigate(\"../../app/discountList\")\n                  ,\n                },\n              ]}\n            />\n          </Layout.Section>\n        </Layout>\n\n        {toastMarkup}\n\n      </Page>\n    </Frame>\n  );\n}\n", "// @ts-ignore\nimport { gql } from \"@apollo/client\";\nexport const HELLO_QUERY = gql`\n    query hello {\n        hello\n    }\n`;\n\nexport const GET_ALL_DISCOUNT = gql`\n  query GetAllDiscount {\n    getAllDiscount {\n    title,\n    discountId,\n    code,\n    method,\n    startsAt,\n    endsAt,\n    status,\n    asyncUsageCount\n    }\n  }\n`;\nexport const GET_ALL_DISCOUNT_BY_X_GET_Y = gql`\n  query GetAllDiscountByXGetY {\n    getAllDiscountByXGetY {\n    title,\n    discountId,\n    code,\n    method,\n    startsAt,\n    endsAt,\n    status,\n    asyncUsageCount,\n       id,\n    }\n  }\n`;\nexport const GET_ONB_DISCOUNT_BY_X_GET_Y = gql`\n  query GetOneDiscountByXGetY($input : GetOneDiscountByXGetYInput) {\n    getOneDiscountByXGetY(input: $input) {\n    title,\n    id,\n    discountId,\n    code,\n    method,\n    combinesWith,\n    usageLimit,\n    appliesOncePerCustomer,\n    startsAt,\n    endsAt,\n    quantityPurchase,\n    amountPurchase,\n    quantityGet,\n    percentageGet,\n    productPurchase,\n    productPurchaseId,\n    productGet,\n    productGetId,\n\n    }\n  }\n`;\n\n\n\n", "// @ts-nocheck\nimport {\n  ActiveDatesCard,\n  CombinationCard,\n  DiscountClass,\n  DiscountMethod,\n  DiscountStatus,\n  Eligibility,\n  MethodCard,\n  RequirementType,\n  SummaryCard,\n  UsageLimitsCard,\n} from \"@shopify/discount-app-components\";\nimport {\n  BlockStack,\n  Box,\n  Button,\n  Card,\n  ChoiceList, Frame,\n  Layout, Page, PageActions, ResourceItem,\n  ResourceList,\n\n  Text,\n  TextField, Thumbnail, Toast\n} from \"@shopify/polaris\";\nimport {Form, useActionData, useLoaderData, useNavigate, useNavigation, useParams, useSubmit} from \"@remix-run/react\";\nimport {useField, useForm} from \"@shopify/react-form\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {CurrencyCode} from \"@shopify/react-i18n\";\nimport {GET_ONB_DISCOUNT_BY_X_GET_Y} from \"~/graphql/query\";\n// @ts-ignore\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {Function} from \"~/const/Function\";\nimport shopify, {authenticate} from \"~/shopify.server\";\nimport {json} from \"@remix-run/node\";\nimport {UPDATE_DISCOUNT_BY_X_GET_Y} from \"~/graphql/mutation\";\nimport axios from \"axios\";\nimport StoreModel from \"~/models/store.model\";\n\nconst EmptyProductSelected = () => (\n  <div style={{textAlign: \"center\", maxHeight: \"60vh\"}}>\n    <img style={{height: '60px', width: \"60px\"}}\n         src=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\" alt=\"test\"/>\n    <p style={{fontWeight: \"bold\"}}>There are no products selected</p>\n    <p>Please choose product for this By X Get Y discount</p>\n  </div>\n)\nexport const action = async ({request}) => {\n  const {admin} = await shopify.authenticate.admin(request);\n  const formData = await request.formData();\n  const {\n    title,\n    method,\n    code,\n    combinesWith,\n    usageLimit,\n    appliesOncePerCustomer,\n    startsAt,\n    endsAt,\n    productSpendId,\n    productGetId,\n    discountId,\n    configuration\n  } = JSON.parse(formData.get(\"discountForm\"));\n\n  let valueSpend\n  let valueGet\n  if(configuration.quantityPurchase>0)\n  {\n    valueSpend = {quantity: configuration.quantityPurchase }\n  }\n  else {\n    valueSpend = {amount:configuration.amountPurchase}\n  }\n  if(configuration.freeGet)\n  {\n    valueGet = {\n      discountOnQuantity :{\n        effect :{\n          percentage: 1.0\n        },\n        quantity:configuration.quantityGet,\n      },\n\n    }\n  }\n  else {\n    valueGet = {\n      discountOnQuantity :{\n        effect :{\n          percentage: configuration.percentageGet/100\n        },\n        quantity:configuration.quantityGet,\n      },\n\n    }\n  }\n  const baseDiscount = {\n    title,\n    combinesWith,\n    startsAt: new Date(startsAt),\n    endsAt: endsAt && new Date(endsAt),\n\n    customerBuys: {\n      items :{\n        all:false,\n        products :{\n          productVariantsToAdd :productSpendId\n        }\n      },\n      value :valueSpend\n    },\n    customerGets:{\n\n      items :{\n        all:false,\n        products :{\n          productVariantsToAdd :productGetId\n        }\n      },\n      value : valueGet\n    }\n\n  };\n\n  if (method === DiscountMethod.Code) { //\n    const baseCodeDiscount = {\n      ...baseDiscount,\n      title: code,\n      code,\n      usageLimit,\n      appliesOncePerCustomer,\n      customerSelection:{\n        all: true,\n      },\n    };\n    const response = await admin.graphql(\n      `\n      mutation discountCodeBxgyUpdate($bxgyCodeDiscount: DiscountCodeBxgyInput!, $id: ID!) {\n         discountCodeBxgyUpdate(bxgyCodeDiscount: $bxgyCodeDiscount, id: $id) {\n                   codeDiscountNode{\n                             codeDiscount{\n                                 ...on DiscountCodeBxgy{\n                                      __typename\n                                           title\n                                           status\n                                           startsAt\n                                           usageLimit\n                                           endsAt\n                                           appliesOncePerCustomer\n                                           combinesWith {\n                                             orderDiscounts\n                                             productDiscounts\n                                             shippingDiscounts\n                                            }\n                                           asyncUsageCount\n                                           codes(first: 10){\n                                           nodes{\n                                             code\n                                           }\n                                  }\n                             }\n                           }\n                     }\n         userErrors {\n           field\n           message\n          }\n         }\n      }\n        `,\n      {\n        variables: {\n          bxgyCodeDiscount: baseCodeDiscount,\n          id:discountId\n        },\n      }\n    );\n    const responseJson = await response.json();\n    const discountData = responseJson.data.discountCodeBxgyUpdate?.codeDiscountNode.codeDiscount\n    const errors = responseJson.data.discountCodeBxgyUpdate?.userErrors;\n    return json({errors,responseJson,discountData}); //tra ve neu co loi\n  } else {\n    const response = await admin.graphql(\n      `#graphql\n              mutation discountAutomaticBxgyUpdate($automaticBxgyDiscount: DiscountAutomaticBxgyInput!, $id: ID!) {\n                 discountAutomaticBxgyUpdate(automaticBxgyDiscount: $automaticBxgyDiscount, id: $id) {\n                 automaticDiscountNode {\n                          automaticDiscount {\n                        ... on DiscountAutomaticBxgy {\n                            __typename\n                            title\n                            status\n                            startsAt\n                            endsAt\n                            asyncUsageCount\n                            combinesWith {\n                                     orderDiscounts\n                                     productDiscounts\n                                     shippingDiscounts\n                                     }\n                        }\n                      }\n                   }\n                             userErrors {\n                             field\n                             message\n                             }\n                        }\n               }`,\n      {\n        variables: {\n          automaticBxgyDiscount: baseDiscount,\n          id :discountId\n\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const discountData = responseJson.data.discountAutomaticBxgyUpdate?.automaticDiscountNode.automaticDiscount\n    const errors = responseJson.data.discountAutomaticBxgyCreate?.userErrors;\n    return json({errors,responseJson,discountData});\n  }\n};\nexport async function loader({ request }) {\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\",\n    },\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    })\n\n  return json({\n    shop:shopData,\n  });\n}\nconst getId = function (/** @type {string} */ discountId) {\n  if (discountId) {\n    return discountId.split(\"/\").pop()\n  }\n\n}\nconst ByXGetYDiscount = () => {\n  const {\n    validateNumber,\n    validatePercentage\n  } = Function()\n  const {shop}= useLoaderData()\n  const {id}= useParams()\n  const submitForm = useSubmit();\n  const actionData = useActionData();\n  const [count, setCount] = useState(0)\n  const [check, setCheck] = useState(0)\n  const navigate = useNavigate()\n  const navigation = useNavigation();\n  const isLoading = navigation.state === \"submitting\";\n  const [quantityPurchase, setQuantityPurchase] = useState(\"\")\n  const [amountPurchase, setAmountPurchase] = useState(\"\")\n  const currencyCode = CurrencyCode.Cad;\n  const [selectedPurchase, setSelectedPurchase] = useState(['amount']);\n  const [selectedGet, setSelectedGet] = useState(['percentage']);\n  const [percentageGet, setPercentageGet] = useState(\"\")\n  const [quantityGet, setQuantityGet] = useState(\"\")\n  const [productSpend, setProductSpend] = useState([{}]);\n  const [productGet, setProductGet] = useState([{}]);\n  const [productSpendId, setProductSpendId] = useState([]);\n  const [productGetId, setProductGetId] = useState([]);\n  const [active, setActive] = useState(false);\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n  const [message,setMessage] = useState(\"\")\n  const {loading:loadingData ,data:oneDiscount}  =useQuery(GET_ONB_DISCOUNT_BY_X_GET_Y,{\n    variables:{\n      input:{\n        id:id,\n        storeId:shop.id,\n      }\n    }\n  });\n  useEffect(() => {\n    if(actionData?.discountData)\n    {\n        updateDiscount().then()\n        navigate(\"../../app/discountList\")\n\n    }\n  }, [actionData]);\n  const [update] = useMutation(UPDATE_DISCOUNT_BY_X_GET_Y);\n  const [discountUpdate,setDiscountUpdate]= useState()\n  const updateDiscount = async () => {\n    try {\n      const createPromise = await update({\n        variables: {\n          input: {\n            storeId:shop.id,\n            discountId: discountUpdate.discountId,\n            id: getId(discountUpdate.discountId),\n            title: actionData.discountData.title,\n            code: discountUpdate.method===DiscountMethod.Code ? discountUpdate.code : \"\",\n            method: discountUpdate.method,\n            combinesWith: JSON.stringify(discountUpdate.combinesWith),\n            usageLimit: discountUpdate.method===DiscountMethod.Code && discountUpdate.usageLimit !== null ? actionData.discountData.usageLimit.toString() : \"\",\n            status: actionData.discountData.status,\n            startsAt: discountUpdate.startsAt,\n            endsAt: discountUpdate.endsAt,\n            asyncUsageCount: actionData.discountData.asyncUsageCount.toString(),\n            appliesOncePerCustomer: discountUpdate.method===DiscountMethod.Code ? discountUpdate.appliesOncePerCustomer : false,\n            quantityPurchase: quantityPurchase,\n            amountPurchase: amountPurchase,\n            quantityGet:quantityGet,\n            percentageGet: selectedGet.includes('free') ===true ? \"100\":percentageGet,\n            productPurchase:JSON.stringify(productSpend),\n            productPurchaseId:JSON.stringify(productSpendId),\n            productGet:JSON.stringify(productGet),\n            productGetId:JSON.stringify(productGetId),\n          }\n        }\n      })\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n\n      await Promise.race([createPromise, timeoutPromise]);\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  const today = useMemo(() => new Date(), []); // fix\n  const [discountData,setDiscountData] = useState({})\n  useEffect(() => {\n    console.log(oneDiscount)\n    if(!loadingData){\n      if (oneDiscount)\n      {\n        setProductSpend(JSON.parse(oneDiscount.getOneDiscountByXGetY.productPurchase))\n        setProductSpendId(JSON.parse(oneDiscount.getOneDiscountByXGetY.productPurchaseId))\n        setProductGetId(JSON.parse(oneDiscount.getOneDiscountByXGetY.productGetId))\n        setProductGet(JSON.parse(oneDiscount.getOneDiscountByXGetY.productGet))\n        console.log(oneDiscount)\n        setDiscountData({\n          title:oneDiscount.getOneDiscountByXGetY.title,\n          code:oneDiscount.getOneDiscountByXGetY.code,\n          method:oneDiscount.getOneDiscountByXGetY.method,\n          combinesWith:JSON.parse(oneDiscount.getOneDiscountByXGetY.combinesWith),\n          discountId: oneDiscount.getOneDiscountByXGetY.discountId,\n          endsAt:oneDiscount.getOneDiscountByXGetY.endsAt,\n          percentageGet:oneDiscount.getOneDiscountByXGetY.percentageGet,\n          quantityGet:oneDiscount.getOneDiscountByXGetY.quantityGet,\n          quantityPurchase:oneDiscount.getOneDiscountByXGetY.quantityPurchase,\n          startsAt:oneDiscount.getOneDiscountByXGetY.startsAt,\n          usageLimit:oneDiscount.getOneDiscountByXGetY.usageLimit,\n          amountPurchase:oneDiscount.getOneDiscountByXGetY.amountPurchase,\n          appliesOncePerCustomer:oneDiscount.getOneDiscountByXGetY.appliesOncePerCustomer,\n          productGet:JSON.parse(oneDiscount.getOneDiscountByXGetY.productGet),\n          productGetId:JSON.parse(oneDiscount.getOneDiscountByXGetY.productGetId),\n          productPurchase:JSON.parse(oneDiscount.getOneDiscountByXGetY.productPurchase),\n          productPurchaseId:JSON.parse(oneDiscount.getOneDiscountByXGetY.productPurchaseId),\n        })\n      }\n    }\n  }, [loadingData, oneDiscount, id]);\n\n  useEffect(() => {\n    setPercentageGet(discountData?.percentageGet)\n    setQuantityGet(discountData?.quantityGet)\n    setQuantityPurchase(discountData?.quantityPurchase)\n    setAmountPurchase(discountData?.amountPurchase)\n    if(parseInt(discountData?.quantityPurchase)>0)\n    {\n      setSelectedPurchase(['quantity'])\n    }\n    else{\n      setSelectedPurchase(['amount'])\n    }\n\n  }, [discountData]);\n  useEffect(() => {\n    if(percentageGet ===\"100\")\n    {\n      setSelectedGet(['free'])\n      setPercentageGet(\"\")\n    }\n  }, [percentageGet]);\n  useEffect(() => {\n    if (selectedPurchase.includes('quantity')) {\n      if(parseInt(discountData?.quantityPurchase)>0)\n      {\n        setQuantityPurchase(discountData?.quantityPurchase)\n      }\n      else {\n        setQuantityPurchase(\"\")\n      }\n      setAmountPurchase(\"\")\n    } else {\n      if(parseInt(discountData?.amountPurchase)>0)\n      {\n        setAmountPurchase(discountData?.amountPurchase)\n      }\n      else {\n        setAmountPurchase(\"\")\n\n      }\n      setQuantityPurchase(\"\")\n    }\n  }, [selectedPurchase,discountData]);\n\n  useEffect(() => {\n    console.log(\"product Spend:\",productSpend)\n    console.log(\"Product Spend id \",productSpendId)\n\n  }, [productSpend]);\n  useEffect(() => {\n    if(count===1)\n    {\n      if(check===1)\n      {\n        setMessage('Discount code cannot be empty')\n        setActive(true)\n      }\n      else if(check===2)\n      {\n        setMessage('Invalid Minimum  purchase quantity')\n        setActive(true)\n\n      }\n      else if(check===3)\n      {\n        setMessage('Invalid Minimum purchase amount')\n        setActive(true)\n\n      }\n      else if(check===4)\n      {\n        setMessage('Invalid Minimum quantity get')\n        setActive(true)\n\n      }\n      else if(check===5)\n      {\n        setMessage('Invalid Minimum Percentage get')\n        setActive(true)\n\n      }\n      else if(check===6)\n      {\n        setMessage('Product Spend can not be empty')\n        setActive(true)\n\n      }\n      else if(check===7)\n      {\n        setMessage('Product Get can not be empty')\n        setActive(true)\n\n      }\n      else if(check===8){\n        setMessage('Discount Create Success')\n        setActive(true)\n      }\n      else if (check === 15) {\n        setMessage('Discount cannot be duplicated')\n        setActive(true)\n\n      }\n      setCount(0); // Reset count sau khi hi\u1EC3n th\u1ECB th\u00F4ng b\u00E1o\n\n    }\n\n  }, [count,check]);\n\n  const handleChangePurchase = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedPurchase(value)\n  }\n  const handleChangeGet = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedGet(value)\n  }\n  const handleChangePurchaseQuantity = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setQuantityPurchase(newValue);\n    },\n    [],);\n\n  const handleChangePurchaseAmount = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountPurchase(newValue);\n    },\n    [],);\n  const handleChangeGetQuantity = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setQuantityGet(newValue);\n    },\n    [],);\n  const handleChangeGetPercentage = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageGet(newValue);\n    },\n    [],);\n\n  const removeItemFromProductSpend = (/** @type {any} */ productVariantId) => {\n    const updatedProductSpend = productSpend.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setProductSpend(updatedProductSpend.length > 0 ? updatedProductSpend : [{}]);\n\n    /**\n     * @type {string | any[] | ((prevState: never[]) => never[])}\n     */\n    const updatedProductSpendId = productSpendId.filter(\n      (item) => item !== productVariantId\n    );\n    // @ts-ignore\n    setProductSpendId(updatedProductSpendId.length > 0 ? updatedProductSpendId : []);\n  };\n  const removeItemFromProductGet = (/** @type {any} */ productVariantId) => {\n    const updatedProductGet = productGet.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setProductGet(updatedProductGet.length > 0 ? updatedProductGet : [{}]);\n    /**\n     * @type {string | any[] | ((prevState: never[]) => never[])}\n     */\n    const updatedProductGetId = productGetId.filter(\n      (item) => item !== productVariantId\n    );\n    // @ts-ignore\n    setProductGetId(updatedProductGetId.length > 0 ? updatedProductGetId : []);\n  };\n\n  async function selectProductSpend() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 1,\n    });\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      setProductSpend(flattenedVariants);\n      const selectedVariantIds = products.map(product => {\n        return product.variants.map(variant => variant.id);\n      }).flat();\n      // @ts-ignore\n      setProductSpendId( [...selectedVariantIds]);\n    }\n  }\n\n  async function selectProductGet() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      setProductGet(flattenedVariants);\n\n      const selectedVariantIds = products.map(product => {\n        return product.variants.map(variant => variant.id);\n      }).flat();\n      // @ts-ignore\n      setProductGetId([...selectedVariantIds]);\n    }\n  }\n\n  const {\n    // \u0110\u1ECBnh ngh\u0129a c\u00E1c tr\u01B0\u1EDDng nh\u1EADp li\u1EC7u v\u00E0 gi\u00E1 tr\u1ECB kh\u1EDFi t\u1EA1o c\u1EE7a ch\u00FAng\n    fields: {\n      discountTitle,\n      discountCode,\n      discountMethod,\n      combinesWith,\n      requirementType,\n      requirementSubtotal,\n      requirementQuantity,\n      usageLimit,\n      appliesOncePerCustomer,\n      startDate,\n      endDate,\n    },\n    submit,\n  } = useForm({\n    fields: {\n      discountTitle: useField(discountData.title ? discountData.title: \"\"),\n      discountMethod: useField(discountData.method !== 'Automatic' ? DiscountMethod.Code : DiscountMethod.Automatic),\n      discountCode: useField(discountData?.code || \"\"),\n      combinesWith: useField({\n        orderDiscounts: discountData.combinesWith?.orderDiscounts || false,\n        productDiscounts: discountData.combinesWith?.productDiscounts || false,\n        shippingDiscounts: discountData.combinesWith?.shippingDiscounts || false,\n      }),\n      requirementType: useField(RequirementType.None),\n      requirementSubtotal: useField(\"0\"),\n      requirementQuantity: useField(\"0\"),\n      usageLimit: useField(null),\n      appliesOncePerCustomer: useField(discountData.appliesOncePerCustomer),\n      startDate: useField(discountData?.startsAt || today),\n      endDate: useField(discountData?.endsAt === \"\"? null : discountData?.endsAt ),\n      configuration: {\n        quantityPurchase: useField(\"\"),\n        amountPurchase: useField(\"\"),\n      },\n\n    },\n    onSubmit: async (form) => {\n      setCount(1)\n      let discount;\n      discount = {\n        title: form.discountMethod !== DiscountMethod.Code ? form.discountTitle : \"\",\n        method: form.discountMethod,\n        code: form.discountMethod === DiscountMethod.Code ? form.discountCode : \"\",\n        combinesWith: form.combinesWith,\n        usageLimit: form.usageLimit == null ? null : parseInt(form.usageLimit),\n        appliesOncePerCustomer: form.appliesOncePerCustomer,\n        startsAt: form.startDate,\n        endsAt: form.endDate,\n        configuration: {\n          quantityPurchase: quantityPurchase,\n          amountPurchase: amountPurchase,\n          quantityGet: quantityGet,\n          percentageGet:percentageGet,\n          freeGet : selectedGet.includes('free')\n        },\n        discountId:oneDiscount.getOneDiscountByXGetY.discountId,\n        productSpend:productSpend,\n        productSpendId:productSpendId,\n        productGet:productGet,\n        productGetId:productGetId\n      };\n      if (discount.code === '' && discount.title === '') {\n        setCheck(1)\n      }\n      else if(validateNumber(parseInt(quantityPurchase)) === 1 && selectedPurchase.includes('quantity'))\n      {\n        setCheck(2)\n      }\n      else if(validateNumber(discount.configuration.amountPurchase) === 1 && selectedPurchase.includes('amount') )\n      {\n        setCheck(3)\n      }\n      else if(validateNumber(parseInt(quantityGet)) === 1)\n      {\n        setCheck(4)\n      }\n      else if(validatePercentage(discount.configuration.percentageGet) === 1 && selectedGet.includes('percentage'))\n      {\n        setCheck(5)\n      }\n      else if(!productSpend[0].productVariantId )\n      {\n        setCheck(6)\n      }\n      else if(!productGet[0].productVariantId )\n      {\n        setCheck(7)\n      }\n      else {\n        setCheck(8)\n        setDiscountUpdate(discount)\n        submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n      }\n\n      console.log(discount)\n      return {status: \"success\"};\n    },\n  });\n  const toastMarkup = active ? (\n    <Toast content={message} onDismiss={toggleActive} error={check !== 8} />\n  ) : null;\n  return (\n    <>\n      <Frame>\n      <Page\n        title=\"Create By X get Y discount\"\n        backAction={{\n          content: \"Return\",\n          onAction: () => navigate(\"../../app/discountList\")\n          ,\n        }}\n        primaryAction={{\n          content: \"Save\",\n          onAction: submit,\n          loading: isLoading,\n        }}\n      >\n        <Layout>\n          <Layout.Section>\n            <Form method=\"post\">\n              <BlockStack align=\"space-around\" gap=\"200\">\n                <MethodCard\n                  title=\"By X get Y\"\n                  discountTitle={discountTitle}\n                  discountClass={DiscountClass.Product}\n                  discountCode={discountCode}\n                  discountMethod={discountMethod}\n                />\n                <Box paddingBlockEnd=\"300\">\n                  <Card>\n                    <BlockStack>\n                      <div style={{marginBottom: \"15px\"}}>\n                        <Text variant=\"headingMd\" as=\"h1\">\n                          Customer spends\n                        </Text>\n                      </div>\n                      <div style={{marginBottom: \"10px\"}}>\n                        <Text variant=\"headingMd\" as=\"h3\">\n                          Purchase type\n                        </Text>\n                      </div>\n                      <ChoiceList\n                        title=\"Select Purchase type for By X get Y Discount\"\n                        choices={[\n                          {label: 'Minimum quantity of items', value: 'quantity'},\n                          {label: 'Minimum purchase amount', value: 'amount'},\n                        ]}\n                        selected={selectedPurchase}\n                        onChange={handleChangePurchase}\n                      />\n                      {selectedPurchase.includes('quantity') && (\n                        <TextField\n                          label=\"Quantity\"\n                          autoComplete=\"on\"\n                          value={quantityPurchase}\n                          onChange={handleChangePurchaseQuantity}\n                          suffix=\"\"\n                        />\n                      )}\n                      {selectedPurchase.includes('amount') && (\n                        <TextField\n                          label=\"Amount\"\n                          autoComplete=\"on\"\n                          value={amountPurchase}\n                          onChange={handleChangePurchaseAmount}\n                          suffix=\"VND\"\n                        />\n                      )}\n                      <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                        <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProductSpend}>\n                          Click here to set product Customer must spend\n                        </Button>\n                      </div>\n                      {!productSpend[0].productVariantId ? (\n                          EmptyProductSelected()\n                        ) :\n                        (\n                          <ResourceList\n                            resourceName={{singular: 'customer', plural: 'customers'}}\n                            items={productSpend}\n                            renderItem={(item) => {\n                              const media = <Thumbnail\n                                source={item.productImage || \"\"}\n                                alt={item.productAlt}/>;\n                              const shortcutActions = [\n                                {\n                                  content: \"Remove\",\n                                  onAction: () => removeItemFromProductSpend(item.productVariantId),\n                                },\n                              ];\n                              return (\n                                <ResourceItem\n                                  id={item.productId}\n                                  url={item.productImage}\n                                  media={media}\n                                  shortcutActions={shortcutActions}\n                                  persistActions\n                                >\n                                  <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                    {item.productTitle}\n                                  </Text>\n                                  <div>{item.variantTitle}</div>\n                                </ResourceItem>\n                              );\n                            }}\n                          />\n                        )\n                      }\n                    </BlockStack>\n                  </Card>\n                </Box>\n                <Box paddingBlockEnd=\"300\">\n                  <Card>\n                    <BlockStack>\n                      <div style={{marginBottom: \"15px\"}}>\n                        <Text variant=\"headingMd\" as=\"h1\">\n                          Customer gets\n                        </Text>\n                      </div>\n                      <div style={{marginBottom: \"10px\"}}>\n                        <Text as=\"p\" tone=\"subdued\">\n                          Customers must add the quantity of items specified below to their cart.\n                        </Text>\n                      </div>\n                      <div style={{marginBottom: \"10px\"}}>\n                        <TextField\n                          label=\"Quantity\"\n                          autoComplete=\"on\"\n                          value={quantityGet}\n                          onChange={handleChangeGetQuantity}\n                          suffix=\"\"\n                        />\n                      </div>\n                      <ChoiceList\n                        title=\"At a discounted value\"\n                        choices={[\n                          {label: 'Percentage', value: 'percentage'},\n                          {label: 'Free', value: 'free'},\n                        ]}\n                        selected={selectedGet}\n                        onChange={handleChangeGet}\n                      />\n                      {selectedGet.includes('percentage') && (\n                        <TextField\n                          label=\"Percentage\"\n                          autoComplete=\"on\"\n                          value={percentageGet}\n                          onChange={handleChangeGetPercentage}\n                          suffix=\"\"\n                        />\n                      )}\n\n                      <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                        <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProductGet}>\n                          Click here to set product Customer can get\n                        </Button>\n                      </div>\n                      {!productGet[0].productVariantId ? (\n                          EmptyProductSelected()\n                        ) :\n                        (\n                          <ResourceList\n                            resourceName={{singular: 'customer', plural: 'customers'}}\n                            items={productGet}\n                            renderItem={(item) => {\n                              const media = <Thumbnail\n                                source={item.productImage || \"\"}\n                                alt={item.productAlt}/>;\n                              const shortcutActions = [\n                                {\n                                  content: \"Remove\",\n                                  onAction: () => removeItemFromProductGet(item.productVariantId),\n                                },\n                              ];\n                              return (\n                                <ResourceItem\n                                  id={item.productId}\n                                  url={item.productImage}\n                                  media={media}\n                                  shortcutActions={shortcutActions}\n                                  persistActions\n                                >\n                                  <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                    {item.productTitle}\n                                  </Text>\n                                  <div>{item.variantTitle}</div>\n                                </ResourceItem>\n                              );\n                            }}\n                          />\n                        )\n                      }\n                    </BlockStack>\n                  </Card>\n                </Box>\n                {discountMethod.value === DiscountMethod.Code && ( // ki\u1EC3m tra xem discount l\u00E0 code hay auto\n                  <UsageLimitsCard\n                    // @ts-ignore\n                    totalUsageLimit={usageLimit}\n                    oncePerCustomer={appliesOncePerCustomer}\n                  />\n                )}\n\n                <CombinationCard\n                  combinableDiscountTypes={combinesWith}\n                  discountClass={DiscountClass.Product}\n                  discountDescriptor={\"Discount\"}\n                />\n                <ActiveDatesCard\n                  // @ts-ignore\n                  startDate={startDate} // Truy\u1EC1n gi\u00E1 tr\u1ECB startDate t\u1EEB tr\u1EA1ng th\u00E1i ho\u1EB7c props\n                  // @ts-ignore\n                  endDate={endDate}\n                  timezoneAbbreviation=\"GMT+7\"\n                />\n              </BlockStack>\n            </Form>\n          </Layout.Section>\n          <Layout.Section variant=\"oneThird\">\n            <SummaryCard // th\u00F4ng tin c\u01A1 b\u1EA3n v\u1EC1 tr\u1EA1ng th\u00E1i gi\u1EA3m gi\u00E1 v\u00E0 c\u00F3 th\u1EC3 hi\u1EC3n th\u1ECB c\u00E1c t\u00F9y ch\u1ECDn c\u1EA5u h\u00ECnh n\u00E2ng cao h\u01A1n\n              header={{\n                discountMethod: discountMethod.value,\n                discountDescriptor:\n                  discountMethod.value === DiscountMethod.Automatic\n                    ? discountTitle.value\n                    : discountCode.value,\n                appDiscountType: \"By X Get Y\",\n                isEditing: false,\n              }}\n              performance={{\n                status: DiscountStatus.Scheduled,\n                usageCount: 0,\n              }}\n              minimumRequirements={{\n                requirementType: requirementType.value,\n                subtotal: requirementSubtotal.value,\n                quantity: requirementQuantity.value,\n                currencyCode: currencyCode,\n              }}\n              customerEligibility={{\n                eligibility: Eligibility.Everyone,\n\n              }}\n              usageLimits={{\n                oncePerCustomer: appliesOncePerCustomer.value,\n                totalUsageLimit: usageLimit.value,\n              }}\n              activeDates={{\n                // @ts-ignore\n                startDate: startDate.value,\n                endDate: endDate.value,\n              }}\n            />\n          </Layout.Section>\n          <Layout.Section>\n            <PageActions\n              primaryAction={{\n                content: \"Save discount\",\n                onAction: submit,\n                loading: isLoading,\n              }}\n              secondaryActions={[\n                {\n                  content: \"Quit\",\n                  onAction: () => navigate(\"../../app/discountList\")\n                  ,\n                },\n              ]}\n            />\n          </Layout.Section>\n        </Layout>\n        {toastMarkup}\n      </Page>\n    </Frame>\n    </>\n  )\n}\nexport default ByXGetYDiscount\n", "import {\n  ActiveDatesCard,\n  CombinationCard,\n  DiscountClass,\n  DiscountMethod,\n  DiscountStatus,\n  Eligibility,\n  MethodCard,\n  RequirementType,\n  SummaryCard,\n  UsageLimitsCard,\n} from \"@shopify/discount-app-components\";\nimport {\n  BlockStack,\n  Box,\n  Button,\n  Card,\n  ChoiceList,\n  Layout, Page, PageActions, ResourceItem,\n  ResourceList,\n  Frame,\n  Text,\n  TextField, Thumbnail, Toast\n} from \"@shopify/polaris\";\nimport {Form, useActionData, useLoaderData, useNavigate, useNavigation, useSubmit} from \"@remix-run/react\";\nimport {useField, useForm} from \"@shopify/react-form\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {CurrencyCode} from \"@shopify/react-i18n\";\nimport shopify, {authenticate} from \"~/shopify.server\";\nimport {json} from \"@remix-run/node\";\nimport {Function} from \"~/const/Function\";\nimport {CREATE_DISCOUNT_BY_X_GET_Y} from \"~/graphql/mutation\";\n// @ts-ignore\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_ALL_DISCOUNT_BY_X_GET_Y} from \"~/graphql/query\";\nimport axios from \"axios\";\nimport StoreModel from \"~/models/store.model\";\n\nconst EmptyProductSelected = () => (\n  <div style={{textAlign: \"center\", maxHeight: \"60vh\"}}>\n    <img style={{height: '60px', width: \"60px\"}}\n         src=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\" alt=\"test\"/>\n    <p style={{fontWeight: \"bold\"}}>There are no products selected</p>\n    <p>Please choose product for this By X Get Y discount</p>\n  </div>\n)\n\nexport const action = async ({request}) => {\n  const {admin} = await shopify.authenticate.admin(request);\n  const formData = await request.formData();\n  const {\n    title,\n    method,\n    code,\n    combinesWith,\n    usageLimit,\n    appliesOncePerCustomer,\n    startsAt,\n    endsAt,\n    productSpendId,\n    productGetId,\n    configuration\n  } = JSON.parse(formData.get(\"discountForm\"));\n\n  let valueSpend\n  let valueGet\n  if(configuration.quantityPurchase>0)\n  {\n    valueSpend = {quantity: configuration.quantityPurchase }\n  }\n  else {\n    valueSpend = {amount:configuration.amountPurchase}\n  }\n  if(configuration.freeGet)\n  {\n    valueGet = {\n      discountOnQuantity :{\n        effect :{\n          percentage: 1.0\n        },\n        quantity:configuration.quantityGet,\n      },\n\n    }\n  }\n  else {\n    valueGet = {\n      discountOnQuantity :{\n        effect :{\n          percentage: configuration.percentageGet/100\n        },\n        quantity:configuration.quantityGet,\n      },\n\n    }\n  }\n  const baseDiscount = {\n    title,\n    combinesWith,\n    startsAt: new Date(startsAt),\n    endsAt: endsAt && new Date(endsAt),\n\n    customerBuys: {\n      items :{\n        all:false,\n        products :{\n          productVariantsToAdd :productSpendId\n        }\n      },\n      value :valueSpend\n    },\n    customerGets:{\n\n      items :{\n        all:false,\n        products :{\n          productVariantsToAdd :productGetId\n        }\n      },\n      value : valueGet\n    }\n\n  };\n\n  if (method === DiscountMethod.Code) { //\n    const baseCodeDiscount = {\n      ...baseDiscount,\n      title: code,\n      code,\n      usageLimit,\n      appliesOncePerCustomer,\n      customerSelection:{\n        all: true,\n      },\n    };\n    const response = await admin.graphql(\n      `\n      mutation discountCodeBxgyCreate($bxgyCodeDiscount: DiscountCodeBxgyInput!) {\n                 discountCodeBxgyCreate(bxgyCodeDiscount: $bxgyCodeDiscount) {\n                             codeDiscountNode{\n                                id\n                             codeDiscount{\n                                 ...on DiscountCodeBxgy{\n                                      __typename\n                                           title\n                                           status\n                                           startsAt\n                                           usageLimit\n                                           endsAt\n                                           appliesOncePerCustomer\n                                           combinesWith {\n                                             orderDiscounts\n                                             productDiscounts\n                                             shippingDiscounts\n                                            }\n                                           asyncUsageCount\n                                           codes(first: 10){\n                                           nodes{\n                                             code\n                                           }\n                                  }\n                             }\n                           }\n                }\n    userErrors {\n      field\n      message\n    }\n  }\n}\n             `,\n      {\n        variables: {\n          bxgyCodeDiscount: baseCodeDiscount\n        },\n      }\n    );\n    const responseJson = await response.json();\n    const errors = responseJson.data.discountCodeBxgyCreate?.userErrors;\n    const discountData = responseJson.data.discountCodeBxgyCreate?.codeDiscountNode\n    return json({errors,responseJson,discountData}); //tra ve neu co loi\n  } else {\n    const response = await admin.graphql(\n      `#graphql\n              mutation discountAutomaticBxgyCreate($automaticBxgyDiscount: DiscountAutomaticBxgyInput!) {\n                     discountAutomaticBxgyCreate(automaticBxgyDiscount: $automaticBxgyDiscount) {\n                      automaticDiscountNode {\n                             id\n                          automaticDiscount {\n                        ... on DiscountAutomaticBxgy {\n                            __typename\n                            title\n                            status\n                            startsAt\n                            endsAt\n                            asyncUsageCount\n                            combinesWith {\n                                     orderDiscounts\n                                     productDiscounts\n                                     shippingDiscounts\n                                     }\n                        }\n                      }\n                   }\n                    userErrors {\n                        field\n                        message\n                     }\n             }\n       }`,\n      {\n        variables: {\n          automaticBxgyDiscount: baseDiscount\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const errors = responseJson.data.discountAutomaticBxgyCreate?.userErrors;\n    const automaticDiscountData = responseJson.data.discountAutomaticBxgyCreate?.automaticDiscountNode\n    return json({errors,responseJson,automaticDiscountData});\n  }\n};\nexport async function loader({ request }) {\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\",\n    },\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    })\n\n  return json({\n    shop:shopData,\n\n  });\n}\nconst getId = function (/** @type {string} */ discountId) {\n  if (discountId) {\n    return discountId.split(\"/\").pop()\n  }\n\n}\nconst ByXGetYDiscount = () => {\n  const {\n    validateNumber,\n    validatePercentage\n  } = Function()\n  const today = useMemo(() => new Date(), []); // fix\n  const [count, setCount] = useState(0)\n  const [check, setCheck] = useState(0)\n  const {shop}= useLoaderData()\n  const navigate = useNavigate()\n  const navigation = useNavigation();\n  const actionData = useActionData();\n  const [active, setActive] = useState(false);\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\n  const [message,setMessage] = useState(\"\")\n\n  const isLoading = navigation.state === \"submitting\";\n  const [quantityPurchase, setQuantityPurchase] = useState(\"\")\n  const [amountPurchase, setAmountPurchase] = useState(\"\")\n  const currencyCode = CurrencyCode.Cad;\n  const [selectedPurchase, setSelectedPurchase] = useState(['quantity']);\n  const [selectedGet, setSelectedGet] = useState(['percentage']);\n  const [percentageGet, setPercentageGet] = useState(\"\")\n  const [amountGet, setAmountGet] = useState(\"\")\n  const [quantityGet, setQuantityGet] = useState(\"\")\n  const submitForm = useSubmit();\n\n  const [productSpendId, setProductSpendId] = useState([]);\n  const [productGetId, setProductGetId] = useState([]);\n\n  const [productSpend, setProductSpend] = useState([{}]);\n  const [productGet, setProductGet] = useState([{}]);\n\n  const [createDiscount] = useMutation(CREATE_DISCOUNT_BY_X_GET_Y);\n  const {loading: byXGetYLoading, data: byXGetYDiscountsData} = useQuery(GET_ALL_DISCOUNT_BY_X_GET_Y)\n\n  const addDiscountCode = async () => {\n    try {\n      const createPromise = await createDiscount({\n        variables: {\n          input: {\n            storeId:shop.id,\n            id: getId(actionData.discountData.id),\n            discountId: actionData.discountData.id,\n            title: actionData.discountData.codeDiscount.title,\n            code: actionData.discountData.codeDiscount.__typename === \"DiscountCodeBxgy\" ? actionData.discountData.codeDiscount.codes.nodes[0]?.code ?? \"\" : \"\",\n            method: actionData.discountData.codeDiscount.__typename === \"DiscountCodeBxgy\" ? DiscountMethod.Code : DiscountMethod.Automatic,\n            combinesWith: JSON.stringify(actionData.discountData.codeDiscount.combinesWith),\n            usageLimit: actionData.discountData.codeDiscount.__typename === \"DiscountCodeBxgy\" && actionData.discountData.codeDiscount.usageLimit !== null ? actionData.discountData.codeDiscount.usageLimit.toString() : \"\",\n            status: actionData.discountData.codeDiscount.status,\n            startsAt: actionData.discountData.codeDiscount.startsAt,\n            endsAt: actionData.discountData.codeDiscount.endsAt,\n            asyncUsageCount: actionData.discountData.codeDiscount.asyncUsageCount.toString(),\n            appliesOncePerCustomer: actionData.discountData.codeDiscount.__typename === \"DiscountCodeBxgy\" ? actionData.discountData.codeDiscount.appliesOncePerCustomer : false,\n            quantityPurchase: quantityPurchase,\n            amountPurchase: amountPurchase,\n            quantityGet:quantityGet,\n            percentageGet: selectedGet.includes('free') ===true ? \"100\":percentageGet,\n            productPurchase:JSON.stringify(productSpend),\n            productPurchaseId:JSON.stringify(productSpendId),\n            productGet:JSON.stringify(productGet),\n            productGetId:JSON.stringify(productGetId),\n          }\n        }\n      })\n\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n\n      await Promise.race([createPromise, timeoutPromise]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  const addDiscountAutomatic = async () => {\n    try {\n      const createPromise = await createDiscount({\n        variables: {\n          input: {\n            storeId:shop.id,\n            id: getId(actionData.automaticDiscountData.id),\n            discountId: actionData.automaticDiscountData.id,\n            title: actionData.automaticDiscountData.automaticDiscount.title,\n            code: actionData.automaticDiscountData.automaticDiscount.__typename === \"DiscountCodeBxgy\" ? actionData.automaticDiscountData.automaticDiscount.codes.nodes[0]?.code ?? \"\" : \"\",\n            method: actionData.automaticDiscountData.automaticDiscount.__typename === \"DiscountCodeBxgy\" ? DiscountMethod.Code : DiscountMethod.Automatic,\n            combinesWith: JSON.stringify(actionData.automaticDiscountData.automaticDiscount.combinesWith),\n            usageLimit: actionData.automaticDiscountData.automaticDiscount.__typename === \"DiscountCodeBxgy\" && actionData.automaticDiscountData.automaticDiscount.usageLimit !== null ? actionData.automaticDiscountData.automaticDiscount.usageLimit.toString() : \"\",\n            status: actionData.automaticDiscountData.automaticDiscount.status,\n            startsAt: actionData.automaticDiscountData.automaticDiscount.startsAt,\n            endsAt: actionData.automaticDiscountData.automaticDiscount.endsAt,\n            asyncUsageCount: actionData.automaticDiscountData.automaticDiscount.asyncUsageCount.toString(),\n            appliesOncePerCustomer: actionData.automaticDiscountData.automaticDiscount.__typename === \"DiscountCodeBxgy\" ? actionData.automaticDiscountData.automaticDiscount.appliesOncePerCustomer : false,\n            quantityPurchase: quantityPurchase,\n            amountPurchase: amountPurchase,\n            quantityGet:quantityGet,\n            percentageGet: percentageGet,\n            productPurchase:JSON.stringify(productSpend),\n            productPurchaseId:JSON.stringify(productSpendId),\n            productGet:JSON.stringify(productGet),\n            productGetId:JSON.stringify(productGetId),\n          }\n        }\n      })\n\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n\n      await Promise.race([createPromise, timeoutPromise]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  useEffect(() => {\n\n    if(actionData?.errors.length === 0)\n    {\n      console.log(actionData?.responseJson)\n      if(actionData.discountData)\n      {\n        console.log(\"code\")\n        addDiscountCode().then(() => {\n          // Add your modifications here\n          console.log(actionData?.discountData);\n          navigate(\"../../app/discountList\");\n        }).catch(error => {\n          console.error('Error:', error);\n          // Handle error if needed\n        });\n      }\n      else if (actionData.automaticDiscountData)\n      {\n        addDiscountAutomatic().then(() => {\n          // Add your modifications here\n          console.log(\"automatic\");\n          console.log(actionData?.automaticDiscountData);\n          navigate(\"../../app/discountList\");\n        }).catch(error => {\n          console.error('Error:', error);\n          // Handle error if needed\n        });\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actionData]);\n  useEffect(() => {\n    console.log(productSpend)\n  }, [productSpend]);\n  useEffect(() => {\n    if (selectedPurchase.includes('quantity')) {\n      setAmountPurchase(\"\")\n    } else {\n      setQuantityPurchase(\"\")\n    }\n  }, [selectedPurchase]);\n  useEffect(() => {\n    if (selectedGet.includes('percentage')) {\n      setAmountGet(\"\")\n    }\n    else  if (selectedGet.includes('amount')) {\n      setPercentageGet(\"\")\n    }\n    else {\n      setPercentageGet(\"\")\n      setAmountGet(\"\")\n    }\n  }, [selectedGet]);\n  useEffect(() => {\n    if(count===1)\n    {\n      if(check===1)\n      {\n        setMessage('Discount code cannot be empty')\n        setActive(true)\n      }\n      else if(check===2)\n      {\n        setMessage('Invalid Minimum  purchase quantity')\n        setActive(true)\n\n      }\n      else if(check===3)\n      {\n        setMessage('Invalid Minimum purchase amount')\n        setActive(true)\n\n      }\n      else if(check===4)\n      {\n        setMessage('Invalid Minimum quantity get')\n        setActive(true)\n\n      }\n      else if(check===5)\n      {\n        setMessage('Invalid Minimum Percentage get')\n        setActive(true)\n\n      }\n      else if(check===6)\n      {\n        setMessage('Product Spend can not be empty')\n        setActive(true)\n\n      }\n      else if(check===7)\n      {\n        setMessage('Product Get can not be empty')\n        setActive(true)\n\n      }\n      else if(check===8){\n        setMessage('Discount Create Success')\n        setActive(true)\n      }\n      else if (check === 15) {\n        setMessage('Discount cannot be duplicated')\n        setActive(true)\n\n      }\n      setCount(0); // Reset count sau khi hi\u1EC3n th\u1ECB th\u00F4ng b\u00E1o\n\n    }\n\n  }, [count,check]);\n\n\n  const handleChangePurchase = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedPurchase(value)\n  }\n  const handleChangeGet = (/** @type {React.SetStateAction<string[]>} */ value) => {\n    setSelectedGet(value)\n  }\n  const handleChangePurchaseQuantity = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setQuantityPurchase(newValue);\n    },\n    [],);\n\n  const handleChangePurchaseAmount = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountPurchase(newValue);\n    },\n    [],);\n  const handleChangeGetQuantity = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setQuantityGet(newValue);\n    },\n    [],);\n  const handleChangeGetPercentage = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setPercentageGet(newValue);\n    },\n    [],);\n  const handleChangeGetAmount = useCallback(\n    (/** @type {React.SetStateAction<string>} */ newValue) => {\n      setAmountGet(newValue);\n    },\n    [],);\n  const removeItemFromProductSpend = (/** @type {any} */ productVariantId) => {\n    const updatedProductSpend = productSpend.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setProductSpend(updatedProductSpend.length > 0 ? updatedProductSpend : [{}]);\n\n    /**\n       * @type {string | any[] | ((prevState: never[]) => never[])}\n       */\n    const updatedProductSpendId = productSpendId.filter(\n      (item) => item !== productVariantId\n    );\n    // @ts-ignore\n    setProductSpendId(updatedProductSpendId.length > 0 ? updatedProductSpendId : []);\n  };\n  const removeItemFromProductGet = (/** @type {any} */ productVariantId) => {\n    const updatedProductGet = productGet.filter(\n      (item) => item.productVariantId !== productVariantId\n    );\n    setProductGet(updatedProductGet.length > 0 ? updatedProductGet : [{}]);\n    /**\n       * @type {string | any[] | ((prevState: never[]) => never[])}\n       */\n    const updatedProductGetId = productGetId.filter(\n      (item) => item !== productVariantId\n    );\n    // @ts-ignore\n    setProductGetId(updatedProductGetId.length > 0 ? updatedProductGetId : []);\n  };\n\n  async function selectProductSpend() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 1,\n    });\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      const flattenedVariants = selectedProducts.flat();\n      setProductSpend(flattenedVariants);\n\n      const selectedVariantIds = products.map(product => {\n        return product.variants.map(variant => variant.id);\n      }).flat();\n      // @ts-ignore\n      setProductSpendId(prevIds => [...prevIds, ...selectedVariantIds]);\n\n    }\n  }\n\n  async function selectProductGet() {\n    const products = await window.shopify.resourcePicker({\n      type: \"product\",\n      action: \"select\", // customized action verb, either 'select' or 'add',\n      multiple: 3,\n    });\n    if (products) {\n      const selectedProducts = products.map(product => {\n        const {images, id, variants, title, handle} = product;\n        // Map each variant along with its parent product information\n        return variants.map(variant => {\n          return {\n            productId: id,\n            productVariantId: variant.id,\n            productTitle: title,\n            productHandle: handle,\n            productAlt: images[0]?.altText,\n            productImage: images[0]?.originalSrc,\n            variantTitle: variant.title,\n            variantPrice: variant.price,\n            variantSKU: variant.sku,\n          };\n        });\n      });\n      // Flatten the array of arrays to a single array of variants\n      const flattenedVariants = selectedProducts.flat();\n      setProductGet(flattenedVariants);\n\n      const selectedVariantIds = products.map(product => {\n        return product.variants.map(variant => variant.id);\n      }).flat();\n      // @ts-ignore\n      setProductGetId(prevIds => [...prevIds, ...selectedVariantIds]);\n\n    }\n  }\n  const toastMarkup = active ? (\n    <Toast content={message} onDismiss={toggleActive} error={check !== 8} />\n  ) : null;\n  const {\n    // \u0110\u1ECBnh ngh\u0129a c\u00E1c tr\u01B0\u1EDDng nh\u1EADp li\u1EC7u v\u00E0 gi\u00E1 tr\u1ECB kh\u1EDFi t\u1EA1o c\u1EE7a ch\u00FAng\n    fields: {\n      discountTitle,\n      discountCode,\n      discountMethod,\n      combinesWith,\n      requirementType,\n      requirementSubtotal,\n      requirementQuantity,\n      usageLimit,\n      appliesOncePerCustomer,\n      startDate,\n      endDate,\n\n    },\n    submit,\n  } = useForm({\n    fields: {\n      discountTitle: useField(\"\"),\n      discountMethod: useField(DiscountMethod.Code),\n      discountCode: useField(\"\"),\n      combinesWith: useField({\n        orderDiscounts: false,\n        productDiscounts: false,\n        shippingDiscounts: false,\n      }),\n      requirementType: useField(RequirementType.None),\n      requirementSubtotal: useField(\"0\"),\n      requirementQuantity: useField(\"0\"),\n      usageLimit: useField(null),\n      appliesOncePerCustomer: useField(false),\n      startDate: useField(today),\n      endDate: useField(null),\n      configuration: {\n        quantityPurchase: useField(\"\"),\n        amountPurchase: useField(\"\"),\n        quantityGet:useField(\"\"),\n        percentageGet:useField(\"\"),\n        amountGet:useField(\"\"),\n        freeGet:useField(false)\n      },\n\n    },\n    onSubmit: async (form) => {\n      setCount(1)\n      let discount;\n      let existingDiscount\n      let existingDiscountTitle\n      discount = {\n        title: form.discountTitle,\n        method: form.discountMethod,\n        code: form.discountCode,\n        combinesWith: form.combinesWith,\n        usageLimit: form.usageLimit == null ? null : parseInt(form.usageLimit),\n        appliesOncePerCustomer: form.appliesOncePerCustomer,\n        startsAt: form.startDate,\n        endsAt: form.endDate,\n        configuration: {\n          quantityPurchase: quantityPurchase,\n          amountPurchase: parseFloat(amountPurchase),\n          quantityGet: quantityGet,\n          amountGet: parseFloat(amountGet),\n          percentageGet:parseFloat(percentageGet),\n          freeGet : selectedGet.includes('free')\n        },\n        productSpend:productSpend,\n        productSpendId:productSpendId,\n        productGet:productGet,\n        productGetId:productGetId\n      };\n      if(!byXGetYLoading)\n      {\n        existingDiscount = byXGetYDiscountsData.getAllDiscountByXGetY.filter((node)=>node.code!== \"\").find(item => item.code === discount.code)\n        existingDiscountTitle = byXGetYDiscountsData.getAllDiscountByXGetY.find(item => item.title === discount.title);\n      }\n      if (discount.code === '' && discount.title === '') {\n        setCheck(1)\n      }\n      else if(existingDiscount||existingDiscountTitle)\n      {\n        setCheck(15)\n        console.log(\"trung ten\")\n      }\n      else if(validateNumber(parseInt(quantityPurchase)) === 1 && selectedPurchase.includes('quantity'))\n      {\n        setCheck(2)\n      }\n      else if(validateNumber(discount.configuration.amountPurchase) === 1 && selectedPurchase.includes('amount') )\n      {\n        setCheck(3)\n      }\n      else if(validateNumber(parseInt(quantityGet)) === 1)\n      {\n        setCheck(4)\n      }\n      else if(validatePercentage(discount.configuration.percentageGet) === 1 && selectedGet.includes('percentage'))\n      {\n        setCheck(5)\n      }\n      else if(!productSpend[0].productVariantId )\n      {\n        setCheck(6)\n      }\n      else if(!productGet[0].productVariantId )\n      {\n        setCheck(7)\n      }\n      else {\n        setCheck(8)\n        console.log(discount)\n        submitForm({discountForm: JSON.stringify(discount)}, {method: \"post\"});\n\n      }\n\n      console.log(discount)\n      return {status: \"success\"};\n    },\n  });\n  return (\n    <>\n      <Frame>\n      <Page\n        title=\"Create By X get Y discount\"\n        backAction={{\n          content: \"Return\",\n          onAction: () => navigate(\"../../app/discountList\")\n          ,\n        }}\n        primaryAction={{\n          content: \"Save\",\n          onAction: submit,\n          loading: isLoading,\n        }}\n      >\n        <Layout>\n          <Layout.Section>\n            <Form method=\"post\">\n              <BlockStack align=\"space-around\" gap=\"200\">\n                <MethodCard\n                  title=\"By X get Y\"\n                  discountTitle={discountTitle}\n                  discountClass={DiscountClass.Product}\n                  discountCode={discountCode}\n                  discountMethod={discountMethod}\n                />\n                <Box paddingBlockEnd=\"300\">\n                  <Card>\n                    <BlockStack>\n                      <div style={{marginBottom: \"15px\"}}>\n                        <Text variant=\"headingMd\" as=\"h1\">\n                          Customer spends\n                        </Text>\n                      </div>\n                      <div style={{marginBottom: \"10px\"}}>\n                        <Text variant=\"headingMd\" as=\"h3\">\n                          Purchase type\n                        </Text>\n                      </div>\n                      <ChoiceList\n                        title=\"Select Purchase type for By X get Y Discount\"\n                        choices={[\n                          {label: 'Minimum quantity of items', value: 'quantity'},\n                          {label: 'Minimum purchase amount', value: 'amount'},\n                        ]}\n                        selected={selectedPurchase}\n                        onChange={handleChangePurchase}\n                      />\n                      {selectedPurchase.includes('quantity') && (\n                        <TextField\n                          label=\"Quantity\"\n                          autoComplete=\"on\"\n                          value={quantityPurchase}\n                          onChange={handleChangePurchaseQuantity}\n                          suffix=\"\"\n                        />\n                      )}\n                      {selectedPurchase.includes('amount') && (\n                        <TextField\n                          label=\"Amount\"\n                          autoComplete=\"on\"\n                          value={amountPurchase}\n                          onChange={handleChangePurchaseAmount}\n                          suffix=\"VND\"\n                        />\n                      )}\n                      <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                        <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProductSpend}>\n                          Click here to set product Customer must spend\n                        </Button>\n                      </div>\n                      {!productSpend[0].productVariantId ? (\n                          EmptyProductSelected()\n                        ) :\n                        (\n                          <ResourceList\n                            resourceName={{singular: 'customer', plural: 'customers'}}\n                            items={productSpend}\n                            renderItem={(item) => {\n                              const media = <Thumbnail\n                                source={item.productImage || \"\"}\n                                alt={item.productAlt}/>;\n                              const shortcutActions = [\n                                {\n                                  content: \"Remove\",\n                                  onAction: () => removeItemFromProductSpend(item.productVariantId),\n                                },\n                              ];\n                              return (\n                                <ResourceItem\n                                  id={item.productId}\n                                  url={item.productImage}\n                                  media={media}\n                                  shortcutActions={shortcutActions}\n                                  persistActions\n                                >\n                                  <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                    {item.productTitle}\n                                  </Text>\n                                  <div>{item.variantTitle}</div>\n                                </ResourceItem>\n                              );\n                            }}\n                          />\n                        )\n                      }\n                    </BlockStack>\n                  </Card>\n                </Box>\n                <Box paddingBlockEnd=\"300\">\n                  <Card>\n                    <BlockStack>\n                      <div style={{marginBottom: \"15px\"}}>\n                        <Text variant=\"headingMd\" as=\"h1\">\n                          Customer gets\n                        </Text>\n                      </div>\n                      <div style={{marginBottom: \"10px\"}}>\n                        <Text as=\"p\" tone=\"subdued\">\n                          Customers must add the quantity of items specified below to their cart.\n                        </Text>\n                      </div>\n                    <div style={{marginBottom: \"10px\"}}>\n                      <TextField\n                        label=\"Quantity\"\n                        autoComplete=\"on\"\n                        value={quantityGet}\n                        onChange={handleChangeGetQuantity}\n                        suffix=\"\"\n                      />\n                    </div>\n                      <ChoiceList\n                        title=\"At a discounted value\"\n                        choices={[\n                          {label: 'Percentage', value: 'percentage'},\n                          {label: 'Free', value: 'free'},\n                        ]}\n                        selected={selectedGet}\n                        onChange={handleChangeGet}\n                      />\n                      {selectedGet.includes('percentage') && (\n                        <TextField\n                          label=\"Percentage\"\n                          autoComplete=\"on\"\n                          value={percentageGet}\n                          onChange={handleChangeGetPercentage}\n                          suffix=\"\"\n                        />\n                      )}\n                      {selectedGet.includes('amount') && (\n                        <TextField\n                          label=\"Amount\"\n                          autoComplete=\"on\"\n                          value={amountGet}\n                          onChange={handleChangeGetAmount}\n                          suffix=\"VND\"\n                        />\n                      )}\n                      <div style={{marginBottom: \"15px\", marginTop: '15px'}}>\n                        <Button variant=\"plain\" textAlign=\"left\" size={\"large\"} onClick={selectProductGet}>\n                          Click here to set product Customer can get\n                        </Button>\n                      </div>\n                      {!productGet[0].productVariantId ? (\n                          EmptyProductSelected()\n                        ) :\n                        (\n                          <ResourceList\n                            resourceName={{singular: 'customer', plural: 'customers'}}\n                            items={productGet}\n                            renderItem={(item) => {\n                              const media = <Thumbnail\n                                source={item.productImage || \"\"}\n                                alt={item.productAlt}/>;\n                              const shortcutActions = [\n                                {\n                                  content: \"Remove\",\n                                  onAction: () => removeItemFromProductGet(item.productVariantId),\n                                },\n                              ];\n                              return (\n                                <ResourceItem\n                                  id={item.productId}\n                                  url={item.productImage}\n                                  media={media}\n                                  shortcutActions={shortcutActions}\n                                  persistActions\n                                >\n                                  <Text variant=\"bodyMd\" fontWeight=\"bold\" as=\"h3\">\n                                    {item.productTitle}\n                                  </Text>\n                                  <div>{item.variantTitle}</div>\n                                </ResourceItem>\n                              );\n                            }}\n                          />\n                        )\n                      }\n                    </BlockStack>\n                  </Card>\n                </Box>\n                {discountMethod.value === DiscountMethod.Code && ( // ki\u1EC3m tra xem discount l\u00E0 code hay auto\n                  <UsageLimitsCard\n                    // @ts-ignore\n                    totalUsageLimit={usageLimit}\n                    oncePerCustomer={appliesOncePerCustomer}\n                  />\n                )}\n\n                <CombinationCard\n                  combinableDiscountTypes={combinesWith}\n                  discountClass={DiscountClass.Product}\n                  discountDescriptor={\"Discount\"}\n                />\n                <ActiveDatesCard\n                  // @ts-ignore\n                  startDate={startDate} // Truy\u1EC1n gi\u00E1 tr\u1ECB startDate t\u1EEB tr\u1EA1ng th\u00E1i ho\u1EB7c props\n                  // @ts-ignore\n                  endDate={endDate}\n                  timezoneAbbreviation=\"GMT+7\"\n                />\n              </BlockStack>\n            </Form>\n          </Layout.Section>\n          <Layout.Section variant=\"oneThird\">\n            <SummaryCard // th\u00F4ng tin c\u01A1 b\u1EA3n v\u1EC1 tr\u1EA1ng th\u00E1i gi\u1EA3m gi\u00E1 v\u00E0 c\u00F3 th\u1EC3 hi\u1EC3n th\u1ECB c\u00E1c t\u00F9y ch\u1ECDn c\u1EA5u h\u00ECnh n\u00E2ng cao h\u01A1n\n              header={{\n                discountMethod: discountMethod.value,\n                discountDescriptor:\n                  discountMethod.value === DiscountMethod.Automatic\n                    ? discountTitle.value\n                    : discountCode.value,\n                appDiscountType: \"By X Get Y\",\n                isEditing: false,\n              }}\n              performance={{\n                status: DiscountStatus.Scheduled,\n                usageCount: 0,\n              }}\n              minimumRequirements={{\n                requirementType: requirementType.value,\n                subtotal: requirementSubtotal.value,\n                quantity: requirementQuantity.value,\n                currencyCode: currencyCode,\n              }}\n              customerEligibility={{\n                eligibility: Eligibility.Everyone,\n\n              }}\n              usageLimits={{\n                oncePerCustomer: appliesOncePerCustomer.value,\n                totalUsageLimit: usageLimit.value,\n              }}\n              activeDates={{\n                // @ts-ignore\n                startDate: startDate.value,\n                endDate: endDate.value,\n              }}\n            />\n          </Layout.Section>\n          <Layout.Section>\n            <PageActions\n              primaryAction={{\n                content: \"Save discount\",\n                onAction: submit,\n                loading: isLoading,\n              }}\n              secondaryActions={[\n                {\n                  content: \"Quit\",\n                  onAction: () => navigate(\"../../app/discountList\")\n                  ,\n                },\n              ]}\n            />\n          </Layout.Section>\n        </Layout>\n\n        {toastMarkup}\n\n      </Page>\n    </Frame>\n    </>\n  )\n}\nexport default ByXGetYDiscount\n", "// @ts-nocheck\nimport {\n  ActionList,\n  Button,\n  Card,\n  EmptyState,\n  Frame,\n  IndexTable,\n  Layout,\n  Modal,\n  Page,\n  Popover, Spinner,\n  Toast,\n} from '@shopify/polaris';\nimport React, {useEffect, useState, useCallback} from 'react';\nimport {useActionData, useLoaderData, useNavigate, useSubmit} from \"@remix-run/react\";\nimport shopify, {authenticate} from \"~/shopify.server\";\nimport {json} from \"@remix-run/node\";\nimport {DiscountMethod} from \"@shopify/discount-app-components\";\n// @ts-ignore\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {\n  DELETE_DISCOUNT, DELETE_DISCOUNT_BY_X_GET_Y,\n  UPDATE_DISCOUNT_STATUS_AND_COUNT,\n  UPDATE_DISCOUNT_STATUS_AND_COUNT_BY_X_GET_Y\n} from \"~/graphql/mutation\";\nimport {GET_ALL_DISCOUNT, GET_ALL_DISCOUNT_BY_X_GET_Y} from \"~/graphql/query\";\nimport axios from \"axios\";\nimport StoreModel from \"~/models/store.model\";\n\nexport const action = async ({request}) => {\n\n  const {admin} = await shopify.authenticate.admin(request);\n  const formData = await request.formData();\n  const {\n    method,\n    discountId,\n  } = JSON.parse(formData.get(\"discountDelete\"));\n  if (method === DiscountMethod.Code) { //\n    const response = await admin.graphql(\n      `#graphql\n              mutation discountCodeDelete($id: ID!) {\n               discountCodeDelete(id: $id) {\n                 deletedCodeDiscountId\n                  userErrors {\n                   field\n                   message\n                  }\n  }\n}`,\n      {\n        variables: {\n          id: discountId\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const errors = responseJson.data.discountCodeDelete.userErrors;\n    return json({errors}); //tra ve neu co loi\n  } else {\n    const response = await admin.graphql(\n      `#graphql\n              mutation discountAutomaticDelete($id: ID!) {\n                   discountAutomaticDelete(id: $id) {\n                      deletedAutomaticDiscountId\n                        userErrors {\n                          field\n                          message\n                        }\n                   }\n              }`,\n      {\n        variables: {\n          id: discountId\n        },\n      }\n    );\n\n    const responseJson = await response.json();\n    const errors = responseJson.data.discountAutomaticDelete.userErrors;\n    return json({errors});\n  }\n};\n\n// eslint-disable-next-line react-hooks/rules-of-hooks\n\nexport const loader = async ({request}) => {\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\",\n    },\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  let shopCreate\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    })\n\n\n  const {admin} = await shopify.authenticate.admin(request);\n  const responseGetFunctionId = await admin.graphql(\n    `#graphql\n      query {\n  shopifyFunctions(first: 25) {\n    nodes {\n      app {\n        title\n      }\n      apiType\n      title\n      id\n    }\n  }\n}\n`, {\n      variables: {},\n    })\n\n  const response = await admin.graphql(\n    `#graphql\n      query GetDiscounts($list: Int!) {\n  discountNodes(first: $list) {\n    nodes {\n      id\n      configurationField: metafield(\n        namespace: \"$app:volume-discount\"\n        key: \"function-configuration\"\n      ) {\n        id\n        value\n      }\n      discount {\n        __typename\n        ... on DiscountAutomaticApp {\n          title\n          discountClass\n          combinesWith {\n            orderDiscounts\n            productDiscounts\n            shippingDiscounts\n          }\n          asyncUsageCount\n          startsAt\n          endsAt\n          status\n        }\n        ... on DiscountCodeApp {\n          title\n          discountClass\n          combinesWith {\n            orderDiscounts\n            productDiscounts\n            shippingDiscounts\n          }\n          startsAt\n          endsAt\n          status\n          asyncUsageCount\n          usageLimit\n          appliesOncePerCustomer\n          codes(first: 10) {\n            nodes {\n              code\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n      `, {\n      variables: {\n        list: 20,\n      },\n    }\n  );\n  const responeFunctionId = await responseGetFunctionId.json()\n  const functionId = responeFunctionId.data.shopifyFunctions.nodes\n    .find((/** @type {{ apiType: string; }} */ node) => node.apiType === \"product_discounts\")?.id ?? null;\n  const responseJson = await response.json();\n  const filteredNodes = responseJson.data.discountNodes.nodes.filter((/** @type {{ configurationField: null; }} */ node) => node.configurationField !== null);\n  const discountList = filteredNodes.map((/** @type {{ id: string; discount: { __typename: string; codes: { nodes: { code: any; }[]; }; }; startsAt: any; endsAt: any; asyncUsageCount: any; configurationField: { id: any; value: string; }; }} */ node) => ({\n    id: getId(node.id),\n    discountId: node.id,\n    discount: {\n      ...node.discount,\n      codes: node.discount.__typename === \"DiscountCodeApp\" ? node.discount.codes.nodes[0]?.code ?? \"\" : \"\",\n    },\n    startAt: node.startsAt,\n    endAt: node.endsAt,\n    asyncUsageCount: node.asyncUsageCount,\n    configurationField: {\n      id: node.configurationField.id,\n      value: JSON.parse(node.configurationField.value)\n    },\n  }));\n  const responseByXGetY = await admin.graphql(\n    `#graphql\n      query GetDiscounts($list: Int!) {\n  discountNodes(first: $list) {\n    nodes {\n      id\n      discount {\n        __typename\n        ... on DiscountAutomaticBxgy {\n          title\n          discountClass\n          combinesWith {\n            orderDiscounts\n            productDiscounts\n            shippingDiscounts\n          }\n          asyncUsageCount\n          startsAt\n          endsAt\n          status\n        }\n        ... on DiscountCodeBxgy {\n          title\n          discountClass\n          combinesWith {\n            orderDiscounts\n            productDiscounts\n            shippingDiscounts\n          }\n          startsAt\n          endsAt\n          status\n          asyncUsageCount\n          usageLimit\n          appliesOncePerCustomer\n          codes(first: 10) {\n            nodes {\n              code\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n      `, {\n      variables: {\n        list: 20,\n      },\n    }\n  );\n\n  const responseJsonByXGetY = await responseByXGetY.json()\n  const filteredNodesByXGetY = responseJsonByXGetY.data.discountNodes.nodes.filter(node => {\n    return (\n      node.discount.__typename === \"DiscountAutomaticBxgy\" ||\n      node.discount.__typename === \"DiscountCodeBxgy\"\n    );\n  });\n\n  return json({filteredNodesByXGetY, discountList, functionId,shop:shopData});\n}\nconst EmptyDiscountState = ({onAction}) => (\n  <EmptyState\n    heading=\"Create discount co for your product\"\n    action={{\n      content: \"Create discount\",\n      onAction,\n    }}\n    image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n  >\n    <p>Allow to create new discount by function.</p>\n  </EmptyState>\n);\nconst setColorStatus = function (/** @type {string} */ status) {\n  switch (status) {\n    case \"ACTIVE\":\n      return \"green\"\n    case \"EXPIRED\":\n      return \"red\"\n    case \"SCHEDULED\":\n      return \"yellow\"\n    default:\n      return \"black\"\n  }\n}\nconst getId = function (/** @type {string} */ discountId) {\n  if (discountId) {\n    return discountId.split(\"/\").pop()\n  }\n\n}\nconst DiscountList = () => {\n  const {discountList, functionId, filteredNodesByXGetY,shop} = useLoaderData();\n  const [discountListData, setDiscountData] = useState([{}])\n  const [discountListDataBefore, setDiscountDataBefore] = useState([{}])\n  const [discountListDataByXGetY, setDiscountDataByXGetY] = useState([{}])\n  const [discountListDataByXGetYBefore, setDiscountDataByXGetYBefore] = useState([{}])\n  const navigate = useNavigate();\n  const actionData = useActionData();\n  const submitForm = useSubmit();\n  const [active, setActive] = useState(false);\n  const [activeByXgetYModal, setActiveByXgetYModal] = useState(false);\n\n  const [discount, setDiscount] = useState();\n  const [activeToast, setActiveToast] = useState(false);\n  const [count, setCount] = useState(0)\n  const [delete_discount] = useMutation(DELETE_DISCOUNT);\n  const [delete_discount_by_x_get_y] = useMutation(DELETE_DISCOUNT_BY_X_GET_Y);\n\n  const [updateDiscount] = useMutation(UPDATE_DISCOUNT_STATUS_AND_COUNT)\n  const [updateDiscountByXGetY] = useMutation(UPDATE_DISCOUNT_STATUS_AND_COUNT_BY_X_GET_Y)\n  const [activeMessage, setActiveMessage] = useState(false);\n  const toggleActive = useCallback(() => setActiveMessage((active) => !active), []);\n  const [message, setMessage] = useState(\"\")\n  const {loading: DiscountLoading, data: DiscountsData} = useQuery(GET_ALL_DISCOUNT)\n  const {loading: byXGetYLoading, data: byXGetYDiscountsData} = useQuery(GET_ALL_DISCOUNT_BY_X_GET_Y)\n  useEffect(() => {\n    if (discountList) {\n      if(shop){\n        // T\u1EA1o m\u1ED9t m\u1EA3ng ch\u1EE9a c\u00E1c promise t\u1EEB vi\u1EC7c g\u1ECDi h\u00E0m discountUpdate cho m\u1ED7i ph\u1EA7n t\u1EED trong discountList\n        const updatePromises = discountList.map((/** @type {{ discountId: any; discount: { status: any; asyncUsageCount: any; }; }} */ node) =>\n          setTimeout(() => discountUpdate(node.discountId, node.discount.status, node.discount.asyncUsageCount), 1500)\n        );\n        // S\u1EED d\u1EE5ng Promise.all \u0111\u1EC3 \u0111\u1EE3i t\u1EA5t c\u1EA3 c\u00E1c promise ho\u00E0n th\u00E0nh\n        Promise.all(updatePromises)\n          .then(() => {\n            if (!DiscountLoading) {\n              if (DiscountsData) {\n                // C\u1EADp nh\u1EADt DiscountsData\n                const updatedDiscountsData = DiscountsData.getAllDiscount.map((/** @type {{ discountId: any; }} */ discount) => {\n                  const matchingNode = discountList.find((/** @type {{ discountId: any; }} */ node) => node.discountId === discount.discountId);\n                  if (matchingNode) {\n                    // N\u1EBFu t\u00ECm th\u1EA5y ph\u1EA7n t\u1EED tr\u00F9ng, set status v\u00E0 asyncUsageCount t\u1EEB node\n                    return {\n                      ...discount,\n                      status: matchingNode.discount.status,\n                      asyncUsageCount: matchingNode.discount.asyncUsageCount.toString(),\n                    };\n                  } else {\n                    // N\u1EBFu kh\u00F4ng t\u00ECm th\u1EA5y ph\u1EA7n t\u1EED tr\u00F9ng, gi\u1EEF nguy\u00EAn ph\u1EA7n t\u1EED\n                    return discount;\n                  }\n                });\n                console.log(updatedDiscountsData);\n                setDiscountData(updatedDiscountsData);\n                setDiscountDataBefore(updatedDiscountsData)\n              } else {\n                setDiscountData([]);\n              }\n            }\n          })\n          .catch((error) => {\n            console.error('Error updating discounts:', error);\n          });\n      }\n    }\n    if(!byXGetYLoading){\n      if (filteredNodesByXGetY) {\n        if(shop) {\n          const updatePromises = filteredNodesByXGetY.map((node) =>\n            setTimeout(() => discountUpdateByXGetY(node.id, node.discount.status, node.discount.asyncUsageCount), 1500)\n          );\n          // S\u1EED d\u1EE5ng Promise.all \u0111\u1EC3 \u0111\u1EE3i t\u1EA5t c\u1EA3 c\u00E1c promise ho\u00E0n th\u00E0nh\n          Promise.all(updatePromises)\n            .then(() => {\n              if (!DiscountLoading) {\n                if (byXGetYDiscountsData) {\n                  const updatedDiscountsData = byXGetYDiscountsData.getAllDiscountByXGetY.map((/** @type {{ discountId: any; }} */ discount) => {\n                    const matchingNode = filteredNodesByXGetY.find((/** @type {{ id: any; }} */ node) => node.id === discount.discountId);\n                    if (matchingNode) {\n                      // N\u1EBFu t\u00ECm th\u1EA5y ph\u1EA7n t\u1EED tr\u00F9ng, set status v\u00E0 asyncUsageCount t\u1EEB node\n                      return {\n                        ...discount,\n                        status: matchingNode.discount.status,\n                        asyncUsageCount: matchingNode.discount.asyncUsageCount.toString(),\n                      };\n                    } else {\n                      // N\u1EBFu kh\u00F4ng t\u00ECm th\u1EA5y ph\u1EA7n t\u1EED tr\u00F9ng, gi\u1EEF nguy\u00EAn ph\u1EA7n t\u1EED\n                      return discount;\n                    }\n                  });\n                  console.log(updatedDiscountsData);\n                  setDiscountDataByXGetY(updatedDiscountsData);\n                  setDiscountDataByXGetYBefore(updatedDiscountsData)\n                } else {\n                  setDiscountDataByXGetY([]);\n                }\n              }\n            })\n            .catch((error) => {\n              console.error('Error updating discounts:', error);\n            });\n        }\n      }\n    }\n\n  }, [DiscountLoading,byXGetYLoading]);\n  useEffect(() => {\n    if (actionData?.errors.length===0) {\n\n      const discountDataUpdate = discountListData.filter((node) => node.discountId !== discount.discountId);\n      setDiscountData(discountDataUpdate)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [actionData, count]);\n\n  const discountDelete = async (/** @type {{ discountId: any; } | undefined} */ discount) => {\n    try {\n      if (discount) {\n        const createPromise = await delete_discount({\n          variables: {\n            input: {\n              discountId: discount.discountId,\n              storeId:shop.id,\n\n            }\n          }\n        })\n        const timeoutPromise = new Promise((_resolve, reject) => {\n          setTimeout(() => {\n            reject(new Error('Update program timed out'));\n          }, 10000);\n        });\n        await Promise.race([createPromise, timeoutPromise]);\n      }\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  const discountDeleteByXGetY = async (/** @type {{ discountId: any; } | undefined} */ discount) => {\n    try {\n      if (discount) {\n        const createPromise = await delete_discount_by_x_get_y({\n          variables: {\n            input: {\n              discountId: discount.id,\n              storeId:shop.id,\n            }\n          }\n        })\n        const timeoutPromise = new Promise((_resolve, reject) => {\n          setTimeout(() => {\n            reject(new Error('Update program timed out'));\n          }, 10000);\n        });\n        await Promise.race([createPromise, timeoutPromise]);\n      }\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  const discountUpdate = async (/** @type {any} */ discountId,/** @type {any} */ status,/** @type {any} */ asyncUsageCount) => {\n    try {\n      const createPromise = await updateDiscount({\n        variables: {\n          input: {\n            storeId:shop.id,\n            discountId: discountId,\n            status: status,\n            asyncUsageCount: asyncUsageCount.toString(),\n          }\n        }\n      })\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n      await Promise.race([createPromise, timeoutPromise]);\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  const discountUpdateByXGetY = async (/** @type {any} */ discountId,/** @type {any} */ status,/** @type {any} */ asyncUsageCount) => {\n    try {\n      const createPromise = await updateDiscountByXGetY({\n        variables: {\n          input: {\n            storeId:shop.id,\n            discountId: discountId,\n            status: status,\n            asyncUsageCount: asyncUsageCount.toString(),\n\n          }\n        }\n      })\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n      await Promise.race([createPromise, timeoutPromise]);\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n\n  const showDiscount = ( /** @type {string | undefined} */ discountId) => {\n    console.log(\"Showing discount with ID:\", discountId);\n    navigate(`../../app/volume-discount/${functionId}/${discountId}`);\n  };\n  const showDiscountByXgetY = ( /** @type {string | undefined} */ id) => {\n    console.log(\"Showing discount with ID:\", id);\n    navigate(`../../app/byXgetYdiscount/${id}`);\n  };\n  const openRemoveDiscountModal = (/** @type {any} */discount) => {\n    setActive(true)\n    const findDiscount = discountList.find((/** @type {{ discountId: any; }} */ node) => node.discountId === discount.discountId);\n    setDiscount(findDiscount)\n    console.log(\"Removing discount with ID:\", findDiscount);\n  };\n  const openRemoveDiscountByXgetYModal = (/** @type {any} */discount) => {\n    setActiveByXgetYModal(true)\n    const findDiscount = filteredNodesByXGetY.find((/** @type {{ discountId: any; }} */ node) => node.id === discount.discountId);\n    setDiscount(findDiscount)\n    console.log(\"Removing discount with ID:\", findDiscount);\n  };\n  const deleteDiscount = () => {\n    setActive(false)\n    console.log(discount)\n    if (discount !== undefined) {\n      const discountToDelete = {\n        // @ts-ignore\n        method: discount?.discount.__typename !== \"DiscountCodeApp\" ? DiscountMethod.Automatic : DiscountMethod.Code,\n        // @ts-ignore\n        discountId: discount?.discountId,\n      }\n      submitForm({discountDelete: JSON.stringify(discountToDelete)}, {method: \"post\"});\n      setCount(1)\n      discountDelete(discount).then()\n      setActiveToast(true)\n\n\n    }\n\n  }\n  const deleteDiscountByXGetY = () => {\n    setActiveByXgetYModal(false)\n    console.log(discount)\n    if (discount !== undefined) {\n      const discountToDelete = {\n        // @ts-ignore\n        method: discount?.discount.__typename === \"DiscountCodeBxgy\" ? DiscountMethod.Code : DiscountMethod.Automatic,\n        // @ts-ignore\n        discountId: discount?.id,\n      }\n      submitForm({discountDelete: JSON.stringify(discountToDelete)}, {method: \"post\"});\n      setCount(1)\n      discountDeleteByXGetY(discount).then()\n      const discountDataUpdate = discountListData.filter((node) => node.discountId !== discount.id);\n      setDiscountDataByXGetY(discountDataUpdate)\n      setActiveToast(true)\n\n    }\n\n  }\n\n  const [popoverActiveDiscount, setPopoverActiveDiscount] = useState(false);\n  const [popoverActiveStatus, setPopoverActiveStatus] = useState(false);\n  const [popoverActiveMethod, setPopoverActiveMethod] = useState(false);\n  const [popoverActiveStatusByXGetY, setPopoverActiveStatusByXGetY] = useState(false);\n  const [popoverActiveMethodByXGetY, setPopoverActiveMethodByXGetY] = useState(false);\n\n\n  const togglePopoverDiscount = useCallback(\n    () => setPopoverActiveDiscount((popoverActive) => !popoverActive),\n    [],\n  );\n  const togglePopoverActiveStatus = useCallback(\n    () => setPopoverActiveStatus((popoverActive) => !popoverActive),\n    [],\n  );\n  const togglePopoverActiveMethod = useCallback(\n    () => setPopoverActiveMethod((popoverActive) => !popoverActive),\n    [],\n  );\n  const togglePopoverActiveStatusByXGetY = useCallback(\n    () => setPopoverActiveStatusByXGetY((popoverActive) => !popoverActive),\n    [],\n  );\n  const togglePopoverActiveMethodByXGetY = useCallback(\n    () => setPopoverActiveMethodByXGetY((popoverActive) => !popoverActive),\n    [],\n  );\n  const newDiscount = (\n    <Button onClick={togglePopoverDiscount} variant=\"primary\">\n      New Discount\n    </Button>\n  );\n  const activator = (\n    <Button onClick={togglePopoverActiveStatus} disclosure>\n      Status\n    </Button>\n  );\n  const activator2 = (\n    <Button onClick={togglePopoverActiveMethod} disclosure>\n      Method\n    </Button>\n  );\n  const activator3 = (\n    <Button onClick={togglePopoverActiveStatusByXGetY} disclosure>\n      Status\n    </Button>\n  );\n  const activator4 = (\n    <Button onClick={togglePopoverActiveMethodByXGetY} disclosure>\n      Method\n    </Button>\n  );\n  const handleAllDiscountApp = () => {\n    setDiscountData(discountListDataBefore)\n  }\n  const handleAllDiscountAppByXGetY = () => {\n    setDiscountDataByXGetY(discountListDataByXGetYBefore)\n  }\n  const handleDiscountAppActive = () => {\n    const activeDiscounts = discountListDataBefore.filter(\n      discount => discount.status === 'ACTIVE'\n    );\n\n    if (activeDiscounts.length === 0) {\n      setMessage(\"Discount not found\")\n      setActiveMessage(true)\n    } else {\n      setDiscountData(activeDiscounts);\n    }\n  }\n  const handleDiscountAppActiveByXGetY = () => {\n    const activeDiscountsByXGetY = discountListDataByXGetYBefore.filter(\n      discount => discount.status === 'ACTIVE'\n    );\n\n    if (activeDiscountsByXGetY.length === 0) {\n      setMessage(\"Discount not found\")\n      setActiveMessage(true)\n    } else {\n      setDiscountDataByXGetY(activeDiscountsByXGetY);\n    }\n  }\n\n  const handleDiscountAppExpired = () => {\n    const expiredDiscounts = discountListDataBefore.filter(\n      discount => discount.status === 'EXPIRED'\n    );\n    if (expiredDiscounts.length === 0) {\n      setMessage(\"Discount not found\")\n      setActiveMessage(true)\n    } else {\n      setDiscountData(expiredDiscounts);\n    }\n  }\n  const handleDiscountAppExpiredByXGetY = () => {\n    const expiredDiscountsByXGetY = discountListDataByXGetYBefore.filter(\n      discount => discount.status === 'EXPIRED'\n    );\n    if (expiredDiscountsByXGetY.length === 0) {\n      setMessage(\"Discount not found\")\n      setActiveMessage(true)\n    } else {\n      setDiscountDataByXGetY(expiredDiscountsByXGetY);\n    }\n\n  }\n  const handleDiscountAppCode = () => {\n    const codeDiscounts = discountListDataBefore.filter(\n      discount => discount.method === 'Code'\n    );\n    setDiscountData(codeDiscounts);\n  }\n  const handleDiscountAppCodeByXGetY = () => {\n    const codeDiscountsByXGetY = discountListDataByXGetYBefore.filter(\n      discount => discount.method === 'Code'\n    );\n    setDiscountDataByXGetY(codeDiscountsByXGetY);\n  }\n  const handleDiscountAppAutomatic = () => {\n    const automaticDiscounts = discountListDataBefore.filter(\n      discount => discount.method === 'Automatic'\n    );\n    setDiscountData(automaticDiscounts);\n  }\n  const handleDiscountAppAutomaticByXGetY = () => {\n    const automaticDiscountsByXGetY = discountListDataByXGetYBefore.filter(\n      discount => discount.method === 'Automatic'\n    );\n    setDiscountDataByXGetY(automaticDiscountsByXGetY);\n  }\n  const toastMarkup = activeMessage ? (\n    <Toast content={message} onDismiss={toggleActive} error/>\n  ) : null;\n  return (\n    <>\n      <ui-title-bar title=\"Discount List\">\n      </ui-title-bar>\n      <div style={{position: 'absolute', top: '20px', right: '20px', marginBottom: '15px'}}>\n        <Popover\n          active={popoverActiveDiscount}\n          activator={newDiscount}\n          autofocusTarget=\"first-node\"\n          onClose={togglePopoverDiscount}\n        >\n          <ActionList\n            actionRole=\"menuitem\"\n            items={[\n              {\n                content: 'Code or Automatic',\n                onAction: () => navigate(`../../app/volume-discount/${functionId}/new`),\n              },\n              {\n                content: 'By x Get y',\n                onAction: () => navigate(`../../app/byXgetYdiscount/new`),\n              }]}\n          />\n        </Popover>\n      </div>\n      <Page>\n        <Layout>\n          <Layout.Section>\n            <div style={{marginBottom: '20px'}}>\n              <p style={{fontWeight: 'bold', fontSize: '20px'}}>\n                Discount Code And Discount Automatic List\n              </p>\n            </div>\n            {DiscountLoading ? (\n              <Spinner accessibilityLabel=\"Spinner example\" size=\"large\"/>) : (\n              <>\n                {discountListData.length===0 ? (\n                  <EmptyDiscountState onAction={() => navigate(`../../app/volume-discount/${functionId}/new`)}/>\n                ) : (\n\n                  <Card padding=\"0\">\n                    <div style={{display: 'flex', marginBottom: '5px'}}>\n                      <div style={{marginRight: '20px'}}>\n                        <Button onClick={handleAllDiscountApp} size={\"medium\"}>\n                          All discount\n                        </Button>\n                      </div>\n                      <div style={{marginRight: '20px'}}>\n                        <Popover\n                          active={popoverActiveStatus}\n                          activator={activator}\n                          autofocusTarget=\"first-node\"\n                          onClose={togglePopoverActiveStatus}\n                        >\n                          <ActionList\n                            actionRole=\"menuitem\"\n                            items={[\n                              {\n                                content: 'Active',\n                                onAction: handleDiscountAppActive,\n                              },\n                              {\n                                content: 'EXPIRED',\n                                onAction: handleDiscountAppExpired,\n                              }]}\n                          />\n                        </Popover>\n                      </div>\n                      <div style={{marginRight: '20px'}}>\n                        <Popover\n                          active={popoverActiveMethod}\n                          activator={activator2}\n                          autofocusTarget=\"first-node\"\n                          onClose={togglePopoverActiveMethod}\n                        >\n                          <ActionList\n                            actionRole=\"menuitem\"\n                            items={[{\n                              content: 'Code',\n                              onAction: handleDiscountAppCode,\n\n                            }, {\n                              content: 'Automatic',\n                              onAction: handleDiscountAppAutomatic,\n\n                            }]}\n                          />\n                        </Popover>\n                      </div>\n\n                    </div>\n\n                    <>\n                      <IndexTable\n                        resourceName={{\n                          singular: \"Discount List\",\n                          plural: \"Discount List\",\n                        }}\n\n                        itemCount={discountListData.length}\n                        headings={[\n                          {title: \"Id\"},\n                          {title: \"Title\"},\n                          {title: \"Method\"},\n                          {title: \"Start Date\"},\n                          {title: \"Start Time\"},\n                          {title: \"End Date\"},\n                          {title: \"End Time\"},\n                          {title: \"Status\"},\n                          {title: \"Used\"},\n                          {title: \"Action\", hidden: true},\n                          {title: \"Action2\", hidden: true},\n                        ]}\n                        selectable={false}\n                      >\n                        {discountListData.map((discount, index) => (\n                          <IndexTable.Row key={index} id={discount.discountId} position={discount.discountId}>\n                            <IndexTable.Cell>\n                              {getId(discount.discountId)}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.code !== \"\" ? discount.code : discount.title}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.method}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {new Date(discount.startsAt).toLocaleDateString()}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {new Date(discount.startsAt).toLocaleTimeString()}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.endsAt !== \"\" ? new Date(discount.endsAt).toLocaleDateString() : \"Not set\"}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.endsAt !== \"\" ? new Date(discount.endsAt).toLocaleTimeString() : \"Not set\"}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              <div style={{color: setColorStatus(discount.status)}}>\n                                {discount.status}\n                              </div>\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.asyncUsageCount}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              <Button variant=\"plain\" onClick={() => showDiscount(getId(discount.discountId))}>View\n                                discount</Button>\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              <Button variant=\"plain\" onClick={() => openRemoveDiscountModal(discount)}>Remove</Button>\n                            </IndexTable.Cell>\n                          </IndexTable.Row>\n                        ))}\n                      </IndexTable>\n                    </>\n\n                  </Card>\n                )}\n              </>\n            )}\n\n          </Layout.Section>\n        </Layout>\n\n\n        <Layout>\n          <Layout.Section>\n            <div style={{marginBottom: '20px', marginTop: '30px'}}>\n              <p style={{fontWeight: 'bold', fontSize: '20px'}}>\n                Discount By X get Y List\n              </p>\n            </div>\n            {byXGetYLoading  ? (\n              <Spinner accessibilityLabel=\"Spinner example\" size=\"large\"/>) : (\n              <>\n                {discountListDataByXGetY.length === 0 ? (\n                  <EmptyDiscountState onAction={() => navigate(`../../app/byXgetYdiscount/new`)}/>\n                ) : (\n                  <Card padding=\"0\">\n                    <div style={{display: 'flex', marginBottom: '5px'}}>\n                      <div style={{marginRight: '20px'}}>\n                        <Button onClick={handleAllDiscountAppByXGetY} size={\"medium\"}>\n                          All discount\n                        </Button>\n                      </div>\n                      <div style={{marginRight: '20px'}}>\n                        <Popover\n                          active={popoverActiveStatusByXGetY}\n                          activator={activator3}\n                          autofocusTarget=\"first-node\"\n                          onClose={togglePopoverActiveStatusByXGetY}\n                        >\n                          <ActionList\n                            actionRole=\"menuitem\"\n                            items={[\n                              {\n                                content: 'Active',\n                                onAction: handleDiscountAppActiveByXGetY,\n                              },\n                              {\n                                content: 'EXPIRED',\n                                onAction: handleDiscountAppExpiredByXGetY,\n                              }]}\n                          />\n                        </Popover>\n                      </div>\n                      <div style={{marginRight: '20px'}}>\n                        <Popover\n                          active={popoverActiveMethodByXGetY}\n                          activator={activator4}\n                          autofocusTarget=\"first-node\"\n                          onClose={togglePopoverActiveMethodByXGetY}\n                        >\n                          <ActionList\n                            actionRole=\"menuitem\"\n                            items={[{\n                              content: 'Code',\n                              onAction: handleDiscountAppCodeByXGetY,\n\n                            }, {\n                              content: 'Automatic',\n                              onAction: handleDiscountAppAutomaticByXGetY,\n\n                            }]}\n                          />\n                        </Popover>\n                      </div>\n\n                    </div>\n                    <>\n                      <IndexTable\n                        resourceName={{\n                          singular: \"Discount List By X Get Y\",\n                          plural: \"Discount List\",\n                        }}\n\n                        itemCount={discountListDataByXGetY.length}\n                        headings={[\n                          {title: \"Id\"},\n                          {title: \"Title\"},\n                          {title: \"Method\"},\n                          {title: \"Start Date\"},\n                          {title: \"Start Time\"},\n                          {title: \"End Date\"},\n                          {title: \"End Time\"},\n                          {title: \"Status\"},\n                          {title: \"Used\"},\n                          {title: \"Action\", hidden: true},\n                          {title: \"Action2\", hidden: true},\n                        ]}\n                        selectable={false}\n                      >\n\n                        {discountListDataByXGetY.map((discount, index) => (\n                          <IndexTable.Row key={index} id={discount.discountId} position={discount.discountId}>\n                            <IndexTable.Cell>\n                              {getId(discount.discountId)}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.code !== \"\" ? discount.code : discount.title}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.method}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {new Date(discount.startsAt).toLocaleDateString()}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {new Date(discount.startsAt).toLocaleTimeString()}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.endsAt !== \"\" ? new Date(discount.endsAt).toLocaleDateString() : \"Not set\"}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.endsAt !== \"\" ? new Date(discount.endsAt).toLocaleTimeString() : \"Not set\"}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              <div style={{color: setColorStatus(discount.status)}}>\n                                {discount.status}\n                              </div>\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              {discount.asyncUsageCount}\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              <Button variant=\"plain\" onClick={() => showDiscountByXgetY(discount.id)}>View\n                                discount</Button>\n                            </IndexTable.Cell>\n                            <IndexTable.Cell>\n                              <Button variant=\"plain\" onClick={() => openRemoveDiscountByXgetYModal(discount)}>Remove</Button>\n                            </IndexTable.Cell>\n                          </IndexTable.Row>\n                        ))}\n                      </IndexTable>\n                    </>\n\n                  </Card>\n                )}\n              </>\n            )}\n\n          </Layout.Section>\n        </Layout>\n      </Page>\n      <div style={{height: '500px'}}>\n        <Frame>\n          <Modal\n            open={active}\n            onClose={() => setActive(false)}\n            title=\"Are you sure to delete this discount ?\"\n            primaryAction={{\n              content: 'Delete',\n              onAction: deleteDiscount,\n            }}\n            secondaryActions={[\n              {\n                content: 'Cancel',\n                onAction: () => setActive(false),\n              },\n            ]}\n          >\n          </Modal>\n          <Modal\n            open={activeByXgetYModal}\n            onClose={() => setActiveByXgetYModal(false)}\n            title=\"Are you sure to delete this discount _222 ?\"\n            primaryAction={{\n              content: 'Delete',\n              onAction: deleteDiscountByXGetY,\n            }}\n            secondaryActions={[\n              {\n                content: 'Cancel',\n                onAction: () => setActiveByXgetYModal(false),\n              },\n            ]}\n          >\n          </Modal>\n        </Frame>\n      </div>\n      <div style={{height: '250px'}}>\n        <Frame>\n          {activeToast ? (\n            <Toast content=\"Discount Delete\" onDismiss={() => setActiveToast(false)}/>\n          ) : null}\n          {toastMarkup}\n        </Frame>\n      </div>\n    </>\n  );\n};\n\nexport default DiscountList;\n\n\n", "\nimport * as entryServer from \"/home/acer/Downloads/doantotnghiep-test/app/entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes/app.volume-discount.$functionId.$id.jsx\";\nimport * as route2 from \"./routes/app.volume-discount.$functionId.new.jsx\";\nimport * as route3 from \"./routes/app.byXgetYdiscount.$id.jsx\";\nimport * as route4 from \"./routes/app.byXgetYdiscount.new.jsx\";\nimport * as route5 from \"./routes/app.discountList.jsx\";\nimport * as route6 from \"./routes/app.labe.create.js\";\nimport * as route7 from \"./routes/app.additional.jsx\";\nimport * as route8 from \"./routes/app.shopInfo.jsx\";\nimport * as route9 from \"./routes/app._index.jsx\";\nimport * as route10 from \"./routes/auth.login/route.jsx\";\nimport * as route11 from \"./routes/app.label.jsx\";\nimport * as route12 from \"./routes/webhooks.jsx\";\nimport * as route13 from \"./routes/_index/route.jsx\";\nimport * as route14 from \"./routes/auth.$.jsx\";\nimport * as route15 from \"./routes/app.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v2_dev\":{\"port\":\"36743\"},\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":true,\"v2_headers\":true,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/app.volume-discount.$functionId.$id\": {\n      id: \"routes/app.volume-discount.$functionId.$id\",\n      parentId: \"routes/app\",\n      path: \"volume-discount/:functionId/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/app.volume-discount.$functionId.new\": {\n      id: \"routes/app.volume-discount.$functionId.new\",\n      parentId: \"routes/app\",\n      path: \"volume-discount/:functionId/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/app.byXgetYdiscount.$id\": {\n      id: \"routes/app.byXgetYdiscount.$id\",\n      parentId: \"routes/app\",\n      path: \"byXgetYdiscount/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/app.byXgetYdiscount.new\": {\n      id: \"routes/app.byXgetYdiscount.new\",\n      parentId: \"routes/app\",\n      path: \"byXgetYdiscount/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/app.discountList\": {\n      id: \"routes/app.discountList\",\n      parentId: \"routes/app\",\n      path: \"discountList\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/app.labe.create\": {\n      id: \"routes/app.labe.create\",\n      parentId: \"routes/app\",\n      path: \"labe/create\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/app.additional\": {\n      id: \"routes/app.additional\",\n      parentId: \"routes/app\",\n      path: \"additional\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/app.shopInfo\": {\n      id: \"routes/app.shopInfo\",\n      parentId: \"routes/app\",\n      path: \"shopInfo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/app._index\": {\n      id: \"routes/app._index\",\n      parentId: \"routes/app\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/auth.login\": {\n      id: \"routes/auth.login\",\n      parentId: \"root\",\n      path: \"auth/login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/app.label\": {\n      id: \"routes/app.label\",\n      parentId: \"routes/app\",\n      path: \"label\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/webhooks\": {\n      id: \"routes/webhooks\",\n      parentId: \"root\",\n      path: \"webhooks\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/auth.$\": {\n      id: \"routes/auth.$\",\n      parentId: \"root\",\n      path: \"auth/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/app\": {\n      id: \"routes/app\",\n      parentId: \"root\",\n      path: \"app\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    }\n  };", "// @ts-nocheck\nimport { useQuery } from '@apollo/client';\nimport {useEffect} from \"react\";\n\nimport {\n  Box,\n  Card,\n  Layout,\n  Link,\n  List,\n  Page,\n  Text,\n  BlockStack,\n} from \"@shopify/polaris\";\nimport {GET_ID_FUNCTION} from \"~/graphql/query\";\nimport {authenticate} from \"~/shopify.server\";\nimport {json} from \"@remix-run/node\";\nimport {useActionData} from \"@remix-run/react\";\nexport async function action({ request }) {\n  const { admin } = await authenticate.admin(request);\n\n  const response = await admin.graphql(\n    `#graphql\n      query {\n  shopifyFunctions(first: 25) {\n    nodes {\n      app {\n        title\n      }\n      apiType\n      title\n      id\n    }\n  }\n}`\n  );\n\n  const responseJson = await response.json();\n\n  return json({\n    product: responseJson,\n  });\n}\nexport default function AdditionalPage() {\n  const actionData = useActionData();\n  useEffect(() => {\n    console.log(actionData)\n  }, [actionData]);\n\n  return (\n    <Page>\n      <ui-title-bar title=\"Additional page\" />\n      <Layout>\n        <Layout.Section>\n          <Card>\n            <BlockStack gap=\"300\">\n              <Text as=\"p\" variant=\"bodyMd\">\n                The app template comes with an additional page which\n                demonstrates how to create multiple pages within app navigation\n                using{\" \"}\n                <Link\n                  url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                  target=\"_blank\"\n                >\n                  App Bridge\n                </Link>\n                .\n              </Text>\n              <Text as=\"p\" variant=\"bodyMd\">\n                To create your own page and have it show up in the app\n                navigation, add a page inside <Code>app/routes</Code>, and a\n                link to it in the <Code>&lt;ui-nav-menu&gt;</Code> component\n                found in <Code>app/routes/app.jsx</Code>.\n              </Text>\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n        <Layout.Section>\n          <Card>\n            <BlockStack gap=\"200\">\n              <Text as=\"h2\" variant=\"headingMd\">\n                Resources\n              </Text>\n              <List gap=\"extraTight\">\n                <List.Item>\n                  <Link\n                    url=\"https://shopify.dev/docs/apps/design-guidelines/navigation#app-nav\"\n                    target=\"_blank\"\n                  >\n                    App nav best practices\n                  </Link>\n                </List.Item>\n              </List>\n            </BlockStack>\n          </Card>\n        </Layout.Section>\n      </Layout>\n    </Page>\n  );\n}\n\nfunction Code({ children }) {\n  return (\n    <Box\n      as=\"span\"\n      padding=\"025\"\n      paddingInlineStart=\"100\"\n      paddingInlineEnd=\"100\"\n      background=\"bg-surface-active\"\n      borderWidth=\"100\"\n      borderColor=\"border\"\n      borderRadius=\"100\"\n    >\n      <code>{children}</code>\n    </Box>\n  );\n}\n", "// @ts-nocheck\nimport { json } from \"@remix-run/node\";\nimport {\n  useLoaderData,\n} from \"@remix-run/react\";\n\nimport { authenticate } from \"~/shopify.server\";\nimport StoreModel from \"~/models/store.model\";\nimport axios from \"axios\";\nimport {BlockStack, Box, Card,  TextField} from \"@shopify/polaris\";\n\nexport const loader = async ({ request }) => {\n\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\",\n    },\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    }\n  );\n\n  return json({ shop: shopData });\n};\n\nexport default function Index() {\n  const {shop}= useLoaderData()\n  console.log(shop)\n  return (\n    <div>\n      <Box paddingBlockEnd=\"300\">\n        <Card>\n          <BlockStack>\n            <TextField\n              label=\"Name\"\n              autoComplete=\"on\"\n              value={shop.name}\n            />\n            <TextField\n              label=\"Email\"\n              autoComplete=\"on\"\n              value={shop.email}\n            />\n            <TextField\n              label=\"Access Token\"\n              autoComplete=\"on\"\n              value={shop.accessToken}\n            />\n            <TextField\n              label=\"Shop\"\n              autoComplete=\"on\"\n              value={shop.shop}\n            />\n            <TextField\n              label=\"Domain\"\n              autoComplete=\"on\"\n              value={shop.domain}\n            />\n            <TextField\n              label=\"Scope\"\n              autoComplete=\"on\"\n              value={shop.scope}\n            />\n            <TextField\n              label=\"My shop domain\"\n              autoComplete=\"on\"\n              value={shop.myshopify_domain}\n            />\n            <TextField\n              label=\"Country\"\n              autoComplete=\"on\"\n              value={shop.country_name}\n            />\n            <TextField\n              label=\"Phone\"\n              autoComplete=\"on\"\n              value={shop.phone}\n            />\n          </BlockStack>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n", "import { useEffect } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport {\n  useActionData,\n  useLoaderData,\n  useNavigation,\n  useSubmit,\n} from \"@remix-run/react\";\nimport {\n  Page,\n  Layout,\n  Text,\n  BlockStack,\n  Card,\n  Button,\n  InlineStack,\n  Box,\n  Divider,\n  List,\n  Link,\n} from \"@shopify/polaris\";\n\nimport { authenticate } from \"~/shopify.server\";\n\nexport const loader = async ({ request }) => {\n  const { session } = await authenticate.admin(request);\n\n  return json({ shop: session.shop.replace(\".myshopify.com\", \"\") });\n};\n\nexport async function action({ request }) {\n  const { admin } = await authenticate.admin(request);\n\n  const color = [\"Red\", \"Orange\", \"Yellow\", \"Green\"][\n    Math.floor(Math.random() * 4)\n  ];\n  const response = await admin.graphql(\n    `#graphql\n      mutation populateProduct($input: ProductInput!) {\n        productCreate(input: $input) {\n          product {\n            id\n            title\n            handle\n            status\n            variants(first: 10) {\n              edges {\n                node {\n                  id\n                  price\n                  barcode\n                  createdAt\n                }\n              }\n            }\n          }\n        }\n      }`,\n    {\n      variables: {\n        input: {\n          title: `${color} Snowboard`,\n          variants: [{ price: Math.random() * 100 }],\n        },\n      },\n    }\n  );\n\n  const responseJson = await response.json();\n\n  return json({\n    product: responseJson.data.productCreate.product,\n  });\n}\n\nexport default function Index() {\n  const nav = useNavigation();\n  const { shop } = useLoaderData();\n  const actionData = useActionData();\n  const submit = useSubmit();\n\n  const isLoading =\n    [\"loading\", \"submitting\"].includes(nav.state) && nav.formMethod === \"POST\";\n  const productId = actionData?.product?.id.replace(\n    \"gid://shopify/Product/\",\n    \"\"\n  );\n\n  useEffect(() => {\n    if (productId) {\n      shopify.toast.show(\"Product created\");\n    }\n  }, [productId]);\n\n  const generateProduct = () => submit({}, { replace: true, method: \"POST\" });\n\n  return (\n    <Page>\n      <ui-title-bar title=\"Remix app template\">\n        <button variant=\"primary\" onClick={generateProduct}>\n          Generate a product\n        </button>\n      </ui-title-bar>\n      <BlockStack gap=\"500\">\n        <Layout>\n          <Layout.Section>\n            <Card>\n              <BlockStack gap=\"500\">\n                <BlockStack gap=\"200\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Congrats on creating a new Shopify app \uD83C\uDF89\n                  </Text>\n                  <Text variant=\"bodyMd\" as=\"p\">\n                    This embedded app template uses{\" \"}\n                    <Link\n                      url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                      target=\"_blank\"\n                    >\n                      App Bridge\n                    </Link>{\" \"}\n                    interface examples like an{\" \"}\n                    <Link url=\"/app/additional\">\n                      additional page in the app nav\n                    </Link>\n                    , as well as an{\" \"}\n                    <Link\n                      url=\"https://shopify.dev/docs/api/admin-graphql\"\n                      target=\"_blank\"\n                    >\n                      Admin GraphQL\n                    </Link>{\" \"}\n                    mutation demo, to provide a starting point for app\n                    development.\n                  </Text>\n                </BlockStack>\n                <BlockStack gap=\"200\">\n                  <Text as=\"h3\" variant=\"headingMd\">\n                    Get started with products\n                  </Text>\n                  <Text as=\"p\" variant=\"bodyMd\">\n                    Generate a product with GraphQL and get the JSON output for\n                    that product. Learn more about the{\" \"}\n                    <Link\n                      url=\"https://shopify.dev/docs/api/admin-graphql/latest/mutations/productCreate\"\n                      target=\"_blank\"\n                    >\n                      productCreate\n                    </Link>{\" \"}\n                    mutation in our API references.\n                  </Text>\n                </BlockStack>\n                <InlineStack gap=\"300\" align=\"end\">\n                  {actionData?.product && (\n                    <Button\n                      url={`https://admin.shopify.com/store/${shop}/admin/products/${productId}`}\n                      target=\"_blank\"\n                    >\n                      View product\n                    </Button>\n                  )}\n                  <Button\n                    loading={isLoading}\n                    variant=\"primary\"\n                    onClick={generateProduct}\n                  >\n                    Generate a product\n                  </Button>\n                </InlineStack>\n                {actionData?.product && (\n                  <Box\n                    padding=\"400\"\n                    background=\"bg-surface-active\"\n                    borderColor=\"border\"\n                    borderWidth=\"100\"\n                    borderRadius=\"200\"\n                    overflowX=\"scroll\"\n                  >\n                    <pre style={{ margin: 0 }}>\n                      <code>{JSON.stringify(actionData.product, null, 2)}</code>\n                    </pre>\n                  </Box>\n                )}\n              </BlockStack>\n            </Card>\n          </Layout.Section>\n          <Layout.Section>\n            <BlockStack gap=\"500\">\n              <Card>\n                <BlockStack gap=\"200\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    App template specs\n                  </Text>\n                  <BlockStack gap=\"200\">\n                    <Divider />\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Framework\n                      </Text>\n                      <Link url=\"https://remix.run\" target=\"_blank\">\n                        Remix\n                      </Link>\n                    </InlineStack>\n                    <Divider />\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Database\n                      </Text>\n                      <Link url=\"https://www.prisma.io/\" target=\"_blank\">\n                        Prisma\n                      </Link>\n                    </InlineStack>\n                    <Divider />\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        Interface\n                      </Text>\n                      <span>\n                        <Link url=\"https://polaris.shopify.com\" target=\"_blank\">\n                          Polaris\n                        </Link>\n                        {\", \"}\n                        <Link\n                          url=\"https://shopify.dev/docs/apps/tools/app-bridge\"\n                          target=\"_blank\"\n                        >\n                          App Bridge\n                        </Link>\n                      </span>\n                    </InlineStack>\n                    <Divider />\n                    <InlineStack align=\"space-between\">\n                      <Text as=\"span\" variant=\"bodyMd\">\n                        API\n                      </Text>\n                      <Link\n                        url=\"https://shopify.dev/docs/api/admin-graphql\"\n                        target=\"_blank\"\n                      >\n                        GraphQL API\n                      </Link>\n                    </InlineStack>\n                  </BlockStack>\n                </BlockStack>\n              </Card>\n              <Card>\n                <BlockStack gap=\"200\">\n                  <Text as=\"h2\" variant=\"headingMd\">\n                    Next steps\n                  </Text>\n                  <List>\n                    <List.Item>\n                      Build an{\" \"}\n                      <Link\n                        url=\"https://shopify.dev/docs/apps/getting-started/build-app-example\"\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        example app\n                      </Link>{\" \"}\n                      to get started\n                    </List.Item>\n                    <List.Item>\n                      Explore Shopify\u2019s API with{\" \"}\n                      <Link\n                        url=\"https://shopify.dev/docs/apps/tools/graphiql-admin-api\"\n                        target=\"_blank\"\n                      >\n                        GraphiQL\n                      </Link>\n                    </List.Item>\n                  </List>\n                </BlockStack>\n              </Card>\n            </BlockStack>\n          </Layout.Section>\n        </Layout>\n      </BlockStack>\n    </Page>\n  );\n}\n", "import { useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport {\n  AppProvider as PolarisAppProvider,\n  Button,\n  Card,\n  FormLayout,\n  Page,\n  Text,\n  TextField } from\n\"@shopify/polaris\";\n\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\n\nimport { login } from \"../../shopify.server\";\nimport { loginErrorMessage } from \"./error.server\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport async function loader({ request }) {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors,\n    polarisTranslations: require(`@shopify/polaris/locales/en.json`)\n  });\n}\n\nexport async function action({ request }) {\n  const errors = loginErrorMessage(await login(request));\n\n  return json({\n    errors\n  });\n}\n\nexport default function Auth() {\n  const { polarisTranslations } = useLoaderData();\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  const [shop, setShop] = useState(\"\");\n  const { errors } = actionData || loaderData;\n\n  return (\n    <PolarisAppProvider i18n={polarisTranslations}>\n      <Page>\n        <Card>\n          <Form method=\"post\">\n            <FormLayout>\n              <Text variant=\"headingMd\" as=\"h2\">\n                Log in\n              </Text>\n              <TextField\n                type=\"text\"\n                name=\"shop\"\n                label=\"Shop domain\"\n                helpText=\"example.myshopify.com\"\n                value={shop}\n                onChange={setShop}\n                autoComplete=\"on\"\n                error={errors.shop} />\n\n              <Button submit>Log in</Button>\n            </FormLayout>\n          </Form>\n        </Card>\n      </Page>\n    </PolarisAppProvider>);\n\n}", "import { LoginErrorType } from \"@shopify/shopify-app-remix/server\";\n\nexport function loginErrorMessage(loginErrors) {\n  if (loginErrors?.shop === LoginErrorType.MissingShop) {\n    return { shop: \"Please enter your shop domain to log in\" };\n  } else if (loginErrors?.shop === LoginErrorType.InvalidShop) {\n    return { shop: \"Please enter a valid shop domain to log in\" };\n  }\n\n  return {};\n}\n", "import { EmptyState } from \"@shopify/polaris\";\nimport React from \"react\";\nimport { useNavigate } from \"@remix-run/react\";\n\nconst EmptyDiscountState = ({ onAction }) => (\n  <EmptyState\n    heading=\"Create your first label\"\n    action={{\n      content: \"Create label\",\n      onAction,\n    }}\n    secondaryAction={{\n      content: 'Learn more',\n      url: 'https://help.shopify.com',\n    }}\n    image=\"https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png\"\n  >\n    <p>Create labels by adding text or images to your product images to highlight key features</p>\n  </EmptyState>\n);\n\nconst LabelList = () => {\n  const ListLabel = [123, 23];\n  const navigate = useNavigate();\n\n  return (\n    <>\n      {\n      ListLabel.length === 2 ? (\n        <EmptyDiscountState onAction={() => navigate(`../../app/label/create`)} />\n      ) : (\n        <div>\n          123\n        </div>\n      )\n      }\n    </>\n  );\n};\nexport  default LabelList\n", "import { authenticate } from \"../shopify.server\";\nimport db from \"../db.server\";\n\nexport const action = async ({ request }) => {\n  const { topic, shop, session } = await authenticate.webhook(request);\n\n  switch (topic) {\n    case \"APP_UNINSTALLED\":\n      if (session) {\n        await db.session.deleteMany({ where: { shop } });\n      }\n      break;\n    case \"CUSTOMERS_DATA_REQUEST\":\n    case \"CUSTOMERS_REDACT\":\n    case \"SHOP_REDACT\":\n    default:\n      throw new Response(\"Unhandled webhook topic\", { status: 404 });\n  }\n\n  throw new Response();\n};\n", "import { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\n\nimport { login } from \"../../shopify.server\";\n\nimport indexStyles from \"./style.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: indexStyles }];\n\nexport async function loader({ request }) {\n  const url = new URL(request.url);\n\n  if (url.searchParams.get(\"shop\")) {\n    throw redirect(`/app?${url.searchParams.toString()}`);\n  }\n\n  return json({ showForm: Boolean(login) });\n}\n\nexport default function App() {\n  const { showForm } = useLoaderData();\n\n  return (\n    <div className=\"index\">\n      <div className=\"content\">\n        <h1>A short heading about [your app]</h1>\n        <p>A tagline about [your app] that describes your value proposition.</p>\n        {showForm &&\n        <Form method=\"post\" action=\"/auth/login\">\n            <label>\n              <span>Shop domain</span>\n              <input type=\"text\" name=\"shop\" />\n              <span>e.g: my-shop-domain.myshopify.com</span>\n            </label>\n            <button type=\"submit\">Log in</button>\n          </Form>}\n\n        <ul>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n          <li>\n            <strong>Product feature</strong>. Some detail about your feature and\n            its benefit to your customer.\n          </li>\n        </ul>\n      </div>\n    </div>);\n\n}", "import { authenticate } from \"../shopify.server\";\n\nexport async function loader({ request }) {\n  await authenticate.admin(request);\n\n  return null;\n}\n", "import { useEffect, useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useRouteError } from \"@remix-run/react\";\nimport { Provider as AppBridgeReactProvider } from \"@shopify/app-bridge-react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nimport { DiscountProvider } from \"~/components/providers/DiscountProvider\";\nimport { boundary } from \"@shopify/shopify-app-remix/server\";\nimport { AppProvider } from \"@shopify/shopify-app-remix/react\";\n\nimport { authenticate } from \"~/shopify.server\";\nimport axios from \"axios\";\nimport StoreModel from \"~/models/store.model\";\n// @ts-ignore\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_STORE } from \"~/graphql/mutation\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: polarisStyles }];\n\nexport async function loader({ request }) {\n  await authenticate.admin(request);\n  const url = new URL(request.url);\n  const { session } = await authenticate.admin(request);\n  let shop;\n  const config = {\n    headers: {\n      \"X-Shopify-Access-Token\": session.accessToken,\n      \"Accept-Encoding\": \"application/json\"\n    }\n  };\n  shop = await axios.get(\n    `https://${session.shop}/admin/api/2023-10/shop.json`,\n    config\n  );\n  shop = shop.data.shop;\n  const shopData = await StoreModel.findOne(\n    {\n      id: shop.id\n    });\n\n  return json({\n    apiKey: process.env.SHOPIFY_API_KEY,\n    host: url.searchParams.get(\"host\"),\n    shop: shopData,\n    session: session,\n    shopInfo: shop\n  });\n}\n\nexport default function App() {\n  const { apiKey, host, shop, shopInfo, session } = useLoaderData();\n\n  const [timeZone, setTimeZone] = useState(shopInfo.iana_timezone);\n  const [createStore] = useMutation(CREATE_STORE);\n  const [storeCreated, setStoreCreated] = useState(false); // State to track if store has been created\n\n  const storeCreate = async () => {\n    try {\n      const createPromise = await createStore({\n        variables: {\n          input: {\n            id: shopInfo.id.toString(),\n            name: shopInfo.name,\n            email: shopInfo.email,\n            shop: shopInfo.name,\n            domain: shopInfo.domain,\n            scope: session.scope,\n            country: shopInfo.country_name,\n            customer_email: shopInfo.customer_email,\n            myshopify_domain: shopInfo.myshopify_domain,\n            plan_name: shopInfo.plan_name,\n            plan_display_name: shopInfo.plan_display_name,\n            shop_owner: shopInfo.shop_owner,\n            iana_timezone: shopInfo.iana_timezone,\n            currency: shopInfo.currency,\n            address1: shopInfo.address1 || \"NULL\",\n            address2: shopInfo.address2 || \"NULL\",\n            phone: shopInfo.phone || \"NULL\",\n            created_at: shopInfo.created_at,\n            accessToken: session.accessToken\n          }\n        }\n      });\n\n      const timeoutPromise = new Promise((_resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error('Update program timed out'));\n        }, 10000);\n      });\n\n      await Promise.race([createPromise, timeoutPromise]);\n      // shopify.toast.show('Updated successfully');\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    if (shop) {\n      setTimeZone(shop.iana_timezone);\n\n    } else {\n      setTimeZone(shopInfo.iana_timezone);\n      setStoreCreated(true);\n\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (storeCreated)\n    {\n      storeCreate().then();\n    }\n  }, [storeCreated]);\n\n\n  const [config] = useState({ host, apiKey });\n  return (\n    <AppProvider isEmbeddedApp apiKey={apiKey}>\n      <AppBridgeReactProvider config={config}>\n        <DiscountProvider timezone={timeZone}>\n          <ui-nav-menu>\n            <Link to=\"/app\" rel=\"home\">\n              Home\n            </Link>\n            {/*<Link to=\"/app/additional\">Additional page</Link>*/}\n            <Link to=\"/app/discountList\">Discounts List</Link>\n            <Link to=\"/app/shopInfo\">Shop Infomation</Link>\n            <Link to=\"/app/label\">Label</Link>\n          </ui-nav-menu>\n          <Outlet />\n        </DiscountProvider>\n      </AppBridgeReactProvider>\n    </AppProvider>);\n\n}\n\n// Shopify needs Remix to catch some thrown responses, so that their headers are included in the response.\nexport function ErrorBoundary() {\n  return boundary.error(useRouteError());\n}\n\nexport const headers = ( /** @type {import(\"@remix-run/node\").HeadersArgs} */headersArgs) => {\n  return boundary.headers(headersArgs);\n};", "import { AppProvider } from \"@shopify/discount-app-components\";\nimport \"@shopify/discount-app-components/build/esm/styles.css?__remix_sideEffect__\";\n\n\nexport function DiscountProvider({ children, timezone }) {\n  return (\n    <AppProvider locale=\"en-US\" ianaTimezone={timezone}>\n      {children}\n    </AppProvider>);\n\n}", "export default {'entry':{'module':'/build/entry.client-RL4CBNRS.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-OOXE47GJ.js','/build/_shared/chunk-TFSQ7PF6.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-WPCLGD5A.js','imports':['/build/_shared/chunk-VJGS4LNA.js','/build/_shared/chunk-UCOQG5ZQ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-TFHNH54L.js','imports':['/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app':{'id':'routes/app','parentId':'root','path':'app','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app-WL2TFRVJ.js','imports':['/build/_shared/chunk-NMZL6IDN.js','/build/_shared/chunk-QDXPZB3I.js','/build/_shared/chunk-S6Y3EBRO.js','/build/_shared/chunk-HN52GLY7.js','/build/_shared/chunk-CB7CFRQ5.js','/build/_shared/chunk-X4VQBRVX.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/app._index':{'id':'routes/app._index','parentId':'routes/app','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/app._index-VFZNXVA4.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.additional':{'id':'routes/app.additional','parentId':'routes/app','path':'additional','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.additional-WITVK3RH.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.byXgetYdiscount.$id':{'id':'routes/app.byXgetYdiscount.$id','parentId':'routes/app','path':'byXgetYdiscount/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.byXgetYdiscount.$id-IXMNYZXS.js','imports':['/build/_shared/chunk-E2CTCRX3.js','/build/_shared/chunk-OWNOZYKR.js','/build/_shared/chunk-VJGS4LNA.js','/build/_shared/chunk-UCOQG5ZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.byXgetYdiscount.new':{'id':'routes/app.byXgetYdiscount.new','parentId':'routes/app','path':'byXgetYdiscount/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.byXgetYdiscount.new-JSKODKFO.js','imports':['/build/_shared/chunk-E2CTCRX3.js','/build/_shared/chunk-OWNOZYKR.js','/build/_shared/chunk-VJGS4LNA.js','/build/_shared/chunk-UCOQG5ZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.discountList':{'id':'routes/app.discountList','parentId':'routes/app','path':'discountList','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.discountList-BQS3OBPR.js','imports':['/build/_shared/chunk-OWNOZYKR.js','/build/_shared/chunk-VJGS4LNA.js','/build/_shared/chunk-UCOQG5ZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.labe.create':{'id':'routes/app.labe.create','parentId':'routes/app','path':'labe/create','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.labe.create-YBL3X6Q7.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.label':{'id':'routes/app.label','parentId':'routes/app','path':'label','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.label-RED56K5W.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.shopInfo':{'id':'routes/app.shopInfo','parentId':'routes/app','path':'shopInfo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.shopInfo-TO4UVCHK.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.volume-discount.$functionId.$id':{'id':'routes/app.volume-discount.$functionId.$id','parentId':'routes/app','path':'volume-discount/:functionId/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.volume-discount.$functionId.$id-OANKJE35.js','imports':['/build/_shared/chunk-SU66BP3D.js','/build/_shared/chunk-E2CTCRX3.js','/build/_shared/chunk-UCOQG5ZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/app.volume-discount.$functionId.new':{'id':'routes/app.volume-discount.$functionId.new','parentId':'routes/app','path':'volume-discount/:functionId/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/app.volume-discount.$functionId.new-GANO6EAF.js','imports':['/build/_shared/chunk-SU66BP3D.js','/build/_shared/chunk-E2CTCRX3.js','/build/_shared/chunk-OWNOZYKR.js','/build/_shared/chunk-VJGS4LNA.js','/build/_shared/chunk-UCOQG5ZQ.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.$':{'id':'routes/auth.$','parentId':'root','path':'auth/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.$-4B5WQABX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth.login':{'id':'routes/auth.login','parentId':'root','path':'auth/login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth.login-G6C6ZVMV.js','imports':['/build/_shared/chunk-QDXPZB3I.js','/build/_shared/chunk-3GJP5LZF.js','/build/_shared/chunk-X4VQBRVX.js','/build/_shared/chunk-G7CHZRZX.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/webhooks':{'id':'routes/webhooks','parentId':'root','path':'webhooks','index':undefined,'caseSensitive':undefined,'module':'/build/routes/webhooks-JFV2P4HI.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'5f6f4e76','hmr':{'runtime':'/build/_shared/chunk-TFSQ7PF6.js','timestamp':1714898973758},'url':'/build/manifest-5F6F4E76.js'};"],
  "mappings": "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",
  "names": ["import_server", "import_node", "mongoose", "import_mongoose", "Schema", "mongoose", "discountSchema", "import_mongoose", "Schema", "mongoose", "express", "cors", "import_mongoose", "shopify", "mongoose", "shopify", "import_react", "import_client", "import_jsx_dev_runtime", "headers", "import_react", "import_node", "import_polaris", "import_jsx_dev_runtime", "import_client", "import_client", "import_jsx_dev_runtime", "_a", "axios", "active", "discount", "action", "loader", "import_react", "import_node", "import_react_form", "import_client", "import_react_i18n", "import_discount_app_components", "import_polaris", "import_client", "import_axios", "import_jsx_dev_runtime", "EmptyProductSelected", "action", "_a", "loader", "axios", "active", "action", "loader", "import_discount_app_components", "import_polaris", "import_react", "import_react_form", "import_react_i18n", "import_client", "import_node", "import_axios", "import_jsx_dev_runtime", "EmptyProductSelected", "action", "_a", "loader", "axios", "active", "id", "_b", "action", "loader", "import_discount_app_components", "import_polaris", "import_react", "import_react_form", "import_react_i18n", "import_node", "import_client", "import_axios", "import_jsx_dev_runtime", "EmptyProductSelected", "action", "_a", "loader", "axios", "getId", "ByXGetYDiscount", "active", "action", "loader", "import_polaris", "import_react", "import_node", "import_discount_app_components", "import_client", "import_axios", "import_jsx_dev_runtime", "action", "loader", "_a", "axios", "getId", "active", "discount", "action", "import_client", "import_react", "import_polaris", "import_node", "import_react", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_axios", "import_polaris", "import_jsx_dev_runtime", "loader", "axios", "action", "Index", "loader", "import_react", "import_node", "import_polaris", "import_jsx_dev_runtime", "loader", "action", "Index", "_a", "action", "loader", "import_react", "import_node", "import_polaris", "import_server", "import_jsx_dev_runtime", "loader", "action", "PolarisAppProvider", "import_polaris", "import_react", "import_jsx_dev_runtime", "EmptyDiscountState", "action", "action", "route_exports", "App", "links", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "links", "loader", "App", "loader", "loader", "App", "links", "loader", "import_react", "import_node", "import_discount_app_components", "import_jsx_dev_runtime", "import_server", "import_react", "import_axios", "import_client", "import_jsx_dev_runtime", "links", "loader", "axios", "App", "AppBridgeReactProvider", "route_exports"]
}
