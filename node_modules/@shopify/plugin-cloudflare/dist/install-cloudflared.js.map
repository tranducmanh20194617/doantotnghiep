{"version":3,"file":"install-cloudflared.js","sourceRoot":"","sources":["../src/install-cloudflared.ts"],"names":[],"mappings":"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","sourcesContent":["// Install script for cloudflared, derived from https://github.com/JacobLinCool/node-cloudflared\nimport {basename, dirname, joinPath} from '@shopify/cli-kit/node/path'\nimport {outputDebug} from '@shopify/cli-kit/node/output'\nimport {\n  chmod,\n  fileExistsSync,\n  mkdirSync,\n  renameFile,\n  unlinkFileSync,\n  createFileWriteStream,\n} from '@shopify/cli-kit/node/fs'\nimport {fileURLToPath} from 'url'\nimport util from 'util'\nimport {pipeline} from 'stream'\n// eslint-disable-next-line no-restricted-imports\nimport {execSync, execFileSync} from 'child_process'\n\nexport const CURRENT_CLOUDFLARE_VERSION = '2024.2.1'\nconst CLOUDFLARE_REPO = `https://github.com/cloudflare/cloudflared/releases/download/${CURRENT_CLOUDFLARE_VERSION}/`\n\nconst LINUX_URL: {[key: string]: string} = {\n  arm64: 'cloudflared-linux-arm64',\n  arm: 'cloudflared-linux-arm',\n  x64: 'cloudflared-linux-amd64',\n  ia32: 'cloudflared-linux-386',\n}\n\nconst MACOS_URL: {[key: string]: string} = {\n  arm64: 'cloudflared-darwin-amd64.tgz',\n  x64: 'cloudflared-darwin-amd64.tgz',\n}\n\nconst WINDOWS_URL: {[key: string]: string} = {\n  x64: 'cloudflared-windows-amd64.exe',\n  ia32: 'cloudflared-windows-386.exe',\n  arm64: 'cloudflared-windows-amd64.exe',\n}\n\nconst URL: {[key: string]: {[key: string]: string}} = {\n  linux: LINUX_URL,\n  darwin: MACOS_URL,\n  win32: WINDOWS_URL,\n}\n\nfunction getURL(platform = process.platform, arch = process.arch) {\n  const keys = Object.keys(URL)\n  if (!keys.includes(platform)) throw new Error(`Unsupported system platform: ${platform}`)\n\n  const fileName = URL[platform]![arch]\n  if (fileName === undefined) {\n    throw new Error(`Unsupported system arch: ${arch}`)\n  }\n  return CLOUDFLARE_REPO + fileName\n}\n\n/**\n * Get the path where the binary should be installed.\n * If the environment variable SHOPIFY_CLI_CLOUDFLARED_PATH is set, use that.\n */\nfunction getBinPathTarget(env = process.env, platform = process.platform) {\n  if (env.SHOPIFY_CLI_CLOUDFLARED_PATH) {\n    return env.SHOPIFY_CLI_CLOUDFLARED_PATH\n  }\n  return joinPath(\n    dirname(fileURLToPath(import.meta.url)),\n    '..',\n    'bin',\n    platform === 'win32' ? 'cloudflared.exe' : 'cloudflared',\n  )\n}\n\nexport default async function install(env = process.env, platform = process.platform, arch = process.arch) {\n  if (env.SHOPIFY_CLI_IGNORE_CLOUDFLARED) {\n    outputDebug('Skipping cloudflared installation because SHOPIFY_CLI_IGNORE_CLOUDFLARED is set')\n    return\n  }\n\n  const fileUrlPath = getURL(platform, arch)\n  const binTarget = getBinPathTarget(env, platform)\n\n  if (fileExistsSync(binTarget)) {\n    // --version returns an string like \"cloudflared version 2023.3.1 (built 2023-03-13-1444 UTC)\"\n    try {\n      const versionArray = execFileSync(binTarget, ['--version'], {encoding: 'utf8'}).split(' ')\n      const versionNumber = versionArray.length > 2 ? versionArray[2] : '0.0.0'\n      const needsUpdate = versionIsGreaterThan(CURRENT_CLOUDFLARE_VERSION, versionNumber!)\n      if (!needsUpdate) {\n        outputDebug('cloudflared already installed, skipping')\n        return\n      }\n      // eslint-disable-next-line no-catch-all/no-catch-all\n    } catch {\n      outputDebug('version check failed, reinstalling')\n    }\n  }\n\n  if (platform === 'linux') {\n    await installLinux(fileUrlPath, binTarget)\n  } else if (platform === 'darwin') {\n    await installMacos(fileUrlPath, binTarget)\n  } else if (platform === 'win32') {\n    await installWindows(fileUrlPath, binTarget)\n  } else {\n    throw new Error(`Unsupported platform: ${platform}`)\n  }\n}\n\nexport function versionIsGreaterThan(versionA: string, versionB: string) {\n  const [majorA, minorA, patchA] = versionA.split('.').map(Number)\n  const [majorB, minorB, patchB] = versionB.split('.').map(Number)\n\n  // Compare major versions\n  if (majorA !== majorB) return (majorA ?? 0) > (majorB ?? 0)\n\n  // If major versions are equal, compare minor versions\n  if (minorA !== minorB) return (minorA ?? 0) > (minorB ?? 0)\n\n  // If minor versions are also equal, compare patch versions\n  return (patchA ?? 0) > (patchB ?? 0)\n}\n\nasync function installLinux(file: string, binTarget: string) {\n  await downloadFile(file, binTarget)\n  await chmod(binTarget, '755')\n}\n\nasync function installWindows(file: string, binTarget: string) {\n  await downloadFile(file, binTarget)\n}\n\nasync function installMacos(file: string, binTarget: string) {\n  await downloadFile(file, `${binTarget}.tgz`)\n  const filename = basename(`${binTarget}.tgz`)\n  execSync(`tar -xzf ${filename}`, {cwd: dirname(binTarget)})\n  unlinkFileSync(`${binTarget}.tgz`)\n  await renameFile(`${dirname(binTarget)}/cloudflared`, binTarget)\n}\n\nasync function downloadFile(url: string, to: string) {\n  if (!fileExistsSync(dirname(to))) {\n    mkdirSync(dirname(to))\n  }\n  const streamPipeline = util.promisify(pipeline)\n  const response = await fetch(url, {redirect: 'follow'})\n  if (!response.ok || !response.body)\n    throw new Error(`Couldn't download file ${url} (${response.status} ${response.statusText})`)\n  const fileObject = createFileWriteStream(to)\n  await streamPipeline(response.body, fileObject)\n  return to\n}\n"]}