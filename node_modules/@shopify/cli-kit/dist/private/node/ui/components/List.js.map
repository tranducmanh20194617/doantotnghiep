{"version":3,"file":"List.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/List.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAyB,aAAa,EAAC,MAAM,oBAAoB,CAAA;AACxE,OAAO,EAAC,GAAG,EAAE,IAAI,EAAY,MAAM,KAAK,CAAA;AACxC,OAAO,KAA0B,MAAM,OAAO,CAAA;AAoB9C,MAAM,GAAG,GAAG,GAAG,CAAA;AAEf;;;GAGG;AACH,MAAM,IAAI,GAAiC,CAAC,EAC1C,KAAK,EACL,KAAK,EACL,MAAM,GAAG,IAAI,EACb,OAAO,GAAG,KAAK,EACf,KAAK,EACL,MAAM,GAAG,GAAG,GACb,EAAe,EAAE;IAChB,SAAS,gBAAgB,CAAC,IAA6C;QACrE,OAAQ,IAAuB,CAAC,IAAI,KAAK,SAAS,CAAA;IACpD,CAAC;IAED,SAAS,eAAe,CAAC,IAAc,EAAE,KAAa;QACpD,MAAM,YAAY,GAAG;YACnB,KAAK;YACL,KAAK;YACL,MAAM;YACN,OAAO;YACP,IAAI,EAAE,IAA8B;SACrC,CAAA;QACD,OAAO,gBAAgB,CAAC,IAAI,CAAC;YAC3B,CAAC,CAAC;gBACE,GAAG,YAAY;gBACf,GAAG,IAAI;aACR;YACH,CAAC,CAAC,YAAY,CAAA;IAClB,CAAC;IAUD,MAAM,QAAQ,GAAqC,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAC,EAAE,EAAE;QAC3F,OAAO,CACL,oBAAC,GAAG,IAAC,GAAG,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,oBAAC,IAAI,IAAC,KAAK,EAAE,KAAK,IAAG,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAQ;YAEpE,oBAAC,GAAG,IAAC,QAAQ,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC;gBAC7B,oBAAC,IAAI,IAAC,KAAK,EAAE,KAAK;oBAChB,oBAAC,aAAa,IAAC,IAAI,EAAE,IAAI,GAAI,CACxB,CACH,CACF,CACP,CAAA;IACH,CAAC,CAAA;IAED,OAAO,CACL,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ;QACxB,KAAK,CAAC,CAAC,CAAC,CACP,oBAAC,IAAI,IAAC,KAAK,EAAE,KAAK;YAChB,oBAAC,aAAa,IAAC,IAAI,EAAE,KAAK,GAAI,CACzB,CACR,CAAC,CAAC,CAAC,IAAI;QACP,KAAK,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAC,EAAE,EAAE,CAAC,CACzE,oBAAC,QAAQ,IAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,GAAI,CACnG,CAAC,CACE,CACP,CAAA;AACH,CAAC,CAAA;AAED,OAAO,EAAC,IAAI,EAAC,CAAA","sourcesContent":["import {InlineToken, TokenItem, TokenizedText} from './TokenizedText.js'\nimport {Box, Text, TextProps} from 'ink'\nimport React, {FunctionComponent} from 'react'\n\nexport interface CustomListItem {\n  type?: string\n  item: TokenItem<InlineToken>\n  bullet?: string\n  color?: TextProps['color']\n}\n\ntype ListItem = TokenItem<InlineToken> | CustomListItem\n\ninterface ListProps {\n  title?: TokenItem<InlineToken>\n  items: ListItem[]\n  ordered?: boolean\n  margin?: boolean\n  color?: TextProps['color']\n  bullet?: string\n}\n\nconst DOT = 'â€¢'\n\n/**\n * `List` displays an unordered or ordered list with text aligned with the bullet point\n * and wrapped to the container width.\n */\nconst List: FunctionComponent<ListProps> = ({\n  title,\n  items,\n  margin = true,\n  ordered = false,\n  color,\n  bullet = DOT,\n}): JSX.Element => {\n  function isCustomListItem(item: TokenItem<InlineToken> | CustomListItem): item is CustomListItem {\n    return (item as CustomListItem).item !== undefined\n  }\n\n  function resolveListItem(item: ListItem, index: number) {\n    const resolvedItem = {\n      index,\n      color,\n      bullet,\n      ordered,\n      item: item as TokenItem<InlineToken>,\n    }\n    return isCustomListItem(item)\n      ? {\n          ...resolvedItem,\n          ...item,\n        }\n      : resolvedItem\n  }\n\n  interface ListItemProps {\n    item: TokenItem<InlineToken>\n    color: TextProps['color']\n    bullet: string\n    index: number\n    ordered: boolean\n  }\n\n  const ListItem: FunctionComponent<ListItemProps> = ({item, color, bullet, index, ordered}) => {\n    return (\n      <Box key={index} marginLeft={margin ? 2 : 0}>\n        <Text color={color}>{`${ordered ? `${index + 1}.` : bullet}`}</Text>\n\n        <Box flexGrow={1} marginLeft={1}>\n          <Text color={color}>\n            <TokenizedText item={item} />\n          </Text>\n        </Box>\n      </Box>\n    )\n  }\n\n  return (\n    <Box flexDirection=\"column\">\n      {title ? (\n        <Text color={color}>\n          <TokenizedText item={title} />\n        </Text>\n      ) : null}\n      {items.map(resolveListItem).map(({index, item, color, bullet, ordered}) => (\n        <ListItem key={index} item={item} color={color} bullet={bullet} index={index} ordered={ordered} />\n      ))}\n    </Box>\n  )\n}\n\nexport {List}\n"]}