{"version":3,"file":"custom-oclif-loader.js","sourceRoot":"","sources":["../../../src/public/node/custom-oclif-loader.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,MAAM,EAAC,MAAM,aAAa,CAAA;AAG3C,MAAM,OAAO,aAAc,SAAQ,MAAM;IACvC,YAAY,OAAgB;QAC1B,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,wCAAwC;QACxC,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAA;IACjD,CAAC;IAED,cAAc,CAAC,QAA4B;QACzC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,CAAA;QACpD,MAAM,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;YAC1D,gDAAgD;YAChD,MAAM,YAAY,GAAG,QAAQ,CAAC,WAAW,IAAI,oBAAoB,CAAA;YACjE,gDAAgD;YAChD,MAAM,YAAY,GAAG,QAAQ,CAAC,WAAW,IAAI,oBAAoB,CAAA;YACjE,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;YACjD,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,CAAA;YAEjD,qFAAqF;YACrF,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,IAAI,QAAQ,CAAC,WAAW,KAAK,uBAAuB,EAAE;gBACtF,8CAA8C;gBAC9C,OAAO,CAAC,CAAA;aACT;YAED,IAAI,QAAQ,CAAC,WAAW,KAAK,uBAAuB,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,EAAE;gBACtF,8CAA8C;gBAC9C,OAAO,CAAC,CAAC,CAAA;aACV;YAED,6FAA6F;YAC7F,gEAAgE;YAChE,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,EAAE;gBACpE,wDAAwD;gBACxD,OAAO,MAAM,GAAG,MAAM,CAAA;aACvB;YAED,kDAAkD;YAClD,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,EAAE;gBACpE,OAAO,CAAC,CAAA;aACT;YAED,kDAAkD;YAClD,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,IAAI,QAAQ,CAAC,UAAU,KAAK,MAAM,EAAE;gBACpE,OAAO,CAAC,CAAC,CAAA;aACV;YAED,iDAAiD;YACjD,IAAI,QAAQ,CAAC,UAAU,KAAK,KAAK,IAAI,QAAQ,CAAC,UAAU,KAAK,KAAK,EAAE;gBAClE,OAAO,CAAC,CAAA;aACT;YAED,iDAAiD;YACjD,IAAI,QAAQ,CAAC,UAAU,KAAK,KAAK,IAAI,QAAQ,CAAC,UAAU,KAAK,KAAK,EAAE;gBAClE,OAAO,CAAC,CAAC,CAAA;aACV;YAED,qDAAqD;YACrD,OAAO,CAAC,CAAA;QACV,CAAC,CAAC,CAAA;QACF,OAAO,cAAc,CAAC,CAAC,CAAC,CAAA;IAC1B,CAAC;CACF","sourcesContent":["import {Command, Config} from '@oclif/core'\nimport {Options} from '@oclif/core/lib/interfaces/plugin.js'\n\nexport class ShopifyConfig extends Config {\n  constructor(options: Options) {\n    super(options)\n    // eslint-disable-next-line dot-notation\n    this['determinePriority'] = this.customPriority\n  }\n\n  customPriority(commands: Command.Loadable[]): Command.Loadable | undefined {\n    const oclifPlugins = this.pjson.oclif?.plugins ?? []\n    const commandPlugins = commands.sort((aCommand, bCommand) => {\n      // eslint-disable-next-line no-restricted-syntax\n      const pluginAliasA = aCommand.pluginAlias ?? 'A-Cannot-Find-This'\n      // eslint-disable-next-line no-restricted-syntax\n      const pluginAliasB = bCommand.pluginAlias ?? 'B-Cannot-Find-This'\n      const aIndex = oclifPlugins.indexOf(pluginAliasA)\n      const bIndex = oclifPlugins.indexOf(pluginAliasB)\n\n      // Hydrogen has higher priority than core plugins to override the custom init method.\n      if (aCommand.pluginType === 'core' && bCommand.pluginAlias === '@shopify/cli-hydrogen') {\n        // If b is hydrogen and a is core sort b first\n        return 1\n      }\n\n      if (aCommand.pluginAlias === '@shopify/cli-hydrogen' && bCommand.pluginType === 'core') {\n        // If a is hydrogen and b is core sort a first\n        return -1\n      }\n\n      // All other cases are the default implementation from the private `determinePriority` method\n      // When both plugin types are 'core' plugins sort based on index\n      if (aCommand.pluginType === 'core' && bCommand.pluginType === 'core') {\n        // If b appears first in the pjson.plugins sort it first\n        return aIndex - bIndex\n      }\n\n      // if b is a core plugin and a is not sort b first\n      if (bCommand.pluginType === 'core' && aCommand.pluginType !== 'core') {\n        return 1\n      }\n\n      // if a is a core plugin and b is not sort a first\n      if (aCommand.pluginType === 'core' && bCommand.pluginType !== 'core') {\n        return -1\n      }\n\n      // if a is a jit plugin and b is not sort b first\n      if (aCommand.pluginType === 'jit' && bCommand.pluginType !== 'jit') {\n        return 1\n      }\n\n      // if b is a jit plugin and a is not sort a first\n      if (bCommand.pluginType === 'jit' && aCommand.pluginType !== 'jit') {\n        return -1\n      }\n\n      // neither plugin is core, so do not change the order\n      return 0\n    })\n    return commandPlugins[0]\n  }\n}\n"]}