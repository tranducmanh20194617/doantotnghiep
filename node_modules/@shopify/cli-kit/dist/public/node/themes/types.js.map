{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/public/node/themes/types.ts"],"names":[],"mappings":"AAgHA,MAAM,CAAN,IAAY,SAGX;AAHD,WAAY,SAAS;IACnB,8BAAiB,CAAA;IACjB,8BAAiB,CAAA;AACnB,CAAC,EAHW,SAAS,KAAT,SAAS,QAGpB","sourcesContent":["/**\n * {@link Key} represents the unique identifier of a file in a theme.\n */\nexport type Key = string\n\n/**\n * Represents a theme on the file system.\n */\nexport interface ThemeFileSystem {\n  /**\n   * The root path of the theme.\n   */\n  root: string\n\n  /**\n   * Local theme files.\n   */\n  files: Map<Key, ThemeAsset>\n}\n\n/**\n * Represents a theme.\n */\nexport interface Theme {\n  /**\n   * The remote ID of the theme.\n   */\n  id: number\n\n  /**\n   * The remote name of the theme.\n   */\n  name: string\n\n  /**\n   * A boolean determining whether or not the theme was created at runtime.\n   */\n  createdAtRuntime: boolean\n\n  /**\n   * A boolean determining if the theme is processing at the theme library.\n   */\n  processing: boolean\n\n  /**\n   * The remote role of the theme.\n   */\n  role: string\n}\n\n/**\n * Represents the remote checksum for a file in a theme.\n */\nexport interface Checksum {\n  /**\n   * Identifier of the theme file.\n   */\n  key: Key\n\n  /**\n   * Reresents the checksum value of the theme file.\n   */\n  checksum: string\n}\n\n/**\n * Represents a file in a theme.\n */\nexport interface ThemeAsset extends Checksum {\n  /**\n   * A base64-encoded image.\n   */\n  attachment?: string\n\n  /**\n   * The text content of the asset, such as the HTML and Liquid markup of a template file.\n   */\n  value?: string\n}\n\n/**\n * Represents a single result for a upload or delete operation on a single file\n * Each result includes the unique identifier for the file, the type of the operation,\n * the sucesss status of the operation, any errors that occurred, and the asset value of the file.\n */\nexport interface Result {\n  /**\n   * The unique identifier for the file being uploaded.\n   */\n  key: string\n\n  /**\n   * The operation associated with the result.\n   */\n  operation: Operation\n\n  /* *\n   * Indicates whether the upload operation for this file was successful.\n   */\n  success: boolean\n\n  /**\n   * Error message that was generated during the upload operation for this file.\n   */\n  errors?: {asset?: string[]}\n\n  /* *\n   * The asset that was uploaded as part of the upload operation for this file.\n   */\n  asset?: ThemeAsset\n}\n\nexport enum Operation {\n  Delete = 'DELETE',\n  Upload = 'UPLOAD',\n}\n"]}