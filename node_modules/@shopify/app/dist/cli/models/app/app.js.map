{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../../src/cli/models/app/app.ts"],"names":[],"mappings":"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","sourcesContent":["import {AppErrors, isWebType} from './loader.js'\nimport {ensurePathStartsWithSlash} from './validation/common.js'\nimport {ExtensionInstance} from '../extensions/extension-instance.js'\nimport {isType} from '../../utilities/types.js'\nimport {FunctionConfigType} from '../extensions/specifications/function.js'\nimport {ExtensionSpecification} from '../extensions/specification.js'\nimport {SpecsAppConfiguration} from '../extensions/specifications/types/app_config.js'\nimport {Flag} from '../../services/dev/fetch.js'\nimport {zod} from '@shopify/cli-kit/node/schema'\nimport {DotEnvFile} from '@shopify/cli-kit/node/dot-env'\nimport {getDependencies, PackageManager, readAndParsePackageJson} from '@shopify/cli-kit/node/node-package-manager'\nimport {fileRealPath, findPathUp} from '@shopify/cli-kit/node/fs'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {AbortError} from '@shopify/cli-kit/node/error'\n\nexport const LegacyAppSchema = zod\n  .object({\n    client_id: zod.number().optional(),\n    name: zod.string().optional(),\n    scopes: zod.string().default(''),\n    extension_directories: zod.array(zod.string()).optional(),\n    web_directories: zod.array(zod.string()).optional(),\n  })\n  .strict()\n\nexport const AppSchema = zod.object({\n  client_id: zod.string(),\n  organization_id: zod.string().optional(),\n  build: zod\n    .object({\n      automatically_update_urls_on_dev: zod.boolean().optional(),\n      dev_store_url: zod.string().optional(),\n      include_config_on_deploy: zod.boolean().optional(),\n    })\n    .optional(),\n  extension_directories: zod.array(zod.string()).optional(),\n  web_directories: zod.array(zod.string()).optional(),\n})\n\nexport const AppConfigurationSchema = zod.union([LegacyAppSchema, AppSchema])\n\nexport function getAppVersionedSchema(specs: ExtensionSpecification[]) {\n  const isConfigSpecification = (spec: ExtensionSpecification) => spec.experience === 'configuration'\n  const schema = specs\n    .filter(isConfigSpecification)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    .reduce((schema, spec) => schema.merge(spec.schema), AppSchema as any)\n\n  return specs.length > 0 ? schema.strict() : schema\n}\n\n/**\n * Check whether a shopify.app.toml schema is valid against the legacy schema definition.\n * @param item - the item to validate\n */\nexport function isLegacyAppSchema(item: AppConfiguration): item is LegacyAppConfiguration {\n  const {path, ...rest} = item\n  return isType(LegacyAppSchema, rest)\n}\n\n/**\n * Check whether a shopify.app.toml schema is valid against the current schema definition.\n * @param item - the item to validate\n */\nexport function isCurrentAppSchema(item: AppConfiguration): item is CurrentAppConfiguration {\n  const {path, ...rest} = item\n  return isType(AppSchema.nonstrict(), rest)\n}\n\n/**\n * Get scopes from a given app.toml config file.\n * @param config - a configuration file\n */\nexport function getAppScopes(config: AppConfiguration): string {\n  if (isLegacyAppSchema(config)) {\n    return config.scopes\n  } else if (isCurrentAppSchema(config)) {\n    return config.access_scopes?.scopes ?? ''\n  }\n  return ''\n}\n\n/**\n * Get scopes as an array from a given app.toml config file.\n * @param config - a configuration file\n */\nexport function getAppScopesArray(config: AppConfiguration) {\n  const scopes = getAppScopes(config)\n  return scopes.length ? scopes.split(',').map((scope) => scope.trim()) : []\n}\n\nexport function usesLegacyScopesBehavior(config: AppConfiguration) {\n  if (isLegacyAppSchema(config)) return true\n  if (isCurrentAppSchema(config)) return config.access_scopes?.use_legacy_install_flow ?? false\n  return false\n}\n\nexport function appIsLaunchable(app: AppInterface) {\n  const frontendConfig = app?.webs?.find((web) => isWebType(web, WebType.Frontend))\n  const backendConfig = app?.webs?.find((web) => isWebType(web, WebType.Backend))\n\n  return Boolean(frontendConfig || backendConfig)\n}\n\nexport function filterNonVersionedAppFields(configuration: {[key: string]: unknown}) {\n  return Object.keys(configuration).filter(\n    (fieldName) => !Object.keys(AppSchema.shape).concat('path').includes(fieldName),\n  )\n}\n\nexport enum WebType {\n  Frontend = 'frontend',\n  Backend = 'backend',\n  Background = 'background',\n}\n\nconst WebConfigurationAuthCallbackPathSchema = zod.preprocess(ensurePathStartsWithSlash, zod.string())\n\nconst baseWebConfigurationSchema = zod.object({\n  auth_callback_path: zod\n    .union([WebConfigurationAuthCallbackPathSchema, WebConfigurationAuthCallbackPathSchema.array()])\n    .optional(),\n  webhooks_path: zod.preprocess(ensurePathStartsWithSlash, zod.string()).optional(),\n  port: zod.number().max(65536).min(0).optional(),\n  commands: zod.object({\n    build: zod.string().optional(),\n    dev: zod.string(),\n  }),\n  name: zod.string().optional(),\n  hmr_server: zod.object({http_paths: zod.string().array()}).optional(),\n})\nconst webTypes = zod.enum([WebType.Frontend, WebType.Backend, WebType.Background]).default(WebType.Frontend)\nexport const WebConfigurationSchema = zod.union([\n  baseWebConfigurationSchema.extend({roles: zod.array(webTypes)}),\n  baseWebConfigurationSchema.extend({type: webTypes}),\n])\nexport const ProcessedWebConfigurationSchema = baseWebConfigurationSchema.extend({roles: zod.array(webTypes)})\n\nexport type AppConfiguration = zod.infer<typeof AppConfigurationSchema> & {path: string}\nexport type CurrentAppConfiguration = zod.infer<typeof AppSchema> & {path: string} & SpecsAppConfiguration\nexport type LegacyAppConfiguration = zod.infer<typeof LegacyAppSchema> & {path: string}\nexport type WebConfiguration = zod.infer<typeof WebConfigurationSchema>\nexport type ProcessedWebConfiguration = zod.infer<typeof ProcessedWebConfigurationSchema>\nexport type WebConfigurationCommands = keyof WebConfiguration['commands']\n\nexport interface Web {\n  directory: string\n  configuration: ProcessedWebConfiguration\n  framework?: string\n}\n\nexport interface AppConfigurationInterface {\n  directory: string\n  configuration: AppConfiguration\n  configSchema: zod.ZodTypeAny\n}\n\nexport interface AppInterface extends AppConfigurationInterface {\n  name: string\n  idEnvironmentVariableName: string\n  packageManager: PackageManager\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  allExtensions: ExtensionInstance[]\n  draftableExtensions: ExtensionInstance[]\n  specifications?: ExtensionSpecification[]\n  errors?: AppErrors\n  includeConfigOnDeploy: boolean | undefined\n  remoteFlags: Flag[]\n  hasExtensions: () => boolean\n  updateDependencies: () => Promise<void>\n  extensionsForType: (spec: {identifier: string; externalIdentifier: string}) => ExtensionInstance[]\n  updateExtensionUUIDS: (uuids: {[key: string]: string}) => void\n  preDeployValidation: () => Promise<void>\n}\n\ninterface AppConstructor {\n  name: string\n  idEnvironmentVariableName: string\n  directory: string\n  packageManager: PackageManager\n  configuration: AppConfiguration\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  modules: ExtensionInstance[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  errors?: AppErrors\n  specifications?: ExtensionSpecification[]\n  configSchema?: zod.ZodTypeAny\n  remoteFlags?: Flag[]\n}\n\nexport class App implements AppInterface {\n  name: string\n  idEnvironmentVariableName: string\n  directory: string\n  packageManager: PackageManager\n  configuration: AppConfiguration\n  nodeDependencies: {[key: string]: string}\n  webs: Web[]\n  usesWorkspaces: boolean\n  dotenv?: DotEnvFile\n  errors?: AppErrors\n  specifications?: ExtensionSpecification[]\n  configSchema: zod.ZodTypeAny\n  remoteFlags: Flag[]\n  private realExtensions: ExtensionInstance[]\n\n  constructor({\n    name,\n    idEnvironmentVariableName,\n    directory,\n    packageManager,\n    configuration,\n    nodeDependencies,\n    webs,\n    modules,\n    usesWorkspaces,\n    dotenv,\n    errors,\n    specifications,\n    configSchema,\n    remoteFlags,\n  }: AppConstructor) {\n    this.name = name\n    this.idEnvironmentVariableName = idEnvironmentVariableName\n    this.directory = directory\n    this.packageManager = packageManager\n    this.configuration = this.configurationTyped(configuration)\n    this.nodeDependencies = nodeDependencies\n    this.webs = webs\n    this.dotenv = dotenv\n    this.realExtensions = modules\n    this.errors = errors\n    this.usesWorkspaces = usesWorkspaces\n    this.specifications = specifications\n    this.configSchema = configSchema ?? AppSchema\n    this.remoteFlags = remoteFlags ?? []\n  }\n\n  get allExtensions() {\n    return this.realExtensions.filter((ext) => !ext.isAppConfigExtension || this.includeConfigOnDeploy)\n  }\n\n  get draftableExtensions() {\n    return this.realExtensions.filter((ext) => ext.isDraftable())\n  }\n\n  async updateDependencies() {\n    const nodeDependencies = await getDependencies(joinPath(this.directory, 'package.json'))\n    this.nodeDependencies = nodeDependencies\n  }\n\n  async preDeployValidation() {\n    const functionExtensionsWithUiHandle = this.allExtensions.filter(\n      (ext) => ext.isFunctionExtension && (ext.configuration as unknown as FunctionConfigType).ui?.handle,\n    ) as ExtensionInstance<FunctionConfigType>[]\n\n    if (functionExtensionsWithUiHandle.length > 0) {\n      const errors = validateFunctionExtensionsWithUiHandle(functionExtensionsWithUiHandle, this.allExtensions)\n      if (errors) {\n        throw new AbortError('Invalid function configuration', errors.join('\\n'))\n      }\n    }\n\n    await Promise.all([this.allExtensions.map((ext) => ext.preDeployValidation())])\n  }\n\n  hasExtensions(): boolean {\n    return this.allExtensions.length > 0\n  }\n\n  extensionsForType(specification: {identifier: string; externalIdentifier: string}): ExtensionInstance[] {\n    return this.allExtensions.filter(\n      (extension) => extension.type === specification.identifier || extension.type === specification.externalIdentifier,\n    )\n  }\n\n  updateExtensionUUIDS(uuids: {[key: string]: string}) {\n    this.allExtensions.forEach((extension) => {\n      extension.devUUID = uuids[extension.localIdentifier] ?? extension.devUUID\n    })\n  }\n\n  get includeConfigOnDeploy() {\n    if (isLegacyAppSchema(this.configuration)) return false\n    return this.configuration.build?.include_config_on_deploy\n  }\n\n  private configurationTyped(configuration: AppConfiguration) {\n    if (isLegacyAppSchema(configuration)) return configuration\n    return configuration as CurrentAppConfiguration & SpecsAppConfiguration\n  }\n}\n\nexport function validateFunctionExtensionsWithUiHandle(\n  functionExtensionsWithUiHandle: ExtensionInstance<FunctionConfigType>[],\n  allExtensions: ExtensionInstance[],\n): string[] | undefined {\n  const errors: string[] = []\n\n  functionExtensionsWithUiHandle.forEach((extension) => {\n    const uiHandle = extension.configuration.ui!.handle!\n\n    const matchingExtension = findExtensionByHandle(allExtensions, uiHandle)\n    if (!matchingExtension) {\n      errors.push(`[${extension.name}] - Local app must contain a ui_extension with handle '${uiHandle}'`)\n    } else if (matchingExtension.configuration.type !== 'ui_extension') {\n      errors.push(\n        `[${extension.name}] - Local app must contain one extension of type 'ui_extension' and handle '${uiHandle}'`,\n      )\n    }\n  })\n\n  return errors.length > 0 ? errors : undefined\n}\n\nfunction findExtensionByHandle(allExtensions: ExtensionInstance[], handle: string): ExtensionInstance | undefined {\n  return allExtensions.find((ext) => ext.handle === handle)\n}\n\nexport class EmptyApp extends App {\n  constructor(specifications?: ExtensionSpecification[], flags?: Flag[], clientId?: string) {\n    const configuration = clientId\n      ? {client_id: clientId, access_scopes: {scopes: ''}, path: ''}\n      : {scopes: '', path: ''}\n    const configSchema = getAppVersionedSchema(specifications ?? [])\n    super({\n      name: '',\n      idEnvironmentVariableName: '',\n      directory: '',\n      packageManager: 'npm',\n      configuration,\n      nodeDependencies: {},\n      webs: [],\n      modules: [],\n      usesWorkspaces: false,\n      specifications,\n      configSchema,\n      remoteFlags: flags ?? [],\n    })\n  }\n}\n\ntype RendererVersionResult = {name: string; version: string} | undefined | 'not_found'\n\n/**\n * Given a UI extension, it returns the version of the renderer package.\n * Looks for `/node_modules/@shopify/{renderer-package-name}/package.json` to find the real version used.\n * @param extension - UI extension whose renderer version will be obtained.\n * @returns The version if the dependency exists.\n */\nexport async function getUIExtensionRendererVersion(extension: ExtensionInstance): Promise<RendererVersionResult> {\n  // Look for the vanilla JS version of the dependency (the react one depends on it, will always be present)\n  const rendererDependency = extension.dependency\n  if (!rendererDependency) return undefined\n  return getDependencyVersion(rendererDependency, extension.directory)\n}\n\nexport async function getDependencyVersion(dependency: string, directory: string): Promise<RendererVersionResult> {\n  // Split the dependency name to avoid using \"/\" in windows. Only look for non react dependencies.\n  const dependencyName = dependency.replace('-react', '').split('/')\n  const pattern = joinPath('node_modules', dependencyName[0]!, dependencyName[1]!, 'package.json')\n\n  let packagePath = await findPathUp(pattern, {\n    cwd: directory,\n    type: 'file',\n    allowSymlinks: true,\n  })\n  if (!packagePath) return 'not_found'\n  packagePath = await fileRealPath(packagePath)\n\n  // Load the package.json and extract the version\n  const packageContent = await readAndParsePackageJson(packagePath)\n  if (!packageContent.version) return 'not_found'\n  return {name: dependency, version: packageContent.version}\n}\n"]}