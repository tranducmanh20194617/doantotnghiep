{"version":3,"file":"app_config_webhook.js","sourceRoot":"","sources":["../../../../../../src/cli/models/extensions/specifications/validation/app_config_webhook.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,GAAG,EAAC,MAAM,8BAA8B,CAAA;AAChD,OAAO,EAAC,IAAI,EAAC,MAAM,+BAA+B,CAAA;AAGlD,MAAM,UAAU,gBAAgB,CAAC,MAAc,EAAE,GAAsB;IACrE,MAAM,yBAAyB,GAAG,qBAAqB,CAAC,MAAwB,CAAC,CAAA;IAEjF,IAAI,yBAAyB,EAAE;QAC7B,GAAG,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAA;QACvC,OAAO,GAAG,CAAC,KAAK,CAAA;KACjB;AACH,CAAC;AAED,SAAS,qBAAqB,CAAC,aAA6B;IAC1D,MAAM,EAAC,aAAa,GAAG,EAAE,EAAC,GAAG,aAAa,CAAA;IAC1C,MAAM,qBAAqB,GAAG,IAAI,GAAG,EAAE,CAAA;IAEvC,IAAI,CAAC,aAAa,CAAC,MAAM;QAAE,OAAM;IAEjC,IACE,aAAa,CAAC,kBAAkB;QAChC,aAAa,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,EACnF;QACA,OAAO;YACL,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;YAC7B,OAAO,EAAE,qGAAqG;SAC/G,CAAA;KACF;IAED,MAAM,gBAAgB,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;IAChH,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,KAAK,gBAAgB,CAAC,MAAM,EAAE;QAC7D,OAAO;YACL,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;YAC7B,OAAO,EAAE,sEAAsE;YAC/E,KAAK,EAAE,IAAI;YACX,IAAI,EAAE,CAAC,eAAe,CAAC;SACxB,CAAA;KACF;IAED,gEAAgE;IAChE,KAAK,MAAM,CAAC,CAAC,EAAE,EAAC,GAAG,EAAE,MAAM,GAAG,EAAE,EAAE,iBAAiB,GAAG,EAAE,EAAE,SAAS,GAAG,EAAE,EAAC,CAAC,IAAI,aAAa,CAAC,OAAO,EAAE,EAAE;QACrG,MAAM,IAAI,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC,CAAA;QAEjC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;YAC/C,OAAO;gBACL,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;gBAC7B,OAAO,EAAE,8EAA8E;gBACvF,IAAI;aACL,CAAA;SACF;QAED,KAAK,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE;YACzC,MAAM,GAAG,GAAG,GAAG,KAAK,KAAK,SAAS,KAAK,GAAG,EAAE,CAAA;YAE5C,IAAI,qBAAqB,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;gBAClC,OAAO;oBACL,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM;oBAC7B,OAAO,EAAE,8EAA8E;oBACvF,KAAK,EAAE,IAAI;oBACX,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC;iBACpC,CAAA;aACF;YAED,qBAAqB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;SAC/B;KACF;AACH,CAAC","sourcesContent":["import {zod} from '@shopify/cli-kit/node/schema'\nimport {uniq} from '@shopify/cli-kit/common/array'\nimport type {WebhooksConfig} from '../types/app_config_webhook.js'\n\nexport function webhookValidator(schema: object, ctx: zod.RefinementCtx) {\n  const webhookSubscriptionErrors = validateSubscriptions(schema as WebhooksConfig)\n\n  if (webhookSubscriptionErrors) {\n    ctx.addIssue(webhookSubscriptionErrors)\n    return zod.NEVER\n  }\n}\n\nfunction validateSubscriptions(webhookConfig: WebhooksConfig) {\n  const {subscriptions = []} = webhookConfig\n  const uniqueSubscriptionSet = new Set()\n\n  if (!subscriptions.length) return\n\n  if (\n    webhookConfig.privacy_compliance &&\n    webhookConfig.subscriptions?.some((subscription) => subscription.compliance_topics)\n  ) {\n    return {\n      code: zod.ZodIssueCode.custom,\n      message: `The privacy_compliance section can't be used if there are subscriptions including compliance_topics`,\n    }\n  }\n\n  const complianceTopics = subscriptions.flatMap((subscription) => subscription.compliance_topics).filter(Boolean)\n  if (uniq(complianceTopics).length !== complianceTopics.length) {\n    return {\n      code: zod.ZodIssueCode.custom,\n      message: 'You can’t have multiple subscriptions with the same compliance topic',\n      fatal: true,\n      path: ['subscriptions'],\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  for (const [i, {uri, topics = [], compliance_topics = [], sub_topic = ''}] of subscriptions.entries()) {\n    const path = ['subscriptions', i]\n\n    if (!topics.length && !compliance_topics.length) {\n      return {\n        code: zod.ZodIssueCode.custom,\n        message: `Either topics or compliance_topics must be added to the webhook subscription`,\n        path,\n      }\n    }\n\n    for (const [j, topic] of topics.entries()) {\n      const key = `${topic}::${sub_topic}::${uri}`\n\n      if (uniqueSubscriptionSet.has(key)) {\n        return {\n          code: zod.ZodIssueCode.custom,\n          message: 'You can’t have duplicate subscriptions with the exact same `topic` and `uri`',\n          fatal: true,\n          path: [...path, 'topics', j, topic],\n        }\n      }\n\n      uniqueSubscriptionSet.add(key)\n    }\n  }\n}\n"]}