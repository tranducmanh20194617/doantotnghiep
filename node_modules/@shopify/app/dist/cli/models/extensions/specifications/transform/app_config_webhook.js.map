{"version":3,"file":"app_config_webhook.js","sourceRoot":"","sources":["../../../../../../src/cli/models/extensions/specifications/transform/app_config_webhook.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,gBAAgB,EAAE,YAAY,EAAC,MAAM,gCAAgC,CAAA;AAE7E,MAAM,UAAU,0BAA0B,CAAC,OAAe;IACxD,MAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,EAAE,UAAU,CAAmB,CAAA;IACpE,IAAI,CAAC,QAAQ;QAAE,OAAO,OAAO,CAAA;IAE7B,MAAM,oBAAoB,GAAG,EAAE,CAAA;IAC/B,gEAAgE;IAChE,MAAM,EAAC,WAAW,EAAE,aAAa,GAAG,EAAE,EAAC,GAAG,QAAQ,CAAA;IAElD,+EAA+E;IAC/E,KAAK,MAAM,EAAC,GAAG,EAAE,MAAM,EAAE,iBAAiB,EAAE,CAAC,EAAE,GAAG,cAAc,EAAC,IAAI,aAAa,EAAE;QAClF,IAAI,MAAM;YAAE,oBAAoB,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAC,GAAG,EAAE,KAAK,EAAE,GAAG,cAAc,EAAC,CAAC,CAAC,CAAC,CAAA;KAChG;IAED,OAAO,oBAAoB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,aAAa,EAAE,oBAAoB,CAAC,IAAI,EAAE,EAAE,WAAW,EAAC,CAAC,CAAC,CAAC,EAAC,WAAW,EAAC,CAAA;AACpH,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,OAAe;IACtD,IAAI,QAAQ,GAAG,EAAE,CAAA;IACjB,MAAM,UAAU,GAAG,YAAY,CAAC,OAAO,EAAE,aAAa,CAAW,CAAA;IACjE,QAAQ,GAAG,EAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC,QAAQ,EAAE,EAAC,WAAW,EAAE,UAAU,EAAC,EAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC,CAAA;IACzE,MAAM,cAAc,GAAG,YAAY,CAAC,OAAO,EAAE,eAAe,CAAoC,CAAA;IAChG,IAAI,CAAC,cAAc;QAAE,OAAO,QAAQ,CAAA;IAEpC,MAAM,qBAAqB,GAAoC,EAAE,CAAA;IAEjE,KAAK,MAAM,EAAC,KAAK,EAAE,GAAG,WAAW,EAAC,IAAI,cAAc,EAAE;QACpD,qBAAqB,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,WAAW,EAAC,CAAC,CAAA;KAC9D;IAED,MAAM,2BAA2B,GAAG,qBAAqB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,aAAa,EAAE,qBAAqB,EAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IAClH,OAAO,gBAAgB,CAAC,QAAQ,EAAE,EAAC,QAAQ,EAAE,2BAA2B,EAAC,CAAC,CAAA;AAC5E,CAAC","sourcesContent":["import {WebhooksConfig, NormalizedWebhookSubscription} from '../types/app_config_webhook.js'\nimport {deepMergeObjects, getPathValue} from '@shopify/cli-kit/common/object'\n\nexport function transformFromWebhookConfig(content: object) {\n  const webhooks = getPathValue(content, 'webhooks') as WebhooksConfig\n  if (!webhooks) return content\n\n  const webhookSubscriptions = []\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const {api_version, subscriptions = []} = webhooks\n\n  // Compliance topics are handled from app_config_privacy_compliance_webhooks.ts\n  for (const {uri, topics, compliance_topics: _, ...optionalFields} of subscriptions) {\n    if (topics) webhookSubscriptions.push(topics.map((topic) => ({uri, topic, ...optionalFields})))\n  }\n\n  return webhookSubscriptions.length > 0 ? {subscriptions: webhookSubscriptions.flat(), api_version} : {api_version}\n}\n\nexport function transformToWebhookConfig(content: object) {\n  let webhooks = {}\n  const apiVersion = getPathValue(content, 'api_version') as string\n  webhooks = {...(apiVersion ? {webhooks: {api_version: apiVersion}} : {})}\n  const serverWebhooks = getPathValue(content, 'subscriptions') as NormalizedWebhookSubscription[]\n  if (!serverWebhooks) return webhooks\n\n  const webhooksSubscriptions: WebhooksConfig['subscriptions'] = []\n\n  for (const {topic, ...otherFields} of serverWebhooks) {\n    webhooksSubscriptions.push({topics: [topic], ...otherFields})\n  }\n\n  const webhooksSubscriptionsObject = webhooksSubscriptions.length > 0 ? {subscriptions: webhooksSubscriptions} : {}\n  return deepMergeObjects(webhooks, {webhooks: webhooksSubscriptionsObject})\n}\n"]}