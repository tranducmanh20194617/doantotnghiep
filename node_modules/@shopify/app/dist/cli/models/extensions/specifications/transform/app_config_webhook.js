import { deepMergeObjects, getPathValue } from '@shopify/cli-kit/common/object';
export function transformFromWebhookConfig(content) {
    const webhooks = getPathValue(content, 'webhooks');
    if (!webhooks)
        return content;
    const webhookSubscriptions = [];
    // eslint-disable-next-line @typescript-eslint/naming-convention
    const { api_version, subscriptions = [] } = webhooks;
    // Compliance topics are handled from app_config_privacy_compliance_webhooks.ts
    for (const { uri, topics, compliance_topics: _, ...optionalFields } of subscriptions) {
        if (topics)
            webhookSubscriptions.push(topics.map((topic) => ({ uri, topic, ...optionalFields })));
    }
    return webhookSubscriptions.length > 0 ? { subscriptions: webhookSubscriptions.flat(), api_version } : { api_version };
}
export function transformToWebhookConfig(content) {
    let webhooks = {};
    const apiVersion = getPathValue(content, 'api_version');
    webhooks = { ...(apiVersion ? { webhooks: { api_version: apiVersion } } : {}) };
    const serverWebhooks = getPathValue(content, 'subscriptions');
    if (!serverWebhooks)
        return webhooks;
    const webhooksSubscriptions = [];
    for (const { topic, ...otherFields } of serverWebhooks) {
        webhooksSubscriptions.push({ topics: [topic], ...otherFields });
    }
    const webhooksSubscriptionsObject = webhooksSubscriptions.length > 0 ? { subscriptions: webhooksSubscriptions } : {};
    return deepMergeObjects(webhooks, { webhooks: webhooksSubscriptionsObject });
}
//# sourceMappingURL=app_config_webhook.js.map