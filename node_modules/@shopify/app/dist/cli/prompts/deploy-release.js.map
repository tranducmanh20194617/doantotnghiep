{"version":3,"file":"deploy-release.js","sourceRoot":"","sources":["../../../src/cli/prompts/deploy-release.ts"],"names":[],"mappings":"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","sourcesContent":["import {buildDeployReleaseInfoTableSection} from './ui/deploy-release-info-table-section.js'\nimport metadata from '../metadata.js'\nimport {\n  ConfigExtensionIdentifiersBreakdown,\n  ExtensionIdentifierBreakdownInfo,\n  ExtensionIdentifiersBreakdown,\n} from '../services/context/breakdown-extensions.js'\nimport {InfoTableSection, renderConfirmationPrompt, renderDangerousConfirmationPrompt} from '@shopify/cli-kit/node/ui'\n\nexport interface DeployOrReleaseConfirmationPromptOptions {\n  extensionIdentifiersBreakdown: ExtensionIdentifiersBreakdown\n  configExtensionIdentifiersBreakdown?: ConfigExtensionIdentifiersBreakdown\n  appTitle?: string\n  release: boolean\n  force: boolean\n  showConfig?: boolean\n}\n\nexport interface DeployConfirmationPromptOptions {\n  appTitle?: string\n  extensionsContentPrompt: {\n    extensionsInfoTable?: InfoTableSection\n    hasDeletedExtensions: boolean\n  }\n  configContentPrompt?: {\n    configInfoTable: InfoTableSection\n  }\n  release: boolean\n}\n\nexport async function deployOrReleaseConfirmationPrompt({\n  force,\n  extensionIdentifiersBreakdown,\n  configExtensionIdentifiersBreakdown,\n  appTitle,\n  release,\n}: DeployOrReleaseConfirmationPromptOptions) {\n  await metadata.addPublicMetadata(() => buildConfigurationBreakdownMetadata(configExtensionIdentifiersBreakdown))\n  if (force) return true\n  const extensionsContentPrompt = await buildExtensionsContentPrompt(extensionIdentifiersBreakdown)\n  const configContentPrompt = await buildConfigContentPrompt(release, configExtensionIdentifiersBreakdown)\n\n  return deployConfirmationPrompt({\n    appTitle,\n    extensionsContentPrompt,\n    configContentPrompt,\n    release,\n  })\n}\n\nasync function deployConfirmationPrompt({\n  appTitle,\n  extensionsContentPrompt: {extensionsInfoTable, hasDeletedExtensions},\n  configContentPrompt,\n  release,\n}: DeployConfirmationPromptOptions): Promise<boolean> {\n  const timeBeforeConfirmationMs = new Date().valueOf()\n  let confirmationResponse = true\n\n  const infoTable = []\n  if (configContentPrompt) {\n    infoTable.push(\n      configContentPrompt.configInfoTable.items.length === 0\n        ? {...configContentPrompt.configInfoTable, emptyItemsText: 'No changes', items: []}\n        : configContentPrompt.configInfoTable,\n    )\n  }\n  const isDangerous = appTitle !== undefined && hasDeletedExtensions\n  if (extensionsInfoTable) {\n    infoTable.push(\n      isDangerous\n        ? {...extensionsInfoTable, helperText: 'Removing extensions can permanentely delete app user data'}\n        : extensionsInfoTable,\n    )\n  } else {\n    infoTable.push({header: 'Extensions:', emptyItemsText: 'None', items: []})\n  }\n\n  const question = `${release ? 'Release' : 'Create'} a new version${appTitle ? ` of ${appTitle}` : ''}?`\n  if (isDangerous) {\n    confirmationResponse = await renderDangerousConfirmationPrompt({\n      message: question,\n      infoTable,\n      confirmation: appTitle,\n    })\n  } else {\n    confirmationResponse = await renderConfirmationPrompt({\n      message: question,\n      infoTable,\n      confirmationMessage: `Yes, ${release ? 'release' : 'create'} this new version`,\n      cancellationMessage: 'No, cancel',\n    })\n  }\n\n  const timeToConfirmOrCancelMs = new Date().valueOf() - timeBeforeConfirmationMs\n\n  await metadata.addPublicMetadata(() => ({\n    cmd_deploy_confirm_cancelled: !confirmationResponse,\n    cmd_deploy_confirm_time_to_complete_ms: timeToConfirmOrCancelMs,\n  }))\n\n  return confirmationResponse\n}\n\nasync function buildExtensionsContentPrompt(extensionsContentBreakdown: ExtensionIdentifiersBreakdown) {\n  const {onlyRemote, toCreate: toCreateBreakdown, toUpdate} = extensionsContentBreakdown\n\n  const mapExtensionToInfoTableItem = (extension: ExtensionIdentifierBreakdownInfo, preffix: string) => {\n    switch (extension.experience) {\n      case 'dashboard':\n        return [extension.title, {subdued: `(${preffix}from Partner Dashboard)`}]\n      case 'extension':\n        return extension.title\n    }\n  }\n  let extensionsInfoTable\n  const section = {\n    new: toCreateBreakdown.map((extension) => mapExtensionToInfoTableItem(extension, 'new, ')),\n    unchanged: toUpdate.map((extension) => mapExtensionToInfoTableItem(extension, '')),\n    removed: onlyRemote.map((extension) => mapExtensionToInfoTableItem(extension, 'removed, ')),\n  }\n  const extensionsInfo = buildDeployReleaseInfoTableSection(section)\n\n  const hasDeletedExtensions = onlyRemote.length > 0\n  if (extensionsInfo.length > 0) {\n    extensionsInfoTable = {\n      header: 'Extensions:',\n      items: extensionsInfo,\n    }\n  }\n\n  await metadata.addPublicMetadata(() => ({\n    cmd_deploy_confirm_new_registrations: toCreateBreakdown.length,\n    cmd_deploy_confirm_updated_registrations: toUpdate.length,\n    cmd_deploy_confirm_removed_registrations: onlyRemote.length,\n  }))\n\n  return {extensionsInfoTable, hasDeletedExtensions}\n}\n\nasync function buildConfigContentPrompt(\n  release: boolean,\n  configContentBreakdown?: ConfigExtensionIdentifiersBreakdown,\n) {\n  if (!configContentBreakdown) return\n\n  const {existingFieldNames, existingUpdatedFieldNames, newFieldNames, deletedFieldNames} = configContentBreakdown\n\n  const section = {\n    new: newFieldNames,\n    updated: existingUpdatedFieldNames,\n    unchanged: existingFieldNames,\n    removed: deletedFieldNames,\n  }\n  const configurationInfo = buildDeployReleaseInfoTableSection(section)\n\n  const hasModifiedFields = newFieldNames.length > 0 || existingUpdatedFieldNames.length > 0\n  const configInfoTable = {\n    header: 'Configuration:',\n    items: hasModifiedFields || deletedFieldNames.length > 0 || !release ? configurationInfo : [],\n  }\n\n  return {configInfoTable}\n}\n\nexport function buildConfigurationBreakdownMetadata(\n  configExtensionIdentifiersBreakdown?: ConfigExtensionIdentifiersBreakdown,\n) {\n  if (!configExtensionIdentifiersBreakdown) return {cmd_deploy_include_config_used: false}\n\n  const {existingFieldNames, existingUpdatedFieldNames, newFieldNames, deletedFieldNames} =\n    configExtensionIdentifiersBreakdown\n  const currentConfiguration = [...existingUpdatedFieldNames, ...newFieldNames, ...existingFieldNames]\n  return {\n    cmd_deploy_include_config_used: true,\n    ...(currentConfiguration.length > 0\n      ? {cmd_deploy_config_modules_breakdown: JSON.stringify(currentConfiguration.sort())}\n      : {}),\n    ...(existingUpdatedFieldNames.length > 0\n      ? {cmd_deploy_config_modules_updated: JSON.stringify(existingUpdatedFieldNames.sort())}\n      : {}),\n    ...(newFieldNames.length > 0 ? {cmd_deploy_config_modules_added: JSON.stringify(newFieldNames.sort())} : {}),\n    ...(deletedFieldNames.length > 0\n      ? {cmd_deploy_config_modules_deleted: JSON.stringify(deletedFieldNames.sort())}\n      : {}),\n  }\n}\n"]}