{"version":3,"file":"import-flow-legacy-extensions.js","sourceRoot":"","sources":["../../../../src/cli/commands/app/import-flow-legacy-extensions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,eAAe,EAAC,MAAM,0CAA0C,CAAA;AACxE,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAA;AACvC,OAAO,EAAC,OAAO,EAAC,MAAM,4BAA4B,CAAA;AAElD,OAAO,EAAC,yBAAyB,EAAC,MAAM,+CAA+C,CAAA;AACvF,OAAO,OAAO,MAAM,gCAAgC,CAAA;AACpD,OAAO,EAAC,iCAAiC,EAAC,MAAM,gDAAgD,CAAA;AAChG,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AAErD,MAAqB,sBAAuB,SAAQ,OAAO;IAczD,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAA;QACxD,MAAM,cAAc,GAAG,MAAM,iCAAiC,EAAE,CAAA;QAChE,MAAM,GAAG,GAAiB,MAAM,OAAO,CAAC,EAAC,cAAc,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,MAAM,EAAC,CAAC,CAAA;QAE1G,MAAM,kBAAkB,GAAG,CAAC,wBAAwB,EAAE,yBAAyB,CAAC,CAAA;QAChF,MAAM,yBAAyB,CAAC;YAC9B,GAAG;YACH,MAAM,EAAE,KAAK,CAAC,WAAW,CAAC;YAC1B,cAAc,EAAE,kBAAkB;YAClC,eAAe;SAChB,CAAC,CAAA;IACJ,CAAC;;AAzBM,kCAAW,GAAG,yDAAyD,CAAA;AAEvE,4BAAK,GAAG;IACb,GAAG,WAAW;IACd,GAAG,QAAQ;IACX,WAAW,EAAE,KAAK,CAAC,MAAM,CAAC;QACxB,MAAM,EAAE,KAAK;QACb,WAAW,EAAE,4BAA4B;QACzC,GAAG,EAAE,wBAAwB;QAC7B,SAAS,EAAE,CAAC,QAAQ,CAAC;KACtB,CAAC;CACH,CAAA;eAZkB,sBAAsB","sourcesContent":["import {buildTomlObject} from '../../services/flow/extension-to-toml.js'\nimport {appFlags} from '../../flags.js'\nimport {loadApp} from '../../models/app/loader.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {importDashboardExtensions} from '../../services/import-dashboard-extensions.js'\nimport Command from '../../utilities/app-command.js'\nimport {loadLocalExtensionsSpecifications} from '../../models/extensions/load-specifications.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\n\nexport default class AppImportFlowExtension extends Command {\n  static description = 'Import dashboard-managed flow extensions into your app.'\n\n  static flags = {\n    ...globalFlags,\n    ...appFlags,\n    'client-id': Flags.string({\n      hidden: false,\n      description: 'The Client ID of your app.',\n      env: 'SHOPIFY_FLAG_CLIENT_ID',\n      exclusive: ['config'],\n    }),\n  }\n\n  async run(): Promise<void> {\n    const {flags} = await this.parse(AppImportFlowExtension)\n    const specifications = await loadLocalExtensionsSpecifications()\n    const app: AppInterface = await loadApp({specifications, directory: flags.path, configName: flags.config})\n\n    const flowExtensionTypes = ['flow_action_definition', 'flow_trigger_definition']\n    await importDashboardExtensions({\n      app,\n      apiKey: flags['client-id'],\n      extensionTypes: flowExtensionTypes,\n      buildTomlObject,\n    })\n  }\n}\n"]}