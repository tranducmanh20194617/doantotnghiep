export async function getActiveDashboardExtensions({ developerPlatformClient, apiKey, organizationId, extensionTypes, }) {
    const initialRemoteExtensions = await developerPlatformClient.appExtensionRegistrations({
        id: apiKey,
        apiKey,
        organizationId,
    });
    const { dashboardManagedExtensionRegistrations } = initialRemoteExtensions.app;
    return dashboardManagedExtensionRegistrations.filter((ext) => {
        const isNeededExtensionType = extensionTypes.includes(ext.type);
        const hasActiveVersion = ext.activeVersion && ext.activeVersion.config;
        const hasDraftVersion = ext.draftVersion && ext.draftVersion.config;
        return isNeededExtensionType && (hasActiveVersion || hasDraftVersion);
    });
}
//# sourceMappingURL=fetch-dashboard-extensions.js.map