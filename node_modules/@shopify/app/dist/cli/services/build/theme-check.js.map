{"version":3,"file":"theme-check.js","sourceRoot":"","sources":["../../../../src/cli/services/build/theme-check.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,0BAA0B,CAAA;AACrD,OAAO,EAAC,YAAY,EAAC,MAAM,8BAA8B,CAAA;AAEzD,OAAO,EAAC,QAAQ,EAAgB,KAAK,EAAC,MAAM,2BAA2B,CAAA;AAEvE;;GAEG;AACH,SAAS,UAAU,CAAC,YAAoB,EAAE,SAAiB,EAAE,OAAe;IAC1E,MAAM,WAAW,GAAG,YAAY,CAAC,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAA;IACzD,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;IACrC,MAAM,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,GAAG,CAAC,CAAC,CAAA;IACxD,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,KAAK,CAAC,CAAA;IAE9C,OAAO,YAAY;SAChB,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QACnB,sEAAsE;QACtE,MAAM,UAAU,GAAG,SAAS,GAAG,KAAK,GAAG,CAAC,CAAA;QAExC,0DAA0D;QAC1D,MAAM,aAAa,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;QACvD,OAAO,GAAG,UAAU,KAAK,aAAa,EAAE,CAAA;IAC1C,CAAC,CAAC;SACD,IAAI,CAAC,IAAI,CAAC,CAAA;AACf,CAAC;AAED,SAAS,eAAe,CAAC,QAAkB;IACzC;;;;OAIG;IACH,QAAQ,QAAQ,EAAE;QAChB,KAAK,QAAQ,CAAC,KAAK;YACjB,OAAO,EAAC,KAAK,EAAE,YAAY,EAAC,CAAA;QAC9B,KAAK,QAAQ,CAAC,OAAO;YACnB,OAAO,EAAC,IAAI,EAAE,cAAc,EAAC,CAAA;QAC/B,KAAK,QAAQ,CAAC,IAAI;YAChB,OAAO,EAAC,IAAI,EAAE,WAAW,EAAC,CAAA;KAC7B;AACH,CAAC;AAED;;GAEG;AACH,SAAS,cAAc,CAAC,QAAmB;IACzC,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;QACpD,MAAM,EAAC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,QAAQ,EAAC,GAAG,OAAO,CAAA;QACpE,uEAAuE;QACvE,MAAM,WAAW,GAAG,UAAU,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAA;QAElE,yCAAyC;QACzC,MAAM,cAAc,GAAG,GAAG,KAAK,KAAK,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAA;QAEvE,OAAO;YACL,eAAe,CAAC,QAAQ,CAAC;YACzB,EAAC,IAAI,EAAE,GAAG,KAAK,EAAE,EAAC;YAClB,EAAC,OAAO,EAAE,KAAK,OAAO,EAAE,EAAC;YACzB,OAAO,WAAW,EAAE;YACpB,cAAc;SACf,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,aAAa,CAAC,IAAI,EAAE,CAAA;AAC7B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,aAAa,CAAC,SAAiB;IACnD,MAAM,UAAU,GAAG,iCAAiC,CAAA;IACpD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAA;IACnD,MAAM,iBAAiB,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAA;IAClD,OAAO,YAAY,CAAC,iBAAiB,CAAC,CAAA;AACxC,CAAC","sourcesContent":["import {readFileSync} from '@shopify/cli-kit/node/fs'\nimport {itemToString} from '@shopify/cli-kit/node/output'\nimport {TokenItem} from '@shopify/cli-kit/node/ui'\nimport {Severity, type Offense, check} from '@shopify/theme-check-node'\n\n/**\n * Returns a code snippet from a file. All line numbers given MUST be zero indexed\n */\nfunction getSnippet(absolutePath: string, startLine: number, endLine: number) {\n  const fileContent = readFileSync(absolutePath).toString()\n  const lines = fileContent.split('\\n')\n  const snippetLines = lines.slice(startLine, endLine + 1)\n  const isSingleLine = snippetLines.length === 1\n\n  return snippetLines\n    .map((line, index) => {\n      // For each line in snippetLines, prepend the line number and a space.\n      const lineNumber = startLine + index + 1\n\n      // Normalize variable whitespace from single line snippets\n      const formattedLine = isSingleLine ? line.trim() : line\n      return `${lineNumber}  ${formattedLine}`\n    })\n    .join('\\n')\n}\n\nfunction severityToToken(severity: Severity) {\n  /**\n   * Leading newlines works around a formatting behavior in the ui library where\n   * spaces are automatically appended between tokens. This can cause unexpected\n   * formatting issues when presenting theme check offenses\n   */\n  switch (severity) {\n    case Severity.ERROR:\n      return {error: '\\n[error]:'}\n    case Severity.WARNING:\n      return {warn: '\\n[warning]:'}\n    case Severity.INFO:\n      return {info: '\\n[info]:'}\n  }\n}\n\n/**\n * Format theme-check Offenses into a format for cli-kit to output.\n */\nfunction formatOffenses(offenses: Offense[]): TokenItem {\n  const offenseBodies = offenses.map((offense, index) => {\n    const {message, absolutePath, start, end, check, severity} = offense\n    // Theme check line numbers are zero indexed, but intuitively 1-indexed\n    const codeSnippet = getSnippet(absolutePath, start.line, end.line)\n\n    // Ensure enough padding between offenses\n    const offensePadding = `${index === offenses.length - 1 ? '' : '\\n\\n'}`\n\n    return [\n      severityToToken(severity),\n      {bold: `${check}`},\n      {subdued: `\\n${message}`},\n      `\\n\\n${codeSnippet}`,\n      offensePadding,\n    ]\n  })\n\n  return offenseBodies.flat()\n}\n\nexport async function runThemeCheck(directory: string): Promise<string> {\n  const configPath = 'theme-check:theme-app-extension'\n  const offenses = await check(directory, configPath)\n  const formattedOffenses = formatOffenses(offenses)\n  return itemToString(formattedOffenses)\n}\n"]}