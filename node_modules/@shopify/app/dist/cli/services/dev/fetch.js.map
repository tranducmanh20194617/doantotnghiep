{"version":3,"file":"fetch.js","sourceRoot":"","sources":["../../../../src/cli/services/dev/fetch.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,qBAAqB,EAA8B,MAAM,+BAA+B,CAAA;AAChG,OAAO,EAAC,YAAY,EAAqB,MAAM,+BAA+B,CAAA;AAE9E,OAAO,EACL,+BAA+B,GAEhC,MAAM,4CAA4C,CAAA;AAEnD,OAAO,EAA+B,gBAAgB,EAAE,aAAa,EAAC,MAAM,oCAAoC,CAAA;AAEhH,OAAO,EAAC,eAAe,EAAC,MAAM,oCAAoC,CAAA;AAClE,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,8BAA8B,CAAA;AAEvE,MAAM,OAAO,UAAW,SAAQ,UAAU;IACxC,YAAY,eAA4B,EAAE,cAAuB;QAC/D,IAAI,iBAAiB,GAAG,SAAS,CAAA;QACjC,IAAI,iBAAiB,GAAG,CAAC,mBAA2B,EAAE,EAAE,CAAC,MAAM,mBAAmB,EAAE,CAAA;QACpF,IAAI,gBAAgB,CAAC,eAAe,CAAC,EAAE;YACrC,iBAAiB,GAAG,eAAe,CAAC,OAAO,CAAA;YAC3C,iBAAiB,GAAG,CAAC,mBAA2B,EAAE,EAAE,CAAC,OAAO,mBAAmB,eAAe,CAAA;SAC/F;aAAM,IAAI,aAAa,CAAC,eAAe,CAAC,EAAE;YACzC,iBAAiB,GAAG,eAAe,CAAC,KAAK,CAAA;YACzC,iBAAiB,GAAG,CAAC,mBAA2B,EAAE,EAAE,CAAC,OAAO,mBAAmB,OAAO,CAAA;SACvF;QAED,MAAM,mBAAmB,GAAG,aAAa,CAAA,GAAG,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,KAAK,CAAA;QAEzF,MAAM,SAAS,GAAG;YAChB;gBACE,kDAAkD,iBAAiB,CACjE,mBAAmB,CACpB,gEAAgE;gBACjE,EAAC,OAAO,EAAE,qBAAqB,EAAC;aACjC;YACD;gBACE,UAAU;gBACV;oBACE,IAAI,EAAE;wBACJ,KAAK,EAAE,yCAAyC;wBAChD,GAAG,EAAE,qCAAqC;qBAC3C;iBACF;gBACD;oBACE,IAAI,EAAE,GAAG;iBACV;aACF;YACD;gBACE,2BAA2B;gBAC3B;oBACE,OAAO,EAAE,YAAY;iBACtB;gBACD,iFAAiF;aAClF;YACD,gEAAgE;YAChE;gBACE,gFAAgF;gBAChF;oBACE,OAAO,EAAE,SAAS;iBACnB;aACF;SACF,CAAA;QAED,IAAI,cAAc,EAAE;YAClB,SAAS,CAAC,IAAI,CAAC;gBACb,mFAAmF;gBACnF,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,mBAAmB,EAAE,GAAG,EAAE,+BAA+B,cAAc,EAAE,EAAC,EAAC;aAC3F,CAAC,CAAA;SACH;QAED,KAAK,CAAC,uBAAuB,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;IACtD,CAAC;CACF;AAeD;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,uBAAgD;IACvF,MAAM,aAAa,GAAmB,MAAM,uBAAuB,CAAC,aAAa,EAAE,CAAA;IACnF,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC;QAAE,MAAM,IAAI,UAAU,CAAC,MAAM,uBAAuB,CAAC,WAAW,EAAE,CAAC,CAAA;IACjG,OAAO,aAAa,CAAA;AACtB,CAAC;AAED;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,eAAe,CACnC,KAAa,EACb,eAAgC,EAChC,KAAc;IAEd,MAAM,KAAK,GAAG,qBAAqB,CAAA;IACnC,MAAM,MAAM,GAAiC,EAAC,EAAE,EAAE,KAAK,EAAC,CAAA;IACxD,IAAI,KAAK;QAAE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAA;IAC/B,MAAM,MAAM,GAAgC,MAAM,eAAe,CAAC,KAAK,EAAE,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;IACvG,MAAM,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IACzC,IAAI,CAAC,GAAG;QAAE,MAAM,IAAI,UAAU,CAAC,eAAe,CAAC,WAAW,EAAE,KAAK,CAAC,CAAA;IAClE,MAAM,SAAS,GAAG,EAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,YAAY,EAAC,CAAA;IAC9D,MAAM,WAAW,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,EAAC,GAAG,GAAG,EAAE,cAAc,EAAE,GAAG,CAAC,EAAE,EAAC,CAAC,CAAC,CAAA;IACnF,OAAO,EAAC,YAAY,EAAE,SAAS,EAAE,IAAI,EAAE,EAAC,GAAG,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAC,EAAE,MAAM,EAAE,EAAE,EAAC,CAAA;AACvF,CAAC;AAED,MAAM,CAAN,IAAY,IAEX;AAFD,WAAY,IAAI;IACd,6DAAmB,CAAA;AACrB,CAAC,EAFW,IAAI,KAAJ,IAAI,QAEf;AAED,MAAM,OAAO,GAA0B;IACrC,UAAU,EAAE,IAAI,CAAC,mBAAmB;CACrC,CAAA;AAED,MAAM,CAAC,KAAK,UAAU,yBAAyB,CAAC,MAAc,EAAE,KAAa;IAC3E,MAAM,GAAG,GAAuB,MAAM,eAAe,CAAC,YAAY,EAAE,KAAK,EAAE;QACzE,MAAM;KACP,CAAC,CAAA;IACF,MAAM,GAAG,GAAG,GAAG,CAAC,GAAG,CAAA;IACnB,IAAI,GAAG,EAAE;QACP,MAAM,KAAK,GAAG,mBAAmB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;QACpD,OAAO,EAAC,GAAG,GAAG,EAAE,KAAK,EAAC,CAAA;KACvB;AACH,CAAC;AAED,MAAM,UAAU,mBAAmB,CAAC,gBAA0B,EAAE;IAC9D,MAAM,kBAAkB,GAAW,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAA;IAC7D,MAAM,mBAAmB,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;IACtE,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;AACjF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,MAAc,EACd,uBAAgD;IAEhD,MAAM,GAAG,GAA6B,MAAM,uBAAuB,CAAC,cAAc,CAAC,EAAC,MAAM,EAAC,CAAC,CAAA;IAC5F,OAAO,GAAG,CAAC,GAAG,EAAE,8BAA8B,CAAA;AAChD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,cAAc,CAClC,EAAU,EACV,uBAAgD;IAEhD,MAAM,GAAG,GAAG,MAAM,uBAAuB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;IACvD,IAAI,CAAC,GAAG;QAAE,MAAM,IAAI,UAAU,CAAC,CAAC,MAAM,uBAAuB,CAAC,OAAO,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,CAAA;IACzF,OAAO,GAAG,CAAA;AACZ,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,KAAa,EAAE,KAAa;IAClE,MAAM,KAAK,GAAG,+BAA+B,CAAA;IAC7C,MAAM,MAAM,GAAqC,MAAM,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE;QACnF,EAAE,EAAE,KAAK;KACV,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC,MAAM,CAAC,KAAK,CAAA;AACpD,CAAC;AAMD;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,kBAAkB,CACtC,KAAa,EACb,UAAkB,EAClB,uBAAgD;IAEhD,MAAM,MAAM,GAA4B,MAAM,uBAAuB,CAAC,aAAa,CAAC,KAAK,EAAE,UAAU,CAAC,CAAA;IACtG,MAAM,GAAG,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IACzC,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,SAAS,CAAA;KACjB;IAED,MAAM,SAAS,GAAG,EAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,YAAY,EAAC,CAAA;IAC9D,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAEjC,OAAO,EAAC,YAAY,EAAE,SAAS,EAAE,KAAK,EAAC,CAAA;AACzC,CAAC","sourcesContent":["import {MinimalOrganizationApp, Organization, OrganizationApp, OrganizationStore} from '../../models/organization.js'\n\nimport {FindOrganizationQuery, FindOrganizationQuerySchema} from '../../api/graphql/find_org.js'\nimport {FindAppQuery, FindAppQuerySchema} from '../../api/graphql/find_app.js'\nimport {FindAppPreviewModeSchema} from '../../api/graphql/find_app_preview_mode.js'\nimport {\n  AllDevStoresByOrganizationQuery,\n  AllDevStoresByOrganizationSchema,\n} from '../../api/graphql/all_dev_stores_by_org.js'\nimport {FindStoreByDomainSchema} from '../../api/graphql/find_store_by_domain.js'\nimport {AccountInfo, PartnersSession, isServiceAccount, isUserAccount} from '../context/partner-account-info.js'\nimport {DeveloperPlatformClient} from '../../utilities/developer-platform-client.js'\nimport {partnersRequest} from '@shopify/cli-kit/node/api/partners'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {outputContent, outputToken} from '@shopify/cli-kit/node/output'\n\nexport class NoOrgError extends AbortError {\n  constructor(partnersAccount: AccountInfo, organizationId?: string) {\n    let accountIdentifier = 'unknown'\n    let identifierMessage = (formattedIdentifier: string) => `an ${formattedIdentifier}`\n    if (isServiceAccount(partnersAccount)) {\n      accountIdentifier = partnersAccount.orgName\n      identifierMessage = (formattedIdentifier: string) => `the ${formattedIdentifier} organization`\n    } else if (isUserAccount(partnersAccount)) {\n      accountIdentifier = partnersAccount.email\n      identifierMessage = (formattedIdentifier: string) => `the ${formattedIdentifier} user`\n    }\n\n    const formattedIdentifier = outputContent`${outputToken.yellow(accountIdentifier)}`.value\n\n    const nextSteps = [\n      [\n        `Your current active session is associated with ${identifierMessage(\n          formattedIdentifier,\n        )} account. To start a new session with a different account, run`,\n        {command: 'shopify auth logout'},\n      ],\n      [\n        'Have you',\n        {\n          link: {\n            label: 'created a Shopify Partners organization',\n            url: 'https://partners.shopify.com/signup',\n          },\n        },\n        {\n          char: '?',\n        },\n      ],\n      [\n        'Does your account include',\n        {\n          subdued: 'Manage app',\n        },\n        'permissions?, please contact the owner of the organization to grant you access.',\n      ],\n      'Have you confirmed your accounts from the emails you received?',\n      [\n        'Need to connect to a different App or organization? Run the command again with',\n        {\n          command: '--reset',\n        },\n      ],\n    ]\n\n    if (organizationId) {\n      nextSteps.push([\n        'Do you have access to the right Shopify Partners organization? The CLI is loading',\n        {link: {label: 'this organization', url: `https://partner.shopify.com/${organizationId}`}},\n      ])\n    }\n\n    super(`No Organization found`, undefined, nextSteps)\n  }\n}\n\nexport interface OrganizationAppsResponse {\n  pageInfo: {\n    hasNextPage: boolean\n  }\n  nodes: MinimalOrganizationApp[]\n}\n\nexport interface FetchResponse {\n  organization: Organization\n  apps: OrganizationAppsResponse\n  stores: OrganizationStore[]\n}\n\n/**\n * Fetch all organizations the user belongs to\n * If the user doesn't belong to any org, throw an error\n * @param developerPlatformClient - The client to access the platform API\n * @returns List of organizations\n */\nexport async function fetchOrganizations(developerPlatformClient: DeveloperPlatformClient): Promise<Organization[]> {\n  const organizations: Organization[] = await developerPlatformClient.organizations()\n  if (organizations.length === 0) throw new NoOrgError(await developerPlatformClient.accountInfo())\n  return organizations\n}\n\n/**\n * Fetch all apps and stores for the given organization\n * @param orgId - Organization ID\n * @param token - Token to access partners API\n * @returns Current organization details and list of apps and stores\n */\nexport async function fetchOrgAndApps(\n  orgId: string,\n  partnersSession: PartnersSession,\n  title?: string,\n): Promise<FetchResponse> {\n  const query = FindOrganizationQuery\n  const params: {id: string; title?: string} = {id: orgId}\n  if (title) params.title = title\n  const result: FindOrganizationQuerySchema = await partnersRequest(query, partnersSession.token, params)\n  const org = result.organizations.nodes[0]\n  if (!org) throw new NoOrgError(partnersSession.accountInfo, orgId)\n  const parsedOrg = {id: org.id, businessName: org.businessName}\n  const appsWithOrg = org.apps.nodes.map((app) => ({...app, organizationId: org.id}))\n  return {organization: parsedOrg, apps: {...org.apps, nodes: appsWithOrg}, stores: []}\n}\n\nexport enum Flag {\n  DeclarativeWebhooks,\n}\n\nconst FlagMap: {[key: string]: Flag} = {\n  '5b25141b': Flag.DeclarativeWebhooks,\n}\n\nexport async function fetchAppDetailsFromApiKey(apiKey: string, token: string): Promise<OrganizationApp | undefined> {\n  const res: FindAppQuerySchema = await partnersRequest(FindAppQuery, token, {\n    apiKey,\n  })\n  const app = res.app\n  if (app) {\n    const flags = filterDisabledFlags(app.disabledFlags)\n    return {...app, flags}\n  }\n}\n\nexport function filterDisabledFlags(disabledFlags: string[] = []): Flag[] {\n  const defaultActiveFlags: Flag[] = [Flag.DeclarativeWebhooks]\n  const remoteDisabledFlags = disabledFlags.map((flag) => FlagMap[flag])\n  return defaultActiveFlags.filter((flag) => !remoteDisabledFlags.includes(flag))\n}\n\nexport async function fetchAppPreviewMode(\n  apiKey: string,\n  developerPlatformClient: DeveloperPlatformClient,\n): Promise<boolean | undefined> {\n  const res: FindAppPreviewModeSchema = await developerPlatformClient.appPreviewMode({apiKey})\n  return res.app?.developmentStorePreviewEnabled\n}\n\nexport async function fetchOrgFromId(\n  id: string,\n  developerPlatformClient: DeveloperPlatformClient,\n): Promise<Organization> {\n  const org = await developerPlatformClient.orgFromId(id)\n  if (!org) throw new NoOrgError((await developerPlatformClient.session()).accountInfo, id)\n  return org\n}\n\nexport async function fetchAllDevStores(orgId: string, token: string): Promise<OrganizationStore[]> {\n  const query = AllDevStoresByOrganizationQuery\n  const result: AllDevStoresByOrganizationSchema = await partnersRequest(query, token, {\n    id: orgId,\n  })\n  return result.organizations.nodes[0]!.stores.nodes\n}\n\ninterface FetchStoreByDomainOutput {\n  organization: Organization\n  store?: OrganizationStore\n}\n/**\n * Returns the organization and the store based on passed domain\n * If a store with that domain doesn't exist the method returns undefined\n * @param orgId - Organization ID\n * @param shopDomain - shop domain fqdn\n * @param developerPlatformClient - The client to access the platform API\n */\nexport async function fetchStoreByDomain(\n  orgId: string,\n  shopDomain: string,\n  developerPlatformClient: DeveloperPlatformClient,\n): Promise<FetchStoreByDomainOutput | undefined> {\n  const result: FindStoreByDomainSchema = await developerPlatformClient.storeByDomain(orgId, shopDomain)\n  const org = result.organizations.nodes[0]\n  if (!org) {\n    return undefined\n  }\n\n  const parsedOrg = {id: org.id, businessName: org.businessName}\n  const store = org.stores.nodes[0]\n\n  return {organization: parsedOrg, store}\n}\n"]}