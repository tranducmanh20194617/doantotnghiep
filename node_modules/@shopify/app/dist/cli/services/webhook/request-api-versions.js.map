{"version":3,"file":"request-api-versions.js","sourceRoot":"","sources":["../../../../src/cli/services/webhook/request-api-versions.ts"],"names":[],"mappings":"AAMA,MAAM,CAAC,MAAM,mBAAmB,GAAG;;;;CAIlC,CAAA;AAED;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,uBAAgD;IACvF,MAAM,EAAC,iBAAiB,EAAE,MAAM,EAAC,GAA4B,MAAM,uBAAuB,CAAC,WAAW,EAAE,CAAA;IAExG,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAA;IAC9C,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;QACtB,MAAM,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;KACxB;SAAM;QACL,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAA;QAC7B,MAAM,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAA;QACvB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;KACxB;IAED,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["import {DeveloperPlatformClient} from '../../utilities/developer-platform-client.js'\n\nexport interface PublicApiVersionsSchema {\n  publicApiVersions: string[]\n}\n\nexport const GetApiVersionsQuery = `\n  query getApiVersions {\n    publicApiVersions\n  }\n`\n\n/**\n * Requests available api-versions in order to validate flags or present a list of options\n *\n * @param developerPlatformClient - The client to access the platform API\n * @returns List of public api-versions\n */\nexport async function requestApiVersions(developerPlatformClient: DeveloperPlatformClient): Promise<string[]> {\n  const {publicApiVersions: result}: PublicApiVersionsSchema = await developerPlatformClient.apiVersions()\n\n  const unstableIdx = result.indexOf('unstable')\n  if (unstableIdx === -1) {\n    result.sort().reverse()\n  } else {\n    result.splice(unstableIdx, 1)\n    result.sort().reverse()\n    result.push('unstable')\n  }\n\n  return result\n}\n"]}