{"version":3,"file":"request-sample.js","sourceRoot":"","sources":["../../../../src/cli/services/webhook/request-sample.ts"],"names":[],"mappings":"AA2BA,MAAM,CAAC,MAAM,yBAAyB,GAAG;;;;;;;;;;;CAWxC,CAAA;AAED;;;;;;;;;;;;;;;;GAgBG;AACH,MAAM,CAAC,KAAK,UAAU,gBAAgB,CACpC,uBAAgD,EAChD,SAAqC;IAErC,MAAM,EAAC,iBAAiB,EAAE,MAAM,EAAC,GAA4B,MAAM,uBAAuB,CAAC,iBAAiB,CAC1G,SAAS,CACV,CAAA;IAED,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["import {DeveloperPlatformClient} from '../../utilities/developer-platform-client.js'\n\nexport interface SampleWebhook {\n  samplePayload: string\n  headers: string\n  success: boolean\n  userErrors: UserErrors[]\n}\n\nexport interface SendSampleWebhookVariables {\n  topic: string\n  api_version: string\n  address: string\n  delivery_method: string\n  shared_secret: string\n  api_key?: string\n}\n\nexport interface SendSampleWebhookSchema {\n  sendSampleWebhook: SampleWebhook\n}\n\nexport interface UserErrors {\n  message: string\n  fields: string[]\n}\n\nexport const sendSampleWebhookMutation = `\n  mutation samplePayload($topic: String!, $api_version: String!, $address: String!, $delivery_method: String!, $shared_secret: String!, $api_key: String) {\n    sendSampleWebhook(input: {topic: $topic, apiVersion: $api_version, address: $address, deliveryMethod: $delivery_method, sharedSecret: $shared_secret, apiKey: $api_key}) {\n        samplePayload\n        success\n        headers\n        userErrors {\n          message\n        }\n    }\n  }\n`\n\n/**\n * Request the sample to partners. Partners will call core and the webhook will be emitted\n * In case the deliveryMethod is localhost and address is local, the response comes with the data the plugin\n * will redirect to a localhost port.\n * In all the other cases, core creates a job that sends the request to Captain-Hook. Captain-Hook will be in\n * charge of delivering the webhook payload to the requested destination.\n *\n * @param developerPlatformClient - The client to access the platform API\n * @param variables - The variables to send the sample webhook:\n *  - topic - The topic to send the sample webhook\n *  - api_version - The version of the topic\n *  - delivery_method - one of DELIVERY_METHOD\n *  - address - A destination for the webhook notification\n *  - shared_secret - A secret to generate the HMAC header apps can use to validate the origin\n *  - api_key - Client Api Key required to validate Event-Bridge addresses (optional)\n * @returns Empty if a remote delivery was requested, payload data if a local delivery was requested\n */\nexport async function getWebhookSample(\n  developerPlatformClient: DeveloperPlatformClient,\n  variables: SendSampleWebhookVariables,\n): Promise<SampleWebhook> {\n  const {sendSampleWebhook: result}: SendSampleWebhookSchema = await developerPlatformClient.sendSampleWebhook(\n    variables,\n  )\n\n  return result\n}\n"]}