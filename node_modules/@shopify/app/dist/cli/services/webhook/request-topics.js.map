{"version":3,"file":"request-topics.js","sourceRoot":"","sources":["../../../../src/cli/services/webhook/request-topics.ts"],"names":[],"mappings":"AAUA,MAAM,CAAC,MAAM,cAAc,GAAG;;;;CAI7B,CAAA;AAED;;;;;;GAMG;AACH,MAAM,CAAC,KAAK,UAAU,aAAa,CACjC,uBAAgD,EAChD,UAAkB;IAElB,MAAM,SAAS,GAA2B,EAAC,WAAW,EAAE,UAAU,EAAC,CAAA;IACnE,MAAM,EAAC,aAAa,EAAE,MAAM,EAAC,GAAwB,MAAM,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;IAEpG,OAAO,MAAM,CAAA;AACf,CAAC","sourcesContent":["import {DeveloperPlatformClient} from '../../utilities/developer-platform-client.js'\n\nexport interface WebhookTopicsVariables {\n  api_version: string\n}\n\nexport interface WebhookTopicsSchema {\n  webhookTopics: string[]\n}\n\nexport const getTopicsQuery = `\n  query getWebhookTopics($api_version: String!) {\n    webhookTopics(apiVersion: $api_version)\n  }\n`\n\n/**\n * Requests topics for an api-version in order to validate flags or present a list of options\n *\n * @param developerPlatformClient - The client to access the platform API\n * @param apiVersion - ApiVersion of the topics\n * @returns - Available webhook topics for the api-version\n */\nexport async function requestTopics(\n  developerPlatformClient: DeveloperPlatformClient,\n  apiVersion: string,\n): Promise<string[]> {\n  const variables: WebhookTopicsVariables = {api_version: apiVersion}\n  const {webhookTopics: result}: WebhookTopicsSchema = await developerPlatformClient.topics(variables)\n\n  return result\n}\n"]}