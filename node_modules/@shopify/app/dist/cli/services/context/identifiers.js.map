{"version":3,"file":"identifiers.js","sourceRoot":"","sources":["../../../../src/cli/services/context/identifiers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,eAAe,EAAC,MAAM,6BAA6B,CAAA;AAC3D,OAAO,EAAC,oCAAoC,EAAE,oCAAoC,EAAC,MAAM,2BAA2B,CAAA;AAIpH,OAAO,EAAC,iCAAiC,EAAC,MAAM,iCAAiC,CAAA;AAEjF,OAAO,EAAC,gBAAgB,EAAC,MAAM,6BAA6B,CAAA;AAgC5D,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,OAA2C;IAC3F,MAAM,EAAC,6BAA6B,EAAE,mBAAmB,EAAE,6BAA6B,EAAC,GACvF,MAAM,oCAAoC,CAAC,OAAO,CAAC,CAAA;IAErD,MAAM,mCAAmC,GAAG,MAAM,oCAAoC,CAAC;QACrF,uBAAuB,EAAE,OAAO,CAAC,uBAAuB;QACxD,MAAM,EAAE,OAAO,CAAC,KAAK;QACrB,QAAQ,EAAE,OAAO,CAAC,GAAG;QACrB,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,OAAO,EAAE,OAAO,CAAC,OAAO;KACzB,CAAC,CAAA;IAEF,MAAM,SAAS,GAAG,MAAM,iCAAiC,CAAC;QACxD,6BAA6B;QAC7B,mCAAmC;QACnC,QAAQ,EAAE,OAAO,CAAC,SAAS,EAAE,KAAK;QAClC,OAAO,EAAE,OAAO,CAAC,OAAO;QACxB,KAAK,EAAE,OAAO,CAAC,KAAK;KACrB,CAAC,CAAA;IACF,IAAI,CAAC,SAAS;QAAE,MAAM,IAAI,gBAAgB,EAAE,CAAA;IAE5C,MAAM,MAAM,GAAG,MAAM,eAAe,CAClC,OAAO,EACP,6BAA6B,CAAC,sBAAsB,EACpD,6BAA6B,CAAC,0BAA0B,EACxD,mBAAmB,CACpB,CAAA;IAED,OAAO;QACL,GAAG,EAAE,OAAO,CAAC,KAAK;QAClB,UAAU,EAAE,MAAM,CAAC,UAAU;QAC7B,YAAY,EAAE,MAAM,CAAC,YAAY;QACjC,wBAAwB,EAAE,MAAM,CAAC,wBAAwB;KAC1D,CAAA;AACH,CAAC","sourcesContent":["import {deployConfirmed} from './identifiers-extensions.js'\nimport {configExtensionsIdentifiersBreakdown, extensionsIdentifiersDeployBreakdown} from './breakdown-extensions.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {Identifiers} from '../../models/app/identifiers.js'\nimport {MinimalOrganizationApp} from '../../models/organization.js'\nimport {deployOrReleaseConfirmationPrompt} from '../../prompts/deploy-release.js'\nimport {DeveloperPlatformClient} from '../../utilities/developer-platform-client.js'\nimport {AbortSilentError} from '@shopify/cli-kit/node/error'\n\nexport type PartnersAppForIdentifierMatching = MinimalOrganizationApp\n\nexport interface EnsureDeploymentIdsPresenceOptions {\n  app: AppInterface\n  developerPlatformClient: DeveloperPlatformClient\n  appId: string\n  appName: string\n  envIdentifiers: Partial<Identifiers>\n  force: boolean\n  release: boolean\n  remoteApp: PartnersAppForIdentifierMatching\n  includeDraftExtensions?: boolean\n}\n\nexport interface RemoteSource {\n  uuid: string\n  type: string\n  id: string\n  title: string\n  draftVersion?: {config: string}\n}\n\nexport interface LocalSource {\n  localIdentifier: string\n  graphQLType: string\n  type: string\n  handle: string\n  contextValue: string\n}\n\nexport async function ensureDeploymentIdsPresence(options: EnsureDeploymentIdsPresenceOptions) {\n  const {extensionIdentifiersBreakdown, extensionsToConfirm, remoteExtensionsRegistrations} =\n    await extensionsIdentifiersDeployBreakdown(options)\n\n  const configExtensionIdentifiersBreakdown = await configExtensionsIdentifiersBreakdown({\n    developerPlatformClient: options.developerPlatformClient,\n    apiKey: options.appId,\n    localApp: options.app,\n    remoteApp: options.remoteApp,\n    release: options.release,\n  })\n\n  const confirmed = await deployOrReleaseConfirmationPrompt({\n    extensionIdentifiersBreakdown,\n    configExtensionIdentifiersBreakdown,\n    appTitle: options.remoteApp?.title,\n    release: options.release,\n    force: options.force,\n  })\n  if (!confirmed) throw new AbortSilentError()\n\n  const result = await deployConfirmed(\n    options,\n    remoteExtensionsRegistrations.extensionRegistrations,\n    remoteExtensionsRegistrations.configurationRegistrations,\n    extensionsToConfirm,\n  )\n\n  return {\n    app: options.appId,\n    extensions: result.extensions,\n    extensionIds: result.extensionIds,\n    extensionsNonUuidManaged: result.extensionsNonUuidManaged,\n  }\n}\n"]}